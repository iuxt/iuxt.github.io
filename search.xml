<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java容器entrypoint.sh参数传递的隐藏陷阱</title>
      <link href="/posts/stgvyr/"/>
      <url>/posts/stgvyr/</url>
      
        <content type="html"><![CDATA[<p>构建容器镜像对运维来说已经轻车熟路了，但是最近遇到个问题百思不得其解，准确的说就是手动执行 java -jar 带上所有参数，可以正常启动，但是打包成镜像就会报错：</p><p>先附上 <code>entrypoint.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$JVM_PARAM</span>&quot;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;JVM_PARAM: <span class="variable">$JVM_PARAM</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_PARAM=<span class="string">&quot;-Xms2g -Xmx2g -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$JVM_OPTS</span>&quot;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;JVM_OPTS: <span class="variable">$JVM_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_OPTS=<span class="string">&quot;-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses -XX:+CMSClassUnloadingEnabled -XX:+ParallelRefProcEnabled -XX:+CMSScavengeBeforeRemark -XX:ErrorFile=/logs/hs_err_pid%p.log -Xloggc:/logs/gc.log -XX:HeapDumpPath=/logs -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintCommandLineFlags&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_CMD=<span class="string">&quot;<span class="variable">$JVM_PARAM</span> <span class="variable">$JVM_OPTS</span>&quot;</span></span><br><span class="line"></span><br><span class="line">AGENT_OPTS=<span class="string">&quot;-javaagent:/hawkeye-agent/hawkeye-agent.jar=APPNAME?AGENT_UID=x-zahuifan-userid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;true&quot;</span> == <span class="string">&quot;<span class="variable">$AGENT_ENABLED</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;JAVA_CMD: <span class="variable">$JAVA_CMD</span> <span class="variable">$AGENT_OPTS</span>&quot;</span></span><br><span class="line">    java <span class="string">&quot;<span class="variable">$JAVA_CMD</span>&quot;</span> <span class="string">&quot;<span class="variable">$AGENT_OPTS</span>&quot;</span> -jar /app/app.jar</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;JAVA_CMD: <span class="variable">$JAVA_CMD</span>&quot;</span></span><br><span class="line">    java <span class="string">&quot;<span class="variable">$JAVA_CMD</span>&quot;</span> -jar /app/app.jar</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Dockerfile:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> java:xxx</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> app.jar /app.jar</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> entrypoint.sh /entrypoint.sh</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>看起来很正常对吧，但是启动报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Invalid initial heap size: -Xms2g -Xmx2g -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m -XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses -XX:+CMSClassUnloadingEnabled -XX:+ParallelRefProcEnabled -XX:+CMSScavengeBeforeRemark -XX:ErrorFile=/logs/hs_err_pid%p.log -Xloggc:/logs/gc.log -XX:HeapDumpPath=/logs -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintCommandLineFlags</span><br><span class="line">Error: Could not create the Java Virtual Machine.</span><br><span class="line">Error: A fatal exception has occurred. Program will <span class="built_in">exit</span>.</span><br></pre></td></tr></table></figure><p>查看控制台，echo 出来的 <code>JAVA_CMD</code> 变量也是正常的<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250321172510730.png" alt="image.png"></p><p>中间排查过程忽略，最后增加了 <code>set -x</code> 参数后，重新打包镜像，再次查看控制台输出：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250321171117808.png" alt="image.png"></p><p>注意以 + 开头的输出 这里 java 启动命令是被解析成了单引号引用，所以造成无法启动。把 java 启动参数中的环境变量双引号去掉，可以正常启动了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$JVM_PARAM</span>&quot;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;JVM_PARAM: <span class="variable">$JVM_PARAM</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_PARAM=<span class="string">&quot;-Xms2g -Xmx2g -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$JVM_OPTS</span>&quot;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;JVM_OPTS: <span class="variable">$JVM_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JVM_OPTS=<span class="string">&quot;-XX:+UseConcMarkSweepGC -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses -XX:+CMSClassUnloadingEnabled -XX:+ParallelRefProcEnabled -XX:+CMSScavengeBeforeRemark -XX:ErrorFile=/logs/hs_err_pid%p.log -Xloggc:/logs/gc.log -XX:HeapDumpPath=/logs -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintCommandLineFlags&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_CMD=<span class="string">&quot;<span class="variable">$JVM_PARAM</span> <span class="variable">$JVM_OPTS</span>&quot;</span></span><br><span class="line"></span><br><span class="line">AGENT_OPTS=<span class="string">&quot;-javaagent:/hawkeye-agent/hawkeye-agent.jar=APPNAME?AGENT_UID=x-zahuifan-userid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;true&quot;</span> == <span class="string">&quot;<span class="variable">$AGENT_ENABLED</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;JAVA_CMD: <span class="variable">$JAVA_CMD</span> <span class="variable">$AGENT_OPTS</span>&quot;</span></span><br><span class="line">    java <span class="variable">$JAVA_CMD</span> <span class="variable">$AGENT_OPTS</span> -jar /app/app.jar  <span class="comment"># 这里去掉双引号</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;JAVA_CMD: <span class="variable">$JAVA_CMD</span>&quot;</span></span><br><span class="line">    java <span class="variable">$JAVA_CMD</span> -jar /app/app.jar              <span class="comment"># 这里去掉双引号</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>罪魁祸首：Shell 变量展开的分词机制<br>问题的本质在于 Shell 脚本中变量展开时的参数分割规则。当我们使用 <code>&quot;$VAR&quot;</code> 这种带引号的写法时，变量值中的所有内容会被视为一个整体参数，即使其中包含空格也不会被分割。而 Java 虚拟机要求每个参数必须作为独立的命令行参数传递。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Docker </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Hyper-V 下启用 Fedora 41 的增强会话模式</title>
      <link href="/posts/ssqj2c/"/>
      <url>/posts/ssqj2c/</url>
      
        <content type="html"><![CDATA[<h2 id="安装一些基础包"><a href="#安装一些基础包" class="headerlink" title="安装一些基础包"></a>安装一些基础包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y hyperv-tools</span><br><span class="line">sudo dnf install -y xrdp xrdp-selinux</span><br></pre></td></tr></table></figure><h2 id="配置-Fedora"><a href="#配置-Fedora" class="headerlink" title="配置 Fedora"></a>配置 Fedora</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> xrdp</span><br><span class="line">systemctl <span class="built_in">enable</span> xrdp-sesman</span><br><span class="line"></span><br><span class="line"><span class="comment"># use vsock transport.</span></span><br><span class="line">sed -i_orig -e <span class="string">&#x27;s/port=3389/port=vsock:\/\/-1:3389/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="comment"># use rdp security.</span></span><br><span class="line">sed -i_orig -e <span class="string">&#x27;s/security_layer=negotiate/security_layer=rdp/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="comment"># remove encryption validation.</span></span><br><span class="line">sed -i_orig -e <span class="string">&#x27;s/crypt_level=high/crypt_level=none/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="comment"># disable bitmap compression since its local its much faster</span></span><br><span class="line">sed -i_orig -e <span class="string">&#x27;s/bitmap_compression=true/bitmap_compression=false/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="comment"># rename the redirected drives to &#x27;shared-drives&#x27;</span></span><br><span class="line">sed -i_orig -e <span class="string">&#x27;s/FuseMountName=thinclient_drives/FuseMountName=shared-drives/g&#x27;</span> /etc/xrdp/sesman.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the allowed_users</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;allowed_users=anybody&quot;</span> &gt; /etc/X11/Xwrapper.config</span><br><span class="line"></span><br><span class="line"><span class="comment">#Ensure hv_sock gets loaded</span></span><br><span class="line"><span class="keyword">if</span> [ ! -e /etc/modules-load.d/hv_sock.conf ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hv_sock&quot;</span> &gt; /etc/modules-load.d/hv_sock.conf</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open port</span></span><br><span class="line">firewall-cmd --add-port=3389/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="配置-Hyper-V-虚拟机"><a href="#配置-Hyper-V-虚拟机" class="headerlink" title="配置 Hyper-V 虚拟机"></a>配置 Hyper-V 虚拟机</h2><p>将 Fedora 关机，以<strong>管理员</strong>身份运行 powershell：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-VM</span> <span class="literal">-VMName</span> &lt;your_vm_name&gt; <span class="literal">-EnhancedSessionTransportType</span> HvSocket</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>代码来自：<a href="https://github.com/hu-ximing/Hyper-V-RHEL-Fedora-enhanced-session/">https://github.com/hu-ximing/Hyper-V-RHEL-Fedora-enhanced-session/</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Logstash 写入 ES：借助自定义模板优化数据映射与存储</title>
      <link href="/posts/ss9srz/"/>
      <url>/posts/ss9srz/</url>
      
        <content type="html"><![CDATA[<p>我们的业务场景是 ES 存储的都是一些不太重要的日志，但是对存储比较敏感，但是查看了 ES 索引都是默认创建了一个副本的。这会造成存储空间翻倍。现在通过调整 logstash 配置来实现创建出来的索引应用自定义配置，比如可以实现 30 天前的日志自动清理，默认不创建副本等。</p><h2 id="创建生命周期策略"><a href="#创建生命周期策略" class="headerlink" title="创建生命周期策略"></a>创建生命周期策略</h2><p>在 ES 上创建一个生命周期策略，定义索引保留 14 天。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PUT _ilm/policy/user_monitor_point-retention-policy</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;policy&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;phases&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;min_age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0ms&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;delete&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;min_age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14d&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;delete&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="创建-ES-模板配置文件"><a href="#创建-ES-模板配置文件" class="headerlink" title="创建 ES 模板配置文件"></a>创建 ES 模板配置文件</h2><p>准备一个 template 配置文件 <code>logstash-template.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;index_patterns&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user_monitor_point-*&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;lifecycle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user_monitor_point-retention-policy&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;number_of_replicas&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里定义了应用的模板规则，应用的生命周期规则，还有副本数。</p><p>logstash 配置文件 <code>logstash.conf</code></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">  <span class="keyword">if</span> [type] == <span class="string">&quot;logstash_mixins&quot;</span> &#123;</span><br><span class="line">      elasticsearch &#123;</span><br><span class="line">        action   =&gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">        hosts    =&gt; [<span class="string">&quot;http://10.20.20.2:9200&quot;</span>, <span class="string">&quot;http://10.20.20.3:9200&quot;</span>,<span class="string">&quot;http://10.20.20.6:9200&quot;</span>]</span><br><span class="line">        index    =&gt; <span class="string">&quot;user_monitor_point-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">        user     =&gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">        password =&gt; <span class="string">&quot;password&quot;</span></span><br><span class="line">        <span class="comment"># 这个设置控制是否自动管理索引模板。设置为 true 时，Logstash 会自动创建和管理索引模板（包括字段映射和设置）</span></span><br><span class="line">        manage_template =&gt; <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 如果已经存在相同名称的索引模板，设置 template_overwrite =&gt; true 会覆盖现有模板。</span></span><br><span class="line">        template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">        template =&gt; <span class="string">&#x27;/etc/logstash-template.json&#x27;</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样使用 logstash 创建索引的时候就会自动应用模板规则。</p><p>当然也可以将 <code>manage_template</code> 设置成 <code>false</code> 转而使用 ES 来管理索引模板配置。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> ES </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python识别验证码 ddddocr</title>
      <link href="/posts/ss2wk6/"/>
      <url>/posts/ss2wk6/</url>
      
        <content type="html"><![CDATA[<p>GitHub 地址：<a href="https://github.com/sml2h3/ddddocr">https://github.com/sml2h3/ddddocr</a></p><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ddddocr</span><br></pre></td></tr></table></figure><p>如果 windows 安装报错：<code>ImportError：DLL load failed: 找不到指定的模块。</code><br>需要安装 vc 运行库：<br><a href="https://aka.ms/vs/16/release/VC_redist.x86.exe">https://aka.ms/vs/16/release/VC_redist.x86.exe</a></p><p><a href="https://aka.ms/vs/16/release/VC_redist.x64.exe">https://aka.ms/vs/16/release/VC_redist.x64.exe</a></p><p>基本使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ddddocr</span><br><span class="line"></span><br><span class="line">ocr = ddddocr.DdddOcr(show_ad=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">image = <span class="built_in">open</span>(<span class="string">&quot;example.jpg&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">result = ocr.classification(image)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决PyCharm终端使用zsh powerlevel10k主题时的乱码问题</title>
      <link href="/posts/srz9zs/"/>
      <url>/posts/srz9zs/</url>
      
        <content type="html"><![CDATA[<p><code>powerlevel10k</code> 是 zsh 上很好看的主题，我一直是在 wsl 里用，配合 <code>Windows Terminal</code> 很好看，不过在 PyCharm 里打开会乱码，可以通过修改控制台字体为支持 powerline 的字体，不过还是不完美，有时候还有 BUG。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250220230144904.png" alt="image.png|577"></p><p>想了下，我平时都是在 <code>Windows Terminal</code> 上用的，那么可以让使用 <code>Windows Terminal</code> 的时候显示成<strong>花里胡哨</strong>的主题，用其他软件比如 PyCharm 或者 VScode 的时候，换成<strong>朴素</strong>的主题。看了下，在 <code>Windows Terminal</code> 上有个特殊的环境变量 <code>WT_SESSION</code> 和 <code>WT_PROFILE_ID</code> ，看名字应该是和 Windows terminal 有关，测试了下也确实如此，那么可以修改 <code>~/.zshrc</code> 来实现。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250220230859339.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ <span class="variable">$WT_SESSION</span> ]]; <span class="keyword">then</span></span><br><span class="line">  ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  ZSH_THEME=<span class="string">&quot;robbyrussell&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>此时显示如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250220231032118.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 2.0.3 集群升级为 2.1.0</title>
      <link href="/posts/srnwhe/"/>
      <url>/posts/srnwhe/</url>
      
        <content type="html"><![CDATA[<h2 id="2-0-3-版本的-BUG"><a href="#2-0-3-版本的-BUG" class="headerlink" title="2.0.3 版本的 BUG"></a>2.0.3 版本的 BUG</h2><p>详细 bug 在 GitHub 上有，比如：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250214153333408.webp" alt="image.png"></p><p>issue 链接见：<br><a href="https://github.com/alibaba/nacos/issues/9332">https://github.com/alibaba/nacos/issues/9332</a><br><a href="https://github.com/alibaba/nacos/issues/8492">https://github.com/alibaba/nacos/issues/8492</a></p><p>我们遇到的 bug 简单一句话总结就是：集群方式部署的 nacos 其中一个节点重启后可能会有节点数据不一致的现象（服务注册与服务发现里面的服务数量不一致）比如说一个服务注册到了 nacos 中，我在 nacos 网页控制台 <code>服务管理</code> <code>服务列表</code> 里查看有 10 个服务注册进来，刷新下网页可能就变成了 9 个，再刷新又变成 10 个，这种情况就是 nacos 的多个节点数据不同步了（nacos 配置中心数据是从 MySQL 取的，不受这个 bug 的影响），这种情况可以直接将 nacos 副本数设置成 1 临时解决，想要彻底解决我们验证了升级到 2.1.0 就能修复。</p><h2 id="升级数据库表结构"><a href="#升级数据库表结构" class="headerlink" title="升级数据库表结构"></a>升级数据库表结构</h2><blockquote><p>nacos 官网文档写的太敷衍了，版本之间的差异需要自己找，哪怕你上个 flyway 也好啊。</p></blockquote><p>其中有三个表（config_info、config_info_beta、his_config_info）都加了 encrypted_data_key 这个字段。 所以升级方法也很简单，在这三张表上都加上 encrypted_data_key 这个字段就行了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> nacos.config_info <span class="keyword">ADD</span> encrypted_data_key TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span>; </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> nacos.config_info_beta <span class="keyword">ADD</span> encrypted_data_key TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span>; </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> nacos.his_config_info <span class="keyword">ADD</span> encrypted_data_key TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h2 id="升级版本到-2-1-0"><a href="#升级版本到-2-1-0" class="headerlink" title="升级版本到 2.1.0"></a>升级版本到 2.1.0</h2><p>我们是部署在 Kubernetes 中的，只需要升级镜像版本就行了。一个镜像代理地址：<code>registry.cn-hangzhou.aliyuncs.com/iuxt/nacos-server:v2.1.0</code></p><p>具体部署配置查看：<a href="/posts/sebxm6/">在Kubernetes中部署nacos 2.1.0</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖NAS部署zerotier内网穿透访问</title>
      <link href="/posts/spi492/"/>
      <url>/posts/spi492/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>完成这个教程，你主要需要完成以下流程：</p><ul><li>在 NAS 上启用 SSH</li><li>创建一个持久的 TUN</li><li>安装 Docker</li><li>设置 Docker</li></ul><h2 id="创建一个持久的-TUN"><a href="#创建一个持久的-TUN" class="headerlink" title="创建一个持久的 TUN"></a>创建一个持久的 TUN</h2><div class="note info flat"><p>如果有 <code>/dev/net/tun</code> 就不用再执行了</p></div><p>使用 SSH 连接到你的 NAS，切换为 root 身份</p><p>创建一个开机自启动脚本: <code>/usr/local/etc/rc.d/tun.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建开机自启动脚本</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#!/bin/sh -e \ninsmod /lib/modules/tun.ko&#x27;</span> &gt; /usr/local/etc/rc.d/tun.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> a+x /usr/local/etc/rc.d/tun.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动执行一下</span></span><br><span class="line">/usr/local/etc/rc.d/tun.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否有tun设备</span></span><br><span class="line"><span class="built_in">ls</span> /dev/net/tun</span><br></pre></td></tr></table></figure><h2 id="安装-Docker-到你的-NAS-上"><a href="#安装-Docker-到你的-NAS-上" class="headerlink" title="安装 Docker 到你的 NAS 上"></a>安装 Docker 到你的 NAS 上</h2><p>直接到套件中心去安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/lib/zerotier-one</span><br></pre></td></tr></table></figure><p>创建一个容器，这里将它命名为 zerotier，这里会自动下载最新版的 zerotier</p><p>要在 ssh 里创建，不要在群晖控制台创建。创建完成后可以在控制台进行管理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d           \</span><br><span class="line">  --name zerotier       \</span><br><span class="line">  --restart=always      \</span><br><span class="line">  --device=/dev/net/tun \</span><br><span class="line">  --net=host            \</span><br><span class="line">  --cap-add=NET_ADMIN   \</span><br><span class="line">  --cap-add=SYS_ADMIN   \</span><br><span class="line">  -v /var/lib/zerotier-one:/var/lib/zerotier-one \</span><br><span class="line">  registry.cn-hangzhou.aliyuncs.com/iuxt/zerotier-synology:1.14.0</span><br></pre></td></tr></table></figure><blockquote><p>注：官方镜像：<code>zerotier/zerotier-synology:latest</code></p></blockquote><h2 id="使用与配置"><a href="#使用与配置" class="headerlink" title="使用与配置"></a>使用与配置</h2><p>查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it zerotier zerotier-cli status</span><br></pre></td></tr></table></figure><p>添加网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it zerotier zerotier-cli <span class="built_in">join</span> &lt;你的网络ID&gt;</span><br></pre></td></tr></table></figure><p>在 zerotier 后台授权当前设备，然后查看状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it zerotier zerotier-cli listnetworks</span><br></pre></td></tr></table></figure><h2 id="使局域网网段可以访问"><a href="#使局域网网段可以访问" class="headerlink" title="使局域网网段可以访问"></a>使局域网网段可以访问</h2><h3 id="1-添加路由"><a href="#1-添加路由" class="headerlink" title="1. 添加路由"></a>1. 添加路由</h3><p>假设家里的机器：zerotier 地址是：172.28.135.11，内网 IP 地址是 192.168.1.11</p><p>在 zerotier 网站的 networks 里面的 Managed Routes 下配置路由表,增加如下内容</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250103135337663.png" alt="image.png"></p><p>加过路由后，可以访问这台 zerotier 节点的内网 ip（192.168.1.11） 了，但是不能访问内网的其他 ip，还需要做一下转发。</p><h3 id="2-开启内核转发"><a href="#2-开启内核转发" class="headerlink" title="2. 开启内核转发"></a>2. 开启内核转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w net.ipv4.ip_forward=1</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><p>重启后配置会丢失，要持久化可以写入到 <code>/etc/sysctl.conf</code></p><h3 id="3-防火墙设置"><a href="#3-防火墙设置" class="headerlink" title="3. 防火墙设置"></a>3. 防火墙设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PHY_IF=ovs_eth0 <span class="comment"># 物理网卡设备名</span></span><br><span class="line"><span class="built_in">export</span> ZT_IF=ztre4xmo4y <span class="comment"># Zerotier虚拟网卡设备名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加转发规则</span></span><br><span class="line">sudo iptables -t nat -A POSTROUTING -o <span class="variable">$PHY_IF</span> -j MASQUERADE</span><br><span class="line">sudo iptables -A FORWARD -i <span class="variable">$PHY_IF</span> -o <span class="variable">$ZT_IF</span> -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">sudo iptables -A FORWARD -i <span class="variable">$ZT_IF</span> -o <span class="variable">$PHY_IF</span> -j ACCEPT</span><br></pre></td></tr></table></figure><p>防火墙规则没保存的话重启后会丢失。</p><div class="note info flat"><p>这三条 iptables 规则用于配置网络地址转换（NAT）和数据包转发；</p><p>含义如下：</p><p>规则 1： <code>sudo iptables -t nat -A POSTROUTING -o $PHY_IF -j MASQUERADE</code></p><p>这条规则在 nat 表的 POSTROUTING 链中添加了一条规则。-o $PHY_IF 表示这条规则适用于所有通过 $PHY_IF 这个网络接口（通常是物理接口）出去的数据包。-j MASQUERADE 指定了 NAT 操作中的伪装（masquerading）。这意味着，当数据包从 $PHY_IF 发送出去时，其源 IP 地址会被替换为 $PHY_IF 的 IP 地址。这通常用于允许内部网络通过一个公共 IP 地址进行外部通信；</p><p>规则 2： <code>sudo iptables -A FORWARD -i $PHY_IF -o $ZT_IF -m state --state RELATED,ESTABLISHED -j ACCEPT</code></p><p>这条规则在 filter 表的 FORWARD 链中添加了一条规则。-i $PHY_IF 表示适用于从 $PHY_IF 这个接口进入的数据包，-o $ZT_IF 表示这些数据包要转发到 $ZT_IF 这个接口。-m state –state RELATED,ESTABLISHED 指定了只有那些与已有连接相关或已经建立的连接的数据包才被接受（ACCEPT）。这个规则通常用于允许来自外部网络的返回流量进入内部网络，从而支持诸如 HTTP 会话等；</p><p>规则 3： <code>sudo iptables -A FORWARD -i $ZT_IF -o $PHY_IF -j ACCEPT</code></p><p>这条规则在 filter 表的 FORWARD 链中添加了一条规则。-i $ZT_IF 表示适用于从 $ZT_IF 这个接口进入的数据包，-o $PHY_IF 表示这些数据包要转发到 $PHY_IF 这个接口。-j ACCEPT 表示这些数据包会被接受并转发。这条规则允许来自 $ZT_IF 的流量经过路由器转发到 $PHY_IF，从而实现网络之间的数据传输；</p><p>总结：</p><p>第一条规则用于设置源地址伪装，允许内部网络设备通过一个公共 IP 地址进行外部通信；<br>第二条规则允许返回流量和已经建立的连接的数据包从外部网络进入内部网络；<br>第三条规则允许来自内部网络的数据包被转发到外部网络；</p></div><p>网卡设备名参考 在机器上使用命令 <code>ip a</code> 查看：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250103232323506.png" alt="image.png"></p><h2 id="引用与文献"><a href="#引用与文献" class="headerlink" title="引用与文献"></a>引用与文献</h2><blockquote><p>本文基于官方原文进行翻译和补充 <a href="https://docs.zerotier.com/synology/#set-up-container">https://docs.zerotier.com/synology/#set-up-container</a><br>  iptables 规则转载自：<a href="https://jasonkayzk.github.io/2024/08/21/Zerotier%E9%85%8D%E7%BD%AE%E5%86%85%E7%BD%91%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/">https://jasonkayzk.github.io/2024/08/21/Zerotier%E9%85%8D%E7%BD%AE%E5%86%85%E7%BD%91%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> nas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管理Redis内存占用</title>
      <link href="/posts/spcjoj/"/>
      <url>/posts/spcjoj/</url>
      
        <content type="html"><![CDATA[<h2 id="淘汰策略"><a href="#淘汰策略" class="headerlink" title="淘汰策略"></a>淘汰策略</h2><p>如果设置了合适的淘汰策略，Redis 会根据以下几种策略选择性地移除某些键，腾出内存空间（淘汰策略需要和内存限制配合使用）</p><p>常用淘汰策略说明</p><table><thead><tr><th>策略</th><th>说明</th></tr></thead><tbody><tr><td>volatile-lru</td><td>从设置了过期时间的键中，移除最近最少使用（LRU）的键。</td></tr><tr><td>allkeys-lru</td><td>从所有键中，移除最近最少使用（LRU）的键。</td></tr><tr><td>volatile-random</td><td>从设置了过期时间的键中，随机移除键。</td></tr><tr><td>allkeys-random</td><td>从所有键中，随机移除键。</td></tr><tr><td>volatile-ttl</td><td>从设置了过期时间的键中，移除即将过期的键（优先移除 TTL 短的键）。</td></tr><tr><td>noeviction</td><td>当内存超过限制时，直接返回错误，不再执行新增操作（这是默认策略）。</td></tr></tbody></table><p>设置方法： 在 redis.conf 文件中添加或修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maxmemory-policy allkeys-lru</span><br></pre></td></tr></table></figure><p>或通过命令行动态设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli config <span class="built_in">set</span> maxmemory-policy allkeys-lru</span><br></pre></td></tr></table></figure><h2 id="内存限制"><a href="#内存限制" class="headerlink" title="内存限制"></a>内存限制</h2><p>设置 maxmemory</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">maxmemory 4gb</span><br><span class="line"># maxmemory 4G</span><br><span class="line"># maxmemory 4294967296</span><br></pre></td></tr></table></figure><p>通过命令行动态设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli config <span class="built_in">set</span> maxmemory 4294967296</span><br></pre></td></tr></table></figure><h2 id="持久化设置"><a href="#持久化设置" class="headerlink" title="持久化设置"></a>持久化设置</h2><p>如果缓存数据可丢失，可以禁用持久化（RDB 和 AOF）以减少磁盘 IO 开销：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">save <span class="string">&quot;&quot;</span></span><br><span class="line">appendonly no</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 性能优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python识别验证码 Muggle OCR</title>
      <link href="/posts/sp3b30/"/>
      <url>/posts/sp3b30/</url>
      
        <content type="html"><![CDATA[<p>最近发现个 ddddocr，识别率很高，识别速度还很快：<a href="/posts/ss2wk6/">使用Python识别验证码 ddddocr</a></p><div class="note flat"><p>以前用过什么 pytesseract 识别效果很差，还需要电脑上安装 <code>Tesseract OCR</code> 的软件，但是使用下来，效果不好，后面也用过 <code>PaddleOCR</code> 可以识别，但是识别速度比较慢，成功率也不高。后面又看到了这个开源工具，吹牛逼比较厉害，号称自己是验证码识别的最高境界，就试试看。官方的 GitHub 地址是：<a href="https://github.com/litongjava/muggle_ocr">https://github.com/litongjava/muggle_ocr</a></p></div><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241226175928967.gif" alt="20241226175928967.gif|728"></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>OS： Windows 11<br>Python： python-3.10.10-amd64</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这个开源程序在 pypi 仓库上被移除了，需要在 GitHub 上将源码包下载下来安装。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241226152841716.png" alt="image.png|595"></p><p>下载到本地，解压后，打开 cmd 命令提示符，</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 创建虚拟环境</span></span><br><span class="line">python -m venv venv</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 安装muggle_ocr</span></span><br><span class="line"><span class="built_in">cd</span> muggle_ocr-main</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><h3 id="报错处理"><a href="#报错处理" class="headerlink" title="报错处理"></a>报错处理</h3><p><code>error: numpy 2.2.1 is installed but numpy&lt;2.1.0,&gt;=1.26.0 is required by &#123;&#39;tensorflow-intel&#39;&#125;</code></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 用这条命令查一下可用的版本</span></span><br><span class="line">pip index versions numpy</span><br><span class="line"></span><br><span class="line">pip install numpy==<span class="number">2</span>.<span class="number">0</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><p>然后再重新安装 muggle_ocr</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>识别验证码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> muggle_ocr</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用预置模型，预置模型包含了[ModelType.OCR, ModelType.Captcha] 两种</span></span><br><span class="line"><span class="string">其中 ModelType.OCR 用于识别普通印刷文本, ModelType.Captcha 用于识别4-6位简单英数验证码</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开验证码图片</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;1.png&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    captcha_bytes = f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ModelType.Captcha 可识别4-6位验证码</span></span><br><span class="line">sdk = muggle_ocr.SDK(model_type=muggle_ocr.ModelType.Captcha)</span><br><span class="line"><span class="comment"># 3. 调用预测函数</span></span><br><span class="line">text = sdk.predict(image_bytes=captcha_bytes)</span><br><span class="line"><span class="built_in">print</span>(text)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OCR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx反向代理的context path</title>
      <link href="/posts/sootea/"/>
      <url>/posts/sootea/</url>
      
        <content type="html"><![CDATA[<h2 id="返回请求-uri"><a href="#返回请求-uri" class="headerlink" title="返回请求 uri"></a>返回请求 uri</h2><p>在 Nginx 中，可以使用 <code>$request_uri</code> 来表示请求 uri, 配置如下；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name example.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        add_header Content-Type text/html;</span><br><span class="line">        return 200 &quot;$request_uri\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里再使用另一台 nginx 反向代理到这台 nginx 就可以测试请求的 uri 了。</p><h2 id="测试-nginx-的反向代理-content-path"><a href="#测试-nginx-的反向代理-content-path" class="headerlink" title="测试 nginx 的反向代理 content path"></a>测试 nginx 的反向代理 content path</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">   proxy_pass http://192.168.200.12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是</p><p><code>curl localhost/aa/bb/</code> –&gt; <code>http://192.168.200.12/aa/bb/</code></p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /aa &#123;</span><br><span class="line">   proxy_pass http://192.168.200.12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果和上面一样，但是只有 &#x2F;aa 开头的才能转发到这里</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /aa/ &#123;</span><br><span class="line">   proxy_pass http://192.168.200.12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果和上面一样，但是只有 &#x2F;aa&#x2F; 开头的才能转发到这里</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /aa &#123;</span><br><span class="line">   proxy_pass http://192.168.200.12/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 nginx]<span class="comment"># curl localhost/aa/bb/cc</span></span><br><span class="line">//bb/cc</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /aa &#123;</span><br><span class="line">   proxy_pass http://192.168.200.12/x/y/z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 nginx]<span class="comment"># curl localhost/aa</span></span><br><span class="line">/x/y/z</span><br></pre></td></tr></table></figure><h2 id="nginx-的-alias"><a href="#nginx-的-alias" class="headerlink" title="nginx 的 alias"></a>nginx 的 alias</h2><p>Nginx 的 alias 指令可以理解为“路径别名”，它能把用户访问的 URL 路径直接映射到服务器上的另一个真实目录。举个例子：</p><p>假设你配置了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /images/ &#123;</span><br><span class="line">    alias /var/www/my_photos/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当用户访问 <code>http://你的网站/images/cat.jpg</code> 时，Nginx 会直接去服务器上的 <code>/var/www/my_photos/cat.jpg</code> 找文件，而不会保留 URL 中的 <code>/images/</code> 路径。</p><p>和另一个指令 root 的区别在于：</p><p>用 root 时，路径是追加（比如 location &#x2F;a&#x2F; { root &#x2F;b; }，访问 <code>/a/1.jpg</code> 会找 <code>/b/a/1.jpg</code>）<br>用 alias 时，路径是替换（同样配置下，访问 <code>/a/1.jpg</code> 会直接找 <code>/b/1.jpg</code>）<br>需要注意：配置时路径末尾的 <code>/</code> 要统一，比如 <code>location /images/</code> 和 <code>alias /var/www/my_photos/</code> 都要带斜杠，否则可能导致路径错误</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm部署一套高可用k8s 1.32集群 for AlmaLinux9(RHEL9)</title>
      <link href="/posts/sof9i3/"/>
      <url>/posts/sof9i3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 AlmaLinux9 使用 kubeadm 搭建集群， <a href="/posts/526ffc9a/">ubuntu部署文档</a>, 有疑问的地方可以看 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/">官方文档</a>, 本教程需要能访问 <strong>国际互联网</strong> 。不能的话，需要解决镜像拉取问题、yum 安装组件的问题。</p></blockquote><h2 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h2><blockquote><p>我的机器详情如下, 配置至少为 4C4G</p></blockquote><table><thead><tr><th>hostname</th><th>IP</th><th>作用</th></tr></thead><tbody><tr><td>master1</td><td>10.0.0.11</td><td>k8s master 节点</td></tr><tr><td>master2</td><td>10.0.0.12</td><td>k8s master 节点</td></tr><tr><td>master3</td><td>10.0.0.13</td><td>k8s master 节点</td></tr><tr><td>worker1</td><td>10.0.0.21</td><td>k8s worker 节点</td></tr><tr><td>worker2</td><td>10.0.0.22</td><td>k8s worker 节点</td></tr></tbody></table><p>每台机器都做域名解析，或者绑定 hosts（直接使用 ip 地址会有警告）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.0.11 master1</span><br><span class="line">10.0.0.12 master2</span><br><span class="line">10.0.0.13 master3</span><br></pre></td></tr></table></figure><p>每台机器都关闭防火墙和 SELinux</p><blockquote><p>负载均衡机器必须要关闭,因为 6443 不是 nginx 的标准端口,会被 selinux 拦截, 防火墙也需要放行 6443 端口, 可以考虑直接关闭防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># RHEL9系列完全关闭selinux需要修改内核启动参数，/etc/selinux/config 文件里面有说明</span></span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><blockquote><p>基础环境是不管 master 还是 worker 都需要的环境</p></blockquote><ol><li>禁用 swap</li><li>确保每个节点上 MAC 地址和 product_uuid 的唯一性 <code>sudo cat /sys/class/dmi/id/product_uuid</code></li><li>修改 hostname</li></ol><h3 id="安装-runtime"><a href="#安装-runtime" class="headerlink" title="安装 runtime"></a>安装 runtime</h3><h4 id="设置内核参数"><a href="#设置内核参数" class="headerlink" title="设置内核参数"></a>设置内核参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置必需的 sysctl 参数，这些参数在重新启动后仍然存在。</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用 sysctl 参数而无需重新启动</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h4 id="启用内核模块"><a href="#启用内核模块" class="headerlink" title="启用内核模块"></a>启用内核模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧版本Docker</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">              docker-client \</span><br><span class="line">              docker-client-latest \</span><br><span class="line">              docker-common \</span><br><span class="line">              docker-latest \</span><br><span class="line">              docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">              docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker仓库</span></span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装containerd</span></span><br><span class="line">sudo yum install containerd.io -y</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>从 yum 源安装的 containerd 默认禁用了 cri，可以使用命令重新生成默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 软件包中自带的配置文件不全，使用命令生成。</span></span><br><span class="line">containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合 runc 使用 systemd cgroup 驱动，在 `/etc/containerd/config.toml` 中设置</span></span><br><span class="line">sed -i <span class="string">&#x27;s#SystemdCgroup = .*#SystemdCgroup = true#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 pause容器 镜像，不能拉取官方镜像的可以使用阿里云镜像源</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s#sandbox_image = .*#sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;#g&#x27; /etc/containerd/config.toml</span></span><br><span class="line">sed -i <span class="string">&#x27;s#sandbox_image = .*#sandbox_image = &quot;registry.k8s.io/pause:3.10&quot;#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> containerd</span><br><span class="line">sudo systemctl restart containerd</span><br></pre></td></tr></table></figure><h4 id="crictl-配置"><a href="#crictl-配置" class="headerlink" title="crictl 配置"></a>crictl 配置</h4><p>之前使用 docker 的时候，docker 给我们做了很多好用的工具，现在用了 containerd，管理容器我们用 cri 管理工具 crictl，创建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/crictl.yaml &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://pkgs.k8s.io/core:/stable:/v1.32/rpm/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.32/rpm/repodata/repomd.xml.key</span></span><br><span class="line"><span class="string">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可用的版本</span></span><br><span class="line">yum list kubelet kubeadm kubectl --showduplicates --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo yum install -y kubelet-1.32.0 kubeadm-1.32.0 kubectl-1.32.0 --disableexcludes=kubernetes</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now kubelet</span><br></pre></td></tr></table></figure><h2 id="kube-apiserver-高可用方案"><a href="#kube-apiserver-高可用方案" class="headerlink" title="kube-apiserver 高可用方案"></a>kube-apiserver 高可用方案</h2><p>高可用方案有很多种，其他方案请参考 <a href="/posts/10cef768/">Kubernetes之master高可用方案</a></p><p>这里使用<strong>每台</strong>节点部署 nginx 反代来实现高可用，这种方式需要<strong>所有</strong>节点都安装负载均衡 (包括 master 和 worker )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/kube-lb/&#123;conf,logs,sbin&#125;</span><br><span class="line"></span><br><span class="line">curl -L -C - https://file.babudiu.com/f/qjhX/kube-lb -o /etc/kube-lb/sbin/kube-lb</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/kube-lb/sbin/kube-lb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/kube-lb/conf/kube-lb.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">user root;</span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line">error_log  /etc/kube-lb/logs/error.log warn;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  3000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        server 10.0.0.11:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.12:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.13:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 127.0.0.1:8443;</span><br><span class="line">        proxy_connect_timeout 1s;</span><br><span class="line">        proxy_pass backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/kube-lb.service &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=l4 nginx proxy <span class="keyword">for</span> kube-apiservers</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStartPre=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -t</span><br><span class="line">ExecStart=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb</span><br><span class="line">ExecReload=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -s reload</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-lb</span><br></pre></td></tr></table></figure><div class="note default flat"><p>kube-lb 其实就是自己编译的 Nginx，精简了 http 模块，只开启了 stream 模块用作 4 层转发，详细参数如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.24.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)</span><br><span class="line">configure arguments: --with-stream --without-http --without-http_uwsgi_module --without-http_scgi_module --without-http_fastcgi_module</span><br></pre></td></tr></table></figure></div><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><h3 id="提前拉镜像（可选）"><a href="#提前拉镜像（可选）" class="headerlink" title="提前拉镜像（可选）"></a>提前拉镜像（可选）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull \</span><br><span class="line">--kubernetes-version 1.32.0 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><h3 id="kubeadm-init"><a href="#kubeadm-init" class="headerlink" title="kubeadm init"></a>kubeadm init</h3><p>在 master1 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;127.0.0.1:8443&quot;</span> \</span><br><span class="line">--kubernetes-version 1.32.0 \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><ul><li>也可以用 <code>kubeadm config print init-defaults &gt; init.yaml</code> 生成 kubeadm 的配置，并用 <code>kubeadm init --config=init.yaml</code> 来创建集群。</li><li>如果不能拉官方镜像，增加参数使用阿里云镜像源 <code>--image-repository registry.aliyuncs.com/google_containers</code></li></ul><h3 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">安装flannel插件</button><button type="button" class="tab">安装calico插件</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果修改了 pod-network-cidr 这个yml文件也需要修改</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待补充</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><a href="/posts/sepu3k/">kubeadm 部署的集群 常见问题汇总</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Grafana表格绘制</title>
      <link href="/posts/so9bdi/"/>
      <url>/posts/so9bdi/</url>
      
        <content type="html"><![CDATA[<h2 id="选择一个关联标签"><a href="#选择一个关联标签" class="headerlink" title="选择一个关联标签"></a>选择一个关联标签</h2><p><code>instance</code> 是机器 ip，不会重复，所以我用这个做关联字段。<br>第一个查询我会保留多一些标签，（可以使用 <code>sum by ... (instance)</code> 保留想要的标签）其他的查询尽量只保留关联字段。</p><p>默认配置了多个查询，并将 Grafana 图表类型设置成 table 后，再将查询的格式设置成 Table，显示如下，有以下几个问题：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241210104651576.png" alt="image.png|918"></p><h2 id="整合多个查询在一张表里面"><a href="#整合多个查询在一张表里面" class="headerlink" title="整合多个查询在一张表里面"></a>整合多个查询在一张表里面</h2><p>现在显示的是 3 个查询，通过一个选框来切换的，我们想要让这 3 个查询显示在一个框中，可以在 Grafana 的 <code>Transform data</code> 中增加一个 <code>Join by field</code>， 我这里以 instance 这个字段做关联，也就是说同样的 instance 认为是一条数据。可以看到展示出来只有一条数据了，并且选框没有了。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241210104917046.png" alt="image.png|970"></p><h2 id="移除不想展示的字段"><a href="#移除不想展示的字段" class="headerlink" title="移除不想展示的字段"></a>移除不想展示的字段</h2><p>上面可以看到数据已经被关联成了一条，但是有很多不想显示的字段，在 <code>Transform data</code> 中增加一个 <code>Organize fields by name</code>，经过调整后</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241210105622474.png" alt="image.png|937"></p><h2 id="修改字段单位"><a href="#修改字段单位" class="headerlink" title="修改字段单位"></a>修改字段单位</h2><p>上面的运行时间，单位是秒，需要调整一下单位，在 Override 中调整：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241210105842096.png" alt="image.png|1008"></p><h2 id="给表格分配颜色"><a href="#给表格分配颜色" class="headerlink" title="给表格分配颜色"></a>给表格分配颜色</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241223164145064.png" alt="image.png|1051"></p><p>这里的 unit 单位是 percent 0-1 所以下面的阈值也应该设置为 0-1 之间，比如超过 95% 设置成红色，超过 80% 设置成黄色。</p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用RedisShake进行Redis迁移</title>
      <link href="/posts/lmojvw5l/"/>
      <url>/posts/lmojvw5l/</url>
      
        <content type="html"><![CDATA[<p>对于自建的 redis, 我们可以将 rdb&#x2F;aof 文件拷贝到目的 redis, 启动恢复, 但是云 redis 或者某些特殊情况, 比如没有云平台的权限等等情况, 可以使用工具来进行迁移.</p><p>RedisShake 是阿里云 Tair 团队 积极维护的一个项目。它的演变可以追溯到其初始版本，该版本是从 redis-port 分支出来的。官方文档<a href="https://tair-opensource.github.io/RedisShake/zh/guide/introduction.html">https://tair-opensource.github.io/RedisShake/zh/guide/introduction.html</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/tair-opensource/RedisShake/releases/download/v4.0.0/redis-shake-linux-amd64.tar.gz</span><br><span class="line">tar xf redis-shake-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="同步迁移"><a href="#同步迁移" class="headerlink" title="同步迁移"></a>同步迁移</h2><p>创建一个配置文件 <code>redis_sync.toml</code></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[sync_reader]</span></span><br><span class="line"><span class="attr">cluster</span> = <span class="literal">false</span>            <span class="comment"># 是否为集群</span></span><br><span class="line"><span class="attr">address</span> = <span class="string">&quot;127.0.0.1:6379&quot;</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if not using ACL</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if no authentication is required</span></span><br><span class="line"><span class="attr">tls</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[redis_writer]</span></span><br><span class="line"><span class="attr">cluster</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">address</span> = <span class="string">&quot;127.0.0.1:6380&quot;</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if not using ACL</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if no authentication is required</span></span><br><span class="line"><span class="attr">tls</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>执行迁移操作, 命令会在后台进行监听, 同步 redis 的变化, 迁移完成再关闭此服务.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-shake ./redis_sync.toml</span><br></pre></td></tr></table></figure><h2 id="使用-RDB-文件迁移"><a href="#使用-RDB-文件迁移" class="headerlink" title="使用 RDB 文件迁移"></a>使用 RDB 文件迁移</h2><p>先在源 redis 导出 rdb 文件, 上传到一台 linux 机器 (可以访问目标 redis), 然后执行迁移.</p><p>配置文件:</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[rdb_reader]</span></span><br><span class="line"><span class="attr">filepath</span> = <span class="string">&quot;/tmp/dump.rdb&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[redis_writer]</span></span><br><span class="line"><span class="attr">cluster</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">address</span> = <span class="string">&quot;127.0.0.1:6380&quot;</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if not using ACL</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;&quot;</span>              <span class="comment"># keep empty if no authentication is required</span></span><br><span class="line"><span class="attr">tls</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>执行迁移操作:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-shake ./redis_sync.toml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据迁移 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch索引生命周期配置</title>
      <link href="/posts/snui2r/"/>
      <url>/posts/snui2r/</url>
      
        <content type="html"><![CDATA[<p>参考<br><a href="https://www.cnblogs.com/feifuzeng/p/13563430.html">https://www.cnblogs.com/feifuzeng/p/13563430.html</a><br><a href="https://blog.csdn.net/feiying0canglang/article/details/129789161">https://blog.csdn.net/feiying0canglang/article/details/129789161</a></p><p>这里以 <code>Elasticsearch 7.17.14</code> 为例，7.8 版本之前与之后有一点区别。7.8 之后的 API 是：<code>_index_template</code>，7.8 之前的命令是：<code>_template</code></p><h2 id="设置索引模板"><a href="#设置索引模板" class="headerlink" title="设置索引模板"></a>设置索引模板</h2><p>模板是为了让创建的索引按照一定的规则，比如索引按天分割，手动给每个索引做配置太麻烦</p><h2 id="创建生命周期策略"><a href="#创建生命周期策略" class="headerlink" title="创建生命周期策略"></a>创建生命周期策略</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置ingress日志保留14天，超过14天删除。</span></span><br><span class="line">PUT _ilm/policy/ingress-log-retention-policy</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;policy&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;phases&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;hot&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;actions&quot;</span>: &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;delete&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;min_age&quot;</span>: <span class="string">&quot;14d&quot;</span>,</span><br><span class="line">        <span class="string">&quot;actions&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;delete&quot;</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建索引模板"><a href="#创建索引模板" class="headerlink" title="创建索引模板"></a>创建索引模板</h2><p>索引模板引用上面创建的生命周期策略</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建索引模板，保证新创建的索引都应用这个模板</span></span><br><span class="line">PUT /_index_template/ingress-log-template</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;index_patterns&quot;</span>: [<span class="string">&quot;ingress-*&quot;</span>],</span><br><span class="line">  <span class="string">&quot;template&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;number_of_replicas&quot;</span>: 0,</span><br><span class="line">      <span class="string">&quot;index&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;lifecycle&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ingress-log-retention-policy&quot;</span>,</span><br><span class="line">          <span class="string">&quot;rollover_alias&quot;</span>: <span class="string">&quot;ingress-log-alias&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检查是否生效"><a href="#检查是否生效" class="headerlink" title="检查是否生效"></a>检查是否生效</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询索引的ilm状态</span></span><br><span class="line">GET ingress-2024.12.01/_ilm/explain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询索引设置，比如查看是否绑定了ilm策略</span></span><br><span class="line">GET ingress-2024.12.01/_settings</span><br></pre></td></tr></table></figure><h2 id="修改系统配置"><a href="#修改系统配置" class="headerlink" title="修改系统配置"></a>修改系统配置</h2><p>Elasticsearch 不会实时检测，可以修改检测时间间隔</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群的设置</span></span><br><span class="line">GET /_cluster/settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置检查时间为60s</span></span><br><span class="line">PUT _cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;persistent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;indices.lifecycle.poll_interval&quot;</span>:<span class="string">&quot;60s&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="手动修改现存的索引"><a href="#手动修改现存的索引" class="headerlink" title="手动修改现存的索引"></a>手动修改现存的索引</h2><p>因为我们创建了索引模板，只能在下次创建新索引才能生效，老索引需要手动绑定到策略上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动修改索引绑定的ilm策略</span></span><br><span class="line">PUT ingress-2024.12.01/_settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;index&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lifecycle.name&quot;</span>: <span class="string">&quot;ingress-log-retention-policy&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对于-logstash"><a href="#对于-logstash" class="headerlink" title="对于 logstash"></a>对于 logstash</h2><p>logstash 会创建自己的默认 template，所以想要应用 template 需要禁用 logstash 的 manage_template</p><p><code>logstash.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    bootstrap_servers =&gt; &quot;10.10.10.10:9092,10.10.10.11:9092,10.10.10.12:9092&quot;</span><br><span class="line">    topics =&gt; [&quot;ingress-k8s&quot;]</span><br><span class="line">    codec =&gt; &quot;json&quot;</span><br><span class="line">    consumer_threads =&gt; 3</span><br><span class="line">    group_id =&gt; &quot;k8s_group&quot;</span><br><span class="line">    decorate_events =&gt; true</span><br><span class="line">    type =&gt; &quot;logstash_mixins&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter&#123;</span><br><span class="line">    mutate&#123;</span><br><span class="line">        rename =&gt; [&quot;[host][name]&quot;, &quot;hostname&quot;]</span><br><span class="line">        remove_field =&gt; [&quot;ecs&quot;,&quot;@version&quot;,&quot;input&quot;,&quot;host&quot;,&quot;agent&quot;,&quot;log&quot;]</span><br><span class="line">        convert =&gt; &#123;</span><br><span class="line">          &quot;status&quot; =&gt; &quot;integer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  if [type] == &quot;logstash_mixins&quot; &#123;</span><br><span class="line">      elasticsearch &#123;</span><br><span class="line">          action   =&gt; &quot;index&quot;</span><br><span class="line">          manage_template =&gt; false</span><br><span class="line">          hosts    =&gt; [&quot;http://10.10.10.21:9200&quot;,&quot;http://10.10.10.22:9200&quot;,&quot;http://10.10.10.23:9200&quot;]</span><br><span class="line">          index    =&gt; &quot;%&#123;[fields][type]&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">          user     =&gt; &quot;elastic&quot;</span><br><span class="line">          password =&gt; &quot;password&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要在 output 中添加一行：<code>manage_template =&gt; false</code></p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用操作 </tag>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows中使用msys来运行linux命令</title>
      <link href="/posts/snrcqh/"/>
      <url>/posts/snrcqh/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么不用-WSL"><a href="#为什么不用-WSL" class="headerlink" title="为什么不用 WSL"></a>为什么不用 WSL</h2><p>主要原因有以下几点：</p><ol><li>WSL 访问 Windows 的路径和原生 Windows 不一致，需要手动或者 <code>wslpath</code> 命令来转换</li><li>在 Windows 的命令行运行 wsl 命令的时候，需要通过 <code>wsl &lt;linux命令&gt;</code> 这种方式来实现，并不是原生的 Windows 命令写法。</li><li>WSL 启动耗时问题（倒还好，影响不大。）</li></ol><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>官网地址：<a href="https://www.msys2.org/">https://www.msys2.org/</a><br>安装直接下一步下一步即可。</p><blockquote><p>不同的启动器之间的区别请看：<a href="https://www.msys2.org/docs/environments/">https://www.msys2.org/docs/environments/</a></p></blockquote><h2 id="增加环境变量"><a href="#增加环境变量" class="headerlink" title="增加环境变量"></a>增加环境变量</h2><p>或者 win + R 输入 <code>sysdm.cpl</code> 点击 高级 环境变量 进入环境变量配置界面：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411302227697.png" alt="image.png"></p><p>一般来说建议修改用户变量里面的 PATH 即可，添加一个路径：<code>C:\msys64\usr\bin</code></p><p>然后就可以正常使用了。</p><h2 id="常用技巧"><a href="#常用技巧" class="headerlink" title="常用技巧"></a>常用技巧</h2><p>包管理使用的是 pacman ，使用文档可以看这里：<a href="https://www.msys2.org/docs/package-management/">https://www.msys2.org/docs/package-management/</a></p><p>比如安装 vim，可以执行 <code>pacman -S vim</code></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTPS的原理，使用HTTPS就一定是安全的吗？</title>
      <link href="/posts/sna41n/"/>
      <url>/posts/sna41n/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTPS-是什么"><a href="#HTTPS-是什么" class="headerlink" title="HTTPS 是什么"></a>HTTPS 是什么</h2><p>以前一直以为 HTTPS 是一种与 HTTP 类似的应用层协议，后来才发现 HTTPS 并不是一种协议。https 只是在 URI 中作为 protocol identifier 罢了。HTTPS 其实是 HTTP Over TLS（ <a href="https://datatracker.ietf.org/doc/html/rfc2818">RFC2818</a> ）的简称，也就是运行在 TLS 协议上的 HTTP 协议，使用 TLS 协议对 HTTP 数据进行加密，从而保证了安全性。</p><h2 id="TLS-协议简介"><a href="#TLS-协议简介" class="headerlink" title="TLS 协议简介"></a>TLS 协议简介</h2><p>HTTPS 的核心就是 TLS 协议，那么 TLS 协议又是什么呢？TLS 的全称为 Transport Layer Security，也就是在传输层保证安全 <a href="https://tools.ietf.org/html/rfc5246">RFC5246</a>。主要分为以下四个协议：</p><ul><li><a href="https://tools.ietf.org/html/rfc5246#page-37">handshake protocol</a>，用来建立连接、身份认证、密钥协商</li><li><a href="https://tools.ietf.org/html/rfc5246#page-28">alert protocol</a>，用来关闭连接</li><li><a href="https://tools.ietf.org/html/rfc5246#page-27">change cipher spec protocol</a>，用来表示开始使用协商好的加密方式进行数据传输</li><li><a href="https://tools.ietf.org/html/rfc5246#page-65">application data protocol</a>，用来传输密文</li></ul><p>TLS 协议中最重要的就是 handshake 了，在握手阶段通信双方以安全的方式协商好用于之后数据传输的加密方式以及各种密钥。</p><h2 id="HTTPS-连接过程"><a href="#HTTPS-连接过程" class="headerlink" title="HTTPS 连接过程"></a>HTTPS 连接过程</h2><p>大家可能都听说过 HTTPS 协议之所以是安全的是因为 HTTPS 协议会对传输的数据进行加密，而加密过程是使用了非对称加密实现。但其实，HTTPS 在内容传输的加密上使用的是对称加密，非对称加密只作用在证书验证阶段。</p><p>HTTPS 的整体过程分为证书验证和数据传输阶段，具体的交互过程如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211110422.webp" alt="41ac7d0df61046f0ab518fba866838dd.webp"></p><h3 id="客户端请求建立连接"><a href="#客户端请求建立连接" class="headerlink" title="客户端请求建立连接"></a>客户端请求建立连接</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211139023.png" alt="image.png"></p><p>客户端首先要向服务器请求建立一个安全连接。需要发送给服务器的必要信息有：</p><ul><li>TLS 协议版本。</li><li>Cipher Suites。由于双方对一些加密算法的支持程度可能不同，客户端需要将它支持的加密方法发送给服务器，以供服务器进行选择。</li><li>Session ID。如果提供的话，表示使用前一个会话中已协商好的密钥，而无需再次协商。</li><li>Random。客户端生成的随机值，用来生成 <code>Master Secret</code>。</li><li>server_name extension。表示访问的是哪个网站。</li></ul><h3 id="服务器确定加密套件"><a href="#服务器确定加密套件" class="headerlink" title="服务器确定加密套件"></a>服务器确定加密套件</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211418010.png" alt="image.png"></p><p>服务器接收到建立连接的请求之后，要发送以下信息：</p><ul><li>TLS 协议版本。</li><li>Cipher Suite。从客户端提供的可选加密方式中选择一个。</li><li>Session ID。本次会话的 ID。</li><li>Random。随机生成的值，用来生成 <code>Master Secret</code>。</li></ul><h3 id="服务器发送证书"><a href="#服务器发送证书" class="headerlink" title="服务器发送证书"></a>服务器发送证书</h3><p>在发送 <code>Server Hello</code> 之后，服务器还需要把其证书通过 <code>Certificate</code> 发给客户端。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211418690.png" alt="image.png"></p><p>证书的作用在 <a href="https://yieldnull.com/blog/001efdfe76e6f4f672faf785dff1cc54e4fd26ba/">“用数字证书证明你是你”</a> 一文中已经阐明。</p><p>要是之前确定的加密套件中的秘钥交换算法还需要一些额外的信息，那么服务器还会发送一个 <code>Server Key Exchange</code>，用来传递额外的信息。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211419536.png" alt="image.png"></p><h3 id="双方完成身份认证"><a href="#双方完成身份认证" class="headerlink" title="双方完成身份认证"></a>双方完成身份认证</h3><p>（如果服务器要认证客户端的身份，那么会发送一个 <code>Certificate Request</code> 来向客户端请求证书，客户端收到请求之后会发送 <code>Certificate</code> 给服务器）</p><p>最后，（确认客户端身份之后）服务器发送 <code>Server Done</code> 表示我想知道的都已经知道了，该发的也发给你了。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211419375.png" alt="image.png"></p><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>通过之前的步骤，通信双方认证了对方的身份，明确了加密套件，现在就缺加密密钥了。</p><p>此时，客户端会生成一个 <code>premaster secret</code>，并用服务器证书中的公钥进行加密，然后通过 <code>Client Key Exchange</code> 发送给服务器。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211420975.png" alt="image.png"></p><p>同时，客户端会在本地使用 <code>premaster secret</code>，以及之前在 <code>Hello</code> 阶段双方生成的两个随机数，生成最终的 <code>master secret</code></p><p>服务器收到 <code>Client Key Exchange</code> 之后，使用其私钥解密出 <code>premaster secret</code>。然后使用与客户端相同的方式，生成与客户端相同的 <code>master secret</code>。</p><h3 id="通知开始加密传输"><a href="#通知开始加密传输" class="headerlink" title="通知开始加密传输"></a>通知开始加密传输</h3><p>当双方都得到 <code>master secret</code> 之后，就会发送 <code>Change Cipher Spec</code> 通知对方：我开始用之前商量好的加密方式以及密钥传输数据了。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211420400.png" alt="image.png"></p><h3 id="确保密钥可用"><a href="#确保密钥可用" class="headerlink" title="确保密钥可用"></a>确保密钥可用</h3><p>为了确保之前的协商的确是成功了，双方还需要确认一下双方使用的密钥是不是一致的。怎么确认呢？那就把从 <code>Client Hello</code> 以来握手过程中双方通信的所有信息加密之后，再给对方发送一遍。要是对方发过来的信息解密之后与自己记录的相同，则表示密钥生效了！<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211420778.png" alt="image.png"></p><h3 id="加密套件与密钥"><a href="#加密套件与密钥" class="headerlink" title="加密套件与密钥"></a>加密套件与密钥</h3><p>上一节仅介绍了握手的流程，现在来仔细看看其中涉及到的加密套件（<a href="https://en.wikipedia.org/wiki/Cipher_suite">Cipher_suite</a>）与 <code>master secret</code>。</p><h3 id="加密套件"><a href="#加密套件" class="headerlink" title="加密套件"></a>加密套件</h3><p>加密套件定义的是在整个数据传输过程中使用到的加密方式。以 <code>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code> 为例，其包含以下算法</p><ul><li><strong>密钥交换算法</strong>。用来交换密钥。例如 <code>ECDHE_RSA</code></li><li><strong>对称加密算法</strong>。用来加密信息。例如 <code>AES_128_GCM</code></li><li><strong>信息摘要算法</strong>。用来计算摘要，防止篡改。例如 <code>SHA256</code></li><li><strong>伪随机函数</strong>。生成 <code>master secret</code>。要用到信息摘要算法。</li></ul><h3 id="master-secret"><a href="#master-secret" class="headerlink" title="master secret"></a>master secret</h3><p>上一节提到，客户端与服务器会根据 <code>premaster secret</code> 以及二者在 <code>Hello</code> 阶段各自生成的随机数，产生相同的 <code>master secret</code>。二者使用的函数为</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211421527.png" alt="image.png"></p><p>至于生成的 <code>master secret</code>，其格式为</p><blockquote><p>client write MAC key server write MAC key client write encryption key server write encryption key client write IV server write IV</p></blockquote><p>前两个是计算摘要用的 KEY，中间两个是加密时用的，最后两个适用于加密套件使用 <code>AEAD</code> 时。</p><h3 id="总结下连接过程"><a href="#总结下连接过程" class="headerlink" title="总结下连接过程"></a>总结下连接过程</h3><p><strong>① 证书验证阶段</strong></p><ol><li>浏览器发起 HTTPS 请求</li><li>服务端返回 HTTPS 证书</li><li>客户端验证证书是否合法，如果不合法则提示告警</li></ol><p><strong>② 数据传输阶段</strong></p><ol><li>当证书验证合法后，在本地生成随机数</li><li>通过公钥加密随机数，并把加密后的随机数传输到服务端</li><li>服务端通过私钥对随机数进行解密</li><li>服务端通过客户端传入的随机数构造对称加密算法，对返回结果内容进行加密后传输</li></ol><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="为什么数据传输是用对称加密？"><a href="#为什么数据传输是用对称加密？" class="headerlink" title="为什么数据传输是用对称加密？"></a>为什么数据传输是用对称加密？</h3><p>首先，非对称加密的加解密效率是非常低的，而 http 的应用场景中通常端与端之间存在大量的交互，非对称加密的效率是无法接受的；</p><p>另外，在 HTTPS 的场景中只有服务端保存了私钥，一对公私钥只能实现单向的加解密，所以 HTTPS 中内容传输加密采取的是对称加密，而不是非对称加密。</p><h3 id="为什么需要-CA-认证机构颁发证书？"><a href="#为什么需要-CA-认证机构颁发证书？" class="headerlink" title="为什么需要 CA 认证机构颁发证书？"></a>为什么需要 CA 认证机构颁发证书？</h3><p>HTTP 协议被认为不安全是因为传输过程容易被监听者勾线监听、伪造 <a href="https://cloud.tencent.com/product/cvm/?from_column=20065&from=20065">服务器</a>，而 HTTPS 协议主要解决的便是网络传输的安全性问题。</p><p>首先我们假设不存在认证机构，任何人都可以制作证书，这带来的安全风险便是经典的 <strong>“中间人攻击”</strong> 问题。</p><p>“中间人攻击”的具体过程如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211111399.webp" alt="f35348523dd744408647d2b97d2534c6.webp"></p><p>过程原理：</p><ol><li>本地请求被劫持（如 DNS 劫持等），所有请求均发送到中间人的服务器</li><li>中间人服务器返回中间人自己的证书</li><li>客户端创建随机数，通过中间人证书的公钥对随机数加密后传送给中间人，然后凭随机数构造对称加密对传输内容进行加密传输</li><li>中间人因为拥有客户端的随机数，可以通过对称加密算法进行内容解密</li><li>中间人以客户端的请求内容再向正规网站发起请求</li><li>因为中间人与服务器的通信过程是合法的，正规网站通过建立的安全通道返回加密后的数据</li><li>中间人凭借与正规网站建立的对称加密算法对内容进行解密</li><li>中间人通过与客户端建立的对称加密算法对正规内容返回的数据进行加密传输</li><li>客户端通过与中间人建立的对称加密算法对返回结果数据进行解密</li></ol><p>由于缺少对证书的验证，所以客户端虽然发起的是 HTTPS 请求，但客户端完全不知道自己的网络已被拦截，传输内容被中间人全部窃取。</p><h3 id="浏览器是如何确保-CA-证书的合法性？"><a href="#浏览器是如何确保-CA-证书的合法性？" class="headerlink" title="浏览器是如何确保 CA 证书的合法性？"></a>浏览器是如何确保 CA 证书的合法性？</h3><h4 id="1-证书包含什么信息？"><a href="#1-证书包含什么信息？" class="headerlink" title="1. 证书包含什么信息？"></a>1. 证书包含什么信息？</h4><ul><li>颁发机构信息</li><li>公钥</li><li>公司信息</li><li>域名</li><li>有效期</li><li>指纹</li><li>……</li></ul><h4 id="2-证书的合法性依据是什么？"><a href="#2-证书的合法性依据是什么？" class="headerlink" title="2. 证书的合法性依据是什么？"></a>2. 证书的合法性依据是什么？</h4><p>首先，权威机构是要有认证的，不是随便一个机构都有资格颁发证书，不然也不叫做权威机构。另外，证书的可信性基于信任制，权威机构需要对其颁发的证书进行信用背书，只要是权威机构生成的证书，我们就认为是合法的。所以权威机构会对申请者的信息进行审核，不同等级的权威机构对审核的要求也不一样，于是证书也分为免费的、便宜的和贵的。</p><h4 id="3-浏览器如何验证证书的合法性？"><a href="#3-浏览器如何验证证书的合法性？" class="headerlink" title="3. 浏览器如何验证证书的合法性？"></a>3. 浏览器如何验证证书的合法性？</h4><p>浏览器发起 HTTPS 请求时，服务器会返回网站的 SSL 证书，浏览器需要对证书做以下验证：</p><ol><li>验证域名、有效期等信息是否正确。证书上都有包含这些信息，比较容易完成验证；</li><li>判断证书来源是否合法。每份签发证书都可以根据验证链查找到对应的根证书，操作系统、浏览器会在本地存储权威机构的根证书，利用本地根证书可以对对应机构签发证书完成来源验证；</li></ol><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211112715.webp" alt="e7d864735b9d4ff9a42e761bd44ce513.webp"></p><ol><li>判断证书是否被篡改。需要与 CA 服务器进行校验；</li><li>判断证书是否已吊销。通过 CRL（Certificate Revocation List 证书注销列表）和 OCSP（Online Certificate Status Protocol 在线证书状态协议）实现，其中 OCSP 可用于第 3 步中以减少与 CA 服务器的交互，提高验证效率</li></ol><p>以上任意一步都满足的情况下浏览器才认为证书是合法的。</p><blockquote><p>这里插一个我想了很久的但其实答案很简单的问题：  既然证书是公开的，如果要发起中间人攻击，我在官网上下载一份证书作为我的服务器证书，那客户端肯定会认同这个证书是合法的，如何避免这种证书冒用的情况？ 其实这就是非加密对称中公私钥的用处，虽然中间人可以得到证书，但私钥是无法获取的，一份公钥是不可能推算出其对应的私钥，中间人即使拿到证书也无法伪装成合法服务端，因为无法对客户端传入的加密数据进行解密。</p></blockquote><h4 id="4-只有认证机构可以生成证书吗？"><a href="#4-只有认证机构可以生成证书吗？" class="headerlink" title="4. 只有认证机构可以生成证书吗？"></a>4. 只有认证机构可以生成证书吗？</h4><p>如果需要浏览器不提示安全风险，那只能使用认证机构签发的证书。但浏览器通常只是提示安全风险，并不限制网站不能访问，所以从技术上谁都可以生成证书，只要有证书就可以完成网站的 HTTPS 传输。例如早期的 12306 采用的便是手动安装私有证书的形式实现 HTTPS 访问。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411211112378.png" alt="1e9f4c5925fc4929804b8a1bc94cdd87.png"></p><p><strong>如何保证随机数不会被窃取？</strong></p><p>其实 HTTPS 并不包含对随机数的安全保证，HTTPS 保证的只是传输过程安全，而随机数存储于本地，本地的安全属于另一安全范畴，应对的措施有安装杀毒软件、反木马、浏览器升级修复漏洞等。</p><h3 id="用了-HTTPS-会被抓包吗？"><a href="#用了-HTTPS-会被抓包吗？" class="headerlink" title="用了 HTTPS 会被抓包吗？"></a>用了 HTTPS 会被抓包吗？</h3><p>HTTPS 的数据是加密的，常规下抓包工具代理请求后抓到的包内容是加密状态，无法直接查看。</p><p>但是，正如前文所说，浏览器只会提示安全风险，如果用户授权仍然可以继续访问网站，完成请求。因此，只要客户端是我们自己的终端，我们授权的情况下，便可以组建中间人网络，而抓包工具便是作为中间人的代理。通常 HTTPS 抓包工具的使用方法是会生成一个证书，用户需要手动把证书安装到客户端中，然后终端发起的所有请求通过该证书完成与抓包工具的交互，然后抓包工具再转发请求到服务器，最后把服务器返回的结果在控制台输出后再返回给终端，从而完成整个请求的闭环。</p><p><strong>既然 HTTPS 不能防抓包，那 HTTPS 有什么意义？</strong>  HTTPS 可以防止用户在不知情的情况下通信链路被监听，对于主动授信的抓包操作是不提供防护的，因为这个场景用户是已经对风险知情。要防止被抓包，需要采用应用级的安全防护，例如采用私有的对称加密，同时做好移动端的防反编译加固，防止本地算法被破解。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以下用简短的 Q&amp;A 形式进行全文总结：</p><p>Q: HTTPS 为什么安全？ </p><p>A: 因为 HTTPS 保证了传输安全，防止传输过程被监听、防止数据被窃取，可以确认网站的真实性。</p><p>Q: HTTPS 的传输过程是怎样的？ </p><p>A: 客户端发起 HTTPS 请求，服务端返回证书，客户端对证书进行验证，验证通过后本地生成用于改造对称加密算法的随机数，通过证书中的公钥对随机数进行加密传输到服务端，服务端接收后通过私钥解密得到随机数，之后的数据交互通过对称加密算法进行加解密。</p><p>Q: 为什么需要证书？ </p><p>A: 防止”中间人“攻击，同时可以为网站提供身份证明。</p><p>Q: 使用 HTTPS 会被抓包吗？ </p><p>A: 会被抓包，HTTPS 只防止用户在不知情的情况下通信被监听，如果用户主动授信，是可以构建“中间人”网络，代理软件可以对传输内容进行解密。</p><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><ul><li><a href="https://tools.ietf.org/html/rfc2818">HTTP Over TLS. RFC2818</a></li><li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa380513%28v=vs.85%29.aspx">TLS Handshake Protocol</a></li><li><a href="http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html">The First Few Milliseconds of an HTTPS Connection</a></li><li><a href="https://segmentfault.com/a/1190000002554673">SSL&#x2F;TLS原理详解</a></li><li><a href="https://www.wosign.com/faq/faq2016-0309-04.htm">TLS&#x2F;SSL握手过程</a></li><li><a href="http://blog.csdn.net/dog250/article/details/5717162">ssl协议中的dh算法的pre-master-secret</a></li><li><a href="https://en.wikipedia.org/wiki/Cipher_suite">Cipher_suite</a></li><li><a href="https://yieldnull.com/blog/001efdfe76e6f4f672faf785dff1cc54e4fd26ba/">用数字证书证明你是你</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> tls </tag>
            
            <tag> https </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生产环境Prometheus监控架构记录</title>
      <link href="/posts/sn6pu2/"/>
      <url>/posts/sn6pu2/</url>
      
        <content type="html"><![CDATA[<p>比如有 30 家客户，每一个客户都有自己的 Kubernetes 集群，部署方式千差万别，还有客户不使用 Kubernetes 的，使用虚拟机部署，那么怎么对这么多客户的机器、服务进行有效的监控，本文记录一下监控的架构方案。</p><h2 id="监控架构图"><a href="#监控架构图" class="headerlink" title="监控架构图"></a>监控架构图</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411201501698.png"></p><p>说明：<br>Prometheus Core 是一个核心的 Prometheus，所有其他 Prometheus 的数据都汇总到这里，查询、告警等都使用这个 Prometheus</p><h2 id="Prometheus-Core"><a href="#Prometheus-Core" class="headerlink" title="Prometheus Core"></a>Prometheus Core</h2><p>这个是核心的 Prometheus，其他客户的 Prometheus 通过联邦接入或者 远程写 (remote write) 的方式来写入数据到这个 Prometheus 中。Prometheus Core 可以更换成 <a href="/posts/e59d8e32">VictoriaMetrics</a></p><h3 id="联邦接入配置"><a href="#联邦接入配置" class="headerlink" title="联邦接入配置"></a>联邦接入配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http 接口联邦</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;federate-http&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">&#x27;/federate&#x27;</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;password&#x27;</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">&#x27;match[]&#x27;</span><span class="string">:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;job=~&quot;.+&quot;&#125;&#x27;</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/data/prometheus/conf.d/federate_http.yml</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">30s</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https 接口联邦</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;federate-https&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">&#x27;/federate&#x27;</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;password&#x27;</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">&#x27;match[]&#x27;</span><span class="string">:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;job=~&quot;.+&quot;&#125;&#x27;</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/data/prometheus/conf.d/federate_https.yml</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">1m</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">insecure_skip_verify:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>对应的 <code>federate_http.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.252</span><span class="number">.0</span><span class="number">.250</span><span class="string">:9090</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">    <span class="attr">k8s:</span> <span class="string">k8s-test</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.249</span><span class="number">.48</span><span class="number">.250</span><span class="string">:9090</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">&quot;prod&quot;</span></span><br><span class="line">    <span class="attr">k8s:</span> <span class="string">k8s-prod</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;prometheus&quot;</span></span><br></pre></td></tr></table></figure><h3 id="远程写入配置"><a href="#远程写入配置" class="headerlink" title="远程写入配置"></a>远程写入配置</h3><p>修改 Prometheus 启动参数，增加：<code>--enable-feature=remote-write-receiver</code> 启动参数。</p><h2 id="Kubernetes-中部署有集群权限的-Prometheus"><a href="#Kubernetes-中部署有集群权限的-Prometheus" class="headerlink" title="Kubernetes 中部署有集群权限的 Prometheus"></a>Kubernetes 中部署有集群权限的 Prometheus</h2><p>适合有集群权限的 Prometheus,可以创建 serviceaccount 和 clusterrole clusterrolebinding 资源才可以自动发现</p><p>参考 Prometheus 官方 GitHub 上的配置文件 <a href="https://github.com/prometheus/prometheus/blob/main/documentation/examples/rbac-setup.yml">https://github.com/prometheus/prometheus/blob/main/documentation/examples/rbac-setup.yml</a></p><p>完整的配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes/proxy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">nonResourceURLs:</span> [<span class="string">&quot;/metrics&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">prometheus-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">prometheus</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">prom/prometheus:v2.34.0</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;/bin/prometheus&quot;</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;--config.file=/etc/prometheus/prometheus.yml&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;--storage.tsdb.path=/prometheus&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;--storage.tsdb.retention=24h&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;--web.enable-lifecycle&quot;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9090</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">&quot;/prometheus&quot;</span></span><br><span class="line">        <span class="comment"># 这种方式挂载，会将原始目录整个挂载，也就是看不到原始的文件了。</span></span><br><span class="line">        <span class="comment"># - name: prometheus-config</span></span><br><span class="line">        <span class="comment">#   mountPath: /etc/prometheus</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">prometheus-config</span>                <span class="comment"># volumes的名字</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/prometheus/prometheus.yml</span>     <span class="comment"># 容器内的目录</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">prometheus.yml</span>                       <span class="comment"># 指定configmap里面的key</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">prometheus-config</span>                <span class="comment"># volumes的名字</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/prometheus/web.yml</span>     <span class="comment"># 容器内的目录</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">web.yml</span>                       <span class="comment"># 指定configmap里面的key</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;2Gi&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;2Gi&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># type: NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9090</span></span><br><span class="line">    <span class="comment"># nodePort: 30090</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">prometheus.i.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">prometheus.i.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">9090</span></span><br></pre></td></tr></table></figure><p><code>configmap.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">web.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    basic_auth_users:</span></span><br><span class="line"><span class="string">      admin: $2y$05$UKSS18ztdsUNoEuXYScr2OE1TCMe1hWnmD6JuwUi/uPTJayHIakae</span></span><br><span class="line"><span class="string"></span>  <span class="attr">prometheus.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    global:</span></span><br><span class="line"><span class="string">      scrape_interval:     15s</span></span><br><span class="line"><span class="string">      evaluation_interval: 15s</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      # 全局标签</span></span><br><span class="line"><span class="string">      external_labels:</span></span><br><span class="line"><span class="string">        env: prod</span></span><br><span class="line"><span class="string">        dept: ops</span></span><br><span class="line"><span class="string">        project: example</span></span><br><span class="line"><span class="string">        k8s: example</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">scrape_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;apiservers&#x27;</span></span><br><span class="line">        <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">        <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">        <span class="attr">tls_config:</span></span><br><span class="line">          <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">        <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">        <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>, <span class="string">__meta_kubernetes_service_name</span>, <span class="string">__meta_kubernetes_endpoint_port_name</span>]</span><br><span class="line">          <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">default;kubernetes;https</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;cadvisor&#x27;</span></span><br><span class="line">        <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">        <span class="attr">tls_config:</span></span><br><span class="line">          <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">          <span class="attr">insecure_skip_verify:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">        <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">kubernetes.default.svc:443</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_node_name</span>]</span><br><span class="line">          <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">/api/v1/nodes/$&#123;1&#125;/proxy/metrics/cadvisor</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;kubelet&quot;</span></span><br><span class="line">        <span class="attr">honor_timestamps:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">scrape_interval:</span> <span class="string">1m</span></span><br><span class="line">        <span class="attr">scrape_timeout:</span> <span class="string">1m</span></span><br><span class="line">        <span class="attr">metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line">        <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">        <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">        <span class="attr">tls_config:</span></span><br><span class="line">          <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">          <span class="attr">insecure_skip_verify:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">separator:</span> <span class="string">;</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">$1</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">separator:</span> <span class="string">;</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">(.*)</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">kubernetes.default.svc:443</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_node_name</span>]</span><br><span class="line">          <span class="attr">separator:</span> <span class="string">;</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">/api/v1/nodes/$&#123;1&#125;/proxy/metrics</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;service_endpoints_metrics&#x27;</span></span><br><span class="line">        <span class="comment"># service 需要添加元数据 通常需要有 /metrics 接口返回 prometheus 数据格式</span></span><br><span class="line">        <span class="comment"># prometheus.io/path: /metrics</span></span><br><span class="line">        <span class="comment"># prometheus.io/port: &quot;8080&quot;</span></span><br><span class="line">        <span class="comment"># prometheus.io/scrape: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">        <span class="attr">relabel_configs:</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 带注解  prometheus.io/scrape: true  的才会被采集，不然不采集，不入库</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_scrape</span>]</span><br><span class="line">          <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_scheme</span>]</span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__scheme__</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">(https?)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_path</span>]</span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_service_annotation_prometheus_io_port</span>]</span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">__meta_kubernetes_service_label_(.+)</span></span><br></pre></td></tr></table></figure><blockquote><p>注：如果需要监控 pod 状态，比如 pod 重启次数等数据，需要安装 <code>kube-state-metrics</code> 并通过服务发现的方式将数据接入到 Prometheus</p></blockquote><h2 id="Kubernetes-中部署无集群权限的-Prometheus"><a href="#Kubernetes-中部署无集群权限的-Prometheus" class="headerlink" title="Kubernetes 中部署无集群权限的 Prometheus"></a>Kubernetes 中部署无集群权限的 Prometheus</h2><p>有的客户不给集群权限，比如一个大的 Kubernetes 集群中，给分配了一个 namespace，其他 namespace 是别人的服务，当然不能给你很高的权限，或者是个定制的控制界面，无法进行创建 serviceaccount 的操作等。这样只能监控一些基础的信息，比如 service 通不通（通过 service 地址来监控），监控一些中间件的监控数据（手动配置 exporter 的 service 地址）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">30s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">external_labels:</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">prod</span></span><br><span class="line">    <span class="attr">dept:</span> <span class="string">ops</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">k8s:</span> <span class="string">example</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;mysql_instance&quot;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;mysql-exporter:9104&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">prod_example_mysql</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;redis_instance&quot;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;redis-exporter:9121&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">prod_example_redis</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;port&quot;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">20s</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">tcp_connect</span>]</span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;10.133.103.171:6379&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">redis</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;10.133.103.170:3306&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">addr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">      <span class="attr">regex:</span> <span class="string">(.+):(.*)</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">$2</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">port</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">&quot;blackbox-exporter:9115&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里手动配置的service请求地址</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;http_get&quot;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">20s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">http_2xx</span>]</span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;prod-idk-mob-sdk-server:5003/actuator/info&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">idk-mob-sdk-server</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;prod-public-hsm-services:8007/hsm/actuator/health&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">public-hsm-services</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">&quot;blackbox-exporter:9115&quot;</span></span><br></pre></td></tr></table></figure><h2 id="虚拟机部署"><a href="#虚拟机部署" class="headerlink" title="虚拟机部署"></a>虚拟机部署</h2><p>类似于上面的 Kubernetes 中部署的无权限 Prometheus</p><h2 id="没有公网域名的-Prometheus"><a href="#没有公网域名的-Prometheus" class="headerlink" title="没有公网域名的 Prometheus"></a>没有公网域名的 Prometheus</h2><p>没有公网域名意味着无法通过 Prometheus Core 来拉取（联邦），可以使用 remote write 远程写的方式写入到目标的 Prometheus Core 中</p><p><code>vim prometheus.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;https://prometheus.example.com/api/v1/write&quot;</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line">  <span class="attr">remote_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">queue_config:</span></span><br><span class="line">    <span class="attr">capacity:</span> <span class="number">2000</span></span><br><span class="line">    <span class="attr">max_shards:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">min_shards:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">max_samples_per_send:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">batch_send_deadline:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">min_backoff:</span> <span class="string">30ms</span></span><br><span class="line">    <span class="attr">max_backoff:</span> <span class="string">100ms</span></span><br></pre></td></tr></table></figure><h3 id="远程写-Prometheus-自身挂掉如何监控"><a href="#远程写-Prometheus-自身挂掉如何监控" class="headerlink" title="远程写 Prometheus 自身挂掉如何监控"></a>远程写 Prometheus 自身挂掉如何监控</h3><p>使用 absent 函数来做判断 具体可以看 <a href="/posts/666e547f/">Prometheus通过remote_write写入数据到另一台Prometheus</a></p><h2 id="basicauth-认证"><a href="#basicauth-认证" class="headerlink" title="basicauth 认证"></a>basicauth 认证</h2><p>关于认证，可以看 <a href="/posts/165a0cd3/">Prometheus开启basic_auth认证</a></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用snmp exporter对交换机、服务器等进行监控</title>
      <link href="/posts/smz2c9/"/>
      <url>/posts/smz2c9/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>到 GitHub 下载一个可执行文件，直接运行即可，或者使用 systemd 来运行，也可以直接部署到 Kubernetes 中。<br><a href="https://github.com/prometheus/snmp_exporter">https://github.com/prometheus/snmp_exporter</a></p><p>systemd 配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=snmp_exporter</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">ExecStart</span>=/opt/snmp_exporter/snmp_exporter --config.file=/opt/snmp_exporter/snmp.yml</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="交换机或服务器打开-snmp-协议"><a href="#交换机或服务器打开-snmp-协议" class="headerlink" title="交换机或服务器打开 snmp 协议"></a>交换机或服务器打开 snmp 协议</h2><p>这一步需要在交换机或服务器的 ipmi 上配置，交换机这种网络设备一般都只支持 snmp 协议来获取数据，比如说每个接口的状态（有没有插网线等）<br>对于服务器，像 cpu 占用率、内存使用率这些数据使用 node_exporter 就可以做，为啥还要使用 snmp_exporter 呢，snmp_exporter 可以做到一些底层的监控，比如说：风扇转速、电源是否有损坏的（一般服务器都有多个电源模块）、温度情况、磁盘阵列状态（是否有硬盘坏掉了，比如做了 raid1，坏了一块硬盘在软件层面是无感知的，但是需要及时更换硬盘了。）</p><p>打开 snmp 协议后，需要设置并记录一下团体名。</p><p>测试 snmp 命令示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk -v 2c -c 123456 100.200.1.254</span><br><span class="line">snmpwalk -v 2c -c 123456 172.18.48.5 1.3.6.1.2.1.47.1.1.1.1.7</span><br><span class="line">snmpwalk -v3 -u sysadmin -a MD5 -A rootuser -x DES -X rootuser -l authpriv 100.200.1.24</span><br></pre></td></tr></table></figure><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><p>snmp exporter 开源软件中有个 snmp generator ，可以用于生成 snmp exporter 的配置文件。<br>配置文件中根据硬件的 MIB 文件生成了 OID 的映射关系。以 Cisco 交换机为例，在官方 GitHub 上下载最新的 <strong>snmp.yml</strong> 文件，由于 Cisco 交换机使用的是 if_mib 模块，在 if_mib 下新增 auth 配置，团体名要和交换机上配置的一致。<br>根据 mib 文件生成 yaml 配置文件工具：<a href="https://github.com/prometheus/snmp_exporter/tree/main/generator">https://github.com/prometheus/snmp_exporter/tree/main/generator</a><br>关于采集的监控项是在 walk 字段下，如果要新增监控项，写在 walk 项下。我新增了交换机的 CPU 和内存信息。官方示例中的 if_mib 这个是 module 名字， if_mib 是个网络设备的规范，RFC1573</p><h3 id="H3C-交换机配置示例"><a href="#H3C-交换机配置示例" class="headerlink" title="H3C 交换机配置示例"></a>H3C 交换机配置示例</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span></span><br><span class="line"><span class="attr">H3C:</span></span><br><span class="line">  <span class="attr">walk:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span>                     <span class="comment">#端口描述</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.8</span>                     <span class="comment">#端口状态 1up，2down</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span>                  <span class="comment">#端口名称</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.18</span>                 <span class="comment">#端口别名</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.5</span>      <span class="comment">#H3C端口进流量</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.6</span>      <span class="comment">#H3C端口出流量</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.13</span>      <span class="comment">#内存利用率</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.4</span>       <span class="comment">#CPU利用率</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.9</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span>        <span class="comment">#电源状态</span></span><br><span class="line">  <span class="attr">get:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.0</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span><span class="number">.0</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.5</span><span class="number">.0</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.1</span><span class="number">.1</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">  <span class="comment"># 这里的name就是收集到的指标的名字</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sysDescr</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">A</span> <span class="string">textual</span> <span class="string">description</span> <span class="string">of</span> <span class="string">the</span> <span class="string">entity</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sysUpTime</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">time</span> <span class="string">(in</span> <span class="string">hundredths</span> <span class="string">of</span> <span class="string">a</span> <span class="string">second)</span> <span class="string">since</span> <span class="string">the</span> <span class="string">network</span> <span class="string">management</span> <span class="string">portion</span></span><br><span class="line">      <span class="string">of</span> <span class="string">the</span> <span class="string">system</span> <span class="string">was</span> <span class="string">last</span> <span class="string">re-initialized.</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sysName</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">An</span> <span class="string">administratively-assigned</span> <span class="string">name</span> <span class="string">for</span> <span class="string">this</span> <span class="string">managed</span> <span class="string">node</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ifOperStatus</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.8</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">current</span> <span class="string">operational</span> <span class="string">state</span> <span class="string">of</span> <span class="string">the</span> <span class="string">interface</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.8</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">lookups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifAlias</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.18</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifDescr</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifName</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">up</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">down</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">testing</span></span><br><span class="line">      <span class="attr">4:</span> <span class="string">unknown</span></span><br><span class="line">      <span class="attr">5:</span> <span class="string">dormant</span></span><br><span class="line">      <span class="attr">6:</span> <span class="string">notPresent</span></span><br><span class="line">      <span class="attr">7:</span> <span class="string">lowerLayerDown</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cIfStatFlowHCInBytes</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">counter</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">In</span> <span class="string">bytes</span> <span class="string">in</span> <span class="string">the</span> <span class="string">specified</span> <span class="string">interval</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">lookups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifAlias</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.18</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifDescr</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifName</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cIfStatFlowHCOutBytes</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.6</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">counter</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">Out</span> <span class="string">bytes</span> <span class="string">in</span> <span class="string">the</span> <span class="string">specified</span> <span class="string">interval</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.2</span><span class="number">.40</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.6</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">lookups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifAlias</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.18</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifDescr</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ifIndex</span></span><br><span class="line">      <span class="attr">labelname:</span> <span class="string">ifName</span></span><br><span class="line">      <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.31</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">DisplayString</span>  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cLswSysIpAddr</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">InetAddressIPv4</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">System</span> <span class="string">IP</span> <span class="string">address,</span> <span class="string">which</span> <span class="string">is</span> <span class="string">the</span> <span class="string">primary</span> <span class="string">IP</span> <span class="string">address</span> <span class="string">of</span> <span class="string">the</span> <span class="string">VLAN</span> <span class="string">interface</span></span><br><span class="line">      <span class="string">that</span> <span class="string">has</span> <span class="string">smallest</span> <span class="string">VLAN</span> <span class="string">ID</span> <span class="string">and</span> <span class="string">is</span> <span class="string">configured</span> <span class="string">IP</span> <span class="string">address.</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cLswSlotMemoryRatio</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.13</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">percentage</span> <span class="string">of</span> <span class="string">system</span> <span class="string">memory</span> <span class="string">in</span> <span class="string">use</span> <span class="string">on</span> <span class="string">the</span> <span class="string">board</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.13</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">hh3cLswFrameIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">hh3cLswSlotIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cLswSlotCpuRatio</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">CPU</span> <span class="string">usage</span> <span class="string">of</span> <span class="string">the</span> <span class="string">slot</span> <span class="string">in</span> <span class="string">accuracy</span> <span class="string">of</span> <span class="number">1</span><span class="string">%,</span> <span class="string">and</span> <span class="string">the</span> <span class="string">range</span> <span class="string">of</span> <span class="string">value</span> <span class="string">is</span> <span class="number">1</span> <span class="string">to</span></span><br><span class="line">      <span class="number">100</span><span class="string">.</span> <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.18</span><span class="number">.4</span><span class="number">.3</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">hh3cLswFrameIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">hh3cLswSlotIndex</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hh3cDevMPowerStatus</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.25506</span><span class="number">.8</span><span class="number">.35</span><span class="number">.9</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">&#x27;Power status: active (1), deactive (2) not installed (3) and unsupported</span></span><br><span class="line"><span class="string">      - 1.3.6.1.4.1.25506.8.35.9.1.2.1.2&#x27;</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">hh3cDevMPowerNum</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">active</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">deactive</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">not-install</span></span><br><span class="line">      <span class="attr">4:</span> <span class="string">unsupport</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">max_repetitions:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">auth:</span></span><br><span class="line">    <span class="attr">community:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="浪潮服务器配置示例"><a href="#浪潮服务器配置示例" class="headerlink" title="浪潮服务器配置示例"></a>浪潮服务器配置示例</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span></span><br><span class="line"><span class="attr">Inspur:</span></span><br><span class="line">  <span class="attr">walk:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.5</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span><span class="number">.19</span><span class="number">.9</span><span class="number">.65</span><span class="number">.115</span><span class="number">.115</span><span class="number">.101</span><span class="number">.116</span><span class="number">.32</span><span class="number">.84</span><span class="number">.97</span><span class="number">.103</span> <span class="comment">#机器fru信息</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#电源模块PSU当前在位状态</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#CPU状态</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#电压sensor健康状态,0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#温度sensor的健康状态,0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#风扇转速,0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span> <span class="comment">#前置硬盘状态 0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.9</span> <span class="comment">#硬盘状态监控信息(驱动器插槽)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.6</span><span class="number">.1</span><span class="number">.1</span><span class="number">.9</span> <span class="comment">#电源power 0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.5</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span> <span class="comment">#内存监控 0-N/A;1-Normal;2-Warning;3-Critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span> <span class="comment">#raid类型,比如raid1 raid5 raid10</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.2</span> <span class="comment">#Raid卡健康状态信息, &quot;Absent&quot;,&quot;Normal&quot;,&quot;Critical&quot;,&quot;N/A&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.14</span><span class="number">.1</span><span class="number">.1</span><span class="number">.5</span> <span class="comment">#网卡健康状态，显示为&quot;Normal&quot;,&quot;Warning&quot;,&quot;Critical&quot;,&quot;N/A&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverFRUInfoSetupAttributeValue</span>  <span class="comment">#机器fru信息:序列号</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.5</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span><span class="number">.19</span><span class="number">.9</span><span class="number">.65</span><span class="number">.115</span><span class="number">.115</span><span class="number">.101</span><span class="number">.116</span><span class="number">.32</span><span class="number">.84</span><span class="number">.97</span><span class="number">.103</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverFRUInfoSetupAttributeValue</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">机器fru</span> <span class="string">序列号信息</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverPowerSupplyMonitorPresent</span>  <span class="comment">#电源模块PSU当前在位状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverPowerSupplyMonitorPresent</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">电源模块PSU当前在位状态</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverCPUInfoPresent</span>  <span class="comment">#CPU当前在位状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverCPUInfoPresent</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">CPU当前在位状态</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverRaidDiskInfoVolumeraidLevel</span>  <span class="comment"># raid卡类型</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">serverRaidDiskInfoVolumeraidLevel</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">raid卡类型</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverVoltageStatus</span> <span class="comment">#电压sensor健康状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverVoltagestatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">电压sensor健康状态</span> <span class="number">1</span><span class="string">表示正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="string">N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span></span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverTemperatureSensorStatus</span> <span class="comment">#温度sensor的健康状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverTemperatureSensorStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">温度sensor的健康状态</span> <span class="number">1</span><span class="string">表示正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="string">N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span></span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverFanSensorStatus</span> <span class="comment">#风扇转速状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverFanSensorStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">风扇转速状态</span> <span class="number">1</span><span class="string">表示正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="string">N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverMemoryStatus</span> <span class="comment">#内存监控</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.5</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverMemoryStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">内存监控</span> <span class="number">1</span><span class="string">代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="string">N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span>        </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverPowerSupplyStatus</span> <span class="comment">#电源power</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.6</span><span class="number">.1</span><span class="number">.1</span><span class="number">.9</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverPowerSupplyStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">电源power</span> <span class="number">1</span><span class="string">代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="string">N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span>       </span><br><span class="line">          </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverFrontHDStatus</span> <span class="comment">#前置物理磁盘健康状态</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverFrontHDStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">前置物理磁盘健康状态</span> <span class="string">Normal代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverDriveSlotStatus</span> <span class="comment">#硬盘健康状态信息(驱动器插槽)</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.9</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverDriveSlotStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">硬盘健康状态信息</span> <span class="string">Normal代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">enum_values:</span></span><br><span class="line">      <span class="attr">0:</span> <span class="number">0</span><span class="string">-N/A</span></span><br><span class="line">      <span class="attr">1:</span> <span class="string">Normal</span></span><br><span class="line">      <span class="attr">2:</span> <span class="string">Warning</span></span><br><span class="line">      <span class="attr">3:</span> <span class="string">Critical</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverRaidLogicDiskInfoStatus</span> <span class="comment">#Raid卡健康状态信息</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.6</span><span class="number">.3</span><span class="number">.1</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverRaidControllorStandardStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">Raid卡健康状态信息</span> <span class="string">Optimal代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">serverSystemNICStandardStatus</span> <span class="comment">#网卡监控</span></span><br><span class="line">    <span class="attr">oid:</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.37945</span><span class="number">.2</span><span class="number">.1</span><span class="number">.2</span><span class="number">.14</span><span class="number">.1</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DisplayString</span></span><br><span class="line">    <span class="attr">help:</span> <span class="string">The</span> <span class="string">serverSystemNICStandardStatus</span> <span class="string">of</span> <span class="string">this</span> <span class="string">conceptual</span> <span class="string">row.</span> <span class="bullet">-</span> <span class="string">网卡健康状态信息</span> <span class="string">Normal代表正常</span></span><br><span class="line">    <span class="attr">indexes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">labelname:</span> <span class="string">inspur</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">gauge</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">version:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">max_repetitions:</span> <span class="number">25</span></span><br><span class="line">  <span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">auth:</span></span><br><span class="line">    <span class="attr">community:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">security_level:</span> <span class="string">authPriv</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">sysadmin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">rootuser</span></span><br><span class="line">    <span class="attr">auth_protocol:</span> <span class="string">MD5</span></span><br><span class="line">    <span class="attr">priv_protocol:</span> <span class="string">DES</span></span><br><span class="line">    <span class="attr">priv_password:</span> <span class="string">rootuser</span></span><br></pre></td></tr></table></figure><h3 id="验证-snmp-exporter"><a href="#验证-snmp-exporter" class="headerlink" title="验证 snmp exporter"></a>验证 snmp exporter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:9116/snmp?module=if_mib,arista_sw&amp;target=192.0.0.8</span><br></pre></td></tr></table></figure><h2 id="prometheus-采集"><a href="#prometheus-采集" class="headerlink" title="prometheus 采集"></a>prometheus 采集</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Inspurserver&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/prometheus/conf.d/inspur_server.yml</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/snmp</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">Inspur</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="number">10.200</span><span class="number">.4</span><span class="number">.64</span><span class="string">:9130</span> </span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;h3cswitch&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">60s</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/prometheus/conf.d/h3c_switch.yml</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/snmp</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">module:</span> [<span class="string">H3C</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="number">10.200</span><span class="number">.4</span><span class="number">.64</span><span class="string">:9131</span></span><br></pre></td></tr></table></figure><p>具体的机器配置文件在： <code>/data/prometheus/conf.d/inspur_server.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;100.200.1.23&#x27;</span>]</span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">&quot;lvs01&quot;</span></span><br><span class="line">    <span class="attr">addr:</span> <span class="string">&quot;100.200.1.23&quot;</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">prod</span></span><br><span class="line">    <span class="attr">dept:</span> <span class="string">hardware</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">&quot;hardware&quot;</span></span><br><span class="line">    <span class="attr">ip:</span> <span class="string">&quot;172.16.1.11&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;hardware&quot;</span></span><br><span class="line">    <span class="attr">hardware:</span> <span class="string">&quot;server&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;100.200.1.24&#x27;</span>]</span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">&quot;lvs02&quot;</span></span><br><span class="line">    <span class="attr">addr:</span> <span class="string">&quot;100.200.1.24&quot;</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">prod</span></span><br><span class="line">    <span class="attr">dept:</span> <span class="string">bi</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">&quot;bi&quot;</span></span><br><span class="line">    <span class="attr">ip:</span> <span class="string">&quot;172.16.1.12&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;hardware&quot;</span></span><br><span class="line">    <span class="attr">hardware:</span> <span class="string">&quot;server&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> snmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 开机自启动配置位置</title>
      <link href="/posts/smvb2h/"/>
      <url>/posts/smvb2h/</url>
      
        <content type="html"><![CDATA[<h2 id="注册表方式"><a href="#注册表方式" class="headerlink" title="注册表方式"></a>注册表方式</h2><h4 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br></pre></td></tr></table></figure><h4 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br></pre></td></tr></table></figure><h4 id="只运行一次"><a href="#只运行一次" class="headerlink" title="只运行一次"></a>只运行一次</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure><blockquote><p>新建字符串值 – 数值名称任意,数值数据为要启动的程序路径,如 C:\Program Files (x86)\WinHotKey\WinHotKey.exe<br>或者命令行创建 <code>reg add &quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run&quot; /f /v &quot;数值名称&quot; /t REG_SZ /d &quot;程序启动路径&quot;</code></p></blockquote><h2 id="文件方式"><a href="#文件方式" class="headerlink" title="文件方式"></a>文件方式</h2><p>开机自启动也会显示在开始菜单的 startup 文件夹里。这里启动的话，是以用户身份启动，如果需要管理员权限的软件会弹窗。</p><h4 id="系统启动文件夹"><a href="#系统启动文件夹" class="headerlink" title="系统启动文件夹"></a>系统启动文件夹</h4><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">ProgramData</span>\<span class="title">Microsoft</span>\<span class="title">Windows</span>\<span class="title">Start</span> <span class="title">Menu</span>\<span class="title">Programs</span>\<span class="title">Startup</span></span></span><br></pre></td></tr></table></figure><h4 id="个人启动文件夹"><a href="#个人启动文件夹" class="headerlink" title="个人启动文件夹"></a>个人启动文件夹</h4><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\你的<span class="title">Windows</span>用户名\<span class="title">AppData</span>\<span class="title">Roaming</span>\<span class="title">Microsoft</span>\<span class="title">Windows</span>\<span class="title">Start</span> <span class="title">Menu</span>\<span class="title">Programs</span>\<span class="title">Startup</span></span></span><br></pre></td></tr></table></figure><blockquote><p>快速进入 startup 文件夹<br><code>win+r</code> 输入 <code>shell:startup</code></p></blockquote><h2 id="服务方式"><a href="#服务方式" class="headerlink" title="服务方式"></a>服务方式</h2><p>待完善</p><h2 id="定时任务方式"><a href="#定时任务方式" class="headerlink" title="定时任务方式"></a>定时任务方式</h2><p>定时任务方式启动有个好处，就是可以以管理员权限运行，不用用户授权，也就是不会 UAC 弹窗。按照如图配置即可。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411191722190.png" alt="image.png|570"><br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411191723758.png" alt="image.png|586"><br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411191723472.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411191724674.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411191724869.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows常见注册表位置</title>
      <link href="/posts/smvadg/"/>
      <url>/posts/smvadg/</url>
      
        <content type="html"><![CDATA[<h2 id="oem-信息"><a href="#oem-信息" class="headerlink" title="oem 信息"></a>oem 信息</h2><h3 id="添加-oem-信息"><a href="#添加-oem-信息" class="headerlink" title="添加 oem 信息"></a>添加 oem 信息</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">copy</span> logo.bmp <span class="variable">%windir%</span>\media\logo.bmp</span><br><span class="line"></span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportURL&quot; /t REG_SZ /d &quot;http://blog.sina.com.cn/iuxt&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Model&quot; /t REG_SZ /d &quot;iuxt&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportHours&quot; /t REG_SZ /d &quot;<span class="number">8</span>:<span class="number">00</span>-<span class="number">22</span>:<span class="number">00</span>&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportPhone&quot; /t REG_SZ /d &quot;<span class="number">17621268822</span>&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Logo&quot; /t REG_SZ /d &quot;C:\Windows\Media\logo.bmp&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Manufacturer&quot; /t REG_SZ /d &quot;张理坤&quot;</span><br></pre></td></tr></table></figure><h3 id="删除-OEM-信息"><a href="#删除-OEM-信息" class="headerlink" title="删除 OEM 信息"></a>删除 OEM 信息</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f</span><br></pre></td></tr></table></figure><h2 id="侧边栏的网盘链接（OneDrive-等）"><a href="#侧边栏的网盘链接（OneDrive-等）" class="headerlink" title="侧边栏的网盘链接（OneDrive 等）"></a>侧边栏的网盘链接（OneDrive 等）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Desktop\NameSpace</span><br></pre></td></tr></table></figure><h2 id="开机自启动注册表配置"><a href="#开机自启动注册表配置" class="headerlink" title="开机自启动注册表配置"></a>开机自启动注册表配置</h2><h4 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br></pre></td></tr></table></figure><h4 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br></pre></td></tr></table></figure><h4 id="只运行一次"><a href="#只运行一次" class="headerlink" title="只运行一次"></a>只运行一次</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure><blockquote><p>新建字符串值 – 数值名称任意,数值数据为要启动的程序路径,如 C:\Program Files (x86)\WinHotKey\WinHotKey.exe<br>或者命令行创建 <code>reg add &quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run&quot; /f /v &quot;数值名称&quot; /t REG_SZ /d &quot;程序启动路径&quot;</code></p></blockquote><h2 id="登录界面不显示用户"><a href="#登录界面不显示用户" class="headerlink" title="登录界面不显示用户"></a>登录界面不显示用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList]</span><br><span class="line">&quot;administrator&quot;=dword:00000000</span><br></pre></td></tr></table></figure><h2 id="IE-主页"><a href="#IE-主页" class="headerlink" title="IE 主页"></a>IE 主页</h2><h3 id="个人主页"><a href="#个人主页" class="headerlink" title="个人主页"></a>个人主页</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main&quot; /v &quot;<span class="built_in">Start</span> Page&quot; /t reg_sz /d http://www.<span class="number">2345</span>.com/?k393991732 /f</span><br></pre></td></tr></table></figure><h3 id="系统主页"><a href="#系统主页" class="headerlink" title="系统主页"></a>系统主页</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKU\.DEFAULT\Software\Microsoft\Internet Explorer\Main&quot; /f /v &quot;<span class="built_in">Start</span> Page&quot; /t REG_SZ /d &quot;http://www.<span class="number">2345</span>.com/?k393991732&quot;</span><br></pre></td></tr></table></figure><h3 id="默认主页"><a href="#默认主页" class="headerlink" title="默认主页"></a>默认主页</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main&quot; /v &quot;Default_Page_URL&quot; /t reg_sz /d http://www.<span class="number">2345</span>.com/?k393991732 /f</span><br></pre></td></tr></table></figure><h2 id="Windows-Defender"><a href="#Windows-Defender" class="headerlink" title="Windows Defender"></a>Windows Defender</h2><p>关闭 Windows Defender</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender&quot; /v &quot;DisableAntiSpyware&quot; /d <span class="number">1</span> /t REG_DWORD /f</span><br></pre></td></tr></table></figure><blockquote><p>这种方法和直接修改组策略是一样的，家庭版不支持组策略可以使用这种方式</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus的瞬时向量(Instant vector)和区间向量(Range vector)</title>
      <link href="/posts/smrno6/"/>
      <url>/posts/smrno6/</url>
      
        <content type="html"><![CDATA[<p>在 Prometheus 的表达式语言中，表达式或子表达式包括以下四种类型之一：</p><ul><li>瞬时向量（Instant vector） ： 一组时间序列，每个时间序列包含单个样本，它们共享相同的时间戳。也就是说，表达式的返回值中只会包含该时间序列中的最新的一个样本值。而相应的这样的表达式称之为瞬时向量表达式。</li><li>区间向量（Range vector） ： 一组时间序列，每个时间序列包含一段时间范围内的样本数据。</li><li>标量（Scalar） ： 一个浮点型的数据值。</li><li>字符串（String） ： 一个简单的字符串值。</li></ul><h2 id="瞬时向量"><a href="#瞬时向量" class="headerlink" title="瞬时向量"></a>瞬时向量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http_requests_total&#123;job=<span class="string">&quot;prometheus&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>比如这样的，取值是一个值</p><h2 id="区间向量"><a href="#区间向量" class="headerlink" title="区间向量"></a>区间向量</h2><p>指的是指定时间段的所有瞬时向量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http_requests_total&#123;job=<span class="string">&quot;prometheus&quot;</span>&#125;[5m]</span><br></pre></td></tr></table></figure><h2 id="PromQL-聚合操作"><a href="#PromQL-聚合操作" class="headerlink" title="PromQL 聚合操作"></a>PromQL 聚合操作</h2><p>例如：sum，min，max，count 等聚合函数，只能作用于瞬时向量上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是错误的，因为count只能作用于瞬时向量，而这个查询本身返回的是区间向量</span></span><br><span class="line">count(http_requests_total&#123;job=<span class="string">&quot;prometheus&quot;</span>&#125;[5m])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的如下</span></span><br><span class="line">count(http_requests_total&#123;job=<span class="string">&quot;prometheus&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速部署单节点kafka</title>
      <link href="/posts/slhl3q/"/>
      <url>/posts/slhl3q/</url>
      
        <content type="html"><![CDATA[<p>如果需要集群部署的文档你可以在站内搜搜，之前写过。</p><p>单节点部署，不考虑高可用性，只求快速搭建出环境，一般都是自己开发或者运维做测试使用。或者业务的测试环境为了节省服务器资源采取的方案。不过我不一样，我们测试环境资源充足，我只是单纯的懒。</p><h2 id="第一步-安装-Docker"><a href="#第一步-安装-Docker" class="headerlink" title="第一步 安装 Docker"></a>第一步 安装 Docker</h2><p>部署是基于 docker 来部署的，所以要先安装 docker，安装 docker 的过程可以看这个文档：<a href="/posts/5e168f7e">快速搭建环境记录</a></p><h2 id="第二步-选择镜像"><a href="#第二步-选择镜像" class="headerlink" title="第二步 选择镜像"></a>第二步 选择镜像</h2><p>打开 docker 镜像仓库 <code>https://hub.docker.com</code> 找了找， 按照下载量排序，有以下几种，我选择 bitnami 打包的 kafka</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410171116643.png" alt="image.png|1048"></p><h2 id="第三步-编写启动脚本"><a href="#第三步-编写启动脚本" class="headerlink" title="第三步 编写启动脚本"></a>第三步 编写启动脚本</h2><p>我个人不喜欢 docker-compose ，总觉得这个东西不伦不类的，论灵活不如 bash 脚本，论专业不如 Kubernetes 甚至 Docker Swarm，还不如自己写脚本来做。</p><p>需要创建一个 docker network ，默认的 bridge 网络不能通过 dns 名字找到对应的容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> kafka-data</span><br><span class="line">sudo <span class="built_in">chown</span> -R 1001:1001 kafka-data</span><br><span class="line"></span><br><span class="line">sudo docker network create ops</span><br><span class="line"></span><br><span class="line">sudo docker run -d --name kafka-server --hostname kafka-server \</span><br><span class="line">    --network ops \</span><br><span class="line">    -e KAFKA_CFG_NODE_ID=0 \</span><br><span class="line">    -e KAFKA_CFG_PROCESS_ROLES=controller,broker \</span><br><span class="line">    -e KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 \</span><br><span class="line">    -e KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT \</span><br><span class="line">    -e KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-server:9093 \</span><br><span class="line">    -e KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER \</span><br><span class="line">    -e KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=<span class="literal">true</span> \</span><br><span class="line">    -v ./kafka-data:/bitnami/kafka \</span><br><span class="line">    -p 9092:9092 \</span><br><span class="line">    -p 9093:9093 \</span><br><span class="line">    bitnami/kafka:3.8.0</span><br></pre></td></tr></table></figure><p>其中：</p><p>kafka 的启动用户 id 是 1001，所以需要给 kafka-data 目录授权，不然可能会不能写入挂载的目录。</p><h2 id="第四步-使用"><a href="#第四步-使用" class="headerlink" title="第四步 使用"></a>第四步 使用</h2><h3 id="控制台生产"><a href="#控制台生产" class="headerlink" title="控制台生产"></a>控制台生产</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --network ops --<span class="built_in">rm</span> bitnami/kafka:3.8.0 kafka-console-producer.sh --producer.config /opt/bitnami/kafka/config/producer.properties --bootstrap-server kafka-server:9092 --topic iuxt_test</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410171408280.png" alt="image.png"></p><h3 id="控制台消费"><a href="#控制台消费" class="headerlink" title="控制台消费"></a>控制台消费</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --network ops --<span class="built_in">rm</span> bitnami/kafka:3.8.0 kafka-console-consumer.sh --consumer.config /opt/bitnami/kafka/config/consumer.properties --bootstrap-server kafka-server:9092 --topic iuxt_test --from-beginning</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410171409368.png" alt="image.png"></p><p>其他命令查看 <a href="/posts/12ab226e">Kafka常用操作记录</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yaml多行文本的写法和区别</title>
      <link href="/posts/sldz99/"/>
      <url>/posts/sldz99/</url>
      
        <content type="html"><![CDATA[<p>直接看效果（<code>pip install pyyaml</code>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line">yaml_data = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">example1: |</span></span><br><span class="line"><span class="string">  This is line one.</span></span><br><span class="line"><span class="string">  This is line two.</span></span><br><span class="line"><span class="string">example2: |-</span></span><br><span class="line"><span class="string">  This is line one.</span></span><br><span class="line"><span class="string">  This is line two.</span></span><br><span class="line"><span class="string">example3: &gt;-</span></span><br><span class="line"><span class="string">  This is line one.</span></span><br><span class="line"><span class="string">  This is line two.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 YAML 数据解析为 Python 对象</span></span><br><span class="line">data = yaml.safe_load(yaml_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问特定字段</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;example1: <span class="subst">&#123;data[<span class="string">&#x27;example1&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;example2: <span class="subst">&#123;data[<span class="string">&#x27;example2&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;example3: <span class="subst">&#123;data[<span class="string">&#x27;example3&#x27;</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">example1: This is line one.</span><br><span class="line">This is line two.</span><br><span class="line"></span><br><span class="line">example2: This is line one.</span><br><span class="line">This is line two.</span><br><span class="line">example3: This is line one. This is line two.</span><br></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>在 YAML 中，<code>|</code>、<code>|-</code> 和 <code>&gt;-</code> 都用于定义多行字符串，但它们的处理方式不同：</p><ol><li><p><code>|</code></p><ul><li>保留换行符。</li><li>生成的字符串在每行的末尾保留换行符。</li></ul></li><li><p><code>|-</code></p><ul><li>类似于 <code>|</code>，但去掉最后的换行符。</li><li>结果中的最后一行不会有换行符。</li></ul></li><li><p><code>&gt;-</code></p><ul><li>将换行符转换为空格。</li><li>结果中的所有行会被连接成一行，中间用空格分隔，最后一行也没有换行符。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 接入 LDAP 认证</title>
      <link href="/posts/sl8dop/"/>
      <url>/posts/sl8dop/</url>
      
        <content type="html"><![CDATA[<p><code>Grafana</code> 是一个非常好用的展示数据软件，我一直以为可以直接在设置里增加 ldap 配置，没想到啊没想到 必须要修改配置文件才能接入到 <code>LDAP</code>，还是记录一下吧，免得下次部署浪费时间。</p><p>我是在 <code>Kubernetes</code> 中部署的，数据存储用的是 <code>MySQL</code>，所以 <code>Grafana</code> 本身可以当作一个无状态服务来看待。也可以不做数据持久化。</p><h2 id="先创建-ldap-配置文件"><a href="#先创建-ldap-配置文件" class="headerlink" title="先创建 ldap 配置文件"></a>先创建 ldap 配置文件</h2><p>这里包括 ldap 数据的映射关系，可以自己尝试修改调整。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana-ldap-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">ldap.toml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [[servers]]</span></span><br><span class="line"><span class="string">    host = &quot;10.0.0.11&quot;</span></span><br><span class="line"><span class="string">    port = 389</span></span><br><span class="line"><span class="string">    use_ssl = false</span></span><br><span class="line"><span class="string">    start_tls = false</span></span><br><span class="line"><span class="string">    ssl_skip_verify = false</span></span><br><span class="line"><span class="string">    bind_dn = &quot;cn=admin,dc=i,dc=com&quot;</span></span><br><span class="line"><span class="string">    bind_password = &quot;password&quot;</span></span><br><span class="line"><span class="string">    search_filter = &quot;(uid=%s)&quot;</span></span><br><span class="line"><span class="string">    search_base_dns = [&quot;dc=i,dc=com&quot;]</span></span><br><span class="line"><span class="string">    [servers.attributes]</span></span><br><span class="line"><span class="string">    member_of = &quot;memberOf&quot;</span></span><br><span class="line"><span class="string">    email =  &quot;uid&quot;</span></span><br><span class="line"><span class="string">    name = &quot;cn&quot;</span></span><br><span class="line"><span class="string">    username = &quot;uid&quot;</span></span><br></pre></td></tr></table></figure><h2 id="创建-deployment-和-service"><a href="#创建-deployment-和-service" class="headerlink" title="创建 deployment 和 service"></a>创建 deployment 和 service</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">472</span></span><br><span class="line">        <span class="attr">supplementalGroups:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ldap-config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">grafana-ldap-config</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/yaml/images:grafana-11.2.2-ubuntu</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_BASIC_ENABLED</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_ANONYMOUS_ENABLED</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;false&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_ANONYMOUS_ORG_ROLE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">Admin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DASHBOARDS_JSON_ENABLED</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_SECURITY_ADMIN_USER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">admin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_SECURITY_ADMIN_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">admin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_TYPE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">mysql</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_HOST</span></span><br><span class="line">              <span class="attr">value:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.65</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_USER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">root</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">password</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_DATABASE_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">grafana</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_LDAP_ENABLED</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_LDAP_ALLOW_SIGN_UP</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_LDAP_CONFIG_FILE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">/etc/grafana/ldap.toml</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">http-grafana</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/robots.txt</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">250m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">750Mi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ldap-config</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/grafana/ldap.toml</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">ldap.toml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># type: NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="string">http-grafana</span></span><br><span class="line">      <span class="comment"># nodePort: 30030</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br></pre></td></tr></table></figure><h2 id="创建-ingress"><a href="#创建-ingress" class="headerlink" title="创建 ingress"></a>创建 ingress</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="comment"># kubernetes.io/ingress.class: &quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">internet</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">grafana.i.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">grafana.i.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><h2 id="验证-LADP-字段配置"><a href="#验证-LADP-字段配置" class="headerlink" title="验证 LADP 字段配置"></a>验证 LADP 字段配置</h2><p>配置好以后，使用默认管理员账户登录： 默认账号密码：<code>admin/admin</code> 登录以后，在 <code>管理</code> – <code>身份验证</code> – <code>LDAP</code> 里验证字段的映射情况。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410121607340.png" alt="image.png"></p><h2 id="LADP-用户权限调整"><a href="#LADP-用户权限调整" class="headerlink" title="LADP 用户权限调整"></a>LADP 用户权限调整</h2><p>默认情况下，权限是 viewer，只可以查看，不能编辑，系统后台也不能修改权限。如图：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410121551118.png" alt="image.png"></p><p>需要到 ldap 来配置权限并同步到 Grafana，我们只希望 ldap 做个轻量的用户数据库，不希望赋予 ldap 太多的功能，这里我们直接修改数据库来修改权限。</p><ol><li>先到 user 表查询用户 id<br> <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410121559413.png" alt="image.png"></li><li>再到 org_user 表中修改 role 字段为 Admin 即可赋予该用户 Admin 权限<br> <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410121600773.png" alt="image.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenLDAP </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Prometheus对nacos集群进行监控</title>
      <link href="/posts/skma0p/"/>
      <url>/posts/skma0p/</url>
      
        <content type="html"><![CDATA[<p>参考官方文档：<a href="https://nacos.io/zh-cn/docs/monitor-guide.html">https://nacos.io/zh-cn/docs/monitor-guide.html</a></p><p>暴露 <code>metrics</code> 数据 需要修改配置文件，<code>spring boot</code> 支持通过环境变量来修改系统配置，在 <code>Kubernets</code> 环境下，可以通过增加环境变量的形式来暴露 <code>metrics</code> 数据。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-server:v2.1.0</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">            <span class="comment"># 增加这个环境变量</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">management.endpoints.web.exposure.include</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>增加环境变量后，nacos 服务会重启，重启后进入 Pod，执行命令查看是否有 metrics 数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:8848/nacos/actuator/prometheus</span><br></pre></td></tr></table></figure><h2 id="数据接入-Prometheus"><a href="#数据接入-Prometheus" class="headerlink" title="数据接入 Prometheus"></a>数据接入 Prometheus</h2><p>自动接入或手动接入按照需求选择一个。</p><h3 id="自动接入"><a href="#自动接入" class="headerlink" title="自动接入"></a>自动接入</h3><p>自动接入需要使用到 <code>Prometheus</code> 的自动发现机制，利用 <code>servcie discovery endpoint</code> 来接入，<code>Prometheus</code> 配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">   <span class="attr">scrape_interval:</span>     <span class="string">30s</span></span><br><span class="line">   <span class="attr">evaluation_interval:</span> <span class="string">30s</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">scrape_configs:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;service_endpoints_metrics&#x27;</span></span><br><span class="line">     <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">     <span class="attr">relabel_configs:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_scrape</span>]</span><br><span class="line">       <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">       <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_scheme</span>]</span><br><span class="line">       <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">       <span class="attr">target_label:</span> <span class="string">__scheme__</span></span><br><span class="line">       <span class="attr">regex:</span> <span class="string">(https?)</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_annotation_prometheus_io_path</span>]</span><br><span class="line">       <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">       <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">       <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>, <span class="string">__meta_kubernetes_service_annotation_prometheus_io_port</span>]</span><br><span class="line">       <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">       <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">       <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">       <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">     <span class="comment"># 额外增加的标签</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_namespace</span>]</span><br><span class="line">       <span class="attr">target_label:</span> <span class="string">namespace</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_service_name</span>]</span><br><span class="line">       <span class="attr">target_label:</span> <span class="string">service_name</span></span><br></pre></td></tr></table></figure><p>修改 nacos 的 service：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="comment"># 增加如下注解，即可被Prometheus自动发现</span></span><br><span class="line">    <span class="attr">prometheus.io/path:</span> <span class="string">/nacos/actuator/prometheus</span></span><br><span class="line">    <span class="attr">prometheus.io/port:</span> <span class="string">&quot;8848&quot;</span></span><br><span class="line">    <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">    <span class="comment">## 兼容1.4.x版本的选举端口</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br></pre></td></tr></table></figure><p>查看 Prometheus 的 targets：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409301700141.png" alt="image.png"></p><h3 id="手动接入"><a href="#手动接入" class="headerlink" title="手动接入"></a>手动接入</h3><p>如果由于种种原因不能自动发现，可以手动配置的方式来接入到 <code>Prometheus</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">honor_timestamps:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">&#x27;/nacos/actuator/prometheus&#x27;</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">follow_redirects:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;ip1&#125;:8848&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;ip2&#125;:8848&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;ip3&#125;:8848&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Nacos-metrics-含义"><a href="#Nacos-metrics-含义" class="headerlink" title="Nacos metrics 含义"></a>Nacos metrics 含义</h2><h3 id="jvm-metrics"><a href="#jvm-metrics" class="headerlink" title="jvm metrics"></a>jvm metrics</h3><table><thead><tr><th>指标</th><th>含义</th></tr></thead><tbody><tr><td>system_cpu_usage</td><td>CPU 使用率</td></tr><tr><td>system_load_average_1m</td><td>load</td></tr><tr><td>jvm_memory_used_bytes</td><td>内存使用字节，包含各种内存区</td></tr><tr><td>jvm_memory_max_bytes</td><td>内存最大字节，包含各种内存区</td></tr><tr><td>jvm_gc_pause_seconds_count</td><td>gc 次数，包含各种 gc</td></tr><tr><td>jvm_gc_pause_seconds_sum</td><td>gc 耗时，包含各种 gc</td></tr><tr><td>jvm_threads_daemon</td><td>线程数</td></tr></tbody></table><h3 id="Nacos-监控指标"><a href="#Nacos-监控指标" class="headerlink" title="Nacos 监控指标"></a>Nacos 监控指标</h3><table><thead><tr><th>指标</th><th>含义</th></tr></thead><tbody><tr><td>http_server_requests_seconds_count</td><td>http 请求次数，包括多种 (url,方法,code)</td></tr><tr><td>http_server_requests_seconds_sum</td><td>http 请求总耗时，包括多种 (url,方法,code)</td></tr><tr><td>nacos_timer_seconds_sum</td><td>Nacos config 水平通知耗时</td></tr><tr><td>nacos_timer_seconds_count</td><td>Nacos config 水平通知次数</td></tr><tr><td>nacos_monitor{name&#x3D;’longPolling’}</td><td>Nacos config 长连接数</td></tr><tr><td>nacos_monitor{name&#x3D;’configCount’}</td><td>Nacos config 配置个数</td></tr><tr><td>nacos_monitor{name&#x3D;’dumpTask’}</td><td>Nacos config 配置落盘任务堆积数</td></tr><tr><td>nacos_monitor{name&#x3D;’notifyTask’}</td><td>Nacos config 配置水平通知任务堆积数</td></tr><tr><td>nacos_monitor{name&#x3D;’getConfig’}</td><td>Nacos config 读配置统计数</td></tr><tr><td>nacos_monitor{name&#x3D;’publish’}</td><td>Nacos config 写配置统计数</td></tr><tr><td>nacos_monitor{name&#x3D;’ipCount’}</td><td>Nacos naming ip 个数</td></tr><tr><td>nacos_monitor{name&#x3D;’domCount’}</td><td>Nacos naming 域名个数 (1.x 版本)</td></tr><tr><td>nacos_monitor{name&#x3D;’serviceCount’}</td><td>Nacos naming 域名个数 (2.x 版本)</td></tr><tr><td>nacos_monitor{name&#x3D;’failedPush’}</td><td>Nacos naming 推送失败数</td></tr><tr><td>nacos_monitor{name&#x3D;’avgPushCost’}</td><td>Nacos naming 平均推送耗时</td></tr><tr><td>nacos_monitor{name&#x3D;’leaderStatus’}</td><td>Nacos naming 角色状态</td></tr><tr><td>nacos_monitor{name&#x3D;’maxPushCost’}</td><td>Nacos naming 最大推送耗时</td></tr><tr><td>nacos_monitor{name&#x3D;’mysqlhealthCheck’}</td><td>Nacos naming mysql 健康检查次数</td></tr><tr><td>nacos_monitor{name&#x3D;’httpHealthCheck’}</td><td>Nacos naming http 健康检查次数</td></tr><tr><td>nacos_monitor{name&#x3D;’tcpHealthCheck’}</td><td>Nacos naming tcp 健康检查次数</td></tr><tr><td>nacos_monitor{module&#x3D;”naming”,name&#x3D;”serviceCount”,}</td><td>Nacos 注册的服务数量</td></tr></tbody></table><h3 id="nacos-异常指标"><a href="#nacos-异常指标" class="headerlink" title="nacos 异常指标"></a>nacos 异常指标</h3><table><thead><tr><th>指标</th><th>含义</th></tr></thead><tbody><tr><td>nacos_exception_total{name&#x3D;’db’}</td><td>数据库异常</td></tr><tr><td>nacos_exception_total{name&#x3D;’configNotify’}</td><td>Nacos config 水平通知失败</td></tr><tr><td>nacos_exception_total{name&#x3D;’unhealth’}</td><td>Nacos config server 之间健康检查异常</td></tr><tr><td>nacos_exception_total{name&#x3D;’disk’}</td><td>Nacos naming 写磁盘异常</td></tr><tr><td>nacos_exception_total{name&#x3D;’leaderSendBeatFailed’}</td><td>Nacos naming leader 发送心跳异常</td></tr><tr><td>nacos_exception_total{name&#x3D;’illegalArgument’}</td><td>请求参数不合法</td></tr><tr><td>nacos_exception_total{name&#x3D;’nacos’}</td><td>Nacos 请求响应内部错误异常（读写失败，没权限，参数错误）</td></tr></tbody></table><h3 id="client-metrics"><a href="#client-metrics" class="headerlink" title="client metrics"></a>client metrics</h3><table><thead><tr><th>指标</th><th>含义</th></tr></thead><tbody><tr><td>nacos_monitor{name&#x3D;’subServiceCount’}</td><td>订阅的服务数</td></tr><tr><td>nacos_monitor{name&#x3D;’pubServiceCount’}</td><td>发布的服务数</td></tr><tr><td>nacos_monitor{name&#x3D;’configListenSize’}</td><td>监听的配置数</td></tr><tr><td>nacos_client_request_seconds_count</td><td>请求的次数，包括多种 (url,方法,code)</td></tr><tr><td>nacos_client_request_seconds_sum</td><td>请求的总耗时，包括多种 (url,方法,code)</td></tr></tbody></table><h2 id="告警规则制定"><a href="#告警规则制定" class="headerlink" title="告警规则制定"></a>告警规则制定</h2><p>针对异常指标进行告警，修改 Prometheus alert 配置文件。告警规则待验证。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nocas告警</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;nocas服务注册数量异常&quot;</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">nacos_monitor&#123;module=&quot;naming&quot;,name=&quot;serviceCount&quot;,&#125;</span> <span class="string">&lt;</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> nocas当前注册数量:<span class="template-variable">&#123;&#123;$value&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;服务注册数量异常&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos naming leader发送心跳异常&quot;</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">increase(nacos_exception_total&#123;name=&#x27;leaderSendBeatFailed&#x27;&#125;[1m])</span> <span class="type">!=0</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 发送心跳异常数量为:<span class="template-variable">&#123;&#123;$value&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos naming leader发送心跳异常&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos config长连接数大于5000&quot;</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(irate(nacos_monitor&#123;name=&#x27;longPolling&#x27;&#125;[5m]))</span> <span class="string">&gt;</span> <span class="number">5000</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 发送心跳异常数量为:<span class="template-variable">&#123;&#123;$value&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos config长连接数大于5000&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos config server之间健康检查异常&quot;</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(rate(nacos_exception_total&#123;name=&#x27;unhealth&#x27;&#125;[1m]))</span>  <span class="string">&gt;</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> config unhealth exception alert&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos config server之间健康检查异常&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos naming推送失败数大于1&quot;</span></span><br><span class="line">    <span class="attr">expr :</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(irate(nacos_monitor&#123;name=&#x27;failedPush&#x27;&#125;[5m]))</span> <span class="string">&gt;</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 推送失败数 <span class="template-variable">&#123;&#123;$value&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos naming推送失败数大于1&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos naming写磁盘异常&quot;</span></span><br><span class="line">    <span class="attr">expr :</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(rate(nacos_exception_total&#123;name=&#x27;disk&#x27;&#125;[1m]))</span> <span class="string">&gt;</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 写磁盘异常&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos naming写磁盘异常&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos config水平通知失败&quot;</span></span><br><span class="line">    <span class="attr">expr :</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(rate(nacos_exception_total&#123;name=&#x27;configNotify&#x27;&#125;[1m]))</span> <span class="string">&gt;</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 水平通知失败&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos config水平通知失败&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Nacos请求响应内部错误异常(读写失败,没权限,参数错误)&quot;</span></span><br><span class="line">    <span class="attr">expr :</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(project,instance,dept)</span> <span class="string">(rate(nacos_exception_total&#123;name=&#x27;nacos&#x27;&#125;[1m]))</span> <span class="string">&gt;</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;项目:<span class="template-variable">&#123;&#123;$labels.project&#125;&#125;</span> 读写失败&quot;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;Nacos请求响应内部错误异常(读写失败,没权限,参数错误)&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nacos </tag>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes下收集ingress日志到Elasticsearch</title>
      <link href="/posts/skk1ln/"/>
      <url>/posts/skk1ln/</url>
      
        <content type="html"><![CDATA[<p>本文 ingress 用的是 Nginx-ingress，普通的 Nginx 原理是一样的。容器运行时是 Docker。</p><h2 id="ingress-配置"><a href="#ingress-配置" class="headerlink" title="ingress 配置"></a>ingress 配置</h2><p>ingress 需要调整一下日志格式，json 日志更有利于分析与处理。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="comment"># annotation: nginx.ingress.kubernetes.io/client-body-buffer-size: 1M</span></span><br><span class="line">  <span class="attr">log-format-upstream:</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;: &quot;$time_iso8601&quot;,&quot;server_addr&quot;:&quot;$server_addr&quot;,&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&quot;scheme&quot;:&quot;$scheme&quot;,&quot;request_method&quot;:&quot;$request_method&quot;,&quot;request_uri&quot;: &quot;$request_uri&quot;,&quot;request_length&quot;: &quot;$request_length&quot;,&quot;uri&quot;: &quot;$uri&quot;,&quot;request_time&quot;:$request_time,&quot;body_bytes_sent&quot;:$body_bytes_sent,&quot;bytes_sent&quot;:$bytes_sent,&quot;status&quot;:&quot;$status&quot;,&quot;upstream_host&quot;:&quot;$upstream_addr&quot;,&quot;domain&quot;:&quot;$host&quot;,&quot;http_referer&quot;:&quot;$http_referer&quot;,&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&quot;http_app_id&quot;:&quot;$http_app_id&quot;,&quot;x_forwarded&quot;:&quot;$http_x_forwarded_for&quot;,&quot;up_r_time&quot;:&quot;$upstream_response_time&quot;,&quot;up_status&quot;:&quot;$upstream_status&quot;,&quot;listen_port&quot;:&quot;$server_port&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="filebeat-配置"><a href="#filebeat-配置" class="headerlink" title="filebeat 配置"></a>filebeat 配置</h2><p>在 Linux 中，一切皆文件，那么 Pod 的控制台日志也是存储在文件里的，如果容器运行时用的是 Docker，默认使用的是 json 日志文件格式 <code>&quot;log-driver&quot;: &quot;json-file&quot;</code> 日志在主机上的 <code>/var/lib/docker/containers/xx/xx-json.log</code>, 那么我们可以把这个目录挂载到 filebeat 容器中即可使用 filebeat 来搜集日志，但是这样不方便分辨是哪个容器的日志，Kubernetes 给我们创建了一个目录 <code>/var/log/pods</code> 这里文件目录都是以固定格式来显示的，可以根据文件名来分析是哪个 namespace 的哪个 pod 的日志了。还有个目录是 <code>/var/log/containers/</code> 这个目录里面的文件是链接到 <code>/var/log/pods/</code> 里面的日志文件。所以收集日志可以直接从 <code>/var/log/containers</code> 来收集。所以 filebeat 需要只读访问 3 个目录：</p><ol><li><code>/var/lib/docker/containers/</code></li><li><code>/var/log/containers/</code></li><li><code>/var/log/pods/</code></li></ol><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409291142969.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409291150198.png" alt="image.png"></p><p>首先在 Kubernetes 环境下，我们认为 Pod 是并不固定的，可能会漂移到任意的节点，那么收集日志需要每台节点上都部署 filebeat 来搜集，那么使用 daemonset 是最合适的。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>] <span class="comment"># &quot;&quot; indicates the core API group</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">filebeat.yml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    ###################### Filebeat Configuration Example  #########################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">filebeat.inputs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">        <span class="attr">symlinks:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">json.keys_under_root:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">json.overwrite_keys:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">json.add_error_key:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">tail_files:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">/var/log/containers/ingress-nginx-controller-*.log</span></span><br><span class="line">        <span class="attr">processors:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">decode_json_fields:</span></span><br><span class="line">              <span class="attr">fields:</span> [<span class="string">&#x27;log&#x27;</span>] <span class="comment"># 这里针对的是docker转换后的json日志，原始日志在log字段内。</span></span><br><span class="line">              <span class="attr">target:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">              <span class="attr">overwrite_keys:</span> <span class="literal">false</span></span><br><span class="line">              <span class="attr">process_array:</span> <span class="literal">false</span></span><br><span class="line">              <span class="attr">max_depth:</span> <span class="number">1</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">drop_event:</span></span><br><span class="line">              <span class="attr">when:</span></span><br><span class="line">                <span class="attr">or:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                      <span class="attr">http_user_agent:</span> <span class="string">&#x27;Go-http-client&#x27;</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                      <span class="attr">request_uri:</span> <span class="string">&#x27;/actuator/info&#x27;</span></span><br><span class="line">        <span class="attr">fields:</span></span><br><span class="line">          <span class="attr">log_topic:</span> <span class="string">&quot;ingress-k8s&quot;</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">&quot;ingress&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ============================= Filebeat modules ===============================</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">filebeat.config.modules:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">      <span class="attr">reload.enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#==================== Elasticsearch template setting ==========================</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">setup.template.settings:</span></span><br><span class="line">      <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#============================== Kibana =====================================</span></span><br><span class="line">    <span class="comment"># Uncomment and add the necessary Kibana configuration if needed</span></span><br><span class="line">    <span class="comment"># setup.kibana:</span></span><br><span class="line">    <span class="comment">#   host: &quot;http://your-kibana-host:5601&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">output.kafka:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">hosts:</span> [<span class="string">&quot;10.0.0.3:9092&quot;</span>, <span class="string">&quot;10.0.0.4:9092&quot;</span>, <span class="string">&quot;10.0.0.5:9092&quot;</span>]</span><br><span class="line">      <span class="attr">topic:</span> <span class="string">&#x27;<span class="template-variable">%&#123;[fields.log_topic]&#125;</span>&#x27;</span></span><br><span class="line">      <span class="attr">partition.round_robin:</span></span><br><span class="line">        <span class="attr">reachable_only:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">required_acks:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">compression:</span> <span class="string">none</span></span><br><span class="line">      <span class="attr">max_message_bytes:</span> <span class="number">100000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#================================ Processors =====================================</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">processors:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">add_host_metadata:</span> <span class="string">~</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">filebeat-config</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlibdockercontainers</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/opt/docker/containers</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/var/log</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/var/lib/filebeat-data</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">DirectoryOrCreate</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">filebeat</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/yaml/images:filebeat-7.3.2</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-c&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/filebeat.yml</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-e&#x27;</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">300m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">200Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/filebeat.yml</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">filebeat.yml</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/usr/share/filebeat/data</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlibdockercontainers</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/opt/docker/containers</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/log</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">filebeat</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里的 filebeat 把收集到的日志写入到 Kafka 集群中。如果容器运行时是 containerd，需要做相应的修改。</p><h2 id="logstash-配置"><a href="#logstash-配置" class="headerlink" title="logstash 配置"></a>logstash 配置</h2><p>logstash 消费 kafka 数据，进行处理后 写入到 Elasticsearch</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logstash-ingress-logs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">logstash-ingress-logs</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">logstash-ingress-logs</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">logstash:7.5.1</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">logstash</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/usr/share/logstash/config/logstash.yml</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">subPath:</span> <span class="string">logstash.yml</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/usr/share/logstash/pipeline/logstash.conf</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">subPath:</span> <span class="string">logstash.conf</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/usr/share/logstash/config/jvm.options</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">subPath:</span> <span class="string">jvm.options</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logstash-ingress-logs-conf</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">jvm.options:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    -Xms2g</span></span><br><span class="line"><span class="string">    -Xmx3g</span></span><br><span class="line"><span class="string">    -XX:+UseConcMarkSweepGC</span></span><br><span class="line"><span class="string">    -XX:CMSInitiatingOccupancyFraction=75</span></span><br><span class="line"><span class="string">    -XX:+UseCMSInitiatingOccupancyOnly</span></span><br><span class="line"><span class="string">    -Djava.awt.headless=true</span></span><br><span class="line"><span class="string">    -Dfile.encoding=UTF-8</span></span><br><span class="line"><span class="string">    -Djruby.compile.invokedynamic=true</span></span><br><span class="line"><span class="string">    -Djruby.jit.threshold=0</span></span><br><span class="line"><span class="string">    -Djruby.regexp.interruptible=true</span></span><br><span class="line"><span class="string">    -XX:+HeapDumpOnOutOfMemoryError</span></span><br><span class="line"><span class="string">    -Djava.security.egd=file:/dev/urandom</span></span><br><span class="line"><span class="string"></span>  <span class="attr">logstash.yml:</span> <span class="string">&#x27;config.reload.automatic: true&#x27;</span></span><br><span class="line">  <span class="attr">logstash.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    input &#123;</span></span><br><span class="line"><span class="string">      kafka &#123;</span></span><br><span class="line"><span class="string">        bootstrap_servers =&gt; &quot;10.0.0.3:9092,10.0.0.4:9092,10.0.0.5:9092&quot;</span></span><br><span class="line"><span class="string">        topics =&gt; [&quot;ingress-k8s&quot;]</span></span><br><span class="line"><span class="string">        codec =&gt; &quot;json&quot;</span></span><br><span class="line"><span class="string">        consumer_threads =&gt; 3</span></span><br><span class="line"><span class="string">        group_id =&gt; &quot;k8s_group&quot;</span></span><br><span class="line"><span class="string">        decorate_events =&gt; true</span></span><br><span class="line"><span class="string">        type =&gt; &quot;logstash_mixins&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">filter&#123;</span></span><br><span class="line">        <span class="string">mutate&#123;</span></span><br><span class="line">            <span class="string">rename</span> <span class="string">=&gt;</span> [<span class="string">&quot;[host][name]&quot;</span>, <span class="string">&quot;hostname&quot;</span>]</span><br><span class="line">            <span class="string">remove_field</span> <span class="string">=&gt;</span> [<span class="string">&quot;ecs&quot;</span>,<span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;host&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;log&quot;</span>]</span><br><span class="line">            <span class="string">convert</span> <span class="string">=&gt;</span> &#123;</span><br><span class="line">              <span class="string">&quot;status&quot;</span> <span class="string">=&gt;</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">output</span> &#123;</span><br><span class="line">      <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;logstash_mixins&quot;</span> &#123;</span><br><span class="line">          <span class="string">elasticsearch</span> &#123;</span><br><span class="line">              <span class="string">action</span>   <span class="string">=&gt;</span> <span class="string">&quot;index&quot;</span></span><br><span class="line">              <span class="string">hosts</span>    <span class="string">=&gt;</span> [<span class="string">&quot;http://10.0.0.13:9200&quot;</span>,<span class="string">&quot;http://10.0.0.14:9200&quot;</span>,<span class="string">&quot;http://10.0.0.15:9200&quot;</span>]</span><br><span class="line">              <span class="string">index</span>    <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;[fields][type]&#125;</span>-<span class="template-variable">%&#123;+YYYY.MM.dd&#125;</span>&quot;</span></span><br><span class="line">              <span class="string">user</span>     <span class="string">=&gt;</span> <span class="string">&quot;elastic&quot;</span></span><br><span class="line">              <span class="string">password</span> <span class="string">=&gt;</span> <span class="string">&quot;elastic的密码&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写入到 Elasticsearch 后，在 Elasticsearch 就可以看到对应的索引了。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> Kafka </tag>
            
            <tag> filebeat </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana中自定义Legend的名字和自定义value的显示</title>
      <link href="/posts/skf07c/"/>
      <url>/posts/skf07c/</url>
      
        <content type="html"><![CDATA[<h2 id="针对-value-的值进行修改解释"><a href="#针对-value-的值进行修改解释" class="headerlink" title="针对 value 的值进行修改解释"></a>针对 value 的值进行修改解释</h2><p>举个例子：使用 <code>snmp_exporter</code> 对防火墙进行监控，端口状态监控值为 <code>1</code> 或 <code>2</code>（1 是启用，2 是未启用）， 在 Prometheus 中的原始数据是：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409261819318.png" alt="image.png|841"></p><p>在 <code>Grafana</code> 中显示效果为：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409261942989.png" alt="image.png"></p><p>其中：<br><code>Value mappings</code> 控制数值对应的显示文字。<br><code>Thresholds</code> 控制数值对应的显示颜色。</p><h2 id="针对-Legend-修改描述文字"><a href="#针对-Legend-修改描述文字" class="headerlink" title="针对 Legend 修改描述文字"></a>针对 Legend 修改描述文字</h2><p><code>Legend</code> 这里配置的是 <code>&#123;&#123;ifName&#125;&#125;</code> 显示出来就是类似 <code>ge0/2</code> 等，也就是 <code>Prometheus</code> 里原始数据的标签名。</p><p>如果我想根据这个名字来指定一个对应关系来显示，比如领导不知道 <code>ge0/2</code> 是什么意思（开玩笑的，没找到合适的例子），可以将 <code>ge0/2</code> 转换为：<code>第一排第二个网口</code>，可以这么配置：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409261958842.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx Ingress 暴露没有定义Host的ingress的Metrics数据</title>
      <link href="/posts/sk5u8v/"/>
      <url>/posts/sk5u8v/</url>
      
        <content type="html"><![CDATA[<h2 id="指定默认的-ingress-后端"><a href="#指定默认的-ingress-后端" class="headerlink" title="指定默认的 ingress 后端"></a>指定默认的 ingress 后端</h2><p>名字有点绕口，假如说之前有个服务是通过 <code>ip:port</code> 来访问 nginx(就是 default server)，然后转发到后端服务的，那么转换成 ingress 后，不能指定 host，不然会匹配不到规则。ingress 就不能配置 host，创建出来的 ingress 资源就是这样的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">g.example.com</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">server1</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">5003</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/sdk</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">server2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">8665</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/tsp</span></span><br></pre></td></tr></table></figure><p>创建出来的 ingress 资源显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_233_33_centos new]<span class="comment"># kubectl get ingress</span></span><br><span class="line">NAME                               HOSTS   ADDRESS        PORTS   AGE</span><br><span class="line">g.example.com                      *       10.13.255.17   80      4h40m</span><br></pre></td></tr></table></figure><h2 id="metrics-监控指标问题"><a href="#metrics-监控指标问题" class="headerlink" title="metrics 监控指标问题"></a>metrics 监控指标问题</h2><p>因为上面我们创建了一个 ingress，但是没有指定 host，在 ingress-nginx 中，没有 host 的 ingress 的 metrics 指标是不收集的，代码在此：<a href="https://github.com/kubernetes/ingress-nginx/blob/d82585917c845e598a2cd5d2c4291ce891b5e5b4/internal/ingress/metric/collectors/socket.go#L233-L235">https://github.com/kubernetes/ingress-nginx/blob/d82585917c845e598a2cd5d2c4291ce891b5e5b4/internal/ingress/metric/collectors/socket.go#L233-L235</a></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409231515944.png" alt="image.png|980"></p><p>GitHub 上有很多对应的 issues，比如：<a href="https://github.com/kubernetes/ingress-nginx/issues/5755">https://github.com/kubernetes/ingress-nginx/issues/5755</a> 和 <a href="https://github.com/kubernetes/ingress-nginx/issues/3713">https://github.com/kubernetes/ingress-nginx/issues/3713</a><br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409231511781.png" alt="image.png|738"></p><p>这里有个修复链接，<code>https://github.com/kubernetes/ingress-nginx/pull/4139</code> 理论上在这个时间之后的版本就已经修复了，需要添加启动参数：<code>--metrics-per-host=false</code>， yml 文件如下（部分内容精简）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">k8s.gcr.io/ingress-nginx/controller:v0.35.0@sha256:fc4979d8b8443a831c9789b5155cded454cb7de737a8b727bc2ba0106d2eae8b</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--election-id=ingress-controller-leader</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ingress-class=nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook=:8443</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook-certificate=/usr/local/certificates/cert</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook-key=/usr/local/certificates/key</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--default-backend-service=$(POD_NAMESPACE)/ingress-nginx-default-backend</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--metrics-per-host=false</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>然后等待重启完成，既可看到监控指标：需要注意标签的变化，grafana 中也需要做相应的修改。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409231527790.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> ingress </tag>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes配置镜像仓库认证imagePullSecrets</title>
      <link href="/posts/sjmzr1/"/>
      <url>/posts/sjmzr1/</url>
      
        <content type="html"><![CDATA[<h2 id="创建-secret"><a href="#创建-secret" class="headerlink" title="创建 secret"></a>创建 secret</h2><p>可以在 namespace 里用一个全局的 image pull secret，创建个 secret，如果有特殊字符的，可以用单引号 ‘ ‘ 引起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-secret 是 secret 的名字</span></span><br><span class="line">kubectl create secret docker-registry docker-secret --docker-server=harbor.i.com --docker-username=<span class="string">&#x27;robot$ali&#x27;</span> --docker-password=123456 -n default</span><br></pre></td></tr></table></figure><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>给默认的 <code>serviceaccount</code> 配置 <code>imagePullSecrets</code> ， 这样配置好了之后，就无须在每个 deployment 上配置了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch serviceaccount default -n default -p <span class="string">&#x27;&#123;&quot;imagePullSecrets&quot;: [&#123;&quot;name&quot;: &quot;docker-secret&quot;&#125;]&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="在每个服务上单独配置"><a href="#在每个服务上单独配置" class="headerlink" title="在每个服务上单独配置"></a>在每个服务上单独配置</h2><p>在每个 deployment 里面引用这个 secret</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">my-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-app-container</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&lt;私有仓库的镜像地址&gt;</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-secret</span></span><br></pre></td></tr></table></figure><h2 id="无效排查"><a href="#无效排查" class="headerlink" title="无效排查"></a>无效排查</h2><p>如果创建了不生效，可以排查 <code>secret</code> 内容是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get secret docker-secret --output=<span class="string">&quot;jsonpath=&#123;.data.\.dockerconfigjson&#125;&quot;</span> | <span class="built_in">base64</span> -d</span><br></pre></td></tr></table></figure><p>然后看下 <code>username</code> 和 <code>password</code> 字段是否正确。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fail2ban失效排查</title>
      <link href="/posts/sjcnkn/"/>
      <url>/posts/sjcnkn/</url>
      
        <content type="html"><![CDATA[<h2 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h2><p>容易忽略的一点，selinux 会限制 fail2ban 的执行， 手动运行 <code>/usr/bin/fail2ban-server -xf start</code> 可以正常运行，但是 systemd 就是无法启动，会报错找不到日志文件，这种情况可以将 selinux 禁用再测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sep 09 10:44:01 zhangfei fail2ban-server[1795]: 2024-09-09 10:44:01,134 fail2ban                [1795]: ERROR   Failed during configuration: Have not found any <span class="built_in">log</span> file <span class="keyword">for</span> nginx-http-cc jail</span><br><span class="line">Sep 09 10:44:01 zhangfei fail2ban-server[1795]: 2024-09-09 10:44:01,134 fail2ban                [1795]: ERROR   Async configuration of server failed</span><br></pre></td></tr></table></figure><h2 id="使用-fail2ban-regex-排查规则"><a href="#使用-fail2ban-regex-排查规则" class="headerlink" title="使用 fail2ban-regex 排查规则"></a>使用 fail2ban-regex 排查规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-regex /var/log/xxx.log /etc/fail2ban/filter.d/xxx.conf</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409101104574.png" alt="image.png"></p><h2 id="IndexError"><a href="#IndexError" class="headerlink" title="IndexError"></a>IndexError</h2><p>使用 fail2ban 分析日志，将恶意 IP 封锁，通过 fail2ban-regex 验证，报错： <code>IndexError: string index out of range</code></p><p>日志是经过 docker 处理过的，格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;log&quot;</span><span class="punctuation">:</span><span class="string">&quot;\u001b[0m\u001b[1;34m2024-09-06 00:35:39.125 [I] [proxy/proxy.go:204] [83f2b08de40a51a0] [test.rdp] get a user connection [1.1.1.1:2276]\n&quot;</span><span class="punctuation">,</span><span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span><span class="string">&quot;stdout&quot;</span><span class="punctuation">,</span><span class="attr">&quot;time&quot;</span><span class="punctuation">:</span><span class="string">&quot;2024-09-05T16:35:39.125745206Z&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>filter 文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Definition]</span></span><br><span class="line"><span class="attr">failregex</span> = ^.*get a user connection \[&lt;HOST&gt;:[<span class="number">0</span>-<span class="number">9</span>]*\]</span><br><span class="line">            ^.*get a new work connection: \<span class="section">[&lt;HOST&gt;:[0-9]</span>*\]</span><br><span class="line">ignoreregex =</span><br></pre></td></tr></table></figure><p>fail2ban-regex 报错如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409060106166.png" alt="image.png"></p><p>问题原因：日志中存在日期字段，docker 又给添加了一个日期字段，导致存在两个日期字段，fail2ban 无法解析。</p><p>解决方法： 指定日期格式</p><p>修改 filter 文件，增加一行：（<code>%%</code> 表示 <code>%</code>）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">datepattern</span> = %%Y-%%m-%%d %%H:%%M:%%S</span><br></pre></td></tr></table></figure><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>我都是把系统自带的防火墙工具关掉的，避免防火墙管理工具影响到 fail2ban 的正常运行，如果需要用到防火墙，直接使用 iptables 命令就行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for CentOS</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># for Ubuntu</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now ufw</span><br></pre></td></tr></table></figure><p>然后删除兼容 firewalld 的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/fail2ban/jail.d/00-firewalld.conf&#123;,.bak&#125;</span><br></pre></td></tr></table></figure><h2 id="Ubuntu-的问题"><a href="#Ubuntu-的问题" class="headerlink" title="Ubuntu 的问题"></a>Ubuntu 的问题</h2><p>建议不要用 Ubuntu，我用了就有些莫名其妙的问题，用 <code>fail2ban-regex</code> 检测都没有问题，能正常识别到日志，但是正常启动 fail2ban 就不能正常识别异常日志，换成 AlmaLinux (RedHat 系) 就没问题了</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus中查询无数据提供默认值</title>
      <link href="/posts/sjaoe0/"/>
      <url>/posts/sjaoe0/</url>
      
        <content type="html"><![CDATA[<p>单一时间序列（时间戳）的样本。具体来说，<code>vector(0)</code> 将创建一个包含值 0 的瞬时向量（即在某个时间点的时间序列）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum(increase(nginx_ingress_controller_requests&#123;status=~&quot;4.*&quot;&#125;[3m])) or vector(0)</span><br></pre></td></tr></table></figure><p>这里的 <code>vector(0)</code> 的作用是为查询结果提供一个默认值或回退值。当前面的 <code>sum(increase(...))</code> 查询没有返回任何结果时，整个查询将返回 <code>vector(0)</code> 生成的值，即 0。</p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubectl导出的yaml忽略指定字段</title>
      <link href="/posts/sj8cec/"/>
      <url>/posts/sj8cec/</url>
      
        <content type="html"><![CDATA[<p>kubectl 指定 -o yaml 输出的 yaml 文件包含一些默认字段，这些字段我们是不需要的，可以使用 yq 来进行去除这些字段，生成的 yaml 文件可以用于迁移&#x2F;部署服务等。</p><h2 id="安装-yq"><a href="#安装-yq" class="headerlink" title="安装 yq"></a>安装 yq</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://file.babudiu.com/f/AQHE/yq_linux_amd64 -o /bin/yq</span><br><span class="line"><span class="built_in">chmod</span> +x /bin/yq</span><br></pre></td></tr></table></figure><h2 id="导出-deployment"><a href="#导出-deployment" class="headerlink" title="导出 deployment"></a>导出 deployment</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl get deployment nginx -o yaml | yq <span class="built_in">eval</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  del(</span></span><br><span class="line"><span class="string">    .metadata.annotations,</span></span><br><span class="line"><span class="string">    .metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .metadata.generation,</span></span><br><span class="line"><span class="string">    .metadata.resourceVersion,</span></span><br><span class="line"><span class="string">    .metadata.selfLink,</span></span><br><span class="line"><span class="string">    .metadata.uid, </span></span><br><span class="line"><span class="string">    .spec.progressDeadlineSeconds,</span></span><br><span class="line"><span class="string">    .spec.revisionHistoryLimit,</span></span><br><span class="line"><span class="string">    .spec.template.metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .status</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="导出-service"><a href="#导出-service" class="headerlink" title="导出 service"></a>导出 service</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc nginx -o yaml | yq <span class="built_in">eval</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  del(</span></span><br><span class="line"><span class="string">    .metadata.annotations,</span></span><br><span class="line"><span class="string">    .metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .metadata.resourceVersion,</span></span><br><span class="line"><span class="string">    .metadata.selfLink,</span></span><br><span class="line"><span class="string">    .metadata.uid, </span></span><br><span class="line"><span class="string">    .spec.clusterIP,</span></span><br><span class="line"><span class="string">    .spec.externalTrafficPolicy,</span></span><br><span class="line"><span class="string">    .status</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="导出-Configmap"><a href="#导出-Configmap" class="headerlink" title="导出 Configmap"></a>导出 Configmap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap nginx -o yaml | yq <span class="built_in">eval</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  del(</span></span><br><span class="line"><span class="string">    .metadata.annotations,</span></span><br><span class="line"><span class="string">    .metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .metadata.resourceVersion,</span></span><br><span class="line"><span class="string">    .metadata.selfLink,</span></span><br><span class="line"><span class="string">    .metadata.uid</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>如果导出的 configmap 格式错乱，换行符变成 <code>\n</code> ，可以使用 yq 再次进行格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> prometheus_config.yaml | yq -r <span class="string">&#x27;.data.&quot;prometheus.yml&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="导出-secret"><a href="#导出-secret" class="headerlink" title="导出 secret"></a>导出 secret</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap nginx -o yaml | yq <span class="built_in">eval</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  del(</span></span><br><span class="line"><span class="string">    .metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .metadata.resourceVersion,</span></span><br><span class="line"><span class="string">    .metadata.selfLink,</span></span><br><span class="line"><span class="string">    .metadata.uid</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="导出-ingress"><a href="#导出-ingress" class="headerlink" title="导出 ingress"></a>导出 ingress</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kubectl get ingress example.com -o yaml | yq <span class="built_in">eval</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  del(</span></span><br><span class="line"><span class="string">    .metadata.annotations.&quot;kubectl.kubernetes.io/last-applied-configuration&quot;,</span></span><br><span class="line"><span class="string">    .metadata.creationTimestamp,</span></span><br><span class="line"><span class="string">    .metadata.finalizers,</span></span><br><span class="line"><span class="string">    .metadata.generation,</span></span><br><span class="line"><span class="string">    .metadata.resourceVersion,</span></span><br><span class="line"><span class="string">    .metadata.selfLink,</span></span><br><span class="line"><span class="string">    .metadata.uid,</span></span><br><span class="line"><span class="string">    .status</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进行文件操作</title>
      <link href="/posts/sio0v4/"/>
      <url>/posts/sio0v4/</url>
      
        <content type="html"><![CDATA[<p>我执行了这条命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;KILL &#x27;</span>,id,<span class="string">&#x27;;&#x27;</span>) <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span>  COMMAND<span class="operator">=</span><span class="string">&#x27;Query&#x27;</span> <span class="keyword">AND</span> <span class="type">time</span> <span class="operator">&gt;</span> <span class="number">10</span> <span class="keyword">into</span> outfile <span class="string">&#x27;/tmp/a.txt&#x27;</span>;</span><br></pre></td></tr></table></figure><p>报错： <code>The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</code></p><p>查询 MySQL 的安全文件目录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%secure%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> require_secure_transport <span class="operator">|</span> OFF                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> secure_file_priv         <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">-</span>files<span class="operator">/</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>文件可以写入到这个目录，修改一下 SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;KILL &#x27;</span>,id,<span class="string">&#x27;;&#x27;</span>) <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span>  COMMAND<span class="operator">=</span><span class="string">&#x27;Query&#x27;</span> <span class="keyword">AND</span> <span class="type">time</span> <span class="operator">&gt;</span> <span class="number">10</span> <span class="keyword">into</span> outfile <span class="string">&#x27;/var/lib/mysql-files/a.txt&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm配合WSL进行开发</title>
      <link href="/posts/sik0ul/"/>
      <url>/posts/sik0ul/</url>
      
        <content type="html"><![CDATA[<p>本文使用 WSL2，WSL2 里面安装了 Docker， PyCharm 支持的配合 wsl 进行使用的方法有很多种，这里提供几个思路</p><p>方法 1: WSL 远程开发（目前 BETA 版）<br>方法 2: 代码放在 Windows 上，Python 解释器在 WSL 里<br>方法 3: 代码放在 WSL 里，Python 解释器在 WSL 里<br>方法 4: 代码放在 WSL 里，Python 解释器在 WSL 里的 Docker 里<br>方法 5: 代码放在 Windows 上，Python 解释器放在 WSL 里的 Docker 里<br>方法 6: 直接在 WSL 里安装 Linux 版的 PyCharm（WSL 支持 GUI 程序运行）<br>方法 7: 使用 devcontainer（不好用）</p><p>我最推荐的： 将代码放在 WSL 中，将 Python 解释器放在 WSL 中。</p><h2 id="代码放在-WSL-里，Python-解释器在-WSL-里"><a href="#代码放在-WSL-里，Python-解释器在-WSL-里" class="headerlink" title="代码放在 WSL 里，Python 解释器在 WSL 里"></a>代码放在 WSL 里，Python 解释器在 WSL 里</h2><p>首选，这个时候执行的就是 wsl 里的程序，比如 git 调用的就是 wsl 里的 git 程序。</p><p>使用方法：</p><ol><li>进入 WSL 终端拉取代码（PyCharm 目前不支持拉代码到 WSL 里）</li><li>在 PyCharm 里打开项目，项目路径如图：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408161038687.png" alt="image.png"></li></ol><p>打开 PyCharm 终端会自动进入 WSL 环境。但需要手动 source 才能进入虚拟环境。</p><h2 id="远程开发"><a href="#远程开发" class="headerlink" title="远程开发"></a>远程开发</h2><p>备选方案</p><p>远程开发需要在 WSL 里安装一个 PyCharm 服务版（使用远程开发会自动安装），并用 Windows 的 PyCharm 连接上它，使用方式和直接用 Linux 版的相似，缺点是每次更新 PyCharm 后，在 WSL 里也需要更新一下。还有一个缺点：不能直接启动，必须从 Windows 的 PyCharm 点击远程开发，然后会再运行一个 PyCharm。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408161023064.png" alt="image.png"></p><p>花里胡哨的终端会乱码<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408161030953.png" alt="image.png"></p><p>毕竟走网络通信，远程开发会有一点延迟。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408161032027.png" alt="image.png"></p><p>远程开发优势： 可以直接使用 Linux 本地解释器，路径也都是 Linux 路径</p><h2 id="使用-WSL-里的-Python-解释器"><a href="#使用-WSL-里的-Python-解释器" class="headerlink" title="使用 WSL 里的 Python 解释器"></a>使用 WSL 里的 Python 解释器</h2><p>缺点： PyCharm 自带的终端需要配置，不然默认打开的是 PowerShell，需要先执行 WSL 命令进入 WSL，然后执行 <code>source ~/.virtualenvs/auppus-drf/bin/activate</code> 才能加载虚拟环境。调用的 GIT 等程序，用的是 Windows 上的。</p><h2 id="使用-WSL-运行图形版-PyCharm"><a href="#使用-WSL-运行图形版-PyCharm" class="headerlink" title="使用 WSL 运行图形版 PyCharm"></a>使用 WSL 运行图形版 PyCharm</h2><p>不稳定，不推荐了。想要输入中文，输入法需要用 WSL 里的输入法，很麻烦还不稳定。</p><h2 id="依赖-Docker-的方法"><a href="#依赖-Docker-的方法" class="headerlink" title="依赖 Docker 的方法"></a>依赖 Docker 的方法</h2><p>所有使用 Docker 的方法都不好用，慢不说还不方便，使用 Docker 看起来很美好，但是真的不好用。包括 devcontainer，如果你觉得好用，那你是对的，是我用的姿势不对。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python开发一个Prometheus exporter</title>
      <link href="/posts/siij5o/"/>
      <url>/posts/siij5o/</url>
      
        <content type="html"><![CDATA[<p>需求：需要监控指定的邮箱发送邮件是否正常，使用 Prometheus 官方的 Python sdk，代码如下：</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prometheus_client <span class="keyword">import</span> start_http_server, Gauge</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 Gauge 类型的指标</span></span><br><span class="line">EMAIL_AUTHENTICATION_SUCCESS = Gauge(<span class="string">&#x27;email_authentication_success&#x27;</span>, <span class="string">&#x27;Indicates if the email authentication was successful&#x27;</span>, [<span class="string">&#x27;email&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_email_authentication</span>(<span class="params">email, password, smtp_server, smtp_port</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        server = smtplib.SMTP_SSL(smtp_server, smtp_port)</span><br><span class="line">        server.login(email, password)</span><br><span class="line">        <span class="comment"># 如果登录成功，则更新指标为 1</span></span><br><span class="line">        EMAIL_AUTHENTICATION_SUCCESS.labels(email=email).<span class="built_in">set</span>(<span class="number">1</span>)</span><br><span class="line">        server.quit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果登录失败，则更新指标为 0</span></span><br><span class="line">        EMAIL_AUTHENTICATION_SUCCESS.labels(email=email).<span class="built_in">set</span>(<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Failed to authenticate email <span class="subst">&#123;email&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Email Authentication Prometheus Exporter&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--email&#x27;</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Email address to authenticate&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--password&#x27;</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Password for the email account&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--smtp_server&#x27;</span>, default=<span class="string">&#x27;smtp.gmail.com&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;SMTP server address&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--smtp_port&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">587</span>, <span class="built_in">help</span>=<span class="string">&#x27;SMTP server port&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动 Prometheus HTTP 服务</span></span><br><span class="line">    start_http_server(<span class="number">8000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Prometheus exporter is running on port 80. Use CTRL+C to exit.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 让程序保持运行</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 进行邮箱验证</span></span><br><span class="line">        check_email_authentication(args.email, args.password, args.smtp_server, args.smtp_port)</span><br><span class="line">        <span class="comment"># 等待一小时，频率太快容易被ban？</span></span><br><span class="line">        time.sleep(<span class="number">3600</span>)</span><br></pre></td></tr></table></figure><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>邮件登录正常：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408201734136.png" alt="image.png"></p><p>断开网络，或者修改邮箱密码：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408201741839.png" alt="image.png"></p><p>Prometheus 界面查询<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408201838450.png" alt="image.png"></p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install prometheus-client</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 exporter</span></span><br><span class="line">python3.8 email_exporter.py --email qq@qq.com --password xxx --smtp_server smtp.feishu.cn --smtp_port 465</span><br></pre></td></tr></table></figure><h2 id="部署到-Kubernetes"><a href="#部署到-Kubernetes" class="headerlink" title="部署到 Kubernetes"></a>部署到 Kubernetes</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.9</span>-slim</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> email-exporter.py /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install prometheus-client</span></span><br></pre></td></tr></table></figure><h3 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h3><p>部署到 Kubernetes，借助 Prometheus 服务发现将 service 的 metrics 数据接入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">email-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">email-exporter</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">email-exporter</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/email-exporter:1</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">email-exporter</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;bash&quot;</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;-c&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;python3 -u /email-exporter.py --email qq@qq.com --password xxx --smtp_server smtp.feishu.cn --smtp_port 465&quot;</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">200Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">200Mi</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">prometheus.io/env:</span> <span class="string">dev</span></span><br><span class="line">    <span class="attr">prometheus.io/path:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">prometheus.io/port:</span> <span class="string">&quot;80&quot;</span></span><br><span class="line">    <span class="attr">prometheus.io/project:</span> <span class="string">idp</span></span><br><span class="line">    <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">email-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">email-exporter</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>python 容器化部署不产生控制台日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在部署python的容器服务时，docker logs/kubectl logs获取不到的主要原因是print的标准控制台输出，产生了buffer，导致控制台输出不及时。解决该缓存问题或者禁止buffer即可</span></span><br><span class="line">python -u xx.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Alpine容器文件后缀浏览器下载变成zip</title>
      <link href="/posts/siid4q/"/>
      <url>/posts/siid4q/</url>
      
        <content type="html"><![CDATA[<p>比如一个网盘程序，上传了一个 excel 文件，点击获取直链，然后将获取到的直链放到浏览器地址栏访问触发下载，下载下来的文件后缀自动变成了.zip<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408201603813.png" alt="image.png"></p><p>这是因为 Alpine 镜像比较精简，缺少了很多 MIME 类型数据，可以通过安装 <code>mailcap</code> 包来解决。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> Alpine:latest</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk add --no-cache mailcap</span></span><br></pre></td></tr></table></figure><p>再次测试，已经正常</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408201613078.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx Ingress 对指定路径去除 contextpath</title>
      <link href="/posts/sib2vi/"/>
      <url>/posts/sib2vi/</url>
      
        <content type="html"><![CDATA[<p>要在 Kubernetes 中配置 Nginx Ingress 以便转发到后端时去掉 <code>contextPath</code>，你可以通过以下步骤来实现：</p><h2 id="单个-path-去掉-contextpath"><a href="#单个-path-去掉-contextpath" class="headerlink" title="单个 path 去掉 contextpath"></a>单个 path 去掉 contextpath</h2><p>假设你有一个服务在 <code>/app</code> 路径下运行，并希望通过 Ingress 直接访问后端服务的根路径 <code>/</code>，可以如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/$2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">example.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/app(/|$)(.*)</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">example-service</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h3 id="2-是什么"><a href="#2-是什么" class="headerlink" title="$2 是什么"></a>$2 是什么</h3><p>假设一个请求路径是 <code>/app1/foo/bar</code>，根据路径匹配规则 <code>/app1(/|$)(.*)</code>：</p><p>第一组 <code>(/|$)</code> 匹配的是 <code>/</code>。<br>第二组 <code>(.*)</code> 匹配的是 <code>foo/bar</code>。<br>因此，<code>$2</code> 将包含 <code>foo/bar</code>，重写后的目标路径为 <code>/foo/bar</code>。</p><p><code>pathType: ImplementationSpecific</code>: 允许路径匹配类型由具体的 Ingress 控制器实现决定。在 <code>Nginx</code> 中，这通常表示使用最长前缀匹配。</p><h2 id="如果有多个-location-需要对其中一个-location-去除-contextpath"><a href="#如果有多个-location-需要对其中一个-location-去除-contextpath" class="headerlink" title="如果有多个 location 需要对其中一个 location 去除 contextpath"></a>如果有多个 location 需要对其中一个 location 去除 contextpath</h2><h3 id="方法一：-使用多个-Ingress，配置同一个域名"><a href="#方法一：-使用多个-Ingress，配置同一个域名" class="headerlink" title="方法一： 使用多个 Ingress，配置同一个域名"></a>方法一： 使用多个 Ingress，配置同一个域名</h3><p>个人比较推荐这种配置</p><p>ingress1:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ibr-portal</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">apple-internet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">example-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">ibr-wfe</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/job</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">xxl-job</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>ingress2:<br>这个 ingress 是需要去除 contextpath 的路径。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ibr</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">apple-internet</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/$2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">example-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/ibr(/|$)(.*)</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">ibr</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h3 id="方法二：直接使用-Nginx-配置"><a href="#方法二：直接使用-Nginx-配置" class="headerlink" title="方法二：直接使用 Nginx 配置"></a>方法二：直接使用 Nginx 配置</h3><p>这个用 ingress 好像实现不了了，需要用到原生的 Nginx 配置，增加一条 <code>server-snippet</code> 注解，记得全局 configmap 也需要开启 server-snippet 支持。这个方案有个缺点，如果我删除了 service 然后再创建个同名的 service，还是访问不了的，这个是 Nginx 的特性，nginx proxy_pass 如果配置了域名，那么 nginx 会将域名解析的 IP 缓存下来，不会更新的。除非你 reload 或 restart</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ibr-portal</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">apple-internet</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/server-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      location /ibr &#123;</span></span><br><span class="line"><span class="string">        proxy_pass http://ibr.default/; </span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">example-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">register.example.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">ibr-wfe</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/job</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">xxl-job</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ingress </tag>
            
            <tag> contextpath </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 停止维护后如何使用</title>
      <link href="/posts/si78gg/"/>
      <url>/posts/si78gg/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 停止维护后，很多源都失效了，使用 yum 的时候报错 404，需要修改源才能继续使用。</p><p>老版本 CentOS 源被更改成 vault 源，需要更换成 vault 源才能继续使用 yum。</p><h2 id="一、修改成官方源"><a href="#一、修改成官方源" class="headerlink" title="一、修改成官方源"></a>一、修改成官方源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i.bak \</span><br><span class="line">  -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">  -e <span class="string">&#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://vault.centos.org/centos|g&#x27;</span> \</span><br><span class="line">  /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><h2 id="二、换成阿里云源"><a href="#二、换成阿里云源" class="headerlink" title="二、换成阿里云源"></a>二、换成阿里云源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><h2 id="三、更换成中科大的源"><a href="#三、更换成中科大的源" class="headerlink" title="三、更换成中科大的源"></a>三、更换成中科大的源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/CentOS-Base.repo &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra</span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates</span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates&amp;infra=$infra</span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra</span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="EPEL-源"><a href="#EPEL-源" class="headerlink" title="EPEL 源"></a>EPEL 源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><h2 id="使用-ISO-做为离线仓库"><a href="#使用-ISO-做为离线仓库" class="headerlink" title="使用 ISO 做为离线仓库"></a>使用 ISO 做为离线仓库</h2><p>iso 选择 everything 版本镜像</p><p>2.创建 ISO 存放目录以及挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/cdrom</span><br></pre></td></tr></table></figure><p>4.挂载 ISO 镜像到挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop /mnt/iso/*.iso /mnt/cdrom </span><br></pre></td></tr></table></figure><ol><li>检查挂载是否成功<br><code>df -h</code><br>2.备份 <code>/etc/yum.repos.d</code> 目录里的原始 repo 文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line"><span class="built_in">mkdir</span> bak</span><br><span class="line"><span class="built_in">mv</span> *.repo bak/</span><br></pre></td></tr></table></figure><p> 4.写入信息至 local.repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/local.repo &lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=<span class="built_in">local</span></span><br><span class="line"><span class="comment">#挂载地址：/mnt/cdrom</span></span><br><span class="line">baseurl=file:///mnt/cdrom    </span><br><span class="line">enabled=1                    </span><br><span class="line">gpgcheck=0</span><br><span class="line"><span class="comment">#cd /mnt/cdrom/可以看到KEY</span></span><br><span class="line">gpgkey=file:///mnt/cdrom/RPM-GPG-KEY-CentOS-7</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p> yum 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum install ntp</span><br></pre></td></tr></table></figure><p>取消挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/cdrom</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>trzsz 使用记录</title>
      <link href="/posts/shqeci/"/>
      <url>/posts/shqeci/</url>
      
        <content type="html"><![CDATA[<p>官方介绍：trzsz ( trz &#x2F; tsz ) 是一款优秀的文件传输工具，和 lrzsz ( rz &#x2F; sz ) 类似的、兼容 tmux 的文件传输工具。其实就是一个利用终端来传输文件的工具，可以用来取代 lrzsz，更多详情看官方文档：<a href="https://trzsz.github.io/cn/">https://trzsz.github.io/cn/</a> 和 GitHub：<a href="https://github.com/trzsz/trzsz-ssh/blob/main/README.cn.md">https://github.com/trzsz/trzsz-ssh/blob/main/README.cn.md</a></p><blockquote><p>tssh 我测试使用 zmodem 上传或下载文件的时候不会出现乱码的情况，比如 xshell 就经常出现乱码</p></blockquote><h2 id="使用-tssh-命令"><a href="#使用-tssh-命令" class="headerlink" title="使用 tssh 命令"></a>使用 tssh 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 自动在服务器上安装 lrzsz</span></span><br><span class="line">tssh --install-trzsz root@x.x.x.x</span><br><span class="line"></span><br><span class="line"><span class="comment">### 交互式添加机器</span></span><br><span class="line">tssh --new-host</span><br><span class="line"></span><br><span class="line"><span class="comment">### 指定用户名， ssh 用户名带 `@` 符号的时候，使用 tssh 会解析错误（ssh 无问题）此时可以指定用户名的方式来使用。</span></span><br><span class="line"><span class="comment"># --zmodem 是开启 zmodem 支持，可以使用 rz 或 sz 命令。</span></span><br><span class="line">tssh --zmodem -l <span class="string">&#x27;a@qq.com&#x27;</span> 1.1.1.1 -p 2222</span><br></pre></td></tr></table></figure><h2 id="使用-openssh-config"><a href="#使用-openssh-config" class="headerlink" title="使用 openssh config"></a>使用 openssh config</h2><p>除了使用 <code>tssh</code> 命令的方法外，还可以将服务器信息配置到 <code>~/.ssh/config</code>（类似于 openssh），为了兼容 <code>openssh</code>，可以将 <code>tssh</code> 独有的配置前加上 <code>#!!</code> ， 后续直接使用 tssh 命令就可以进行机器选择。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 使用 ssh-key 免密连接</span><br><span class="line">Host orange-pi</span><br><span class="line">  Hostname 1.1.1.1</span><br><span class="line">  HostKeyAlgorithms +ssh-rsa</span><br><span class="line">  PubkeyAcceptedKeyTypes +ssh-rsa</span><br><span class="line">  User orangepi</span><br><span class="line">  Port 22</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa</span><br><span class="line">  IdentitiesOnly yes</span><br><span class="line"></span><br><span class="line"># 使用密码连接</span><br><span class="line">Host ubuntu</span><br><span class="line">  Hostname 1.1.1.1</span><br><span class="line">  User root</span><br><span class="line">  Port 22</span><br><span class="line">  #!! EnableZmodem Yes</span><br><span class="line">  #!! encPassword fe7219e2eb0c10aa6a0ea3c35307334e9810fd0cb042a05804dcd34b52125e088d3af3</span><br><span class="line">  #!! Password 123456</span><br></pre></td></tr></table></figure><blockquote><p>上面的 <code>encPassword</code> 可以通过 <code>tssh --enc-secret</code> 来生成，也可以使用 <code>Password 明文密码</code> 的方式。</p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>直接执行 tssh 就会有一个终端组成的图形界面<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408051438414.png" alt="image.png"></p><p>上面也可以使用 <code>tssh test-ubuntu</code> 来快速连接</p><h2 id="支持-zmodem（可用于取代-lrzsz）"><a href="#支持-zmodem（可用于取代-lrzsz）" class="headerlink" title="支持 zmodem（可用于取代 lrzsz）"></a>支持 zmodem（可用于取代 lrzsz）</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>新版 trzsz 内置支持 lrzsz 的功能，使用方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tssh --zmodem root@x.x.x.x -p 22</span><br></pre></td></tr></table></figure><p>或者在 <code>~/.ssh/config</code> 里面配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span><br><span class="line">  EnableZmodem Yes</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>然后在终端里就可以执行 rz 和 sz 命令了 (<strong>不需要</strong>修改终端的配置，比如 iTerm2 配置 triggers)，并且支持上传速度和上传大小显示。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408051427004.png" alt="image.png"></p><h2 id="macOS-下使用配置"><a href="#macOS-下使用配置" class="headerlink" title="macOS 下使用配置"></a>macOS 下使用配置</h2><p>trzsz-ssh 是内置支持 trzsz 的 ssh 客户端， 可以替代 openssh，并且不依赖终端的支持。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install trzsz-ssh</span><br></pre></td></tr></table></figure><h3 id="简单用法"><a href="#简单用法" class="headerlink" title="简单用法"></a>简单用法</h3><p>使用 <code>tssh</code> 替代 <code>ssh</code> 命令</p><h2 id="Windows-下使用配置"><a href="#Windows-下使用配置" class="headerlink" title="Windows 下使用配置"></a>Windows 下使用配置</h2><h3 id="使用-windows-版-tssh-exe"><a href="#使用-windows-版-tssh-exe" class="headerlink" title="使用 windows 版 tssh.exe"></a>使用 windows 版 tssh.exe</h3><p>直接 github 上下载 tssh.exe 所在路径放到 PATH 环境变量中即可。rz 或 sz 的时候打开的是资源管理器 explorer.exe</p><h3 id="在-WSL2-中使用"><a href="#在-WSL2-中使用" class="headerlink" title="在 WSL2 中使用"></a>在 WSL2 中使用</h3><p>安装 Linux 版 tssh，并安装 zenity 包，文件管理器是 Linux 桌面版文件管理器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:trzsz/ppa &amp;&amp; sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install tssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 rz 或 sz 无法弹出文件管理器的问题。</span></span><br><span class="line">sudo apt install libgles2 zenity fonts-wqy-microhei -y</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenSSH </tag>
            
            <tag> lrzsz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java程序被停止前自动dump内存快照</title>
      <link href="/posts/sh7n7f/"/>
      <url>/posts/sh7n7f/</url>
      
        <content type="html"><![CDATA[<p>线上业务偶尔会出现重启现象，为了排查这个问题，决定在 OOM 的时候自动进行 dump 内存快照用于分析</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407261022514.png" alt="image.png"></p><h2 id="针对-JVM-OOM-的情况"><a href="#针对-JVM-OOM-的情况" class="headerlink" title="针对 JVM OOM 的情况"></a>针对 JVM OOM 的情况</h2><p>OOM 全称 “Out Of Memory”，表示内存耗尽。当 JVM 因为没有足够的内存来为对象分配空间，并且垃圾回收器也已经没有空间可回收时，就会抛出这个错误，解决 OOM 问题的一个思路:</p><p>假设发生 OOM 了，必然说明系统中某个区域的对象太多了，塞满了那个区域，而且一定是无法回收掉那些对象，最终才会导致内存溢出的，首先就得知道到底是什么对象太多了导致 OOM ，就必须得有一份 JVM 发生 OOM 时的 dump 内存快照<br>有了 dump 内存快照，就可以用 MAT 之类的工具，或者在线工具来分析：<a href="https://memory.console.heapdump.cn/">https://memory.console.heapdump.cn/</a><br>JVM 在发生 OOM 的时候并不是直接挂掉的， 而是在 OOM 之前会尽量去 GC 腾出来一些内存空间，如果 GC 后还是没有空间，放不下对象， 才会触发内存溢出的。JVM 给我们提供了一些参数可以在发生 OOM 的时候进行自动 dump 内存快照。： <code>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/logs/heapdump.hprof</code> &#x2F;logs 目录也通过 hostpath 持久化到对应的主机节点上了，不过这样有两个问题：</p><ol><li>多次重启会发生覆盖，比如程序 OOM 了 2 次，那么第一次的 heapdump 会被第二次覆盖。</li><li>此参数只能针对 jvm 发生的 OOM，k8s 主动重启服务的情况没法导出 heapdump。</li></ol><p>对于此次线上重启问题，通过 <code>kubectl describe pod</code> 看到的原因就是由于健康检查不响应了，k8s 自动将服务重启，这种情况不属于 jvm 的 OOM，那么通过上面的 jvm 参数来导出不靠谱。</p><h2 id="针对其他情况的重启"><a href="#针对其他情况的重启" class="headerlink" title="针对其他情况的重启"></a>针对其他情况的重启</h2><p>本次线上重启问题是 k8s 干的，那么我们从 k8s 的角度来处理这个问题，参考官方文档 <a href="https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/">为容器的生命周期事件设置处理函数</a> 可以通过配置 preStop 钩子来实现停止前将内存快照 dump 下来。用到的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 pid为10的程序 进程堆栈信息</span></span><br><span class="line">jstack -F 10 &gt;&gt; /logs/thread.dump</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成堆内存转储快照</span></span><br><span class="line">jmap -dump:format=b,file=/logs/dump.hprof 10</span><br></pre></td></tr></table></figure><p>配置在 kubernetes 中的 preStop 钩子中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">name:</span> <span class="string">test-java</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">harbor.example.com/base/example:v1</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">lifecycle:</span></span><br><span class="line">    <span class="attr">preStop:</span></span><br><span class="line">      <span class="attr">exec:</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;jstack -F $(jps |grep -v Jps | awk &#x27;&#123;print $1&#125;&#x27;) | tee -a /logs/thread.dump &amp;&amp; jmap -dump:format=b,file=/logs/$(date +&#x27;%Y-%m-%d_%H%M%S&#x27;).hprof $(jps |grep -v Jps | awk &#x27;&#123;print $1&#125;&#x27;)&quot;</span>]</span><br><span class="line">  <span class="attr">readinessProbe:</span></span><br><span class="line">    <span class="attr">failureThreshold:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">httpGet:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/actuator/info</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5003</span></span><br><span class="line">      <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">    <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">periodSeconds:</span> <span class="number">15</span></span><br><span class="line">    <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">volumeMounts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/logs</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">app-logs</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/logs</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DirectoryOrCreate</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">app-logs</span></span><br></pre></td></tr></table></figure><p>由于在 command 中配置 <code>&gt;&gt;</code> 不生效， 所以换成了 <code>tee</code> 命令， 并把导出的 hprof 文件按照时间命名防止被覆盖。其中 <code>/logs</code> 目录通过 <code>hostpath</code> 持久化了。<br>手动执行 <code>kubectl delete pod xxxx</code>，可以查看到生成的文件了</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407261103592.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无显示器环境下连接香橙派</title>
      <link href="/posts/sghymc/"/>
      <url>/posts/sghymc/</url>
      
        <content type="html"><![CDATA[<p>连接香橙派（树莓派等其他派也类似）一般有以下几种方法：</p><ol><li>插显示器、键盘鼠标直接进行操作</li><li>使用串口连接电脑，通过串口访问终端</li><li>通过网线连接路由器（路由器会通过 DHCP 分配一个 IP 给香橙派）从路由器后台获取到 IP 地址进行连接</li><li>通过网线直连电脑，电脑运行一个 DHCP 服务分配 IP 给香橙派，通过 IP 地址进行连接</li><li>通过官方的 <code>orangepi_first_run.txt</code> 文件来自动配置一个网口 IP 地址，电脑固定一个同网段的 IP，然后通过 IP 地址进行访问</li></ol><p>我这里使用 <code>tftpd64</code> 来实现一个简单的 DHCP 服务。</p><p>配置如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407121331095.png" alt="image.png"></p><p>设置好了以后，通过网线将香橙派和电脑直接连起来，这里就能看到有设备获取到了 IP 地址了。（不要设置 Def router，因为我们需要让网络使用 Wi-Fi 的网卡，有线网卡只是为了内网连接。）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407121332964.png" alt="image.png"></p><p>192.168.88.1 就是香橙派的 IP 地址。可以用 ssh 连接了。</p><p>联网：</p><p>手机开热点，使用 <code>nmtui</code> 命令连接 Wi-Fi</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407121450535.png" alt="image.png"><br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407121451371.png" alt="image.png|351"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 香橙派 </tag>
            
            <tag> 开发版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香橙派配置VNC Server</title>
      <link href="/posts/sghylv/"/>
      <url>/posts/sghylv/</url>
      
        <content type="html"><![CDATA[<p>vnc 大致可以分为两种，一种直接查看 <code>TTY</code> 上正在显示的桌面（和插上显示器显示的一致），另一种是创建一个新的桌面（即 可以在一台 linux 上打开若干个桌面供若干用户使用）</p><p>这里使用虚拟桌面 VNC，用的是 <code>tigervncserver</code>, 全程使用 <code>orangepi</code> 用户, 香橙派安装的是 <code>Ubuntu 22.04</code> 系统, 如果需要直接转发显示器的内容，请查看 <a href="/posts/bd65d26a/">Ubuntu安装配置VNC直接转发桌面显示</a></p><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line"></span><br><span class="line">sudo apt-get -y install xorg lightdm xfce4 tango-icon-theme gnome-icon-theme dbus-x11</span><br><span class="line">sudo apt-get install xfonts-base tightvncserver</span><br></pre></td></tr></table></figure><h2 id="启动-VNC-Server"><a href="#启动-VNC-Server" class="headerlink" title="启动 VNC Server"></a>启动 VNC Server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver :1</span><br></pre></td></tr></table></figure><p>display :1 refers to port 5901</p><h2 id="重启-VNC-Server"><a href="#重启-VNC-Server" class="headerlink" title="重启 VNC Server"></a>重启 VNC Server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -<span class="built_in">kill</span> :1</span><br><span class="line">vncserver :1</span><br></pre></td></tr></table></figure><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p><code>sudo vim /usr/local/bin/tightvncserver</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/bin/&quot;</span></span><br><span class="line">DISPLAY=<span class="string">&quot;1&quot;</span></span><br><span class="line">DEPTH=<span class="string">&quot;16&quot;</span></span><br><span class="line">GEOMETRY=<span class="string">&quot;1024x768&quot;</span></span><br><span class="line">OPTIONS=<span class="string">&quot;-depth <span class="variable">$&#123;DEPTH&#125;</span> -geometry <span class="variable">$&#123;GEOMETRY&#125;</span> :<span class="variable">$&#123;DISPLAY&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">/usr/bin/vncserver <span class="variable">$&#123;OPTIONS&#125;</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">/usr/bin/vncserver -<span class="built_in">kill</span> :<span class="variable">$&#123;DISPLAY&#125;</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">restart)</span><br><span class="line"><span class="variable">$0</span> stop</span><br><span class="line"><span class="variable">$0</span> start</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/tightvncserver</span><br></pre></td></tr></table></figure><p><code>sudo vim /lib/systemd/system/tightvncserver.service</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Manage tightVNC Server</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/bin/tightvncserver start</span><br><span class="line"><span class="attr">ExecStop</span>=/usr/local/bin/tightvncserver stop</span><br><span class="line"><span class="attr">ExecReload</span>=/usr/local/bin/tightvncserver restart</span><br><span class="line"><span class="attr">User</span>=orangepi</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> tightvncserver.service </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 香橙派 </tag>
            
            <tag> 开发版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes环境下快速部署MySQL</title>
      <link href="/posts/sgch4h/"/>
      <url>/posts/sgch4h/</url>
      
        <content type="html"><![CDATA[<p>收到个需求，开发团队希望快速启动一套业务环境，包括所有业务服务（部署在 <code>Kubernetes</code> 中）、<code>MySQL</code> 数据库、<code>Redis</code> 等中间件也一并创建出来并初始化，业务也需要自动连接上这些中间件。</p><p>本文记录一下在 <code>Kubernetes</code> 中部署 <code>MySQL</code> 并完成初始化操作（设置密码、创建数据库）</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="表名大小写敏感问题"><a href="#表名大小写敏感问题" class="headerlink" title="表名大小写敏感问题"></a>表名大小写敏感问题</h3><p>我们的业务需要数据库设置为表名大小写不敏感，即无论大小写都转换为小写，需要设置参数：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>那么在容器中，参考官方文档，可以将 cnf 文件挂载到 <code>/etc/mysql/conf.d/</code> 中。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407091515566.png" alt="image.png|928"></p><h2 id="创建多个数据库"><a href="#创建多个数据库" class="headerlink" title="创建多个数据库"></a>创建多个数据库</h2><p>业务需要用到多个库，检查官方环境变量，有个 <code>MYSQL_DATABASE</code> 不过我测试可以创建一个库，不满足我们的需求。并且除了建库，可能还有其他的操作。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407091520705.png" alt="image.png|944"></p><p>可以将你需要的 sql 文件放到 <code>/docker-entrypoint-initdb.d</code> 目录中，初始化的时候会自动执行。</p><h2 id="完整的-yaml-文件"><a href="#完整的-yaml-文件" class="headerlink" title="完整的 yaml 文件"></a>完整的 yaml 文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">custom.cnf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [mysqld]</span></span><br><span class="line"><span class="string">    lower_case_table_names=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-init-sql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">init1.sql:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    CREATE DATABASE IF NOT EXISTS database1;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">init2.sql:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    CREATE DATABASE IF NOT EXISTS database2;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysql-config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-init-sql</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysql-init-sql</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">          <span class="comment"># arm64 设置为mysql:oracle, amd64设置为mysql:latest</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/mysql:8.0.38</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-3306</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-33060</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">33060</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">com.012</span></span><br><span class="line"></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-config</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/mysql/conf.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-init-sql</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/docker-entrypoint-initdb.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">host-time</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line">      <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">      <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql-data</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">accessModes:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span></span><br><span class="line">        <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-3306</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30001</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><p>这种挂载方式是将 configmap 中的所有 key 都挂载到指定的目录中。目录中原文件不可见（本来就没有文件），如果想要以单个文件形式挂载，参考文章：<a href="/posts/75a76e3b/">在Kubernetes集群中挂载configmap到pod中</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes中部署nacos 2.3.2</title>
      <link href="/posts/sgajkk/"/>
      <url>/posts/sgajkk/</url>
      
        <content type="html"><![CDATA[<p>其他版本参考文档 <a href="/posts/sebxm6/">在Kubernetes中部署nacos 2.1.0</a></p><p>nacos 官方文档写的太敷衍了，很多东西都需要自己去找，比如容器运行的时候，必须的环境变量都没有写全，遇到的一些坑整理了出来。</p><h2 id="新版的变化"><a href="#新版的变化" class="headerlink" title="新版的变化"></a>新版的变化</h2><h3 id="鉴权逻辑优化"><a href="#鉴权逻辑优化" class="headerlink" title="鉴权逻辑优化"></a>鉴权逻辑优化</h3><p>官方说明：<a href="https://nacos.io/zh-cn/docs/v2/guide/user/auth.html">https://nacos.io/zh-cn/docs/v2/guide/user/auth.html</a></p><p>2.2.2 版本之前的 Nacos 默认控制台，无论服务端是否开启鉴权，都会存在一个登录页；这导致很多用户被误导认为 Nacos 默认是存在鉴权的。在社区安全工程师的建议下，Nacos 自 2.2.2 版本开始，在未开启鉴权时，默认控制台将不需要登录即可访问，同时在控制台中给予提示，提醒用户当前集群未开启鉴权。</p><h3 id="部分环境变量默认值删除"><a href="#部分环境变量默认值删除" class="headerlink" title="部分环境变量默认值删除"></a>部分环境变量默认值删除</h3><p>nacos 新版（2.2.1 之后删除了默认值）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407081430186.png" alt="image.png|782"></p><p>可以查看 <code>/home/nacos/conf/application.properties</code> 这个文件，如果有环境变量名不确认也可以到这个文件里查询：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407081433781.png" alt="image.png|940"></p><p>比如： <code>server.port=$&#123;NACOS_APPLICATION_PORT:8848&#125;</code> NACOS_APPLICATION_PORT 是环境变量名，8848 是默认值。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="the-length-of-secret-key-must-great-than-or-equal-32-bytes-And-the-secret-key-must-be-encoded-by-base64-Please-see-https-nacos-io-zh-cn-docs-v2-guide-user-auth-html"><a href="#the-length-of-secret-key-must-great-than-or-equal-32-bytes-And-the-secret-key-must-be-encoded-by-base64-Please-see-https-nacos-io-zh-cn-docs-v2-guide-user-auth-html" class="headerlink" title="the length of secret key must great than or equal 32 bytes; And the secret key must be encoded by base64.Please see https://nacos.io/zh-cn/docs/v2/guide/user/auth.html"></a>the length of secret key must great than or equal 32 bytes; And the secret key must be encoded by base64.Please see <a href="https://nacos.io/zh-cn/docs/v2/guide/user/auth.html">https://nacos.io/zh-cn/docs/v2/guide/user/auth.html</a></h3><p>这个问题是因为 <code>NACOS_AUTH_IDENTITY_KEY</code> <code>NACOS_AUTH_IDENTITY_VALUE</code> <code>NACOS_AUTH_TOKEN</code> 这三个变量没有默认值，需要配置环境变量</p><p><code>NACOS_AUTH_IDENTITY_KEY</code> 设置成 <code>serverIdentity</code></p><p><code>NACOS_AUTH_IDENTITY_VALUE</code> 值推荐将配置项设置为 Base64 编码的字符串，且原始密钥长度不得低于 32 字符。生成随机字符串，并使用 base64 编码一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> EbDxUpWcw3G9lCBZqZoKtqZyqmsCH2Ktex5TA1zTXxOIVm6f1q | <span class="built_in">base64</span></span><br></pre></td></tr></table></figure><p><code>NACOS_AUTH_TOKEN</code> 我设置成了 <code>SecretKeyXXjYYn7qwURG1bqBSDc8fBYqi5NwFOGgtwRX1lfKy0Ihl5Cdva3B7nJpZlV0</code></p><h3 id="errCode-102-errMsg-dataSource-or-tableName-is-null"><a href="#errCode-102-errMsg-dataSource-or-tableName-is-null" class="headerlink" title="errCode: 102, errMsg: dataSource or tableName is null"></a>errCode: 102, errMsg: dataSource or tableName is null</h3><p>这个是同样的问题，<code>SPRING_DATASOURCE_PLATFORM</code> 默认环境变量被删除</p><p>将环境变量 <code>SPRING_DATASOURCE_PLATFORM</code> 设置成 <code>mysql</code> 即可。</p><h2 id="MySQL-数据库准备"><a href="#MySQL-数据库准备" class="headerlink" title="MySQL 数据库准备"></a>MySQL 数据库准备</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info                  */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `c_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;configuration description&#x27;</span>,</span><br><span class="line">  `c_use` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;configuration usage&#x27;</span>,</span><br><span class="line">  `effect` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;配置生效的描述&#x27;</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;配置的类型&#x27;</span>,</span><br><span class="line">  `c_schema` text COMMENT <span class="string">&#x27;配置的模式&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_aggr             */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_aggr` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `datum_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;datum_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;增加租户字段&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_beta             */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_beta` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `beta_ips` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;betaIps&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_beta&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_tag              */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_tag` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tag_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_tag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = config_tags_relation         */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_tags_relation` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `tag_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_name&#x27;</span>,</span><br><span class="line">  `tag_type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_type&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;nid, 自增长标识&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_tag_relation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = group_capacity               */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `group_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;集群、各Group容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = his_config_info              */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `his_config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;nid, 自增标识&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `op_type` <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;operation type&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;多租户改造&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   表名称 = tenant_capacity              */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Tenant ID&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;租户容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `kp` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;kp&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tenant_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_name&#x27;</span>,</span><br><span class="line">  `tenant_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tenant_desc&#x27;</span>,</span><br><span class="line">  `create_source` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create_source&#x27;</span>,</span><br><span class="line">  `gmt_create` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;tenant_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users` (</span><br><span class="line">`username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY COMMENT <span class="string">&#x27;username&#x27;</span>,</span><br><span class="line">`password` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">`enabled` <span class="type">boolean</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;enabled&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `roles` (</span><br><span class="line">`username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;username&#x27;</span>,</span><br><span class="line">`role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;role&#x27;</span>,</span><br><span class="line"><span class="keyword">UNIQUE</span> INDEX `idx_user_role` (`username` <span class="keyword">ASC</span>, `role` <span class="keyword">ASC</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `permissions` (</span><br><span class="line">    `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;role&#x27;</span>,</span><br><span class="line">    `resource` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;resource&#x27;</span>,</span><br><span class="line">    `action` <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;action&#x27;</span>,</span><br><span class="line">    <span class="keyword">UNIQUE</span> INDEX `uk_role_permission` (`role`,`resource`,`action`) <span class="keyword">USING</span> BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (username, password, enabled) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> roles (username, role) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;ROLE_ADMIN&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="yaml-文件"><a href="#yaml-文件" class="headerlink" title="yaml 文件"></a>yaml 文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@op-k8s-master1</span> <span class="string">~</span>]<span class="comment"># cat nacos-2.3.2.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos-headless</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="comment"># annotations:</span></span><br><span class="line">    <span class="comment"># prometheus.io/path: /nacos/actuator/prometheus</span></span><br><span class="line">    <span class="comment"># prometheus.io/port: &quot;8848&quot;</span></span><br><span class="line">    <span class="comment"># prometheus.io/scrape: &quot;true&quot;</span></span><br><span class="line">    <span class="comment"># service.alpha.kubernetes.io/tolerate-unready-endpoints: &quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">    <span class="comment">## 兼容1.4.x版本的选举端口</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">mysql.host:</span> <span class="string">&quot;10.186.128.93&quot;</span></span><br><span class="line">  <span class="attr">mysql.db.name:</span> <span class="string">&quot;nacos&quot;</span></span><br><span class="line">  <span class="attr">mysql.port:</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">  <span class="attr">mysql.user:</span> <span class="string">&quot;root&quot;</span></span><br><span class="line">  <span class="attr">mysql.password:</span> <span class="string">&quot;6pH5M1mrH^JLD8mU&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">pod.alpha.kubernetes.io/initialized:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;app&quot;</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">nacos</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">&quot;kubernetes.io/hostname&quot;</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8snacos</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/nacos-server:v2.3.2</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">&quot;2Gi&quot;</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9849</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">7848</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_REPLICAS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PLATFORM</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">mysql</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_HOST</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.host</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.db.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PORT</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.port</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_USER</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.user</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">nacos-cm</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">mysql.password</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVER_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;8848&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_APPLICATION_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;8848&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PREFER_HOST_MODE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;hostname&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVERS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&gt;-</span></span><br><span class="line"><span class="string">                nacos-0.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string">                nacos-1.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string">                nacos-2.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string"></span>            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_AUTH_ENABLE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_AUTH_IDENTITY_KEY</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">serverIdentity</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_AUTH_IDENTITY_VALUE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">RWJEeFVwV2N3M0c5bENCWnFab0t0cVp5cW1zQ0gyS3RleDVUQTF6VFh4T0lWbTZmMXEK</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_AUTH_TOKEN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">SecretKeyXXjYYn7qwURG1bqBSDc8fBYqi5NwFOGgtwRX1lfKy0Ihl5Cdva3B7nJpZlV0</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br></pre></td></tr></table></figure><h2 id="ingress-规则"><a href="#ingress-规则" class="headerlink" title="ingress 规则"></a>ingress 规则</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="comment"># kubernetes.io/ingress.class: &quot;nginx&quot;                   # 这里是ingressclass名字, 老版本k8s用这个</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/app-root:</span> <span class="string">&quot;/nacos&quot;</span></span><br><span class="line">    <span class="comment"># 下面的配置和上面的app-root效果一样，就是跳转到 /nacos</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/configuration-snippet: |</span></span><br><span class="line">    <span class="comment">#   rewrite ^/$ https://$host/nacos/ redirect;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prod-nacos-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">&quot;public-nginx&quot;</span>    <span class="comment"># 这里是ingressclass名字, 新版本k8s用这个</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">这里修改为nacos的域名</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">nacos-svc</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">8848</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">这里修改为nacos的域名</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span>     <span class="comment"># 这里配置ssl证书的secret名字</span></span><br></pre></td></tr></table></figure><p>其他常见问题可以参考 <a href="/posts/sebxm6/">在Kubernetes中部署nacos 2.1.0</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> nacos </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes中的静态Pod</title>
      <link href="/posts/sfrqkr/"/>
      <url>/posts/sfrqkr/</url>
      
        <content type="html"><![CDATA[<h2 id="啥是静态-Pod"><a href="#啥是静态-Pod" class="headerlink" title="啥是静态 Pod"></a>啥是静态 Pod</h2><p>静态 pod 就是不通过 Kubernetes 控制器直接运行的 pod，比如下面是一个 nginx 的静态 pod</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">static-web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/nginx:1.27.0</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><p>这种 pod 如果通过 <code>kubectl delete pod static-web</code> 来删除， 那么就直接删除了，不会像控制器一样重建 pod。</p><h2 id="kubeadm-集群的组件"><a href="#kubeadm-集群的组件" class="headerlink" title="kubeadm 集群的组件"></a>kubeadm 集群的组件</h2><h3 id="二进制运行的组件"><a href="#二进制运行的组件" class="headerlink" title="二进制运行的组件"></a>二进制运行的组件</h3><p>二进制运行的组件就是不通过容器化，直接在机器上运行的组件，有 3 个组件 <code>kubeadm</code> <code>kubelet</code> <code>kubectl</code> ，其中：</p><ul><li>kubectl 这个是客户端程序，不是必须的，如果需要用到 kubectl 命令，安装一个就行</li><li>kubeadm 这个程序每台机器都需要安装，使用它来管理 master，worker 节点也需要执行 kubeadm 才能加入集群</li><li>kubelet 这个组件每台机器都需要安装， 它负责管理节点上的 Pod 生命周期，也是它负责将节点注册到集群中</li></ul><p><code>kubelet</code> 组件在节点上是通过 <code>systemd</code> 来管理的。</p><h3 id="静态-Pod-组件"><a href="#静态-Pod-组件" class="headerlink" title="静态 Pod 组件"></a>静态 Pod 组件</h3><p>使用 <code>kubeadm</code> 部署的集群中，<code>etcd</code>、<code>kube-apiserver</code>、<code>kube-controller-manager</code>、<code>kube-scheduler</code> 这些组件都是通过静态 Pod 来运行的，如图：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406281033638.png" alt="image.png|754"></p><p>但是有个奇怪的问题， 把这些静态 Pod 删除后，它会自己重建一个新的，不像静态 pod 一样删除了就没了。</p><h2 id="查看-kubelet-配置"><a href="#查看-kubelet-配置" class="headerlink" title="查看 kubelet 配置"></a>查看 kubelet 配置</h2><p>由于所有的 Pod 都是 <code>kubelet</code> 负责启动的，我们看下 <code>kubelet</code> 的配置</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406281046264.png" alt="image.png|849"></p><p>找到配置文件在 <code>/var/lib/kubelet/config.yaml</code> , 查看下这个文件的内容：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406281047136.png" alt="image.png"></p><p><code>staticPodPath</code> 定义了静态 Pod yaml 文件的位置，可以看到果然都在这里：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406281049578.png" alt="image.png"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将上面的 Nginx 静态 Pod 的 yaml 文件复制到这个目录，可以看到 Pod 自动创建出来了</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406281052803.png" alt="image.png"></p><p><code>kubelet</code> 自动创建的静态 Pod 会在 Pod 名字后面加上 <code>-&lt;计算机名&gt;</code></p><p>将 <code>/etc/kubernetes/manifests</code> 中的 yaml 文件删除，pod 也会自动销毁。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S的headless service</title>
      <link href="/posts/sfo7gw/"/>
      <url>/posts/sfo7gw/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-headless-service"><a href="#什么是-headless-service" class="headerlink" title="什么是 headless service"></a>什么是 headless service</h2><p>headless service 是配合 statefulset 控制器使用的，就是一个没有 ip 地址的普通 service</p><h2 id="yml-配置"><a href="#yml-配置" class="headerlink" title="yml 配置"></a>yml 配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zk-hs</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-client</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2181</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">2181</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-follower</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2888</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">2888</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-election</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">3888</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3888</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure><p>在 statefulset 里指定 service 名字：</p><blockquote><p>如果这里不设置 <code>serviceName</code> 的话，service 还是可以通的，但是 pod 就没有固定的域名了。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">zk-hs</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">zookeeper</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">zookeeper</span></span><br></pre></td></tr></table></figure><h2 id="用处"><a href="#用处" class="headerlink" title="用处"></a>用处</h2><p>比如说一个 statefulset 控制器运行的 zookeeper 集群，就可以在配置文件中配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOO_ENABLE_AUTH</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ALLOW_ANONYMOUS_LOGIN</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOO_SERVERS</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">      zookeeper-0.zk-hs.default.svc.cluster.local:2888:3888</span></span><br><span class="line"><span class="string">      zookeeper-1.zk-hs.default.svc.cluster.local:2888:3888</span></span><br><span class="line"><span class="string">      zookeeper-2.zk-hs.default.svc.cluster.local:2888:3888</span></span><br></pre></td></tr></table></figure><p>其中，这 3 个 pod 的域名是不会变的。</p><h2 id="一些测试"><a href="#一些测试" class="headerlink" title="一些测试"></a>一些测试</h2><h3 id="ping-的效果"><a href="#ping-的效果" class="headerlink" title="ping 的效果"></a>ping 的效果</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406261238205.png" alt="image.png|745"></p><p>10.1.0.119、10.1.0.137、10.1.0.124 对应的正好是 Pod IP</p><h3 id="使用-dig-来解析"><a href="#使用-dig-来解析" class="headerlink" title="使用 dig 来解析"></a>使用 dig 来解析</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406261308981.png" alt="image.png|738"></p><h3 id="反向解析-pod-ip"><a href="#反向解析-pod-ip" class="headerlink" title="反向解析 pod ip"></a>反向解析 pod ip</h3><p><code>headless service</code> 的 <code>pod ip</code> 可以反向解析，并且解析到的域名是个固定值（不会随着 pod 销毁重建而变化）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406261309782.png" alt="image.png|740"></p><p>看看另一个服务，创建了两个 Service，一个普通的 service，一个 headless service，那么这个 pod 的域名是什么：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406261313057.png" alt="image.png|737"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> Service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes中部署zookeeper集群</title>
      <link href="/posts/sfbpoq/"/>
      <url>/posts/sfbpoq/</url>
      
        <content type="html"><![CDATA[<h2 id="部署遇到的问题"><a href="#部署遇到的问题" class="headerlink" title="部署遇到的问题"></a>部署遇到的问题</h2><h3 id="挂载目录没有写入权限"><a href="#挂载目录没有写入权限" class="headerlink" title="挂载目录没有写入权限"></a>挂载目录没有写入权限</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406191739203.png" alt="image.png"></p><p>修改容器启动命令，查看到用户 id 是 1001</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406201606689.png" alt="image.png"></p><p>官方也有说明<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406191741358.png" alt="image.png"></p><h4 id="解决方法-1-使用-initcontainer-授权"><a href="#解决方法-1-使用-initcontainer-授权" class="headerlink" title="解决方法 1: 使用 initcontainer 授权"></a>解决方法 1: 使用 initcontainer 授权</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">initContainers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">busybox:1.28</span></span><br><span class="line">  <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, <span class="string">&quot;chown -R 1001:1001 /bitnami/&quot;</span>]</span><br><span class="line">  <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/bitnami/zookeeper</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406191826920.png" alt="image.png|580"></p><h4 id="解决方法-2：-增加安全上下文，使用-root-用户"><a href="#解决方法-2：-增加安全上下文，使用-root-用户" class="headerlink" title="解决方法 2： 增加安全上下文，使用 root 用户"></a>解决方法 2： 增加安全上下文，使用 root 用户</h4><p>这么做会降低容器的安全性，不推荐！</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">securityContext:</span></span><br><span class="line">  <span class="attr">runAsUser:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">runAsGroup:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406191746763.png" alt="image.png"></p><h2 id="最终的-yaml-文件"><a href="#最终的-yaml-文件" class="headerlink" title="最终的 yaml 文件"></a>最终的 yaml 文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zk-hs</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-client</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2181</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">2181</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-follower</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2888</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">2888</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-election</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">3888</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3888</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">zk-hs</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">zookeeper</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">zookeeper</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 使用 initContainers 解决挂载目录没有权限写入问题</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">busybox:1.28</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, <span class="string">&quot;chown -R 1001:1001 /bitnami/&quot;</span>]</span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/bitnami/zookeeper</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">zookeeper</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">bitnami/zookeeper:3.8.2</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-ec&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line"><span class="string">              HOSTNAME=&quot;$(hostname -s)&quot;</span></span><br><span class="line"><span class="string">              if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then</span></span><br><span class="line"><span class="string">                ORD=$&#123;BASH_REMATCH[2]&#125;</span></span><br><span class="line"><span class="string">                export ZOO_SERVER_ID=&quot;$((ORD + 1 ))&quot;</span></span><br><span class="line"><span class="string">              else</span></span><br><span class="line"><span class="string">                echo &quot;Failed to get index from hostname $HOST&quot;</span></span><br><span class="line"><span class="string">                exit 1</span></span><br><span class="line"><span class="string">              fi</span></span><br><span class="line"><span class="string">              exec /entrypoint.sh /run.sh</span></span><br><span class="line"><span class="string"></span>          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">1</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">50m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOO_ENABLE_AUTH</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ALLOW_ANONYMOUS_LOGIN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOO_SERVERS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                zookeeper-0.zk-hs.default.svc.cluster.local:2888:3888</span></span><br><span class="line"><span class="string">                zookeeper-1.zk-hs.default.svc.cluster.local:2888:3888</span></span><br><span class="line"><span class="string">                zookeeper-2.zk-hs.default.svc.cluster.local:2888:3888</span></span><br><span class="line"><span class="string"></span>          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">2181</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">follower</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">2888</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">election</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">3888</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="string">client</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">6</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="string">client</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">6</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/bitnami/zookeeper</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">accessModes:</span> [ <span class="string">&quot;ReadWriteOnce&quot;</span> ]</span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">&quot;longhorn&quot;</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">2Gi</span></span><br></pre></td></tr></table></figure><h2 id="集群验证"><a href="#集群验证" class="headerlink" title="集群验证"></a>集群验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查FQDN</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 0 1 2; <span class="keyword">do</span> kubectl <span class="built_in">exec</span> zookeeper-<span class="variable">$i</span> -- hostname -f; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查生成的myid文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 0 1 2; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;myid zookeeper-<span class="variable">$i</span>&quot;</span>;kubectl <span class="built_in">exec</span> zookeeper-<span class="variable">$i</span> -- <span class="built_in">cat</span> /bitnami/zookeeper/data/myid; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查自动生成的配置文件</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it zookeeper-0 --  <span class="built_in">cat</span> /opt/bitnami/zookeeper/conf/zoo.cfg | grep -vE <span class="string">&quot;^#|^$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查集群状态</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 0 1 2; <span class="keyword">do</span> <span class="built_in">echo</span> -e <span class="string">&quot;# myid zookeeper-<span class="variable">$i</span> \n&quot;</span>;kubectl <span class="built_in">exec</span> zookeeper-<span class="variable">$i</span> -- opt/bitnami/zookeeper/bin/zkServer.sh status;<span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>; <span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl run --<span class="built_in">rm</span> -it zookeeper-client --image=zookeeper:3.8.2 -- bash</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /apache-zookeeper-3.8.2-bin/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连上 zookeeper 第一个节点</span></span><br><span class="line">./zkCli.sh -server zookeeper-0.zk-hs.default.svc.cluster.local:2181</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建测试数据</span></span><br><span class="line">[zk: zookeeper-0.zk-hs.default.svc.cluster.local:2181(CONNECTED) 0] create /test test-data</span><br><span class="line">Created /test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取测试数据</span></span><br><span class="line">[zk: zookeeper-0.zk-hs.default.svc.cluster.local:2181(CONNECTED) 1] get /test</span><br><span class="line">test-data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连上 zookeeper 第二个节点</span></span><br><span class="line">./zkCli.sh -server zookeeper-1.zk-hs.default.svc.cluster.local:2181</span><br><span class="line"><span class="comment"># 获取数据</span></span><br><span class="line">[zk: zookeeper-1.zk-hs.default.svc.cluster.local:2181(CONNECTED) 0] get /test</span><br><span class="line">test-data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> 有状态服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 配置自动登录</title>
      <link href="/posts/sewhsk/"/>
      <url>/posts/sewhsk/</url>
      
        <content type="html"><![CDATA[<p>windows 中有部分应用程序需要登录当前账户才可以自动启动，或者嫌输密码麻烦，都可以设置自动登录，不用删除开机密码（删除开机密码也要鼠标点一下登录才可以登录）</p><h2 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h2><p>旧版本 windows 10 或者 windows 7 可以直接设置，但是新版本 windows 没有了这个选项，需要修改注册表配置</p><p>将下面文本保存成 reg 文件，双击导入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\PasswordLess\Device]</span><br><span class="line">&quot;DevicePasswordLessBuildVersion&quot;=dword:00000000</span><br></pre></td></tr></table></figure><h2 id="netplwiz-配置"><a href="#netplwiz-配置" class="headerlink" title="netplwiz 配置"></a>netplwiz 配置</h2><p>win + R 输入 netplwiz 打开用户管理界面。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406111331601.png" alt="image.png"></p><p>取消勾选 要使用本计算机，用户必须输入用户名和密码 选项， 在弹出的框中输入当前用户密码。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406111331636.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 配置记录 </tag>
            
            <tag> 注册表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubeadm 部署的集群 常见问题汇总</title>
      <link href="/posts/sepu3k/"/>
      <url>/posts/sepu3k/</url>
      
        <content type="html"><![CDATA[<h2 id="扩容节点"><a href="#扩容节点" class="headerlink" title="扩容节点"></a>扩容节点</h2><h3 id="扩容-Worker-节点"><a href="#扩容-Worker-节点" class="headerlink" title="扩容 Worker 节点"></a>扩容 Worker 节点</h3><blockquote><p>kubeadm init 后会输出在终端上, 有效期 2 小时, 超时后可以重新生成</p></blockquote><p>生成添加命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><h3 id="扩容-Master-节点"><a href="#扩容-Master-节点" class="headerlink" title="扩容 Master 节点"></a>扩容 Master 节点</h3><h4 id="生成加入命令"><a href="#生成加入命令" class="headerlink" title="生成加入命令"></a>生成加入命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成证书, 记录 certificate key</span></span><br><span class="line">kubeadm init phase upload-certs --upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取加入命令</span></span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将上面的输出结果拼接，这个就是加入 master 的命令，在新的 master 上执行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(kubeadm token create --print-join-command)</span> --control-plane --certificate-key <span class="subst">$(kubeadm init phase upload-certs --upload-certs | tail -1)</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="修改负载均衡配置"><a href="#修改负载均衡配置" class="headerlink" title="修改负载均衡配置"></a>修改负载均衡配置</h4><p>扩容完 master 节点不要忘了将新的节点增加到 Apiserver 的负载均衡上。</p><h4 id="证书位置"><a href="#证书位置" class="headerlink" title="证书位置"></a>证书位置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里能看到在用哪个 secret</span></span><br><span class="line">kubectl get secret -n kube-system kubeadm-certs -o yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看对应的 secret</span></span><br><span class="line">kubectl get secret -n kube-system bootstrap-token-277b0n -o yaml</span><br></pre></td></tr></table></figure><h2 id="移除节点"><a href="#移除节点" class="headerlink" title="移除节点"></a>移除节点</h2><h3 id="移除-worker-节点"><a href="#移除-worker-节点" class="headerlink" title="移除 worker 节点"></a>移除 worker 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl drain worker2 --ignore-daemonsets</span><br><span class="line">kubectl delete node worker2</span><br></pre></td></tr></table></figure><h3 id="移除-etcd-member"><a href="#移除-etcd-member" class="headerlink" title="移除 etcd member"></a>移除 etcd member</h3><p>如果要移除 master 节点，并且 master 节点上部署了 etcd ，那除了上一步操作，还需要从 etcd 集群中移除这个节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it -n kube-system etcd-master1 -- /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看etcd member list</span></span><br><span class="line">etcdctl --endpoints 127.0.0.1:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key member list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过ID来删除etcd member</span></span><br><span class="line">etcdctl --endpoints 127.0.0.1:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key member remove 12637f5ec2bd02b8</span><br></pre></td></tr></table></figure><h2 id="升级集群"><a href="#升级集群" class="headerlink" title="升级集群"></a>升级集群</h2><p>kubeadm 搭建的集群升级比较方便，总体步骤如下：</p><ol><li>升级第一个 master 节点</li><li>升级其余的 master 节点</li><li>升级 worker 节点<br>如果集群运行着服务，升级节点前需要先腾空节点 <code>kubectl drain --ignore-daemonsets &lt;节点名称&gt;</code> 升级完成后，再恢复调度 <code>kubectl uncordon &lt;节点名称&gt; </code><br>官方文档：<a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/</a></li></ol><h3 id="升级第一个-master-节点"><a href="#升级第一个-master-节点" class="headerlink" title="升级第一个 master 节点"></a>升级第一个 master 节点</h3><p>上面安装的 <code>kubelet</code> <code>kubeadm</code> <code>kubectl</code> 这 3 个是机器上使用 yum 安装的，所以需要通过 yum 来升级。先升级 <code>kubeadm</code> 组件， 新版本每个大版本一个 yum 仓库，需要先修改仓库配置文件，参考：<a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/change-package-repository/">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/change-package-repository/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可用的版本</span></span><br><span class="line">sudo yum list --showduplicates kubeadm --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级kubeadm到指定的版本</span></span><br><span class="line">sudo yum update kubeadm-1.29.6 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证kubeadm版本</span></span><br><span class="line">kubeadm version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级检查，主要检查兼容性以及建议升级到的版本</span></span><br><span class="line">kubeadm upgrade plan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始升级，升级 `kube-apiserver` `kube-controller-manager` `kube-scheduler` 这些组件在节点上是以静态 Pod 的形式存在的。</span></span><br><span class="line">kubeadm upgrade apply v1.29.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把其他组件也一块升级了</span></span><br><span class="line">sudo yum update kubelet-1.29.6 kubectl-1.29.6 cri-tools kubernetes-cni --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启kubelet</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart kubelet</span><br></pre></td></tr></table></figure><h3 id="升级其他-master-节点"><a href="#升级其他-master-节点" class="headerlink" title="升级其他 master 节点"></a>升级其他 master 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级kubeadm到指定的版本</span></span><br><span class="line">sudo yum update kubeadm-1.29.6 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证kubeadm版本</span></span><br><span class="line">kubeadm version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级节点</span></span><br><span class="line">kubeadm upgrade node</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级其他软件包</span></span><br><span class="line">sudo yum update kubelet-1.29.6 kubectl-1.29.6 cri-tools kubernetes-cni --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart kubelet</span><br></pre></td></tr></table></figure><h3 id="升级-worker-节点"><a href="#升级-worker-节点" class="headerlink" title="升级 worker 节点"></a>升级 worker 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级软件包</span></span><br><span class="line">sudo yum update kubeadm-1.29.6 kubelet-1.29.6 kubectl-1.29.6 cri-tools kubernetes-cni --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart kubelet</span><br></pre></td></tr></table></figure><h2 id="测试集群是否正常"><a href="#测试集群是否正常" class="headerlink" title="测试集群是否正常"></a>测试集群是否正常</h2><p>创建一个 nginx 的 pod 资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line">kubectl expose deployment nginx --port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line">kubectl get deploy,svc,pod</span><br></pre></td></tr></table></figure><p>访问 nodeport，检查能否访问到 nginx 服务</p><h2 id="查看-ETCD-状态"><a href="#查看-ETCD-状态" class="headerlink" title="查看 ETCD 状态"></a>查看 ETCD 状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -n kube-system etcd-master1 -- etcdctl --endpoints=<span class="string">&quot;10.0.0.13:2379,10.0.0.12:2379,10.0.0.11:2379&quot;</span> --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key endpoint status --write-out=table</span><br></pre></td></tr></table></figure><h2 id="pause-镜像版本问题"><a href="#pause-镜像版本问题" class="headerlink" title="pause 镜像版本问题"></a>pause 镜像版本问题</h2><p>使用 <code>kubeadm image pull</code> 事先把镜像拉取下来，但是后面 <code>kubeadm init</code> 还是报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; journalctl -xeu kubelet -f</span><br><span class="line"></span><br><span class="line">Jul 22 08:35:49 master1 kubelet[2079]: E0722 08:35:49.169395    2079 pod_workers.go:190] <span class="string">&quot;Error syncing pod, skipping&quot;</span> err=<span class="string">&quot;failed to \&quot;CreatePodSandbox\&quot; for \&quot;etcd-master1_kube-system(642dcd53ce8660a2287cd7eaabcd5fdc)\&quot; with CreatePodSandboxError: \&quot;Failed to create sandbox for pod \\\&quot;etcd-master1_kube-system(642dcd53ce8660a2287cd7eaabcd5fdc)\\\&quot;: rpc error: code = Unknown desc = failed to get sandbox image \\\&quot;k8s.gcr.io/pause:3.6\\\&quot;: failed to pull image \\\&quot;k8s.gcr.io/pause:3.6\\\&quot;: failed to pull and unpack image \\\&quot;k8s.gcr.io/pause:3.6\\\&quot;: failed to resolve reference \\\&quot;k8s.gcr.io/pause:3.6\\\&quot;: failed to do request: Head \\\&quot;https://k8s.gcr.io/v2/pause/manifests/3.6\\\&quot;: dial tcp 142.250.157.82:443: connect: connection refused\&quot;&quot;</span> pod=<span class="string">&quot;kube-system/etcd-master1&quot;</span> podUID=642dcd53ce8660a2287cd7eaabcd5fdc</span><br></pre></td></tr></table></figure><p>这里我们已经提前拉取了镜像在本地了， 但是 init 的时候还是会从 <code>k8s.gcr.io</code> 拉取镜像，造成 init 失败，如果你的网络可以访问 <code>k8s.gcr.io</code> 的情况下则可以完成初始化, 你会发现这里拉取失败的镜像 tag 和 <code>kubeadm config images pull</code> 拉下来的版本不一致。</p><p>问题原因：containerd 的配置文件里面指定了 pause 的镜像，这里会拉取这个版本的镜像，和 <code>kubeadm</code> 不一致。所以两个镜像都需要，或者修改下 containerd 的配置。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405052245258.png" alt="image.png|522"></p><h2 id="修改-NodePort-端口范围"><a href="#修改-NodePort-端口范围" class="headerlink" title="修改 NodePort 端口范围"></a>修改 NodePort 端口范围</h2><p>在 master 节点上修改:</p><p>vim &#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-apiserver.yaml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.22</span><span class="string">:6443</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-apiserver</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--advertise-address=10.0.0.22</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--allow-privileged=true</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="comment"># 增加了这一行</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-node-port-range=1-65535</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.k8s.io/kube-apiserver:v1.27.3</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">failureThreshold:</span> <span class="number">8</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.22</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/livez</span></span><br></pre></td></tr></table></figure><p>修改完成后保存, apiserver 会自动重启.</p><h2 id="master-节点允许调度"><a href="#master-节点允许调度" class="headerlink" title="master 节点允许调度"></a>master 节点允许调度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 老版本Kubernetes执行这个，我测试1.21是这污点</span></span><br><span class="line"><span class="comment"># kubectl taint node --all node-role.kubernetes.io/master:NoSchedule-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.28版本 去掉master上的这个污点即可</span></span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io/control-plane-</span><br></pre></td></tr></table></figure><h2 id="手动证书更新"><a href="#手动证书更新" class="headerlink" title="手动证书更新"></a>手动证书更新</h2><p><a href="/posts/ltckjzor/">使用kubeadm部署的集群证书过期后处理</a></p><h2 id="修改-kube-proxy-代理模式"><a href="#修改-kube-proxy-代理模式" class="headerlink" title="修改 kube-proxy 代理模式"></a>修改 kube-proxy 代理模式</h2><p>相比 iptables，使用 ipvs 可以提供更好的性能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system edit configmap kube-proxy</span><br></pre></td></tr></table></figure><p>mode 参数修改成 ipvs</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312112232082.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system rollout restart daemonset kube-proxy</span><br></pre></td></tr></table></figure><p>查看 kube-proxy 日志，出现 Using ipvs Proxier 说明修改成功。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312112236807.png" alt="image.png"></p><h2 id="自动补全功能"><a href="#自动补全功能" class="headerlink" title="自动补全功能"></a>自动补全功能</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">CentOS</button><button type="button" class="tab">Ubuntu</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install bash-completion</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y bash-completion</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; ~/.bashrc &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 常用操作 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 搭建 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 PowerShell 修改 Windows 防火墙规则</title>
      <link href="/posts/seln9g/"/>
      <url>/posts/seln9g/</url>
      
        <content type="html"><![CDATA[<h2 id="修改网络位置（专用网络或共用网络）"><a href="#修改网络位置（专用网络或共用网络）" class="headerlink" title="修改网络位置（专用网络或共用网络）"></a>修改网络位置（专用网络或共用网络）</h2><p>在 windows 7 时代在控制面板里是可以直接修改的， 但是在 Windows 11 已经不能修改了。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406051653691.png" alt="image.png"></p><p>使用公用网络会影响到防火墙策略， 比如在专用网络下， 局域网内是可以网络发现其他设备的。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406051656111.png" alt="image.png"></p><p>比如我用 <code>zerotier</code> 这个软件会给电脑安装一个虚拟网卡，家里的电脑 <code>zerotier</code> 的网卡设置成了公用网络，那么就不能 rdp 远程连接家里电脑了。</p><h3 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h3><p>需要以管理员身份运行 <code>PowerShell</code> 来执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\iuxt&gt; <span class="built_in">Get-NetConnectionProfile</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name                     : CMCC<span class="literal">-Captain</span></span><br><span class="line">InterfaceAlias           : WLAN</span><br><span class="line">InterfaceIndex           : <span class="number">13</span></span><br><span class="line">NetworkCategory          : Private</span><br><span class="line">DomainAuthenticationKind : None</span><br><span class="line">IPv4Connectivity         : Internet</span><br><span class="line">IPv6Connectivity         : Internet</span><br><span class="line"></span><br><span class="line">Name                     : 网络 <span class="number">3</span></span><br><span class="line">InterfaceAlias           : ZeroTier One [<span class="number">272</span><span class="type">f5eae1628958e</span>]</span><br><span class="line">InterfaceIndex           : <span class="number">20</span></span><br><span class="line">NetworkCategory          : Public</span><br><span class="line">DomainAuthenticationKind : None</span><br><span class="line">IPv4Connectivity         : LocalNetwork</span><br><span class="line">IPv6Connectivity         : NoTraffic</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据 <code>InterfaceIndex</code> 来修改（也可以根据 InterfaceAlias ）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-NetConnectionProfile</span> <span class="literal">-InterfaceIndex</span> <span class="number">20</span> <span class="literal">-NetworkCategory</span> Private</span><br></pre></td></tr></table></figure><h2 id="放通某个网卡"><a href="#放通某个网卡" class="headerlink" title="放通某个网卡"></a>放通某个网卡</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 Get-NetAdapter 或 Get-NetConnectionProfile 获取网卡的ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据ID放行</span></span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;允许zerotier网卡&quot;</span> <span class="literal">-ID</span> <span class="number">23</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据名字放行</span></span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;允许NAT网卡&quot;</span> <span class="literal">-InterfaceAlias</span> <span class="string">&quot;vEthernet (NAT)&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow</span><br></pre></td></tr></table></figure><h2 id="禁止某个程序联网"><a href="#禁止某个程序联网" class="headerlink" title="禁止某个程序联网"></a>禁止某个程序联网</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;Block-adobe-out&quot;</span> <span class="literal">-Direction</span> Outbound <span class="literal">-Program</span> <span class="string">&quot;C:\Program Files\Adobe\Adobe Photoshop 2025\Photoshop.exe&quot;</span> <span class="literal">-Action</span> Block</span><br><span class="line"></span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;Block-adobe-in&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Program</span> <span class="string">&quot;C:\Program Files\Adobe\Adobe Photoshop 2025\Photoshop.exe&quot;</span> <span class="literal">-Action</span> Block</span><br></pre></td></tr></table></figure><h2 id="允许某个网段"><a href="#允许某个网段" class="headerlink" title="允许某个网段"></a>允许某个网段</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;Allow Subnet 10.233.233.0/24&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow <span class="literal">-RemoteAddress</span> <span class="number">10.233</span>.<span class="number">233.0</span>/<span class="number">24</span> <span class="literal">-Protocol</span> Any <span class="literal">-Enabled</span> True</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PowerShell </tag>
            
            <tag> 配置记录 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 使用 Easyocr 进行图像识别</title>
      <link href="/posts/sel45f/"/>
      <url>/posts/sel45f/</url>
      
        <content type="html"><![CDATA[<p>如果你有 NVIDIA GPU，可以额外安装 CUDA，提供更好的性能，没有 NVIDIA GPU，可以使用 CPU 计算。</p><p>easyocr 官方地址：<a href="https://github.com/jaidedai/easyocr">https://github.com/jaidedai/easyocr</a></p><h2 id="安装-pytorch"><a href="#安装-pytorch" class="headerlink" title="安装 pytorch"></a>安装 pytorch</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch torchvision torchaudio</span><br></pre></td></tr></table></figure><h2 id="安装-easyocr"><a href="#安装-easyocr" class="headerlink" title="安装 easyocr"></a>安装 easyocr</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install easyocr</span><br></pre></td></tr></table></figure><h2 id="精简输出"><a href="#精简输出" class="headerlink" title="精简输出"></a>精简输出</h2><p>默认情况下会输出：<code>Neither CUDA nor MPS are available - defaulting to CPU. Note: This module is much faster with a GPU.</code> 可以通过添加参数 <code>verbose=False</code> 来去掉这个提示。</p><p>默认会输出坐标、字符等信息，如果只需要输出字符，可以增加参数 <code>detail=0</code> 获得精简的输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easyocr</span><br><span class="line">reader = easyocr.Reader([<span class="string">&#x27;en&#x27;</span>], gpu=<span class="literal">False</span>, verbose=<span class="literal">False</span>) <span class="comment"># 这里加载英文模型，如果需要识别简体中文，可以 reader = easyocr.Reader([&#x27;ch_sim&#x27;, &#x27;en&#x27;])</span></span><br><span class="line">result = reader.readtext(<span class="string">&#x27;D:\\ocr\\1.png&#x27;</span>,detail=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">0</span>].replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>))</span><br></pre></td></tr></table></figure><p>第一次运行会下载模型，模型默认存储位置在：<code>%userprofile%\.EasyOCR\model</code></p><h2 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h2><h3 id="fbgemm-dll-加载失败"><a href="#fbgemm-dll-加载失败" class="headerlink" title="fbgemm.dll 加载失败"></a>fbgemm.dll 加载失败</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">OSError: [<span class="title">WinError</span> 126] 找不到指定的模块。 <span class="title">Error</span> <span class="title">loading</span> &quot;<span class="title">D</span>:\<span class="title">ocr</span>\<span class="title">venv</span>\<span class="title">Lib</span>\<span class="title">site</span>-<span class="title">packages</span>\<span class="title">torch</span>\<span class="title">lib</span>\<span class="title">fbgemm.dll</span>&quot; <span class="title">or</span> <span class="title">one</span> <span class="title">of</span> <span class="title">its</span> <span class="title">dependencies</span>.</span></span><br></pre></td></tr></table></figure><p>在 <code>widnows</code> 环境下，需要安装 <code>Microsoft Visual C++ Redistributable</code> <a href="https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist">https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Python </tag>
            
            <tag> OCR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes中部署nacos 2.1.0</title>
      <link href="/posts/sebxm6/"/>
      <url>/posts/sebxm6/</url>
      
        <content type="html"><![CDATA[<p>本次在 Kubernetes 上部署 nacos 2.1.0 版本， 部署 3 节点集群，不做数据持久化（nacos 的配置管理是存储 MySQL 数据库的，服务发现是需要本地存储的）新版本 nacos 部署参考：</p><p><a href="/posts/sgajkk/">在Kubernetes中部署nacos 2.3.2</a></p><h2 id="MySQL-数据库准备"><a href="#MySQL-数据库准备" class="headerlink" title="MySQL 数据库准备"></a>MySQL 数据库准备</h2><p>创建数据库，配置好账号权限，执行如下 SQL 建表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for config_info</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `config_info`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `c_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_use` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `effect` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_schema` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1485</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;config_info&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for config_info_aggr</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `config_info_aggr`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_aggr`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `datum_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;datum_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;增加租户字段&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for config_info_beta</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `config_info_beta`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_beta`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `beta_ips` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;betaIps&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;config_info_beta&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for config_info_tag</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `config_info_tag`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_tag`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tag_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;config_info_tag&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for config_tags_relation</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `config_tags_relation`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_tags_relation`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `tag_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_name&#x27;</span>,</span><br><span class="line">  `tag_type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_type&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `idx_tenant_id`(`tenant_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;config_tag_relation&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for group_capacity</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `group_capacity`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `group_capacity`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_group_id`(`group_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;集群、各Group容量信息表&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for his_config_info</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `his_config_info`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `his_config_info`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">64</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">  `src_user` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `op_type` <span class="type">char</span>(<span class="number">10</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `idx_gmt_create`(`gmt_create`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `idx_gmt_modified`(`gmt_modified`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `idx_did`(`data_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1683</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;多租户改造&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for permissions</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `permissions`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `permissions`  (</span><br><span class="line">  `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `resource` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `action` <span class="type">varchar</span>(<span class="number">8</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_role_permission`(`role`, `resource`, `action`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for roles</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `roles`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `roles`  (</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `idx_user_role`(`username`, `role`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tenant_capacity</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `tenant_capacity`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_capacity`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Tenant ID&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;聚合子配置最大个数&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_tenant_id`(`tenant_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;租户容量信息表&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tenant_info</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `tenant_info`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_info`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `kp` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;kp&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tenant_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_name&#x27;</span>,</span><br><span class="line">  `tenant_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tenant_desc&#x27;</span>,</span><br><span class="line">  `create_source` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create_source&#x27;</span>,</span><br><span class="line">  `gmt_create` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `idx_tenant_id`(`tenant_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">43</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin COMMENT <span class="operator">=</span> <span class="string">&#x27;tenant_info&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for users</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `users`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users`  (</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">500</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `enabled` tinyint(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`username`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (username, password, enabled) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> roles (username, role) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;ROLE_ADMIN&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   ipv6 support   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `config_info_tag`</span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span> AFTER `src_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `his_config_info`</span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> AFTER `src_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `config_info`</span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span> AFTER `src_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `config_info_beta`</span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span> AFTER `src_user`;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是迁移， 可以直接将 nacos 数据库整体迁移，免去建表步骤。</p><h2 id="创建-Pod"><a href="#创建-Pod" class="headerlink" title="创建 Pod"></a>创建 Pod</h2><p>namespace 按照需求来修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/nacos-server:v2.1.0</span></span><br><span class="line">          <span class="comment"># image: nacos/nacos-server:v2.1.0       # 官方镜像地址</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">9848</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">9849</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">7848</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_REPLICAS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_HOST</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">替换成MySQL地址</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_DB_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">nacos</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_USER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">MySQL用户名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_SERVICE_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">MySQL密码</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVER_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;8848&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_APPLICATION_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;8848&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PREFER_HOST_MODE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">hostname</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_AUTH_ENABLE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">              </span><br><span class="line">            <span class="comment"># 这里的地址需要根据实际情况进行修改，用curl先测试</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NACOS_SERVERS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&gt;-</span></span><br><span class="line"><span class="string">                nacos-0.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string">                nacos-1.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string">                nacos-2.nacos-headless.public.svc.cluster.local:8848</span></span><br><span class="line"><span class="string"></span>          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">nacos</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">podManagementPolicy:</span> <span class="string">OrderedReady</span></span><br></pre></td></tr></table></figure><h2 id="创建-Service"><a href="#创建-Service" class="headerlink" title="创建 Service"></a>创建 Service</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos-headless</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="comment"># annotations:</span></span><br><span class="line">    <span class="comment"># prometheus.io/path: /nacos/actuator/prometheus</span></span><br><span class="line">    <span class="comment"># prometheus.io/port: &quot;8848&quot;</span></span><br><span class="line">    <span class="comment"># prometheus.io/scrape: &quot;true&quot;</span></span><br><span class="line">    <span class="comment"># service.alpha.kubernetes.io/tolerate-unready-endpoints: &quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">client-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9849</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9849</span></span><br><span class="line">    <span class="comment">## 兼容1.4.x版本的选举端口</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">old-raft-rpc</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br></pre></td></tr></table></figure><h2 id="创建-ingress-规则"><a href="#创建-ingress-规则" class="headerlink" title="创建 ingress 规则"></a>创建 ingress 规则</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="comment"># kubernetes.io/ingress.class: &quot;nginx&quot;                   # 这里是ingressclass名字, 老版本k8s用这个</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/app-root:</span> <span class="string">&quot;/nacos&quot;</span></span><br><span class="line">    <span class="comment"># 下面的配置和上面的app-root效果一样，就是跳转到 /nacos</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/configuration-snippet: |</span></span><br><span class="line">    <span class="comment">#   rewrite ^/$ https://$host/nacos/ redirect;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prod-nacos-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">&quot;public-nginx&quot;</span>    <span class="comment"># 这里是ingressclass名字, 新版本k8s用这个</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">这里修改为nacos的域名</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">nacos-svc</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">8848</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">这里修改为nacos的域名</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span>     <span class="comment"># 这里配置ssl证书的secret名字</span></span><br></pre></td></tr></table></figure><p>ingress 规则作用是让网页控制台域名转发到 8848 端口，如果不需要域名，可以在 service 上开 nodeport，用 ip+ 端口来访问。</p><h2 id="检查部署情况"><a href="#检查部署情况" class="headerlink" title="检查部署情况"></a>检查部署情况</h2><p>部署完成后， 进入 nacos 的 pod，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /home/nacos/conf/cluster.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2023-11-21T14:48:56.695</span></span><br><span class="line">nacos-0.nacos-headless.public.svc.cluster.local:8848</span><br><span class="line">nacos-1.nacos-headless.public.svc.cluster.local:8848</span><br><span class="line">nacos-2.nacos-headless.public.svc.cluster.local:8848</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3 节点的 nacos，这里应该是 3 行配置。</p><h3 id="检查控制台"><a href="#检查控制台" class="headerlink" title="检查控制台"></a>检查控制台</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404291522377.png" alt="202404291522377.png|737"></p><p>状态为 UP 集群正常。</p><h3 id="检查集群状态日志"><a href="#检查集群状态日志" class="headerlink" title="检查集群状态日志"></a>检查集群状态日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /home/nacos/logs/naming-server.log</span><br></pre></td></tr></table></figure><p>观察有没有 ERROR 类似的日志。</p><h2 id="常用-API-接口"><a href="#常用-API-接口" class="headerlink" title="常用 API 接口"></a>常用 API 接口</h2><h3 id="获取配置文件"><a href="#获取配置文件" class="headerlink" title="获取配置文件"></a>获取配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启了认证的</span></span><br><span class="line">curl -X GET <span class="string">&quot;http://nacos-svc:8848/nacos/v1/cs/configs?dataId=&lt;配置文件ID&gt;&amp;group=DEFAULT_GROUP&amp;tenant=uat&amp;username=nacos&amp;password=nacos&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 未开启认证</span></span><br><span class="line">curl -X GET <span class="string">&quot;http://nacos-svc:8848/nacos/v1/cs/configs?dataId=&lt;配置文件ID&gt;&amp;group=DEFAULT_GROUP&amp;tenant=sit&quot;</span></span><br></pre></td></tr></table></figure><p>tenant 命名空间<br>dataID 配置文件名<br>group 分组，默认为 DEFAULT_GROUP</p><h3 id="关闭双写"><a href="#关闭双写" class="headerlink" title="关闭双写"></a>关闭双写</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;http://nacos-svc:8848/nacos/v1/ns/operator/switches?entry=doubleWriteEnabled&amp;value=false&amp;username=nacos&amp;password=nacos&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="nacos-修改密码不成功"><a href="#nacos-修改密码不成功" class="headerlink" title="nacos 修改密码不成功"></a>nacos 修改密码不成功</h3><p>修改密码提示已修改，并自动注销，登录时新密码无法登录，生效的还是旧密码</p><p>需要先将 <code>NACOS_AUTH_ENABLE</code> 关闭， 修改完成密码后再开启。</p><h3 id="账号登录后马上退出，提示没有权限"><a href="#账号登录后马上退出，提示没有权限" class="headerlink" title="账号登录后马上退出，提示没有权限"></a>账号登录后马上退出，提示没有权限</h3><p>账号登录后现实的是 public 命名空间，如果没有 public 命名空间的权限就会自动退出。</p><h3 id="执行-sql-建表的时候，提示-Specified-key-was-too-long-max-key-length-is-767-bytes"><a href="#执行-sql-建表的时候，提示-Specified-key-was-too-long-max-key-length-is-767-bytes" class="headerlink" title="执行 sql 建表的时候，提示 Specified key was too long; max key length is 767 bytes"></a>执行 sql 建表的时候，提示 Specified key was too long; max key length is 767 bytes</h3><p>需要修改 MySQL innodb_large_prefix 为 ON</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看参数</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_large_prefix&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改参数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> innodb_large_prefix <span class="operator">=</span> <span class="keyword">ON</span>;</span><br></pre></td></tr></table></figure><p>如果 MySQL 不允许修改参数， 那么也可以修改 nacos 的 SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- resource varchar(255) 这里长度改成150</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `permissions` (</span><br><span class="line">`role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`resource` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`action` <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">UNIQUE</span> INDEX `uk_role_permission` (`role`,`resource`,`action`) <span class="keyword">USING</span> BTREE</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="忘记密码-重置密码"><a href="#忘记密码-重置密码" class="headerlink" title="忘记密码 重置密码"></a>忘记密码 重置密码</h3><p>重置账号 nacos 密码 为 nacos</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `nacos`.`users` <span class="keyword">SET</span> `password` <span class="operator">=</span> <span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, `enabled` <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> `username` <span class="operator">=</span> <span class="string">&#x27;nacos&#x27;</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> `nacos`.`roles` <span class="keyword">SET</span> `role` <span class="operator">=</span> <span class="string">&#x27;ROLE_ADMIN&#x27;</span> <span class="keyword">WHERE</span> `username` <span class="operator">=</span> <span class="string">&#x27;nacos&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="业务报错-unknown-user"><a href="#业务报错-unknown-user" class="headerlink" title="业务报错 unknown user"></a>业务报错 unknown user</h3><p>检查一下：</p><ul><li>业务连上 nacos 后，会拉取一份配置文件到本地缓存，缓存位置在 <code>~/nacos/config</code> 目录下， 确认下这里是否拉取了配置文件。</li><li>nacos 服务管理 服务列表中是否成功注册了节点（业务使用了 nacos 服务发现）</li><li>使用 API 接口来获取配置文件是否正常获取到</li></ul><p>需要注意的：</p><ul><li>尽量不要使用 public 命名空间，创建一个新的命名空间，命名空间 ID 设置和命名空间名字一样，业务配置也要指定配置 namespace 和服务发现 namespace</li><li>环境变量：<code>spring.cloud.nacos.username</code> 和 <code>spring.cloud.nacos.password</code> 看情况配置下，我就遇到过 nacos 没开鉴权，但是必须要配置这两个参数的情况。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> nacos </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用cronjob自动重启k8s的deployment</title>
      <link href="/posts/se4t7a/"/>
      <url>/posts/se4t7a/</url>
      
        <content type="html"><![CDATA[<h2 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apps&quot;</span>, <span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;deployments&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> []</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;patch&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>] <span class="comment"># list 和 watch 就够用了，如果需要执行 rollout status ，则需要 get patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 角色绑定账号</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure><h2 id="编写-cronjob"><a href="#编写-cronjob" class="headerlink" title="编写 cronjob"></a>编写 cronjob</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-restart</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># 多少秒后清理已完成的job，1.23版本之后可用。</span></span><br><span class="line">  <span class="attr">ttlSecondsAfterFinished:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">concurrencyPolicy:</span> <span class="string">Forbid</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">&#x27;37 14 * * *&#x27;</span> <span class="comment"># 分时日月周</span></span><br><span class="line">  <span class="attr">jobTemplate:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">backoffLimit:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">activeDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">serviceAccountName:</span> <span class="string">deployment-restart</span></span><br><span class="line">          <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br><span class="line">          <span class="attr">containers:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubectl</span></span><br><span class="line">              <span class="comment"># image: bitnami/kubectl:1.30.1</span></span><br><span class="line">              <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/kubectl:1.30.1</span></span><br><span class="line">              <span class="attr">command:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">bash</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">&gt;-</span></span><br><span class="line"><span class="string">                  kubectl rollout restart deployment/nginx &amp;&amp;</span></span><br><span class="line"><span class="string">                  kubectl rollout status deployment/java-example</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crontab </tag>
            
            <tag> kubectl </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop集群搭建记录</title>
      <link href="/posts/sds4t1/"/>
      <url>/posts/sds4t1/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="配置节点间-ssh-免密"><a href="#配置节点间-ssh-免密" class="headerlink" title="配置节点间 ssh 免密"></a>配置节点间 ssh 免密</h3><p>略</p><h3 id="安装-java-环境"><a href="#安装-java-环境" class="headerlink" title="安装 java 环境"></a>安装 java 环境</h3><p>略</p><h3 id="搭建-zookeeper"><a href="#搭建-zookeeper" class="headerlink" title="搭建 zookeeper"></a>搭建 zookeeper</h3><p><a href="/posts/sds4db/">zookeeper集群搭建</a></p><h3 id="绑定-hosts"><a href="#绑定-hosts" class="headerlink" title="绑定 hosts"></a>绑定 hosts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">192.168.200.11 hadoop1</span><br><span class="line">192.168.200.12 hadoop2</span><br><span class="line">192.168.200.13 hadoop3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>vim &#x2F;etc&#x2F;profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hadoop</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/data/hadoop-3.2.4/</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin</span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop_data/</span><br><span class="line"><span class="built_in">mkdir</span> -p /var/lib/hadoop-hdfs</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>workers 这里面是 datanode 节点列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m1 hadoop]<span class="comment"># cat workers</span></span><br><span class="line">hadoop1</span><br><span class="line">hadoop2</span><br><span class="line">hadoop3</span><br></pre></td></tr></table></figure><p>hadoop-env.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置JAVA_HOME</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java</span><br><span class="line"><span class="comment"># 设置用户以执行对应角色shell命令</span></span><br><span class="line"><span class="built_in">export</span> HDFS_NAMENODE_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_DATANODE_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_SECONDARYNAMENODE_USER=root</span><br><span class="line"><span class="built_in">export</span> YARN_RESOURCEMANAGER_USER=root</span><br><span class="line"><span class="built_in">export</span> YARN_NODEMANAGER_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_JOURNALNODE_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_ZKFC_USER=root</span><br></pre></td></tr></table></figure><p>hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--指定 hdfs 的 nameservice 为 mycluster，需要和 core-site.xml 中的保持一致 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mycluster 下面有两个 NameNode，分别是 nn1，nn2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- nn1 的 RPC 通信地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- nn1 的 http 通信地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:9870<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- nn2 的 RPC 通信地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop2:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- nn2 的 http 通信地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop2:9870<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定 NameNode 的 edits 元数据在 JournalNode 上的存放位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://hadoop1:8485;hadoop2:8485;hadoop3:8485/mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定 JournalNode 在本地磁盘存放数据的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop_data/journaldata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启 NameNode 失败自动切换 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定该集群出故障时，哪个实现类负责执行故障切换 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置隔离机制方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>shell(/bin/true)<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启短路本地读取功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.read.shortcircuit<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 需手动创建目录 mkdir -p /var/lib/hadoop-hdfs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.domain.socket.path<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/var/lib/hadoop-hdfs/dn_socket<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启黑名单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.hosts.exclude<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop-3.2.4/etc/hadoop/excludes<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>core-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HA 集群名称，该值要和 hdfs-site.xml 中的配置保持一致 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hadoop 本地数据存储目录 format 时自动生成 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop_data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在 Web UI 访问 HDFS 使用的用户名。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.http.staticuser.user<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ZooKeeper 集群的地址和端口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:2181,hadoop2:2181,hadoop3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="集群初始化"><a href="#集群初始化" class="headerlink" title="集群初始化"></a>集群初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 首先启动 zookeeper 集群</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 2. 手动启动 JN 集群（3台机器）</span></span><br><span class="line">hdfs --daemon start journalnode</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 3. 在 hadoop01 执行格式化 namenode 并启动 namenode</span></span><br><span class="line">[root@hadoop1 ~]<span class="comment"># hdfs namenode -format</span></span><br><span class="line">[root@hadoop1 ~]<span class="comment"># hdfs --daemon start namenode</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 4. 在 hadoop02 上进行 namenode 元数据同步</span></span><br><span class="line">[root@hadoop2 ~]<span class="comment"># hdfs namenode -bootstrapStandby</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 5. 格式化 zkfc。注意：在哪台机器上执行，哪台机器就将成为第一次的 Active NN</span></span><br><span class="line">[root@hadoop1 ~]<span class="comment"># hdfs zkfc -formatZK</span></span><br></pre></td></tr></table></figure><p>start-dfs.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop1 ~]<span class="comment"># jps</span></span><br><span class="line">6355 QuorumPeerMain</span><br><span class="line">6516 JournalNode</span><br><span class="line">7573 DataNode</span><br><span class="line">7989 DFSZKFailoverController</span><br><span class="line">8040 Jps</span><br><span class="line">7132 NameNode</span><br><span class="line"> </span><br><span class="line">[root@hadoop2 ~]<span class="comment"># jps</span></span><br><span class="line">4688 JournalNode</span><br><span class="line">5201 NameNode</span><br><span class="line">5521 Jps</span><br><span class="line">5282 DataNode</span><br><span class="line">4536 QuorumPeerMain</span><br><span class="line">5482 DFSZKFailoverController</span><br><span class="line"> </span><br><span class="line">[root@hadoop3 ~]<span class="comment"># jps</span></span><br><span class="line">4384 DataNode</span><br><span class="line">3990 QuorumPeerMain</span><br><span class="line">4136 JournalNode</span><br><span class="line">4511 Jps</span><br></pre></td></tr></table></figure><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>浏览器打开</p><p><a href="http://hadoop1:9870/">http://hadoop1:9870</a> 查看状态。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源分布式存储工具longhorn部署</title>
      <link href="/posts/scx23m/"/>
      <url>/posts/scx23m/</url>
      
        <content type="html"><![CDATA[<p>k8s 如果需要用到存储，对于云产品一般都是采用云厂商提供的存储驱动，自建机房简单一点的会采用 nfs，nfs 有以下问题：</p><ul><li>高可用性问题，一般都是单台机器在跑，高可用完全依靠物理机器的 RAID，非常不云原生</li><li>性能问题，NFS 本身性能不算好，外加一个集群都在使用，网卡速度是个瓶颈<br>longhorn 是个开源的存储引擎，简单来说就是它把 k8s 每个节点的磁盘空间搜集起来，组成一个大池子，然后分配个各个 pod 使用。并通过多副本的方式做高可用。longhorn 好像是 openSUSE 家的吧，和 rancher 一个公司。</li></ul><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405231106850.svg"></p><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p>官方安装说明：<br><a href="https://longhorn.io/docs/1.6.1/deploy/install/install-with-kubectl/">https://longhorn.io/docs/1.6.1/deploy/install/install-with-kubectl/</a></p><p>官方安装要求：<br><a href="https://longhorn.io/docs/1.6.1/deploy/install/#installation-requirements">https://longhorn.io/docs/1.6.1/deploy/install/#installation-requirements</a></p><p>官方的检查依赖项脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/longhorn/longhorn/v1.6.1/scripts/environment_check.sh | bash</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line">yum install -y jq <span class="built_in">mktemp</span> <span class="built_in">sort</span> <span class="built_in">printf</span></span><br><span class="line">yum install -y iscsi-initiator-utils</span><br><span class="line">systemctl <span class="built_in">enable</span> --now iscsid.service</span><br><span class="line"></span><br><span class="line">yum install -y nfs-utils</span><br><span class="line">yum install -y cryptsetup</span><br></pre></td></tr></table></figure><h2 id="使用-kubectl-安装-longhorn"><a href="#使用-kubectl-安装-longhorn" class="headerlink" title="使用 kubectl 安装 longhorn"></a>使用 kubectl 安装 longhorn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.6.1/deploy/longhorn.yaml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubectl </tag>
            
            <tag> 存储 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单节点Kubernetes更换ip地址</title>
      <link href="/posts/scpj14/"/>
      <url>/posts/scpj14/</url>
      
        <content type="html"><![CDATA[<p>如果是个多节点的集群，更换一台 master 节点的 ip 有个更简单的办法，那就是先把这台机器下线，然后再扩容一台新的 master，安全无副作用，如果是单节点更换 ip 地址（如果旧 ip 不用回收，那么可以直接在网卡上再绑定一个 ip 地址，不用对 k8s 进行修改）</p><p>和 <a href="/posts/34d8fad0/">kubeadm之单节点master升级高可用master</a> 有点类似</p><h2 id="首先更换操作系统-ip-地址"><a href="#首先更换操作系统-ip-地址" class="headerlink" title="首先更换操作系统 ip 地址"></a>首先更换操作系统 ip 地址</h2><p>略</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份配置文件</span></span><br><span class="line"><span class="built_in">cp</span> -r /etc/kubernetes&#123;,-bak&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看证书绑定的ip或域名</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(find /etc/kubernetes/pki -<span class="built_in">type</span> f -name <span class="string">&quot;*.crt&quot;</span>);<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span> &amp;&amp; openssl x509 -<span class="keyword">in</span> <span class="variable">$&#123;i&#125;</span> -text | grep <span class="string">&#x27;DNS:&#x27;</span>;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除需要重新生成的证书</span></span><br><span class="line"><span class="built_in">rm</span> -rf /etc/kubernetes/pki/&#123;apiserver*,front-proxy-client*&#125;</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/kubernetes/pki/etcd/&#123;healthcheck*,peer*,server*&#125;</span><br></pre></td></tr></table></figure><h2 id="重新签发证书"><a href="#重新签发证书" class="headerlink" title="重新签发证书"></a>重新签发证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里需要修改证书绑定的ip</span></span><br><span class="line">kubeadm init phase certs all \</span><br><span class="line">    --apiserver-advertise-address 192.168.163.10 \</span><br><span class="line">    --apiserver-cert-extra-sans <span class="string">&quot;192.168.163.10,192.168.163.11,192.168.163.12&quot;</span> \</span><br><span class="line">    --cert-dir <span class="string">&quot;/etc/kubernetes/pki&quot;</span></span><br></pre></td></tr></table></figure><h2 id="更新配置文件里的-ip-地址"><a href="#更新配置文件里的-ip-地址" class="headerlink" title="更新配置文件里的 ip 地址"></a>更新配置文件里的 ip 地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -R 10.0.0.10 /etc/kubernetes/*</span><br><span class="line"></span><br><span class="line">vim ~/.kube/config</span><br></pre></td></tr></table></figure><h2 id="这个时候-kubectl-可用了，修改-configmap"><a href="#这个时候-kubectl-可用了，修改-configmap" class="headerlink" title="这个时候 kubectl 可用了，修改 configmap"></a>这个时候 kubectl 可用了，修改 configmap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit cm -n kube-system kubeadm-config</span><br><span class="line">kubectl edit cm -n kube-system kube-proxy</span><br></pre></td></tr></table></figure><h2 id="然后删除-pod-重建"><a href="#然后删除-pod-重建" class="headerlink" title="然后删除 pod 重建"></a>然后删除 pod 重建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system delete pod kube-apiserver-k8s kube-controller-manager-k8s kube-proxy-nhqvg kube-scheduler-k8s etcd-k8s coredns-558bd4d5db-c4xbw</span><br><span class="line">kubectl -n kube-flannel delete pod kube-flannel-ds-8s6cn</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> kubeadm </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Docker 搭建集群版 Elasticsearch 学习环境</title>
      <link href="/posts/schwdt/"/>
      <url>/posts/schwdt/</url>
      
        <content type="html"><![CDATA[<p>一般来说，学习 ES 都是自己先搭建几台虚拟机，然后在虚拟机里部署 ES 集群，这样做资源消耗比较大，一般的电脑都没有这么高的配置，我们可以使用 Docker 来快速部署一套 Elasticsearch 集群，这里以 3 节点集群为例：</p><h2 id="准备-Docker-网络"><a href="#准备-Docker-网络" class="headerlink" title="准备 Docker 网络"></a>准备 Docker 网络</h2><p>集群节点之间是通过 ip 进行交互的，所以需要固定一下 ip，固定 ip 之前需要先创建一个 Docker 私有网络，并固定网段 (网段不要和你的内网冲突)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create --subnet=172.16.0.0/24 elasticsearch-br0</span><br></pre></td></tr></table></figure><h2 id="集群版-Elasticsearch-需要生成证书"><a href="#集群版-Elasticsearch-需要生成证书" class="headerlink" title="集群版 Elasticsearch 需要生成证书"></a>集群版 Elasticsearch 需要生成证书</h2><p>默认生成 3 年证书，我指定生成了 100 年的证书， 生成到了 <code>certs</code> 目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -it -v $(<span class="built_in">pwd</span>)/certs:/tmp/certs elasticsearch:7.17.14 bash -c \</span><br><span class="line">    <span class="string">&#x27;echo -e &quot;\n\n&quot; | /usr/share/elasticsearch/bin/elasticsearch-certutil ca -s -days 36500 &amp;&amp; \</span></span><br><span class="line"><span class="string">    echo -e &quot;\n\n\n&quot; | /usr/share/elasticsearch/bin/elasticsearch-certutil cert -s -days 36500 --ca elastic-stack-ca.p12 &amp;&amp; \</span></span><br><span class="line"><span class="string">    mv /usr/share/elasticsearch/*.p12 /tmp/certs &amp;&amp; \</span></span><br><span class="line"><span class="string">    chmod 777 -R /tmp/certs&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="指定-IP-运行容器"><a href="#指定-IP-运行容器" class="headerlink" title="指定 IP 运行容器"></a>指定 IP 运行容器</h2><p>我这里将数据持久化到了 docker 卷中，通过 <code>docker volume ls</code> 可以查看。</p><h3 id="elasticsearch1"><a href="#elasticsearch1" class="headerlink" title="elasticsearch1"></a>elasticsearch1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name elasticsearch1 \</span><br><span class="line">    --<span class="built_in">ulimit</span> memlock=-1:-1 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -e node.name=elasticsearch1 \</span><br><span class="line">    -e cluster.name=es-cluster \</span><br><span class="line">    -e discovery.seed_hosts=elasticsearch2,elasticsearch3 \</span><br><span class="line">    -e cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3 \</span><br><span class="line">    -e bootstrap.memory_lock=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.allow-origin=<span class="string">&quot;*&quot;</span> \</span><br><span class="line">    -e http.cors.allow-headers=Authorization \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.verification_mode=certificate \</span><br><span class="line">    -e xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -e xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -v es-data1:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs1:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,<span class="built_in">source</span>=$(<span class="built_in">pwd</span>)/certs/elastic-certificates.p12,target=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.11 \</span><br><span class="line">    -p 9201:9200 -p 9301:9300 \</span><br><span class="line">    elasticsearch:7.17.14</span><br></pre></td></tr></table></figure><h3 id="elasticsearch2"><a href="#elasticsearch2" class="headerlink" title="elasticsearch2"></a>elasticsearch2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name elasticsearch2 \</span><br><span class="line">    --<span class="built_in">ulimit</span> memlock=-1:-1 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -e node.name=elasticsearch2 \</span><br><span class="line">    -e cluster.name=es-cluster \</span><br><span class="line">    -e discovery.seed_hosts=elasticsearch1,elasticsearch3 \</span><br><span class="line">    -e cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3 \</span><br><span class="line">    -e bootstrap.memory_lock=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.allow-origin=<span class="string">&quot;*&quot;</span> \</span><br><span class="line">    -e http.cors.allow-headers=Authorization \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.verification_mode=certificate \</span><br><span class="line">    -e xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -e xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -v es-data2:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs2:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,<span class="built_in">source</span>=$(<span class="built_in">pwd</span>)/certs/elastic-certificates.p12,target=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.12 \</span><br><span class="line">    -p 9202:9200 -p 9302:9300 \</span><br><span class="line">    elasticsearch:7.17.14</span><br></pre></td></tr></table></figure><h3 id="elasticsearch3"><a href="#elasticsearch3" class="headerlink" title="elasticsearch3"></a>elasticsearch3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name elasticsearch3 \</span><br><span class="line">    --<span class="built_in">ulimit</span> memlock=-1:-1 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -e node.name=elasticsearch3 \</span><br><span class="line">    -e cluster.name=es-cluster \</span><br><span class="line">    -e discovery.seed_hosts=elasticsearch1,elasticsearch2 \</span><br><span class="line">    -e cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3 \</span><br><span class="line">    -e bootstrap.memory_lock=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e http.cors.allow-origin=<span class="string">&quot;*&quot;</span> \</span><br><span class="line">    -e http.cors.allow-headers=Authorization \</span><br><span class="line">    -e xpack.security.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.enabled=<span class="literal">true</span> \</span><br><span class="line">    -e xpack.security.transport.ssl.verification_mode=certificate \</span><br><span class="line">    -e xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -e xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    -v es-data3:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs3:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,<span class="built_in">source</span>=$(<span class="built_in">pwd</span>)/certs/elastic-certificates.p12,target=/usr/share/elasticsearch/config/elastic-certificates.p12 \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.13 \</span><br><span class="line">    -p 9203:9200 -p 9303:9300 \</span><br><span class="line">    elasticsearch:7.17.14</span><br></pre></td></tr></table></figure><h2 id="初始化密码"><a href="#初始化密码" class="headerlink" title="初始化密码"></a>初始化密码</h2><p>需要等待服务启动后才可设置初始化密码，命令只能生成一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动生成密码</span></span><br><span class="line">docker <span class="built_in">exec</span> elasticsearch1 bash -c <span class="string">&quot;echo y | /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化生成指定的密码</span></span><br><span class="line">ELASTIC_PASSWORD=<span class="string">&quot;123456&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;y</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span>&quot;</span> | docker <span class="built_in">exec</span> -i elasticsearch /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><h2 id="部署-kibana"><a href="#部署-kibana" class="headerlink" title="部署 kibana"></a>部署 kibana</h2><h3 id="准备-kibana-yml"><a href="#准备-kibana-yml" class="headerlink" title="准备 kibana.yml"></a>准备 kibana.yml</h3><p>密码按照实际情况修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">server.port:</span> <span class="number">5601</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">&quot;elastic&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [<span class="string">&quot;http://elasticsearch1:9200&quot;</span>, <span class="string">&quot;http://elasticsearch2:9200&quot;</span>, <span class="string">&quot;http://elasticsearch3:9200&quot;</span>]</span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><h3 id="准备-kibana-sh"><a href="#准备-kibana-sh" class="headerlink" title="准备 kibana.sh"></a>准备 kibana.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name kibana \</span><br><span class="line">    --net elasticsearch-br0 \</span><br><span class="line">    -p 5601:5601 \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/kibana.yml:/usr/share/kibana/config/kibana.yml \</span><br><span class="line">    kibana:7.17.14</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 部署 </tag>
            
            <tag> 搭建 </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> ES </tag>
            
            <tag> 开源软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Docker 搭建单节点 Elasticsearch 学习环境</title>
      <link href="/posts/st219s/"/>
      <url>/posts/st219s/</url>
      
        <content type="html"><![CDATA[<p>一般来说，学习 ES 都是自己先搭建几台虚拟机，然后在虚拟机里部署 ES 集群，这样做资源消耗比较大，一般的电脑都没有这么高的配置，我们可以使用 Docker 来快速部署 Elasticsearch，这里搭建单节点：</p><h2 id="启动-Elasticsearch"><a href="#启动-Elasticsearch" class="headerlink" title="启动 Elasticsearch"></a>启动 Elasticsearch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker network create elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证目录权限正确</span></span><br><span class="line"><span class="built_in">mkdir</span> es-data es-logs</span><br><span class="line">sudo <span class="built_in">chown</span> -R 1000 es-data es-logs</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -e <span class="string">&quot;discovery.type=single-node&quot;</span> \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/es-data:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/es-logs:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --privileged --network elasticsearch \</span><br><span class="line">    -p 9200:9200 -p 9300:9300 \</span><br><span class="line">    elasticsearch:7.17.14</span><br></pre></td></tr></table></figure><h2 id="初始化密码"><a href="#初始化密码" class="headerlink" title="初始化密码"></a>初始化密码</h2><p>需要等待服务启动后才可设置初始化密码，命令只能生成一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动生成密码</span></span><br><span class="line">docker <span class="built_in">exec</span> elasticsearch1 bash -c <span class="string">&quot;echo y | /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化生成指定的密码</span></span><br><span class="line">ELASTIC_PASSWORD=<span class="string">&quot;123456&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;y</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span>&quot;</span> | docker <span class="built_in">exec</span> -i elasticsearch /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><h2 id="部署-kibana"><a href="#部署-kibana" class="headerlink" title="部署 kibana"></a>部署 kibana</h2><h3 id="准备-kibana-yml"><a href="#准备-kibana-yml" class="headerlink" title="准备 kibana.yml"></a>准备 kibana.yml</h3><p>密码按照实际情况修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">server.port:</span> <span class="number">5601</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">&quot;elastic&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [<span class="string">&quot;http://elasticsearch:9200&quot;</span>]</span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><h3 id="准备-kibana-sh"><a href="#准备-kibana-sh" class="headerlink" title="准备 kibana.sh"></a>准备 kibana.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name kibana \</span><br><span class="line">    --net elasticsearch \</span><br><span class="line">    -p 5601:5601 \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/kibana.yml:/usr/share/kibana/config/kibana.yml \</span><br><span class="line">    kibana:7.17.14</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 部署 </tag>
            
            <tag> 搭建 </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> ES </tag>
            
            <tag> 开源软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos删除swap后无法启动</title>
      <link href="/posts/scfoaz/"/>
      <url>/posts/scfoaz/</url>
      
        <content type="html"><![CDATA[<p>删除了 CentOS 的 swap 分区后，重启系统报错，提示 <code>Warning: /dev/centos/swap does not exist</code>，如图：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404241243993.png" alt="image.png"></p><p>先挂载 &#x2F;boot 分区, 不确定就一个一个挂载看看里面的文件对不对，正常情况下 &#x2F;boot 分区大小在 1GB 以内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /tmp/boot</span><br><span class="line">mount /dev/sda1 /tmp/boot</span><br><span class="line"><span class="built_in">cd</span> /tmp/boot</span><br></pre></td></tr></table></figure><p><code>vi grub2/grub.cfg</code><br>删除 <code>rd.lvm.lv=centos/swap</code> 这个配置, 然后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /tmp/boot</span><br></pre></td></tr></table></figure><p>这样系统就可以正常启动了，但是还没完</p><p>&#x2F;boot 里的文件都是自动生成的，每次更新内核或者手动执行 <code>grub2-mkconfig</code>， 会被覆盖掉，所以还需要修改原始的 grub 配置文件，</p><p>vim &#x2F;etc&#x2F;default&#x2F;grub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">&quot;<span class="subst">$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)</span>&quot;</span></span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL_OUTPUT=<span class="string">&quot;console&quot;</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;rd.lvm.lv=centos/root biosdevname=0 net.ifnames=0 rhgb quiet&quot;</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure><p>把这里和 swap 相关的 <code>rd.lvm.lv=centos/swap</code> 配置删除, 然后重新生成一下配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><p>关系是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/default/grub  +  /etc/grub.d/*  --&gt;  /etc/grub.cfg  --&gt;  /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><p>所以修改 grub 配置，只需要修改 <code>/etc/default/grub</code> 即可。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分区 </tag>
            
            <tag> 磁盘 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker官方私有仓库registry部署与使用</title>
      <link href="/posts/sc3b39/"/>
      <url>/posts/sc3b39/</url>
      
        <content type="html"><![CDATA[<p>一般来说大家用容器镜像都选择 harbor，有个管理界面，还支持权限控制、漏洞扫描等，但是我公司有个客户的环境只允许通过跳板机登录 Linux 机器，没法使用浏览器，另外也只是需要一个简单一点的、好维护的仓库，找了一下，这个比较简单。如果需要更专业的私有镜像仓库，可以选择 harbor（免费）或者 jFrog 家的（收费）</p><h2 id="自签名证书"><a href="#自签名证书" class="headerlink" title="自签名证书"></a>自签名证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p certs</span><br><span class="line"></span><br><span class="line">openssl req \</span><br><span class="line">  -newkey rsa:4096 -nodes -sha256 -keyout certs/i.com.key \</span><br><span class="line">  -addext <span class="string">&quot;subjectAltName = DNS:hub.i.com&quot;</span> \</span><br><span class="line">  -x509 -days 3650 -out certs/i.com.crt</span><br></pre></td></tr></table></figure><h2 id="docker-信任证书"><a href="#docker-信任证书" class="headerlink" title="docker 信任证书"></a>docker 信任证书</h2><p>将文件复制到每个 Docker 上 主机。您无需重新启动 Docker。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker/certs.d/hub.i.com/</span><br><span class="line"><span class="built_in">cp</span> i.com.crt /etc/docker/certs.d/hub.i.com/</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>如果更换了默认端口，这里的文件夹也要加上端口，比如 <code>/etc/docker/certs.d/hub.i.com:8000/</code></p></div><h2 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --name registry \</span><br><span class="line">  -v ./data:/var/lib/registry \</span><br><span class="line">  -v ./certs:/certs \</span><br><span class="line">  -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \</span><br><span class="line">  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/i.com.crt \</span><br><span class="line">  -e REGISTRY_HTTP_TLS_KEY=/certs/i.com.key \</span><br><span class="line">  -p 443:443 \</span><br><span class="line">  registry:2</span><br></pre></td></tr></table></figure><h2 id="常用的-API"><a href="#常用的-API" class="headerlink" title="常用的 API"></a>常用的 API</h2><p>假设镜像名为：<code>hub.i.com/iuxt/test:latest</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看镜像列表</span></span><br><span class="line">curl https://hub.i.com/v2/_catalog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像的tag列表，假设镜像名是test</span></span><br><span class="line">curl https://hub.i.com/v2/iuxt/test/tags/list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个tag的详细信息</span></span><br><span class="line">curl https://hub.i.com/v2/iuxt/test/manifests/latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取镜像摘要</span></span><br><span class="line">curl -s -H <span class="string">&quot;Accept: application/vnd.docker.distribution.manifest.v2+json&quot;</span> \</span><br><span class="line">https://hub.i.com/v2/iuxt/test/manifests/latest \</span><br><span class="line">| jq -r <span class="string">&#x27;.config.digest&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像，不会释放磁盘空间，释放磁盘空间还需要进行垃圾回收操作。</span></span><br><span class="line">curl -X DELETE \</span><br><span class="line">https://hub.i.com/v2/iuxt/test/manifests/sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h2 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h2><p>在 Docker Registry 配置文件 config.yml 中，启用删除功能：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">delete:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>执行垃圾回收操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> &lt;registry-container&gt; bin/registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure><h2 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h2><p>自签证书以及配置 OS 信任 CA 证书：<a href="/posts/097e5b7c">制作和使用自签名证书</a><br>快速签发证书小工具：<a href="https://github.com/iuxt/my_cert">https://github.com/iuxt/my_cert</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 部署 </tag>
            
            <tag> 仓库 </tag>
            
            <tag> 镜像 </tag>
            
            <tag> 搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes同一个namespace共用镜像secret</title>
      <link href="/posts/sc2yhw/"/>
      <url>/posts/sc2yhw/</url>
      
        <content type="html"><![CDATA[<p>配置一个全局的镜像拉取密钥， 后续拉镜像就不用每个 deployment 单独配置了。</p><p>在每个 <code>namespace</code> 下都有一个默认的 <code>service account</code>, 假设命名空间是 <code>test</code></p><p>使用 <code>kubectl get sa -n test</code> 查看<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404171737797.png" alt="image.png"></p><p>查看 serviceaccount 信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe sa -n <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404171738437.png" alt="image.png"></p><p>Image pull secrets 是此 namespace 下拉取镜像的秘钥</p><p>1.创建 secret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret -p docker-registry registrykey --namespace=<span class="built_in">test</span> --docker-username=&lt;harbor_user&gt; --docker-password=&lt;harbor_password&gt; --docker-server=&lt;harbor_url&gt;</span><br></pre></td></tr></table></figure><p>2.配置进 service account</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch serviceaccount default -p <span class="string">&#x27;&#123;&quot;imagePullSecrets&quot;: [&#123;&quot;name&quot;: &quot;registrykey&quot;&#125;]&#125;&#x27;</span> -n <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>至此在 <code>test</code> 下拉取镜像无需配置镜像拉取秘钥了</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> secret </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决MySQL 5.7在Redhat 9中启动报错：libncurses.so.5和libtinfo.so.5缺失问题</title>
      <link href="/posts/lv23gkql/"/>
      <url>/posts/lv23gkql/</url>
      
        <content type="html"><![CDATA[<p>采用二进制安装 MySQL 服务的时候， 之前在 CentOS 7 系统中，直接 yum 安装依赖包就可以正常运行，但是到了 RHEL 9 系统下， 会报错找不到 libncurses.so.5， 根据经验需要查找一下这个库属于哪个包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides libncurses.so.5</span><br></pre></td></tr></table></figure><p>找不到这个包</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404152343237.png" alt="image.png"></p><p>不考虑版本，再次搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides libncurses.so.*</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404152344067.png" alt="image.png"></p><p>发现可以找到 6.2 的版本, 安装这个包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ncurses-libs</span><br></pre></td></tr></table></figure><p>查看这个 rpm 包包含的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql ncurses-libs | grep libncurses.so</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404152347847.png" alt="image.png"></p><p>此时需要做一个软链接（前提是此版本可以向后兼容，至少在 MySQL 5.7 这里运行是没问题的。）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/lib64/libncurses.so.6 /usr/lib64/libncurses.so.5</span><br></pre></td></tr></table></figure><p>修改完成，报另一个错误了：</p><p>同样的方法， 再创建一个软链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/lib64/libtinfo.so.6 /usr/lib64/libtinfo.so.5</span><br></pre></td></tr></table></figure><p>然后 MySQL 就可以正常运行了。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysqld </tag>
            
            <tag> CentOS </tag>
            
            <tag> MySQL </tag>
            
            <tag> 运行库 </tag>
            
            <tag> RHEL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基于GTID的主从复制</title>
      <link href="/posts/luwwdbjr/"/>
      <url>/posts/luwwdbjr/</url>
      
        <content type="html"><![CDATA[<p>没开启 GTID 的 MySQL 数据库增加从库请看：<a href="/posts/86a9c8f5/">优雅地给正在运行的MySQL添加从库</a></p><h2 id="自动同步连接主库-方法一"><a href="#自动同步连接主库-方法一" class="headerlink" title="自动同步连接主库 (方法一)"></a>自动同步连接主库 (方法一)</h2><p>适用于 master 也是新建不久的情况，如果你的 master 所有的 binlog 还在，可以安装 slave，slave 直接 change master to 到 master 端。原理是直接获取 master 所有的 GTID 并执行。</p><p>优点：简单方便。不需要备份主库再在从库还原。<br>缺点：如果 binlog 太多，数据完全同步需要时间较长。如果旧的 binlog 已经被清理了，则不能正常同步。</p><p>在从库执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">MASTER_HOST<span class="operator">=</span><span class="string">&#x27;10.0.0.11&#x27;</span>,</span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>,</span><br><span class="line">MASTER_PORT<span class="operator">=</span><span class="number">3306</span>,</span><br><span class="line">MASTER_CONNECT_RETRY<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">MASTER_AUTO_POSITION<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><code>master_auto_position=1</code> 从库自动找同步点</p><h2 id="备份导入连接主库-方法二"><a href="#备份导入连接主库-方法二" class="headerlink" title="备份导入连接主库 (方法二)"></a>备份导入连接主库 (方法二)</h2><p>适用于拥有较大数据的情况。（推荐）</p><p>通过 master 或者其他 slave 的备份搭建新的 slave。<br>原理：获取 master 的数据和这些数据对应的 GTID 范围，然后通过 slave 设置 <code>master_auto_position=1</code>,自动同步，跳过备份包含的 gtid。<br>缺点：相对来说有点麻烦。</p><h3 id="主库使用-mysqldump-导出"><a href="#主库使用-mysqldump-导出" class="headerlink" title="主库使用 mysqldump 导出"></a>主库使用 mysqldump 导出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump  -uroot -pVb6CAEJqqtcmKndiAkEl -hlocalhost -P3306 --triggers --routines --events --hex-blob --single-transaction --skip-tz-utc --all-databases &gt; backup.sql</span><br></pre></td></tr></table></figure><p>SQL 文件最后有一条：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @<span class="variable">@GLOBAL</span>.GTID_PURGED<span class="operator">=</span><span class="string">&#x27;aab83329-fb19-11ee-85e8-4e5363c108f2:1-689&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这是记录了当前的 SQL 对应的 GTID 位置？</p><h3 id="从库数据导入数据"><a href="#从库数据导入数据" class="headerlink" title="从库数据导入数据"></a>从库数据导入数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pVb6CAEJqqtcmKndiAkEl -hlocalhost -P3306 &lt; backup.sql</span><br></pre></td></tr></table></figure><p>如果导入报错 <code>@@GLOBAL.GTID_PURGED can only be set when @@GLOBAL.GTID_EXECUTED is empty</code> ， 需要在从库执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看当前的GTID</span></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@global</span>.gtid_executed\G;</span><br><span class="line"></span><br><span class="line">stop slave;</span><br><span class="line">reset slave <span class="keyword">all</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空本地的GTID</span></span><br><span class="line">reset master;</span><br></pre></td></tr></table></figure><h3 id="从库连接主库"><a href="#从库连接主库" class="headerlink" title="从库连接主库"></a>从库连接主库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">MASTER_HOST<span class="operator">=</span><span class="string">&#x27;10.0.0.11&#x27;</span>,</span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>,</span><br><span class="line">MASTER_PORT<span class="operator">=</span><span class="number">3306</span>,</span><br><span class="line">MASTER_CONNECT_RETRY<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">MASTER_AUTO_POSITION<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>从库启动复制线程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure><h3 id="从库查看复制状态"><a href="#从库查看复制状态" class="headerlink" title="从库查看复制状态"></a>从库查看复制状态</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> slave status \G;</span><br></pre></td></tr></table></figure><h3 id="主库查看状态"><a href="#主库查看状态" class="headerlink" title="主库查看状态"></a>主库查看状态</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> master status;</span><br><span class="line"><span class="keyword">show</span> slave hosts;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%gtid%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> binlog events;</span><br><span class="line"><span class="keyword">show</span> binlog events <span class="keyword">in</span> <span class="string">&#x27;master-bin.000001&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> master logs;</span><br><span class="line"><span class="keyword">show</span> processlist</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> processlist;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysqld </tag>
            
            <tag> MySQL </tag>
            
            <tag> 数据迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL新的网络模式-mirrored镜像网络</title>
      <link href="/posts/luam6g8o/"/>
      <url>/posts/luam6g8o/</url>
      
        <content type="html"><![CDATA[<p>刚开始我用 <a href="/posts/6f952944">Hyper-V 自定义内部网络网段和IP地址</a> 配置 Hyper-V 并创建了几台虚拟机， 但是和 WSL 的网络不通， 解决方案可以是将 Hyper-V 虚拟机只接使用 WSL 的网络适配器。不过 2023 年 9 月的 WSL 更新添加了一些新的实验性功能，其中包括一些关于新的网络模式“镜像”。镜像网络带来了一些实用的特性，例如将 WSL 中的服务开放到局域网（之前是 NAT 网络，只有主机可以通过 localhost 访问）。<br>更新日志中提到，镜像网络带来的新特性如下：</p><ul><li>IPv6 支持</li><li>在 Linux 中通过 <code>127.0.0.1</code> 访问 Windows 服务</li><li>通过局域网直接连接 WSL</li><li>对 VPN 更好的兼容性</li><li>多播支持</li></ul><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>首先，这项特性需要 <code>22621.2359</code> 及以上版本的 <code>Windows 11</code> 以及 <code>2.0</code> 以上版本的 WSL。使用 <code>wsl --version</code> 命令可以检查是否符合需求，<code>wsl --update</code> 命令可以更新 WSL。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">iuxt</span>&gt;<span class="title">wsl</span> --<span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">WSL</span> 版本： 2.1.5.0</span></span><br><span class="line"><span class="function">内核版本： 5.15.146.1-2</span></span><br><span class="line"><span class="function"><span class="title">WSLg</span> 版本： 1.0.60</span></span><br><span class="line"><span class="function"><span class="title">MSRDC</span> 版本： 1.2.5105</span></span><br><span class="line"><span class="function"><span class="title">Direct3D</span> 版本： 1.611.1-81528511</span></span><br><span class="line"><span class="function"><span class="title">DXCore</span> 版本： 10.0.25131.1002-220531-1700.<span class="title">rs</span>-<span class="title">onecore</span>-<span class="title">base2</span>-<span class="title">hyp</span></span></span><br><span class="line"><span class="function"><span class="title">Windows</span> 版本： 10.0.22631.3296</span></span><br></pre></td></tr></table></figure><p>确认满足版本需求后， 在 windows 的个人文件夹下创建 <code>.wslconfig</code> 文件，内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[wsl2]</span></span><br><span class="line"><span class="attr">autoProxy</span>=<span class="literal">false</span>             <span class="comment"># 是否强制 WSL2/WSLg 子系统使用 Windows 代理设置（请根据实际需要启用）</span></span><br><span class="line"><span class="attr">dnsTunneling</span>=<span class="literal">true</span>           <span class="comment"># WSL2/WSLg DNS 代理隧道，以便由 Windows 代理转发 DNS 请求（请根据实际需要启用）</span></span><br><span class="line"><span class="attr">firewall</span>=<span class="literal">true</span>               <span class="comment"># WSL2/WSLg 子系统的 Windows 防火墙集成，以便 Hyper-V 或者 WPF 能过滤子系统流量（请根据实际需要启用）</span></span><br><span class="line"><span class="attr">guiApplications</span>=<span class="literal">true</span>        <span class="comment"># 启用 WSLg GUI 图形化程序支持</span></span><br><span class="line"><span class="attr">ipv6</span>=<span class="literal">true</span>                   <span class="comment"># 启用 IPv6 网络支持</span></span><br><span class="line"><span class="attr">localhostForwarding</span>=<span class="literal">true</span>    <span class="comment"># 启用 localhost 网络转发支持</span></span><br><span class="line"><span class="attr">memory</span>=<span class="number">4</span>GB                  <span class="comment"># 限制 WSL2/WSLg 子系统的最大内存占用</span></span><br><span class="line"><span class="attr">nestedVirtualization</span>=<span class="literal">true</span>   <span class="comment"># 启用 WSL2/WSLg 子系统嵌套虚拟化功能支持</span></span><br><span class="line"><span class="attr">networkingMode</span>=mirrored     <span class="comment"># 启用镜像网络特性支持</span></span><br><span class="line"><span class="comment"># pageReporting=true          # 启用 WSL2/WSLg 子系统页面文件通报，以便 Windows 回收已分配但未使用的内存</span></span><br><span class="line"><span class="attr">processors</span>=<span class="number">8</span>                <span class="comment"># 设置 WSL2/WSLg 子系统的逻辑 CPU 核心数为 8（最大肯定没法超过硬件的物理逻辑核心数）</span></span><br><span class="line"><span class="attr">vmIdleTimeout</span>=-<span class="number">1</span>            <span class="comment"># WSL2 VM 实例空闲超时关闭时间，-1 为永不关闭，根据参数说明，目前似乎仅适用于 Win11+</span></span><br><span class="line"></span><br><span class="line"><span class="section">[experimental]</span>                  <span class="comment"># 实验性功能（按照过往经验，若后续转正，则是配置在上面的 [wsl2] 选节）</span></span><br><span class="line"><span class="attr">autoMemoryReclaim</span>=gradual       <span class="comment"># 启用空闲内存自动缓慢回收，其它选项：dropcache / disabled（立即/禁用）</span></span><br><span class="line"><span class="attr">hostAddressLoopback</span>=<span class="literal">true</span>        <span class="comment"># 启用 WSL2/WSLg 子系统和 Windows 宿主之间的本地回环互通支持</span></span><br><span class="line"><span class="attr">sparseVhd</span>=<span class="literal">true</span>                  <span class="comment"># 启用 WSL2/WSLg 子系统虚拟硬盘空间自动回收</span></span><br><span class="line"><span class="attr">useWindowsDnsCache</span>=<span class="literal">false</span>        <span class="comment"># 和 dnsTunneling 配合使用，决定是否使用 Windows DNS 缓存池</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>sparseVhd=true</code> 生效需要稀疏 <code>vhdx</code>， 转换命令 <code>wsl --manage &#39;Ubuntu-24.04&#39; --set-sparse true</code></p><p>详细配置说明：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config">https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config</a></p><p>然后重启 WSL</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br><span class="line">wsl</span><br></pre></td></tr></table></figure><h2 id="WSL-网卡变化"><a href="#WSL-网卡变化" class="headerlink" title="WSL 网卡变化"></a>WSL 网卡变化</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403281045337.png" alt="image.png"></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://zhuanlan.zhihu.com/p/668181689">在WSL2中访问Windows服务的另一种选择——mirrored镜像网络</a><br><a href="https://devblogs.microsoft.com/commandline/windows-subsystem-for-linux-september-2023-update/">Windows Subsystem for Linux September 2023 update</a><br><a href="https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconfig">Advanced settings configuration in WSL</a></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="无法访问-docker-容器端口"><a href="#无法访问-docker-容器端口" class="headerlink" title="无法访问 docker 容器端口"></a>无法访问 docker 容器端口</h3><p>我的 <code>.wslconfig</code> 配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line">autoProxy=false             # 是否强制 WSL2/WSLg 子系统使用 Windows 代理设置（请根据实际需要启用）</span><br><span class="line">dnsTunneling=true           # WSL2/WSLg DNS 代理隧道，以便由 Windows 代理转发 DNS 请求（请根据实际需要启用）</span><br><span class="line">firewall=true               # WSL2/WSLg 子系统的 Windows 防火墙集成，以便 Hyper-V 或者 WPF 能过滤子系统流量（请根据实际需要启用）</span><br><span class="line">guiApplications=true        # 启用 WSLg GUI 图形化程序支持</span><br><span class="line">ipv6=true                   # 启用 IPv6 网络支持</span><br><span class="line">nestedVirtualization=true   # 启用 WSL2/WSLg 子系统嵌套虚拟化功能支持</span><br><span class="line">networkingMode=mirrored     # 启用镜像网络特性支持</span><br><span class="line">vmIdleTimeout=-1            # WSL2 VM 实例空闲超时关闭时间，-1 为永不关闭，根据参数说明，目前似乎仅适用于 Win11+</span><br><span class="line"></span><br><span class="line">[experimental]</span><br><span class="line">autoMemoryReclaim=gradual       # 启用空闲内存自动缓慢回收，其它选项：dropcache / disabled（立即/禁用）</span><br><span class="line">hostAddressLoopback=true        # 启用 WSL2/WSLg 子系统和 Windows 宿主之间的本地回环互通支持</span><br><span class="line">sparseVhd=true                  # 启用 WSL2/WSLg 子系统虚拟硬盘空间自动回收</span><br><span class="line">useWindowsDnsCache=false        # 和 dnsTunneling 配合使用，决定是否使用 Windows DNS 缓存池</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu系统关闭防火墙</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> --now ufw</span><br></pre></td></tr></table></figure><p>修改 Docker 配置文件 <code>/etc/docker/daemon.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;iptables&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl2 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 效率工具 </tag>
            
            <tag> 命令行工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客更换url结构后配置自动跳转</title>
      <link href="/posts/lu96kcpp/"/>
      <url>/posts/lu96kcpp/</url>
      
        <content type="html"><![CDATA[<p>因为修改过博客的链接规则， 原来的链接是 <code>https://zahui.fan/xxx/</code> 修改成了 <code>https://zahui.fan/posts/xxx/</code> 或者删除了部分标签，造成了搜索引擎内之前收录的一些链接都变成了 404，不利于 SEO</p><p>如果是 hugo，可以查看这篇文章：<a href="/posts/b75ec1fe/">Hugo博客批量更换url结构</a></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403271024183.png" alt="image.png"></p><p>在 hexo 中我们可以使用 <code>hexo-generator-alias</code> 对文章进行跳转。</p><h2 id="安装-hexo-generator-alias"><a href="#安装-hexo-generator-alias" class="headerlink" title="安装 hexo-generator-alias"></a>安装 hexo-generator-alias</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-alias --save</span><br></pre></td></tr></table></figure><p>GitHub 地址： <a href="https://github.com/hexojs/hexo-generator-alias">https://github.com/hexojs/hexo-generator-alias</a></p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>比如 tags、category 等这种不存在对应的 markdown 文件， 可以配置在全局配置 <code>_config.yml</code> 中：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alias:</span></span><br><span class="line">  <span class="comment"># 访问 https://zahui.fan/index.html  跳转到  https://zahui.fan/</span></span><br><span class="line">  <span class="attr">index.html:</span> <span class="string">/</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 访问 https://zahui.fan/tags/flask/ 跳转到 https://zahui.fan/tags/Flask/</span></span><br><span class="line">  <span class="attr">tags/flask/:</span> <span class="string">tags/Flask/</span></span><br></pre></td></tr></table></figure><h2 id="文章配置"><a href="#文章配置" class="headerlink" title="文章配置"></a>文章配置</h2><p>配置在文章的 <code>front-matter</code> 中：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">打造一个赏心悦目的终端</span></span><br><span class="line"><span class="attr">abbrlink:</span> <span class="string">57e7c794</span></span><br><span class="line"><span class="attr">alias:</span> <span class="string">/57e7c794/</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Windows</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Linux</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">配置记录</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">WSL</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-03-05 11:54:29</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>abbrlink：就是文章本来的链接， 比如我的就是 <code>https://zahui.fan/posts/57e7c794/</code></p><p>alias: 这个是关联的链接，配置成 <code>/57e7c794/</code>, 则访问 <code>https://zahui.fan/57e7c794/</code> 会跳转到本篇文章。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hexo </tag>
            
            <tag> seo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RustDesk服务器搭建记录</title>
      <link href="/posts/cb24765f/"/>
      <url>/posts/cb24765f/</url>
      
        <content type="html"><![CDATA[<p>RustDesk 是一个远程控制工具，开源跨平台，可以使用官方的服务器，也可以自建服务器使用。服务器分为开源版 oss 和付费版 pro，我使用的是开源版。</p><h2 id="部署服务器"><a href="#部署服务器" class="headerlink" title="部署服务器"></a>部署服务器</h2><p>服务端是 rust 开发的，单文件直接运行即可。你可以使用你喜欢的进程管理工具来管理，比如 nodejs 写的 pm2， Python 写的 supervisor， 或者使用 docker 运行，我选择 docker。</p><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -td --name hbbs \</span><br><span class="line">    -v ./data:/root \</span><br><span class="line">    --net=host \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    rustdesk/rustdesk-server hbbs</span><br><span class="line"></span><br><span class="line">docker run -td --name hbbr \</span><br><span class="line">    -v ./data:/root \</span><br><span class="line">    --net=host \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    rustdesk/rustdesk-server hbbr</span><br></pre></td></tr></table></figure><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><p>data 目录（容器内的 root 目录）下的文件：</p><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>db 开头的文件</td><td>SQLite 数据库文件</td></tr><tr><td>id_ed25519</td><td>私钥</td></tr><tr><td>id_ed25519.pub</td><td>公钥，文件内容就是客户端需要的 key</td></tr></tbody></table><h3 id="网络端口"><a href="#网络端口" class="headerlink" title="网络端口"></a>网络端口</h3><p>我使用了 host 网络，如果使用 bridge 网络（docker 默认网络），需要映射以下端口</p><h4 id="hbbs-服务"><a href="#hbbs-服务" class="headerlink" title="hbbs 服务"></a>hbbs 服务</h4><table><thead><tr><th>端口</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>21115</td><td>tcp</td><td>used for the NAT type test</td></tr><tr><td>21116</td><td>tcp</td><td>used for TCP hole punching and connection service</td></tr><tr><td>21116</td><td>udp</td><td>used for the ID registration and heartbeat service</td></tr><tr><td>21118</td><td>tcp</td><td>web 使用（开源版本暂时没有 web 页面）</td></tr></tbody></table><h4 id="hbbr-服务"><a href="#hbbr-服务" class="headerlink" title="hbbr 服务"></a>hbbr 服务</h4><table><thead><tr><th>端口</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>21117</td><td>tcp</td><td>used for the Relay services</td></tr><tr><td>21119</td><td>tcp</td><td>web 使用（开源版本暂时没有 web 页面）</td></tr></tbody></table><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>在 <code>设置</code> –&gt; <code>网络</code> 里面配置 <code>ID 服务器</code>, ID 服务器填 你的服务器 <code>IP:21116</code> 或者直接填写域名，不写端口默认是 21116，另外两个地址可以不填，RustDesk 会自动推导（如果没有特别设定），中继服务器指的是 hbbr（21117）端口。</p><p>key 可以填可以不填， 不填的话， 连接不能加密。key 在 hbbs 服务的控制台日志里有， <code>cat id_ed25519.pub</code> 也可以看到 key</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403131652971.png" alt="image.png|533"></p><p>到此为止就已经可以使用了</p><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><p>考虑到上面配置不加密的话，任何人配置上了我的服务器地址都可以使用我的服务了（连接我的电脑还需要 id 和密码），不太安全，所以建议开启加密连接。</p><p><code>hbbr</code> 和 <code>hbbs</code> 增加启动参数 <code> -k _</code>， docker 启动命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -td --name hbbs \</span><br><span class="line">    -v ./data:/root \</span><br><span class="line">    --net=host \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    rustdesk/rustdesk-server hbbs -k _</span><br><span class="line"></span><br><span class="line">docker run -td --name hbbr \</span><br><span class="line">    -v ./data:/root \</span><br><span class="line">    --net=host \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    rustdesk/rustdesk-server hbbr -k _</span><br></pre></td></tr></table></figure><p>这个时候再次尝试连接：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403131705610.png" alt="image.png|808"></p><p>配置了正确的 key 后，可以正常使用。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="第一次无法连接"><a href="#第一次无法连接" class="headerlink" title="第一次无法连接"></a>第一次无法连接</h3><p>可以尝试强制中继服务器连接， 只需要在 id 后面加上 <code>/r</code> 即可。如<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403152226765.png" alt="image.png"></p><p>连接成功后，可以打开 强制走中继连接</p><h3 id="将配置放在文件名中（仅支持-Windows）"><a href="#将配置放在文件名中（仅支持-Windows）" class="headerlink" title="将配置放在文件名中（仅支持 Windows）"></a>将配置放在文件名中（仅支持 Windows）</h3><p>将安装程序修改一下名字，按照这个规则：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustdesk-host=&lt;host-ip-or-name&gt;,key=&lt;public-key-string&gt;.exe</span><br></pre></td></tr></table></figure><p>安装完成后可以省去配置。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 搭建 </tag>
            
            <tag> 开源软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django Restframework 实现根据字段过滤</title>
      <link href="/posts/ltmpr1yl/"/>
      <url>/posts/ltmpr1yl/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-filter</span><br></pre></td></tr></table></figure><h2 id="注册进-Django"><a href="#注册进-Django" class="headerlink" title="注册进 Django"></a>注册进 Django</h2><p>vim settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;django_filters&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置在这里的是系统的默认设置，也可以在视图集中单独指定</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">   <span class="comment"># 过滤器默认后端</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [<span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="视图中单独指定"><a href="#视图中单独指定" class="headerlink" title="视图中单独指定"></a>视图中单独指定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你也可以将其单独配置在特定的视图中：</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">from</span> django_filters.rest_framework <span class="keyword">import</span> DjangoFilterBackend</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">ArticleViewSet</span>(viewsets.ModelViewSet):</span><br><span class="line">     <span class="comment"># 设置过滤的后端，不设置则走上面的默认配置。</span></span><br><span class="line">     filter_backends = [DjangoFilterBackend]</span><br><span class="line">     <span class="comment"># 设置过滤的字段，这个需要配置一下。</span></span><br><span class="line">     filterset_fields = [<span class="string">&#x27;author__username&#x27;</span>, <span class="string">&#x27;title&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>上面指定了过滤的字段，那么可以根据这两个字段进行过滤了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8000/api/article/?author__username=iuxt&amp;title=</span><br></pre></td></tr></table></figure><h2 id="模糊搜索"><a href="#模糊搜索" class="headerlink" title="模糊搜索"></a>模糊搜索</h2><p>上面的搜索（过滤）方式是精确搜索， 如果你使用的是 DRF，需要模糊搜索可以使用 <code>rest_framework</code> 的 filters</p><p>vim views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> filters</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ArticleViewSet</span>(viewsets.ModelViewSet):</span><br><span class="line">    queryset = Article.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = ArticleSerializer</span><br><span class="line">    permission_classes = [IsAdminUserOrReadOnly]</span><br><span class="line"></span><br><span class="line">    filter_backends = [filters.SearchFilter]</span><br><span class="line">    search_fields = [<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这个属性不需要了</span></span><br><span class="line">    <span class="comment"># filterset_fields = [&#x27;author__username&#x27;, &#x27;title&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>搜索方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8000/api/article/?search=测试测</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Python </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm部署的集群证书过期后处理</title>
      <link href="/posts/ltckjzor/"/>
      <url>/posts/ltckjzor/</url>
      
        <content type="html"><![CDATA[<p>之前使用 <code>kubeadm</code> 部署的集群，突然有一天执行 <code>kubectl get pod</code> 提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unable to connect to the server: x509: certificate has expired or is not yet valid: current time 2024-03-04T14:26:31+08:00 is after 2024-02-27T08:36:50Z</span><br></pre></td></tr></table></figure><p>意思是证书有效期到 2024-02-27T08:36:50Z， 已经超过了证书有效期了。</p><h2 id="查看证书有效期"><a href="#查看证书有效期" class="headerlink" title="查看证书有效期"></a>查看证书有效期</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ALSHBSITL00061 kubernetes]<span class="comment"># kubeadm certs check-expiration</span></span><br><span class="line">[check-expiration] Reading configuration from the cluster...</span><br><span class="line">[check-expiration] FYI: You can look at this config file with <span class="string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span></span><br><span class="line">[check-expiration] Error reading configuration from the Cluster. Falling back to default configuration</span><br><span class="line"></span><br><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       ca                      no</span><br><span class="line">apiserver                  Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       ca                      no</span><br><span class="line">apiserver-etcd-client      Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       etcd-ca                 no</span><br><span class="line">apiserver-kubelet-client   Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       ca                      no</span><br><span class="line">controller-manager.conf    Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       ca                      no</span><br><span class="line">etcd-healthcheck-client    Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       etcd-ca                 no</span><br><span class="line">etcd-peer                  Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       etcd-ca                 no</span><br><span class="line">etcd-server                Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       etcd-ca                 no</span><br><span class="line">front-proxy-client         Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       front-proxy-ca          no</span><br><span class="line">scheduler.conf             Feb 27, 2024 08:36 UTC   &lt;invalid&gt;       ca                      no</span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Feb 24, 2033 08:36 UTC   8y              no</span><br><span class="line">etcd-ca                 Feb 24, 2033 08:36 UTC   8y              no</span><br><span class="line">front-proxy-ca          Feb 24, 2033 08:36 UTC   8y              no</span><br></pre></td></tr></table></figure><h2 id="执行续期操作"><a href="#执行续期操作" class="headerlink" title="执行续期操作"></a>执行续期操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ALSHBSITL00061 kubernetes]<span class="comment"># kubeadm certs renew all</span></span><br><span class="line">[renew] Reading configuration from the cluster...</span><br><span class="line">[renew] FYI: You can look at this config file with <span class="string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span></span><br><span class="line">[renew] Error reading configuration from the Cluster. Falling back to default configuration</span><br><span class="line"></span><br><span class="line">certificate embedded <span class="keyword">in</span> the kubeconfig file <span class="keyword">for</span> the admin to use and <span class="keyword">for</span> kubeadm itself renewed</span><br><span class="line">certificate <span class="keyword">for</span> serving the Kubernetes API renewed</span><br><span class="line">certificate the apiserver uses to access etcd renewed</span><br><span class="line">certificate <span class="keyword">for</span> the API server to connect to kubelet renewed</span><br><span class="line">certificate embedded <span class="keyword">in</span> the kubeconfig file <span class="keyword">for</span> the controller manager to use renewed</span><br><span class="line">certificate <span class="keyword">for</span> liveness probes to healthcheck etcd renewed</span><br><span class="line">certificate <span class="keyword">for</span> etcd nodes to communicate with each other renewed</span><br><span class="line">certificate <span class="keyword">for</span> serving etcd renewed</span><br><span class="line">certificate <span class="keyword">for</span> the front proxy client renewed</span><br><span class="line">certificate embedded <span class="keyword">in</span> the kubeconfig file <span class="keyword">for</span> the scheduler manager to use renewed</span><br><span class="line"></span><br><span class="line">Done renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.</span><br></pre></td></tr></table></figure><h2 id="更新-kubectl-配置"><a href="#更新-kubectl-配置" class="headerlink" title="更新 kubectl 配置"></a>更新 kubectl 配置</h2><p>如果当时安装的时候是通过 <code>cp /etc/kubernetes/admin.conf ~/.kube/config</code> 复制的配置，需要再更新一遍，管理员也可以指定使用 <code>/etc/kubernetes/admin.conf</code> 作为 kubeconfig，就不用每次更新了。</p><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><p>需要重启 kube-apiserver, kube-controller-manager, kube-scheduler 和 etcd， kubeadm 安装的 kubelet 会自动更新证书，所以不用重启。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">容器运行时是containerd</button><button type="button" class="tab">容器运行时是docker</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crictl pods --namespace kube-system --name <span class="string">&#x27;kube-scheduler-*|kube-controller-manager-*|kube-apiserver-*|etcd-*&#x27;</span> -q | xargs crictl rmp -f</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker restart xxx </span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows修改用户名</title>
      <link href="/posts/lta396h7/"/>
      <url>/posts/lta396h7/</url>
      
        <content type="html"><![CDATA[<p>之前 windows10 在安装过程中如果不使用微软账号登录的话，创建一个本地账户，那么创建好的用户名就是个人文件夹的名字。如果设置了中文，那么个人文件夹名字就是中文，后续会有软件兼容性问题，可以通过修改注册表来修改文件夹名字。</p><h2 id="修改用户名"><a href="#修改用户名" class="headerlink" title="修改用户名"></a>修改用户名</h2><p>首先要区分一下什么是用户名<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022109093.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022111200.png" alt="image.png"></p><p>上面这些都不是用户名，而是显示出来的用户名，也就是用户名全名。可以在 <code>lusrmgr.msc</code> 或 <code>control userpasswords2</code> 或 <code>netplwiz</code> 查看:</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022113496.png" alt="image.png"></p><p>通过上图发现，我的用户名应该是 ooo</p><p>修改用户名可以直接在 <code>lusrmgr.msc</code> 进行修改，包括显示的全名，如果你只是想修改显示出来的名字，到这里就可以了。</p><h2 id="修改个人文件夹路径"><a href="#修改个人文件夹路径" class="headerlink" title="修改个人文件夹路径"></a>修改个人文件夹路径</h2><div class="note danger flat"><p>danger 修改个人文件夹路径需要慎重！有部分已安装软件引用的还是旧的路径，这样会造成各种报错，可能需要卸载重新安装才能正常使用。</p></div><p>当前我的文件夹名字是 测试， 如图：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022118314.png" alt="image.png"></p><h3 id="修改系统定义的路径"><a href="#修改系统定义的路径" class="headerlink" title="修改系统定义的路径"></a>修改系统定义的路径</h3><p>打开注册表编辑器，定位到 <code>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\</code> 下面一个用户对应一个文件夹，找到自己的项，修改 <code>ProfileImagePath</code> 的值<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022122885.png" alt="image.png"></p><p>注销再次登录，会出现正在准备 windows 的提示，这个是正常的。进入桌面，出现下面的提示，点击关闭 (这一步也可以在 pe 下完成)<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022125931.png" alt="image.png"></p><p>现在可以把用户文件夹进行重命名操作，重命名后再次注销重新登录。这个时候已经可以正常进入桌面了。</p><h3 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h3><p>在 系统属性 – 高级 – 环境变量 里将没有更新的配置进行更新。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202403022129458.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 配置记录 </tag>
            
            <tag> 注册表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过docker容器查看run命令</title>
      <link href="/posts/lt41mupw/"/>
      <url>/posts/lt41mupw/</url>
      
        <content type="html"><![CDATA[<p>公司有一台服务器上运行着一个服务，通过 <code>docker start</code> 启动，已经没有文档记录如何搭建的了。现在需要迁移，记录一下获取 docker run 命令的方法</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">通过模版处理 docker inspect 的数据来获取</button><button type="button" class="tab">使用 runlike 来获取</button></div><div class="tab-contents"><div class="tab-item-content active"><p>模版文件来自<a href="https://gist.githubusercontent.com/efrecon/8ce9c75d518b6eb863f667442d7bc679/raw/run.tpl">https://gist.githubusercontent.com/efrecon/8ce9c75d518b6eb863f667442d7bc679/raw/run.tpl</a></p><p>假设容器名是 mysql， 命令后面可以跟容器名或者容器 id。命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format <span class="string">&#x27;docker run \</span></span><br><span class="line"><span class="string">  --name &#123;&#123;printf &quot;%q&quot; .Name&#125;&#125; \</span></span><br><span class="line"><span class="string">    &#123;&#123;- with .HostConfig&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .Privileged&#125;&#125;</span></span><br><span class="line"><span class="string">  --privileged \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .AutoRemove&#125;&#125;</span></span><br><span class="line"><span class="string">  --rm \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .Runtime&#125;&#125;</span></span><br><span class="line"><span class="string">  --runtime &#123;&#123;printf &quot;%q&quot; .Runtime&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $b := .Binds&#125;&#125;</span></span><br><span class="line"><span class="string">  --volume &#123;&#123;printf &quot;%q&quot; $b&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $v := .VolumesFrom&#125;&#125;</span></span><br><span class="line"><span class="string">  --volumes-from &#123;&#123;printf &quot;%q&quot; $v&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $l := .Links&#125;&#125;</span></span><br><span class="line"><span class="string">  --link &#123;&#123;printf &quot;%q&quot; $l&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if index . &quot;Mounts&quot;&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- range $m := .Mounts&#125;&#125;</span></span><br><span class="line"><span class="string">  --mount type=&#123;&#123;.Type&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $s := index $m &quot;Source&quot;&#125;&#125;,source=&#123;&#123;$s&#125;&#125;&#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $t := index $m &quot;Target&quot;&#125;&#125;,destination=&#123;&#123;$t&#125;&#125;&#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if index $m &quot;ReadOnly&quot;&#125;&#125;,readonly&#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $vo := index $m &quot;VolumeOptions&quot;&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- range $i, $v := $vo.Labels&#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- printf &quot;,volume-label=%s=%s&quot; $i $v&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- if $dc := index $vo &quot;DriverConfig&quot; &#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- if $n := index $dc &quot;Name&quot; &#125;&#125;</span></span><br><span class="line"><span class="string">                            &#123;&#123;- printf &quot;,volume-driver=%s&quot; $n&#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- range $i, $v := $dc.Options&#125;&#125;</span></span><br><span class="line"><span class="string">                            &#123;&#123;- printf &quot;,volume-opt=%s=%s&quot; $i $v&#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $bo := index $m &quot;BindOptions&quot;&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- if $p := index $bo &quot;Propagation&quot; &#125;&#125;</span></span><br><span class="line"><span class="string">                        &#123;&#123;- printf &quot;,bind-propagation=%s&quot; $p&#125;&#125;</span></span><br><span class="line"><span class="string">                    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- end&#125;&#125; \</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .PublishAllPorts&#125;&#125;</span></span><br><span class="line"><span class="string">  --publish-all \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .UTSMode&#125;&#125;</span></span><br><span class="line"><span class="string">  --uts &#123;&#123;printf &quot;%q&quot; .UTSMode&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- with .LogConfig&#125;&#125;</span></span><br><span class="line"><span class="string">  --log-driver &#123;&#123;printf &quot;%q&quot; .Type&#125;&#125; \</span></span><br><span class="line"><span class="string">            &#123;&#123;- range $o, $v := .Config&#125;&#125;</span></span><br><span class="line"><span class="string">  --log-opt &#123;&#123;$o&#125;&#125;=&#123;&#123;printf &quot;%q&quot; $v&#125;&#125; \</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- with .RestartPolicy&#125;&#125;</span></span><br><span class="line"><span class="string">  --restart &quot;&#123;&#123;.Name -&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- if eq .Name &quot;on-failure&quot;&#125;&#125;:&#123;&#123;.MaximumRetryCount&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;&quot; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $e := .ExtraHosts&#125;&#125;</span></span><br><span class="line"><span class="string">  --add-host &#123;&#123;printf &quot;%q&quot; $e&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $v := .CapAdd&#125;&#125;</span></span><br><span class="line"><span class="string">  --cap-add &#123;&#123;printf &quot;%q&quot; $v&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $v := .CapDrop&#125;&#125;</span></span><br><span class="line"><span class="string">  --cap-drop &#123;&#123;printf &quot;%q&quot; $v&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $d := .Devices&#125;&#125;</span></span><br><span class="line"><span class="string">  --device &#123;&#123;printf &quot;%q&quot; (index $d).PathOnHost&#125;&#125;:&#123;&#123;printf &quot;%q&quot; (index $d).PathInContainer&#125;&#125;:&#123;&#123;(index $d).CgroupPermissions&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- with .NetworkSettings -&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $p, $conf := .Ports&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- with $conf&#125;&#125;</span></span><br><span class="line"><span class="string">  --publish &quot;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $h := (index $conf 0).HostIp&#125;&#125;&#123;&#123;$h&#125;&#125;:</span></span><br><span class="line"><span class="string">                &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- (index $conf 0).HostPort&#125;&#125;:&#123;&#123;$p&#125;&#125;&quot; \</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $n, $conf := .Networks&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- with $conf&#125;&#125;</span></span><br><span class="line"><span class="string">  --network &#123;&#123;printf &quot;%q&quot; $n&#125;&#125; \</span></span><br><span class="line"><span class="string">                &#123;&#123;- range $a := $conf.Aliases&#125;&#125;</span></span><br><span class="line"><span class="string">  --network-alias &#123;&#123;printf &quot;%q&quot; $a&#125;&#125; \</span></span><br><span class="line"><span class="string">                &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- with .Config&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .Hostname&#125;&#125;</span></span><br><span class="line"><span class="string">  --hostname &#123;&#123;printf &quot;%q&quot; .Hostname&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .Domainname&#125;&#125;</span></span><br><span class="line"><span class="string">  --domainname &#123;&#123;printf &quot;%q&quot; .Domainname&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if index . &quot;ExposedPorts&quot;&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $p, $conf := .ExposedPorts&#125;&#125;</span></span><br><span class="line"><span class="string">  --expose &#123;&#123;printf &quot;%q&quot; $p&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if .User&#125;&#125;</span></span><br><span class="line"><span class="string">  --user &#123;&#123;printf &quot;%q&quot; .User&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $e := .Env&#125;&#125;</span></span><br><span class="line"><span class="string">  --env &#123;&#123;printf &quot;%q&quot; $e&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- range $l, $v := .Labels&#125;&#125;</span></span><br><span class="line"><span class="string">  --label &#123;&#123;printf &quot;%q&quot; $l&#125;&#125;=&#123;&#123;printf &quot;%q&quot; $v&#125;&#125; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if not (or .AttachStdin  (or .AttachStdout .AttachStderr))&#125;&#125;</span></span><br><span class="line"><span class="string">  --detach \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .AttachStdin&#125;&#125;</span></span><br><span class="line"><span class="string">  --attach stdin \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .AttachStdout&#125;&#125;</span></span><br><span class="line"><span class="string">  --attach stdout \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .AttachStderr&#125;&#125;</span></span><br><span class="line"><span class="string">  --attach stderr \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .Tty&#125;&#125;</span></span><br><span class="line"><span class="string">  --tty \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .OpenStdin&#125;&#125;</span></span><br><span class="line"><span class="string">  --interactive \</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- if .Entrypoint&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;- /* Since the entry point cannot be overridden from the command line with an array of size over 1,</span></span><br><span class="line"><span class="string">       we are fine assuming the default value in such a case. */ -&#125;&#125;</span></span><br><span class="line"><span class="string">        &#123;&#123;- if eq (len .Entrypoint) 1 &#125;&#125;</span></span><br><span class="line"><span class="string">  --entrypoint &quot;</span></span><br><span class="line"><span class="string">            &#123;&#123;- range $i, $v := .Entrypoint&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- if $i&#125;&#125; &#123;&#123;end&#125;&#125;</span></span><br><span class="line"><span class="string">                &#123;&#123;- $v&#125;&#125;</span></span><br><span class="line"><span class="string">            &#123;&#123;- end&#125;&#125;&quot; \</span></span><br><span class="line"><span class="string">        &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">    &#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">  &#123;&#123;printf &quot;%q&quot; .Image&#125;&#125; \</span></span><br><span class="line"><span class="string">  &#123;&#123;range .Cmd&#125;&#125;&#123;&#123;printf &quot;%q &quot; .&#125;&#125;&#123;&#123;- end&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;- end&#125;&#125;&#x27;</span> \</span><br><span class="line">mysql</span><br></pre></td></tr></table></figure><p>得到的结果和原始的不一样，但是大差不差了。</p></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -v /var/run/docker.sock:/var/run/docker.sock:ro assaflavie/runlike mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者用这个</span></span><br><span class="line">docker run --<span class="built_in">rm</span> -v /var/run/docker.sock:/var/run/docker.sock:ro cucker/get_command_4_run_container mysql</span><br></pre></td></tr></table></figure><p>runlike 的结果也是近似的</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="或者使用-get-command-4-run-container"><a href="#或者使用-get-command-4-run-container" class="headerlink" title="或者使用 get_command_4_run_container"></a>或者使用 get_command_4_run_container</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -v /var/run/docker.sock:/var/run/docker.sock cucker/get_command_4_run_container mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 常用操作 </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 监控面板配置</title>
      <link href="/posts/lswszwbz/"/>
      <url>/posts/lswszwbz/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-grafana"><a href="#安装-grafana" class="headerlink" title="安装 grafana"></a>安装 grafana</h2><p>oss：开源版本</p><p>enterprise: 商业版本</p><p><a href="https://grafana.com/grafana/download?pg=get&amp;plcmt=selfmanaged-box1-cta1&amp;edition=oss">https://grafana.com/grafana/download?pg=get&amp;plcmt=selfmanaged-box1-cta1&amp;edition=oss</a></p><h2 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a>添加数据源</h2><p>以 grafana 10.3.3 为例， 在 connections –&gt; Data sources 中新增：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221351583.png" alt="image.png"></p><h2 id="面板配置"><a href="#面板配置" class="headerlink" title="面板配置"></a>面板配置</h2><p>可以手动配置，也可以在 grafana 官网下载别人配置好的模板：<a href="https://grafana.com/grafana/dashboards/">https://grafana.com/grafana/dashboards/</a>, 复制 ID 或者下载 json 文件到本地<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221354043.png" alt="image.png"></p><p>然后在面板上面，点击 + ， 选择 import dashboard 使用 json 文件导入或者直接输入面板 id 进行导入。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221356021.png" alt="image.png"></p><p>导入后便能看到基础的图形。</p><h2 id="做变量筛选"><a href="#做变量筛选" class="headerlink" title="做变量筛选"></a>做变量筛选</h2><p>比如我们的监控会区分环境， 比如开发环境 dev，生产环境 prod， 现在需要在 grafana 的面板上做一个筛选框，这里是原始的数据：比如我们需要取 env 的值<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221739352.png" alt="image.png"></p><p>在面板的设置 – 变量中， 添加一个变量， 变量名可以自定义， 在此面板的查询语句中可以调用。 查询选项取 Label values， 要取的标签为 env， 要查询的语句为 node_uname_info（选一个覆盖面最广的语句）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221743652.png" alt="image.png"></p><p>然后 Dashboard 的右上角就有了这个动态筛选框。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221744503.png" alt="image.png"></p><h3 id="制作第二个选框"><a href="#制作第二个选框" class="headerlink" title="制作第二个选框"></a>制作第二个选框</h3><p>比如第一个选框是环境，第二个选框是项目，第三个选框是机器 ip 地址。</p><p>如下是根据 env 选择 project：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221821000.png" alt="image.png"></p><p>如下是根据 env 和 project 选择 ip：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221824179.png" alt="image.png"></p><p>所有变量：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221842109.png" alt="image.png"></p><p>效果如图，选择 dev 环境自动出现 ip 198， 选择 prod 自动出现 ip 199：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221825070.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221825184.png" alt="image.png"></p><p>面板中的调用方式：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402221840568.png" alt="image.png"></p><p>注意：上面查询 CPU 使用率的 promsql 语句不太好，会出现负数，应该修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 - (<span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;ip=<span class="string">&quot;<span class="variable">$ip</span>&quot;</span>, mode=<span class="string">&quot;idle&quot;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;ip=<span class="string">&quot;<span class="variable">$ip</span>&quot;</span>&#125;[1m])) by (instance))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> prometheus </tag>
            
            <tag> grafana </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django RestFramework 使用 JWT 认证</title>
      <link href="/posts/lsbj20sj/"/>
      <url>/posts/lsbj20sj/</url>
      
        <content type="html"><![CDATA[<h2 id="JWT-的优点"><a href="#JWT-的优点" class="headerlink" title="JWT 的优点"></a>JWT 的优点</h2><p>优点：无状态，服务端不保存 token<br>缺点：生成的 token 在有效期内一直有效，无论用户注销、修改密码。(可以通过存 redis，通过代码进行删除 redis 里的 token 解决。)</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>setting.py 里面设置默认值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line"><span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: (</span><br><span class="line">        <span class="string">&#x27;rest_framework_jwt.authentication.JSONWebTokenAuthentication&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">&#125;</span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(days=<span class="number">7</span>),  <span class="comment"># Token 过期时间为一周</span></span><br><span class="line">    <span class="string">&#x27;JWT_AUTH_HEADER_PREFIX&#x27;</span>: <span class="string">&#x27;JWT&#x27;</span>,  <span class="comment"># Token的头为：JWT</span></span><br><span class="line">    <span class="string">&#x27;JWT_ALLOW_REFRESH&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 DEFAULT_AUTHENTICATION_CLASSES 是默认设置，也可以给类视图自定义<br>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">XxxView</span>(<span class="title class_ inherited__">APIView</span>):</span><br><span class="line">    <span class="comment"># 不用认证</span></span><br><span class="line">    <span class="comment"># authentication_classes = []</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 基于jwt验证</span></span><br><span class="line">    <span class="comment"># authentication_classes = [JSONWebTokenAuthentication]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只有登录才能访问</span></span><br><span class="line">    <span class="comment"># permission_classes = [IsAuthenticated]</span></span><br></pre></td></tr></table></figure><p>authentication_classes &#x3D; [JSONWebTokenAuthentication]</p><p>urls.py 里面配置生成 token 的路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token</span><br><span class="line">path(<span class="string">&#x27;api-token-auth/&#x27;</span>, obtain_jwt_token),</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>先访问 api-token-auth 接口，这个接口只能通过 POST 访问，带上用户名和密码，认证成功后会生成一个 token 类似于：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Iml1eHQiLCJleHAiOjE3MDc5MDI5MTUsImVtYWlsIjoiaXV4dEBxcS5jb20ifQ.tHc3koO95mEh_HKUc3QNge0KwBYwoRz4n4bltq4xadg&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>拿着这个 token 去请求接口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --location <span class="string">&#x27;http://localhost:8000/jwttest/carts/&#x27;</span> \</span><br><span class="line">--header <span class="string">&#x27;Authorization: JWT  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Iml1eHQiLCJleHAiOjE3MDc5MDI5MTUsImVtYWlsIjoiaXV4dEBxcS5jb20ifQ.tHc3koO95mEh_HKUc3QNge0KwBYwoRz4n4bltq4xadg&#x27;</span></span><br></pre></td></tr></table></figure><p>我们前缀设置的是 JWT， 所以在请求时在 Header 里带上 <code>JWT  </code> 即可</p><h2 id="修改默认返回值"><a href="#修改默认返回值" class="headerlink" title="修改默认返回值"></a>修改默认返回值</h2><p>默认的返回值仅有 token，通过修改该视图的返回值可以完成我们的需求。在应用中新建一个 utils.py 文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">jwt_response_payload_handler</span>(<span class="params">token, user=<span class="literal">None</span>, request=<span class="literal">None</span></span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>: token,</span><br><span class="line">        <span class="string">&#x27;id&#x27;</span>: user.<span class="built_in">id</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: user.username,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在 settings.py 里面引用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(days=<span class="number">7</span>),</span><br><span class="line">    <span class="string">&#x27;JWT_ALLOW_REFRESH&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&#x27;JWT_AUTH_HEADER_PREFIX&#x27;</span>: <span class="string">&#x27;JWT&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;JWT_RESPONSE_PAYLOAD_HANDLER&#x27;</span>: <span class="string">&#x27;&lt; app名字 &gt;.utils.jwt_response_payload_handler&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样获取 token 的时候返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Iml1eHQiLCJleHAiOjE3MDc5MDMwODMsImVtYWlsIjoiaXV4dEBxcS5jb20ifQ.YR0X8-b1gEPnp-xZd0wavszWVwBQVBaCnd4_LDqnGn8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iuxt&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="JWT-判断权限"><a href="#JWT-判断权限" class="headerlink" title="JWT 判断权限"></a>JWT 判断权限</h2><p>permissions.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_jwt.authentication <span class="keyword">import</span> jwt_decode_handler</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IsOwnOrReadOnly</span>(permissions.BasePermission):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">has_object_permission</span>(<span class="params">self, request, view, obj</span>):</span><br><span class="line">        <span class="comment"># if request.method in permissions.SAFE_METHODS:</span></span><br><span class="line">        <span class="comment">#     return True</span></span><br><span class="line"></span><br><span class="line">        token = request.META.get(<span class="string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)[<span class="number">5</span>:]  <span class="comment"># 从 header 中获取 token</span></span><br><span class="line">        token_user = jwt_decode_handler(token)  <span class="comment"># 解析出来</span></span><br><span class="line">        <span class="keyword">if</span> token_user:</span><br><span class="line">            <span class="keyword">return</span> obj.user.<span class="built_in">id</span> == token_user.get(<span class="string">&#x27;user_id&#x27;</span>)  <span class="comment"># 证明 当前jwt验证的用户就是数据创建者</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>在类视图里定义权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .permissions <span class="keyword">import</span> IsOwnOrReadOnly</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameDetail</span>(generics.RetrieveUpdateDestroyAPIView):</span><br><span class="line">    queryset = Game.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = GameSerializer</span><br><span class="line">    permission_classes = [IsAuthenticated, IsOwnOrReadOnly]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Python </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fail2ban配合cloudflare cdn使用</title>
      <link href="/posts/lrt00szc/"/>
      <url>/posts/lrt00szc/</url>
      
        <content type="html"><![CDATA[<p>Cloudflare 是一家全球最著名的 CDN 加速服务商，提供了免费和付费的网站加速和保护服务。即使是免费版，也提供了比较全面和强大的功能，非常不错。</p><p>通过使用 Cloudflare CDN 服务提供的全球节点，一方面可以提高网站响应速度和性能，节省源站资源；另一方面也可以保护站点抵御攻击，保证网站长期稳定在线。</p><p>fail2ban 是一个开源工具, 它通过分析日志, 将不满足要求的访问 (比如 cc 攻击、对网站进行扫描等) 的 ip 获取到, 通过自带防火墙 (iptables 等) 进行封禁.</p><p>问题一: 如何让 fail2ban 获取真实 IP</p><p>想要通过 fail2ban 来封禁 ip, 那么先要获取到用户 (或黑客) 的 ip, 如果不进行处理, 那么大概率你获取到的是 cloudflare 请求你用的 ip, 封禁这个 ip 是没有意义的…</p><p>我的服务架构是 cloudflare –&gt; nginx –&gt; 后端服务</p><p>在 nginx 上面配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  # 这里设置一下Real_IP变量, 用于存储真实IP</span><br><span class="line">  set $Real_IP $http_x_forwarded_for;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  # 设置代理 Header</span><br><span class="line">  proxy_set_header X-Real-IP $Real_IP;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://xxx;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后端也要配置打印在日志里的 ip 字段为 <code>X-Real-IP</code>, 如果读取的是 Nginx 日志, 那配置一下 Nginx 的日志格式即可.</p><p>问题 2: 封禁了用户 ip, 但是请求是通过 cloudflare 请求过来的, 封禁没有效果</p><p>可以使用 jail 配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[vaultwarden]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">filter</span> = vaultwarden</span><br><span class="line"><span class="attr">logpath</span> = /home/ubuntu/quickstart/vaultwarden/vaultwarden_data/vaultwarden.log</span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">1</span>d</span><br><span class="line"><span class="attr">findtime</span> = <span class="number">1</span>h</span><br><span class="line"><span class="attr">action</span> = cloudflare</span><br><span class="line">         iptables-allports<span class="section">[chain=&quot;DOCKER-USER&quot;]</span></span><br></pre></td></tr></table></figure><p>修改 cloudflare 的 action 配置</p><p>&#x2F;etc&#x2F;fail2ban&#x2F;action.d&#x2F;cloudflare.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cftoken  =  cloudflare全局key</span><br><span class="line">cfuser   =  你的邮箱</span><br></pre></td></tr></table></figure><p>后续封禁是在 cloudflare 上封禁的, 可以在控制台查看到</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401251813392.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fail2ban </tag>
            
            <tag> cc攻击 </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作macOS启动盘和dmg镜像</title>
      <link href="/posts/lrrec490/"/>
      <url>/posts/lrrec490/</url>
      
        <content type="html"><![CDATA[<h2 id="下载-macOS-安装文件"><a href="#下载-macOS-安装文件" class="headerlink" title="下载 macOS 安装文件"></a>下载 macOS 安装文件</h2><p>参考苹果官方文档: <a href="https://support.apple.com/zh-cn/102662">https://support.apple.com/zh-cn/102662</a>, 使用 App Store 下载即可。下载完成后会显示在应用程序里面</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">制作dmg磁盘镜像</button><button type="button" class="tab">直接写入到u盘或移动硬盘</button></div><div class="tab-contents"><div class="tab-item-content active"><p>创建一个空白的 dmg 镜像</p><p>打开「磁盘工具」，在顶部菜单选择「文件」&gt;「新建映像」&gt;「空白映像」，然后如下图：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241427615.png" alt="52260C58-B232-452E-B8C8-FE5B35BBFA45.png"></p><p>「大小」的设置，根据安装镜像大小, 再增加 2GB, 我这里粗略设置为 15 GB；<br>「格式」设置为「Mac OS 扩展（日志式）」；<br>「分区」为设置为「单个分区 - GUID 分区图」；<br>「映像格式」为「读&#x2F;写」；</p><p>挂载这个磁盘镜像, 直接双击即可自动挂载。</p><p>数据写入到 dmg 磁盘</p><p>参考: <a href="https://support.apple.com/zh-cn/101578">https://support.apple.com/zh-cn/101578</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据你的系统版本和磁盘挂载位置自行修改</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Ventura.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br></pre></td></tr></table></figure><p>写入完成后, 推出这个 dmg 磁盘, 一般在访达中就能推出</p><p>压缩 dmg 磁盘</p><p>上面创建的 dmg 磁盘大小为 15G, 为了保证空间足够写入, 数据量其实没到 15G, 可以压缩一下。 打开「磁盘工具」，顶部菜单选择「映像」&gt;「转换」，选择 macOS.dmg 文件并存储命名为 InstallESD 到桌面：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241508090.png" alt="B1A330BF-1FEF-48F1-948C-81CD79645DF2.png"></p><p>写入 dmg 到 u 盘或移动硬盘 (可选)</p><p>可以使用 balenaEtcher(开源跨平台) 来进行写入</p></div><div class="tab-item-content"><p>直接写入到 u 盘或移动硬盘</p><p>参考: <a href="https://support.apple.com/zh-cn/101578">https://support.apple.com/zh-cn/101578</a></p><p>根据你的系统版本和硬盘挂载位置决定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sonoma</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Sonoma.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ventura</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Ventura.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># Monterey</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Monterey.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># Big Sur</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Big\ Sur.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># Catalina</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Catalina.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mojave</span></span><br><span class="line">sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># High Sierra</span></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</span><br><span class="line"></span><br><span class="line"><span class="comment"># El Capitan</span></span><br><span class="line">sudo /Applications/Install\ OS\ X\ El\ Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume --applicationpath /Applications/Install\ OS\ X\ El\ Capitan.app</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS常用操作记录</title>
      <link href="/posts/lrr6ze9h/"/>
      <url>/posts/lrr6ze9h/</url>
      
        <content type="html"><![CDATA[<h2 id="在终端中使用-code-命令启动-vscode"><a href="#在终端中使用-code-命令启动-vscode" class="headerlink" title="在终端中使用 code 命令启动 vscode"></a>在终端中使用 code 命令启动 vscode</h2><p>先安装 code：打开 VSCode -&gt; 查看 -&gt; 命令面板 -&gt; 输入 shell command –&gt; 点击 <code>Shell Command: Install &#39;code&#39; command in PATH</code></p><p>然后在终端中可以使用 <code>code</code> 命令打开 vscode 了, 或者 <code>code .</code> 打开当前目录</p><table><thead><tr><th>常用命令</th><th>用途</th></tr></thead><tbody><tr><td>code</td><td>打开 vscode</td></tr><tr><td>code .</td><td>vscode 打开当前目录</td></tr><tr><td>code &#x2F;Users&#x2F;iuxt&#x2F;code</td><td>打开指定的目录</td></tr></tbody></table><h2 id="防止自动睡眠"><a href="#防止自动睡眠" class="headerlink" title="防止自动睡眠"></a>防止自动睡眠</h2><p>在显示器 高级里面 打开 使用电源适配器供电且显示器关闭时, 防止自动进入睡眠选项。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241101946.png" alt="B7491094-21E7-4D08-9603-5D1574639FDD.png|484"></p><h2 id="提示-程序损坏-需要移动到废纸篓"><a href="#提示-程序损坏-需要移动到废纸篓" class="headerlink" title="提示 程序损坏,需要移动到废纸篓"></a>提示 程序损坏,需要移动到废纸篓</h2><p>或者提示应用未验证等, 可以到访达里, 找到应用程序, 按下 control 键点击, 选择打开</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241142254.png" alt="image.png|624"></p><p>或者去除苹果的 quarantine 属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine /Applications/WebStrom.app</span><br></pre></td></tr></table></figure><h2 id="常见的系统文件位置"><a href="#常见的系统文件位置" class="headerlink" title="常见的系统文件位置"></a>常见的系统文件位置</h2><table><thead><tr><th>内容</th><th>位置</th></tr></thead><tbody><tr><td>开机启动项</td><td>&#x2F;Library&#x2F;LaunchDaemons&#x2F;</td></tr><tr><td>开机启动项</td><td>&#x2F;Library&#x2F;LaunchAgents&#x2F;</td></tr><tr><td>开机启动项 (个人)</td><td>~&#x2F;Library&#x2F;LaunchAgents</td></tr><tr><td>完全磁盘访问权限</td><td>&#x2F;Library&#x2F;PrivilegedHelperTools&#x2F;</td></tr></tbody></table><h2 id="终端配置"><a href="#终端配置" class="headerlink" title="终端配置"></a>终端配置</h2><h3 id="ls-查看的文件颜色"><a href="#ls-查看的文件颜色" class="headerlink" title="ls 查看的文件颜色"></a>ls 查看的文件颜色</h3><p>mac 的 ls 命令默认的颜色比较难看, 比如可执行程序显示红色, 可以通过这种方式修改一下.</p><p>修改前:</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241214412.png" alt="image.png|790"></p><p>配置在.zshrc 内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终端配色 比如文件夹是什么颜色, 链接是什么颜色等</span></span><br><span class="line"><span class="built_in">export</span> CLICOLOR=1</span><br><span class="line"><span class="built_in">export</span> LSCOLORS=ExGxFxdaCxDaDahbadeche</span><br></pre></td></tr></table></figure><p>修改后:</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241215880.png" alt="image.png|799"></p><h3 id="zsh-配置"><a href="#zsh-配置" class="headerlink" title="zsh 配置"></a>zsh 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew</span></span><br><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装字体</span></span><br><span class="line">brew install font-lxgw-wenkai font-meslo-for-powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Oh My Zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装powerlevel10k主题</span></span><br><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br><span class="line">sed -i <span class="string">&#x27;s#^ZSH_THEME=.*#ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;#g&#x27;</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装两个常用的插件</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">omz plugin <span class="built_in">enable</span> zsh-autosuggestions zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h3 id="安装-FZF"><a href="#安装-FZF" class="headerlink" title="安装 FZF"></a>安装 FZF</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install fzf</span><br><span class="line">$(brew --prefix)/opt/fzf/install</span><br></pre></td></tr></table></figure><h2 id="远程访问-Windows"><a href="#远程访问-Windows" class="headerlink" title="远程访问 Windows"></a>远程访问 Windows</h2><p>可以使用 parallels client (appstore 就有) 或者使用微软官方的 microsoft remote desktop 客户端 (商店版需要美区 apple id), 或者在微软官方下载</p><p><a href="https://go.microsoft.com/fwlink/?linkid=868963">正式版pkg包(程色图标)</a><br><a href="https://install.appcenter.ms/orgs/rdmacios-k2vy/apps/microsoft-remote-desktop-for-mac/distribution_groups/all-users-of-microsoft-remote-desktop-for-mac">beta版zip包(蓝色图标)</a></p><h2 id="解包-pkg"><a href="#解包-pkg" class="headerlink" title="解包 pkg"></a>解包 pkg</h2><p> 部分 pkg 包里面有私货, 比如微软的 Edge 浏览器, 我们可以通过解包 pkg 直接提取 <code>.app</code> 文件, 手动拷贝到应用程序下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> temp &amp;&amp; <span class="built_in">cd</span> temp</span><br><span class="line">xar -xf Setup.pkg</span><br><span class="line"><span class="comment"># 或者使用 pkgutil --expand edge.pkg ./edge</span></span><br><span class="line"><span class="built_in">cat</span> mac.pkg/Payload | cpio -i</span><br></pre></td></tr></table></figure><h2 id="vim-的配置"><a href="#vim-的配置" class="headerlink" title="vim 的配置"></a>vim 的配置</h2><h3 id="安装-Plug-插件管理工具"><a href="#安装-Plug-插件管理工具" class="headerlink" title="安装 Plug 插件管理工具"></a>安装 Plug 插件管理工具</h3><p><a href="https://github.com/junegunn/vim-plug">https://github.com/junegunn/vim-plug</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><p>Plug 的配置文件在 <code>.vimrc</code> 里面，在 <code>call plug#begin()</code> 和 <code>call plug#end()</code> 之间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line">  Plug <span class="string">&#x27;preservim/nerdtree&#x27;</span></span><br><span class="line">call plug<span class="comment">#end()</span></span><br></pre></td></tr></table></figure><p>配置修改完成后，在 vim 命令界面，输入 PlugInstall 自动安装插件。</p><h3 id="安装-NerdTree-目录树工具"><a href="#安装-NerdTree-目录树工具" class="headerlink" title="安装 NerdTree 目录树工具"></a>安装 NerdTree 目录树工具</h3><p><a href="https://github.com/preservim/nerdtree">https://github.com/preservim/nerdtree</a></p><p>使用 Plug 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plug <span class="string">&#x27;preservim/nerdtree&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>: <span class="string">&#x27;NERDTreeToggle&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><p>配置文件 <code>~/.vimrc</code> 配置 F8 为快捷键:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; nerdtree</span></span><br><span class="line"><span class="string">let NERDTreeWinPos=&quot;</span>left<span class="string">&quot;</span></span><br><span class="line"><span class="string">noremap &lt;F8&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="安装-airline-主题"><a href="#安装-airline-主题" class="headerlink" title="安装 airline 主题"></a>安装 airline 主题</h3><p><a href="https://github.com/vim-airline/vim-airline">https://github.com/vim-airline/vim-airline</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline-themes&#x27;</span></span><br></pre></td></tr></table></figure><p>主题配置 <code>~/.vimrc</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; airline</span></span><br><span class="line"><span class="string">set laststatus=2  &quot;</span>永远显示状态栏</span><br><span class="line"><span class="built_in">let</span> g:airline_powerline_fonts = 1  <span class="string">&quot;支持 powerline 字体</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#enabled = 1 &quot;</span>显示窗口tab和buffer</span><br><span class="line"><span class="built_in">let</span> g:airline_theme=<span class="string">&#x27;molokai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line"><span class="built_in">let</span> g:airline_symbols = &#123;&#125;</span><br><span class="line">endif</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">&#x27;▶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">&#x27;❯&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">&#x27;◀&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">&#x27;❮&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.linenr = <span class="string">&#x27;¶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.branch = <span class="string">&#x27;⎇&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="最终的-vim-配置文件如下"><a href="#最终的-vim-配置文件如下" class="headerlink" title="最终的 vim 配置文件如下"></a>最终的 vim 配置文件如下</h3><p><code>vim ~/.vimrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;preservim/nerdtree&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>: <span class="string">&#x27;NERDTreeToggle&#x27;</span> &#125;</span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"></span><br><span class="line">call plug<span class="comment">#end()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">paste</span></span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; nerdtree</span></span><br><span class="line"><span class="string">let NERDTreeWinPos=&quot;</span>left<span class="string">&quot;</span></span><br><span class="line"><span class="string">noremap &lt;F8&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> airline</span><br><span class="line"><span class="built_in">set</span> laststatus=2  <span class="string">&quot;永远显示状态栏</span></span><br><span class="line"><span class="string">let g:airline_powerline_fonts = 1  &quot;</span>支持 powerline 字体</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1 &quot;显示窗口tab和buffer</span></span><br><span class="line"><span class="built_in">let</span> g:airline_theme=<span class="string">&#x27;molokai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line"><span class="built_in">let</span> g:airline_symbols = &#123;&#125;</span><br><span class="line">endif</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">&#x27;▶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">&#x27;❯&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">&#x27;◀&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">&#x27;❮&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.linenr = <span class="string">&#x27;¶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.branch = <span class="string">&#x27;⎇&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="云服务文件夹"><a href="#云服务文件夹" class="headerlink" title="云服务文件夹"></a>云服务文件夹</h2><h3 id="第三方同步盘位置"><a href="#第三方同步盘位置" class="headerlink" title="第三方同步盘位置"></a>第三方同步盘位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;HOME&#125;</span>/Library/CloudStorage</span><br></pre></td></tr></table></figure><h3 id="在家目录创建-iCloud-快捷方式"><a href="#在家目录创建-iCloud-快捷方式" class="headerlink" title="在家目录创建 iCloud 快捷方式"></a>在家目录创建 iCloud 快捷方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/Library/Mobile Documents/com~apple~CloudDocs&quot;</span> ~/icloud</span><br></pre></td></tr></table></figure><h2 id="重置网卡信息"><a href="#重置网卡信息" class="headerlink" title="重置网卡信息"></a>重置网卡信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf /Library/Preferences/SystemConfiguration/preferences.plist</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /Library/Preferences/SystemConfiguration/NetworkInterfaces.plist*</span><br></pre></td></tr></table></figure><h2 id="安装根证书"><a href="#安装根证书" class="headerlink" title="安装根证书"></a>安装根证书</h2><p>打开钥匙串 – 登录 – 证书 将证书文件拖进来<br>然后双击证书, 查看信任, 设置为始终信任</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241306196.png" alt="0E07356E-2BBC-4C2C-BC5B-187C697CAECB.png|672"></p><h2 id="开发组件"><a href="#开发组件" class="headerlink" title="开发组件"></a>开发组件</h2><h3 id="zlib-库找不到"><a href="#zlib-库找不到" class="headerlink" title="zlib 库找不到"></a>zlib 库找不到</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装zlib库</span></span><br><span class="line">brew install zlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台会输出配置, 根据需要贴到 ~/.zshrc 里</span></span><br><span class="line"><span class="comment">#For compilers to find zlib you may need to set:</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">$LDFLAGS</span> -L<span class="subst">$(brew --prefix zlib)</span>/lib&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;<span class="variable">$CPPFLAGS</span> -I<span class="subst">$(brew --prefix zlib)</span>/include&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#For pkg-config to find zlib you may need to set:</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=<span class="string">&quot;<span class="variable">$PKG_CONFIG_PATH</span>:<span class="subst">$(brew --prefix zlib)</span>/lib/pkgconfig&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装-mysqlclient"><a href="#安装-mysqlclient" class="headerlink" title="安装 mysqlclient"></a>安装 mysqlclient</h3><p><code>pip install mysqlclient</code> 报错，需要先安装依赖包 <code>brew install mysql-client</code> 然后配置环境变量, 添加以下 3 行到 <code>.zshrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="subst">$(brew --prefix mysql-client)</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">$LDFLAGS</span> -L<span class="subst">$(brew --prefix mysql-client)</span>/lib&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;<span class="variable">$CPPFLAGS</span> -I<span class="subst">$(brew --prefix mysql-client)</span>/include&quot;</span></span><br></pre></td></tr></table></figure><p>如果报错 <code>ld: library &#39;ssl&#39; not found</code> ，需要安装 openssl <code>brew install openssl</code> 环境变量需要增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">$LDFLAGS</span> -L<span class="subst">$(brew --prefix openssl)</span>/lib&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;<span class="variable">$CPPFLAGS</span> -I<span class="subst">$(brew --prefix openssl)</span>/include&quot;</span></span><br></pre></td></tr></table></figure><p>如果报错 <code>ld: library &#39;zstd&#39; not found</code>， 需要安装 zstd <code>brew install zstd</code> 环境变量需要增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">$LDFLAGS</span> -L<span class="subst">$(brew --prefix zstd)</span>/lib&quot;</span></span><br></pre></td></tr></table></figure><h3 id="使用-pkg-config-查找参数"><a href="#使用-pkg-config-查找参数" class="headerlink" title="使用 pkg-config 查找参数"></a>使用 pkg-config 查找参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装pkg-config</span></span><br><span class="line">brew install pkg-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有的pkg-config路径，需要配置到变量 PKG_CONFIG_PATH 中</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=$(find /usr/local/Cellar -name <span class="string">&#x27;pkgconfig&#x27;</span> -<span class="built_in">type</span> d | grep lib/pkgconfig | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;:&#x27;</span> | sed s/.$//)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看openssl的 CPPFLAGS 参数， 需要配置到变量 CPPFLAGS 中</span></span><br><span class="line">❯ pkg-config --cflags openssl</span><br><span class="line">-I/usr/local/Cellar/openssl@3/3.3.1/include</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看openssl的 LDFLAGS 参数， 需要配置到变量 LDFLAGS 中</span></span><br><span class="line">❯ pkg-config --libs openssl</span><br><span class="line">-L/usr/local/Cellar/openssl@3/3.3.1/lib -lssl -lcrypto</span><br></pre></td></tr></table></figure><h2 id="挂载-EFI"><a href="#挂载-EFI" class="headerlink" title="挂载 EFI"></a>挂载 EFI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">sudo diskutil list</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401241434966.png" alt="image.png|652"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">sudo diskutil mount disk0s1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">sudo diskutil umount disk0s1</span><br></pre></td></tr></table></figure><h2 id="卸载输入法"><a href="#卸载输入法" class="headerlink" title="卸载输入法"></a>卸载输入法</h2><p>搜狗输入法 macOS 版安装程序提供了卸载选项, 可以使用安装程序来进行卸载. 可是微信输入法没有, 删除方法如下:</p><h3 id="系统设置中移除输入法"><a href="#系统设置中移除输入法" class="headerlink" title="系统设置中移除输入法"></a>系统设置中移除输入法</h3><p>在系统设置中移除微信输入法</p><h3 id="停止输入法"><a href="#停止输入法" class="headerlink" title="停止输入法"></a>停止输入法</h3><p>打开活动监视器, 找到微信输入法, 停止进程</p><h3 id="删除输入法"><a href="#删除输入法" class="headerlink" title="删除输入法"></a>删除输入法</h3><p>打开访达, 按下 <code>shift + command + G</code> 输入：<code>/Library/Input Methods</code> 回车<br>选中 WeType ，右键选择 移到废纸篓<br><code>$&#123;HOME&#125;/Library/Application Support</code> 删除 <code>wetype</code></p><h2 id="查看-Bundle-ID"><a href="#查看-Bundle-ID" class="headerlink" title="查看 Bundle ID"></a>查看 Bundle ID</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">codesign -dr - /Applications/Microsoft\ Edge.app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者：</span></span><br><span class="line">osascript -e <span class="string">&#x27;id of app &quot;iterm2&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="brew-常用操作"><a href="#brew-常用操作" class="headerlink" title="brew 常用操作"></a>brew 常用操作</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 更新 brew</span><br><span class="line">brew <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"># 搜索软件包</span><br><span class="line">brew <span class="built_in">search</span> &lt;package name&gt;</span><br><span class="line"></span><br><span class="line"># 查看软件包信息</span><br><span class="line">brew info &lt;package name&gt;</span><br><span class="line"></span><br><span class="line"># 查看软件包主页/官网</span><br><span class="line">brew home &lt;package name&gt;</span><br></pre></td></tr></table></figure><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看受管理的服务</span></span><br><span class="line">brew services</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接启动，不配置开机自启动</span></span><br><span class="line">brew services run mysql@8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">brew services <span class="built_in">kill</span> mysql@8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务，配置开机自启动</span></span><br><span class="line">brew services restart mysql@8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动并且配置开机自启动</span></span><br><span class="line">brew services start mysql@8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务，取消开机自启动</span></span><br><span class="line">brew services stop mysql@8.0</span><br></pre></td></tr></table></figure><h3 id="安装卸载"><a href="#安装卸载" class="headerlink" title="安装卸载"></a>安装卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看需要升级的软件包</span></span><br><span class="line">brew outdated</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁定指定软件包的版本</span></span><br><span class="line">brew pin &lt;package name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解除对指定软件包版本的锁定</span></span><br><span class="line">brew unpin &lt;package name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新指定的软件包</span></span><br><span class="line">brew update &lt;package name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有需要升级的软件包</span></span><br><span class="line">brew upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许 cask 仓库的软件也能被更新（建议关闭所有软件的内置更新，仅通过 brew 更新）</span></span><br><span class="line">brew upgrade --greedy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已经安装的所有包</span></span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看有哪些旧软件包会被清理</span></span><br><span class="line">brew cleanup --dry-run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理旧软件包</span></span><br><span class="line">brew cleanup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已经安装的软件包</span></span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已经安装的软件包及版本信息</span></span><br><span class="line">brew list --versions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以树状图展示「已安装包」的依赖信息</span></span><br><span class="line">brew deps --installed --tree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定的版本</span></span><br><span class="line">brew install mysql@5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载包</span></span><br><span class="line">brew uninstall font-meslo-lg-nerd-font</span><br></pre></td></tr></table></figure><h2 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew 添加字体库</span></span><br><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索可用 Nerd Font 字体</span></span><br><span class="line">brew search nerd-font</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装适配了powerlevel10k的字体</span></span><br><span class="line">brew install homebrew/cask-fonts/font-meslo-for-powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装「霞鹜文楷」字体</span></span><br><span class="line">brew install font-lxgw-wenkai</span><br></pre></td></tr></table></figure><h2 id="finder-访达个人收藏变成英文"><a href="#finder-访达个人收藏变成英文" class="headerlink" title="finder 访达个人收藏变成英文"></a>finder 访达个人收藏变成英文</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/Desktop/.localized</span><br></pre></td></tr></table></figure><p>重启 finder 后可恢复中文。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 常用操作 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源组网工具-easytier</title>
      <link href="/posts/sq6bmc/"/>
      <url>/posts/sq6bmc/</url>
      
        <content type="html"><![CDATA[<p>这个工具是利用 NAT 打洞实现，需要有一台服务器（可以自建也可以用官方提供的）做中介。经测试打洞成功率很高，速度也不错。打洞成功后，异地的机器就像在同一个内网一样方便，访问 smb、家里的 nas、远程桌面等等，并且支持自动对内网网段进行转发（zerotier 需要配置 iptables 转发）自建服务器后感觉比 zerotier 好用。zerotier 的文档可以看 <a href="/posts/spi492/">群晖NAS部署zerotier内网穿透访问</a></p><h2 id="自建服务端"><a href="#自建服务端" class="headerlink" title="自建服务端"></a>自建服务端</h2><p>这个步骤可以省略，不自建可以用社区提供的免费服务器。使用社区服务器指定 <code>-p</code> 参数： <code>-p tcp://public.easytier.top:11010</code></p><p>我安装的是 easytier 的 docker 版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f easytier</span><br><span class="line">docker run --name easytier -d \</span><br><span class="line">    --network host \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">    --privileged \</span><br><span class="line">    registry.cn-hangzhou.aliyuncs.com/iuxt/easytier:v2.1.2 \</span><br><span class="line">    --ipv4 10.233.233.1 --network-name iuxt --network-secret 6d062b06-e3bb-40ab-849c-a4e5bc19b7ee --vpn-portal wg://0.0.0.0:11013/10.14.14.0/24</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>–ipv4 给服务器分配的虚拟 IP</li><li>–network-name 网络名字</li><li>–network-secret 是网络密钥，我这里使用的是生成的 uuid，这个密钥别人知道了也可以加入你的网络内，所以需要保护好。一个服务器可以让加入多个网络。</li><li>–vpn-portal 允许 WireGuard 接入，<code>0.0.0.0:11013</code> 是监听地址，<code>10.14.14.0/24</code> 是 WireGuard 的网段。</li></ul><h2 id="Windows-机器一"><a href="#Windows-机器一" class="headerlink" title="Windows 机器一"></a>Windows 机器一</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -p 参数指定的是服务器的公网IP</span></span><br><span class="line">easytier-core.exe --ipv4 10.233.233.2 --network-name iuxt --network-secret 6d062b06-e3bb-40ab-849c-a4e5bc19b7ee -p tcp://119.45.171.27:11010</span><br></pre></td></tr></table></figure><h2 id="Windows-机器二"><a href="#Windows-机器二" class="headerlink" title="Windows 机器二"></a>Windows 机器二</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">easytier-core.exe --ipv4 10.233.233.3 --network-name iuxt --network-secret 6d062b06-e3bb-40ab-849c-a4e5bc19b7ee -p tcp://119.45.171.27:11010</span><br></pre></td></tr></table></figure><h2 id="群晖-nas-部署"><a href="#群晖-nas-部署" class="headerlink" title="群晖 nas 部署"></a>群晖 nas 部署</h2><p>可以加多个 -n 参数指定多个网段。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name easytier -d \</span><br><span class="line">    --network host \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">    --privileged \</span><br><span class="line">    registry.cn-hangzhou.aliyuncs.com/iuxt/easytier:v2.1.2 \</span><br><span class="line">    --ipv4 10.233.233.11 --network-name iuxt --network-secret 6d062b06-e3bb-40ab-849c-a4e5bc19b7ee -n 192.168.1.0/24 -p tcp://119.45.171.27:11010</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>-n 这里写了内网的网段，意思是这个网段的 IP 通过这台机器来代理转发，在其他机器上可以直接访问这个网段的任意 IP</li></ul><h2 id="Windows-安装服务"><a href="#Windows-安装服务" class="headerlink" title="Windows 安装服务"></a>Windows 安装服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定参数安装成服务</span></span><br><span class="line">easytier-cli.exe service install --ipv4 10.233.233.3 --network-name iuxt --network-secret 6d062b06-e3bb-40ab-849c-a4e5bc19b7ee -n 192.168.22.0/24 -n 192.168.1.0/24 -p tcp://119.45.171.27:11010</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载服务</span></span><br><span class="line">easytier-cli.exe service uninstall</span><br></pre></td></tr></table></figure><h2 id="生成-WireGuard-配置文件"><a href="#生成-WireGuard-配置文件" class="headerlink" title="生成 WireGuard 配置文件"></a>生成 WireGuard 配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在服务器上执行</span></span><br><span class="line">docker <span class="built_in">exec</span> easytier easytier-cli vpn-portal &gt; wireguard.conf</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Interface]</span></span><br><span class="line"><span class="attr">PrivateKey</span> = h3MxzS7aLWDlX6l1xAJA8wooj58N0lg6UPV+n2q7FkM=</span><br><span class="line"><span class="attr">Address</span> = <span class="number">10.14</span>.<span class="number">14.10</span>/<span class="number">32</span>    <span class="comment"># 这里修改成本机的虚拟IP</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Peer]</span></span><br><span class="line"><span class="attr">PublicKey</span> = Mp7H/sHXZW+NqxrtsPnEtHMWIbFWPYjyxEir3uWY3WA=</span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="number">10.233</span>.<span class="number">233.0</span>/<span class="number">24</span>,<span class="number">10.14</span>.<span class="number">14.0</span>/<span class="number">24</span>      <span class="comment"># 这些网段走wireguard转发</span></span><br><span class="line"><span class="attr">Endpoint</span> = <span class="number">119.45</span>.<span class="number">171.27</span>:<span class="number">11013</span>                  <span class="comment"># 服务器的wireguard接口地址</span></span><br><span class="line"><span class="attr">PersistentKeepalive</span> = <span class="number">25</span></span><br></pre></td></tr></table></figure><h2 id="windows-防火墙配置"><a href="#windows-防火墙配置" class="headerlink" title="windows 防火墙配置"></a>windows 防火墙配置</h2><p>不能连接记得防火墙放通 easytier 的虚拟网段和 wireguard 网段。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;Allow Subnet 10.233.233.0/24&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow <span class="literal">-RemoteAddress</span> <span class="number">10.233</span>.<span class="number">233.0</span>/<span class="number">24</span> <span class="literal">-Protocol</span> Any <span class="literal">-Enabled</span> True</span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;Allow Subnet 10.14.14.0/24&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow <span class="literal">-RemoteAddress</span> <span class="number">10.14</span>.<span class="number">14.0</span>/<span class="number">24</span> <span class="literal">-Protocol</span> Any <span class="literal">-Enabled</span> True</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本获取自身的信息</title>
      <link href="/posts/lrcy3q4o/"/>
      <url>/posts/lrcy3q4o/</url>
      
        <content type="html"><![CDATA[<p>写 shell 脚本， 有时候需要获取一些信息， 比如这个脚本的名字，脚本所在的目录，脚本的绝对路径， 这个脚本的 pid， 参数等。</p><table><thead><tr><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>$0</td><td>脚本自身的路径（执行的时候调用路径）</td></tr><tr><td>$1</td><td>第一个参数</td></tr><tr><td>$?</td><td>上一个脚本的返回值，0为正常</td></tr><tr><td>$*</td><td>所有的参数</td></tr><tr><td>$#</td><td>参数的个数</td></tr><tr><td>$$</td><td>当前脚本的pid</td></tr><tr><td>$_</td><td>上一条命令的参数</td></tr></tbody></table><h2 id="获取脚本的文件名"><a href="#获取脚本的文件名" class="headerlink" title="获取脚本的文件名"></a>获取脚本的文件名</h2><p><code>$0</code> 是脚本的路径，这个路径有可能是相对路径，那么可以使用 dirname 和 basename 配合来获取脚本绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 脚本所在的目录的绝对路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(cd $(dirname $0)</span>; pwd)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本的文件名</span></span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">basename</span> <span class="variable">$0</span>)</span><br></pre></td></tr></table></figure><h2 id="获取脚本的绝对路径"><a href="#获取脚本的绝对路径" class="headerlink" title="获取脚本的绝对路径"></a>获取脚本的绝对路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取脚本的绝对路径</span></span><br><span class="line">DIR=$(<span class="built_in">cd</span> $(<span class="built_in">dirname</span> <span class="variable">$0</span>); <span class="built_in">pwd</span>)</span><br><span class="line">FILE=$(<span class="built_in">basename</span> <span class="variable">$0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;DIR&#125;</span>/<span class="variable">$&#123;FILE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="进入临时目录"><a href="#进入临时目录" class="headerlink" title="进入临时目录"></a>进入临时目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $_ 指的是上一个命令的参数，这个里面指的就是temp</span></span><br><span class="line"><span class="built_in">mkdir</span> temp &amp;&amp; <span class="built_in">cd</span> <span class="variable">$_</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> cli </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux大文件分割与合并</title>
      <link href="/posts/lra06cl1/"/>
      <url>/posts/lra06cl1/</url>
      
        <content type="html"><![CDATA[<p>服务器上有个文件需要下载到本地, 但是文件较大, 我们都是通过 jumpserver 连接的, 通过 jumpserver 下载难免会遇到网络波动等导致下载失败, 我们可以通过分割大文件成一个个小文件, 然后下载后再在本地合并. 用到的命令是 split</p><h2 id="split-分割大文件"><a href="#split-分割大文件" class="headerlink" title="split 分割大文件"></a>split 分割大文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -b 1024M -d -a 3 2023.tar.gz tmp.</span><br></pre></td></tr></table></figure><p>参数说明:</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-b</td><td>指定每个文件的大小, 支持 K M G</td></tr><tr><td>-d</td><td>指定后缀编码为数字，默认编码为字母</td></tr><tr><td>-a</td><td>指定后缀长度,3 表示 3 位数, 比如上面的命令, 生成的文件就是 tmp.000 …</td></tr><tr><td>.&#x2F;tmp.</td><td>这个是生成的文件名前面的部分</td></tr></tbody></table><p>如果报错 <code>split: output file suffixes exhausted</code> 说明后缀不够用了, 比如参数 <code>-a 1 </code> 支持的后缀为 0 - 9 , 如果文件太大, 超过了 9, 就会报这个错.</p><h2 id="使用-cat-合并大文件"><a href="#使用-cat-合并大文件" class="headerlink" title="使用 cat 合并大文件"></a>使用 cat 合并大文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> tmp.* &gt; 2023.tar.gz</span><br></pre></td></tr></table></figure><p>合并完成再验证一下 MD5 值, 和服务器做下对比即可.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md5sum</span> 2023.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> cli </tag>
            
            <tag> Linux </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 22.04 内核相关操作</title>
      <link href="/posts/lr8yc0vu/"/>
      <url>/posts/lr8yc0vu/</url>
      
        <content type="html"><![CDATA[<p>文章内容在 Ubuntu 22.04 系统下测试成功, 版本相差过大请自测。</p><h2 id="开机显示启动项"><a href="#开机显示启动项" class="headerlink" title="开机显示启动项"></a>开机显示启动项</h2><p>新版 Ubuntu 好像默认不显示启动项而直接进入系统了，可以通过修改 <code>/etc/default/grub</code> 来实现开机显示启动选项列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释掉这一行</span></span><br><span class="line"><span class="comment"># GRUB_TIMEOUT_STYLE=hidden</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这一行是在grub界面等待的时间，单位s</span></span><br><span class="line">GRUB_TIMEOUT=30</span><br></pre></td></tr></table></figure><p>修改完成后执行 <code>sudo update-grub</code> 更新 grub 配置</p><div class="note warning flat"><p>下面两种方式二选一即可。</p></div><h2 id="更换使用的内核版本（通过启动项-uuid-指定方式）"><a href="#更换使用的内核版本（通过启动项-uuid-指定方式）" class="headerlink" title="更换使用的内核版本（通过启动项 uuid 指定方式）"></a>更换使用的内核版本（通过启动项 uuid 指定方式）</h2><h3 id="查看当前在用的内核版本"><a href="#查看当前在用的内核版本" class="headerlink" title="查看当前在用的内核版本"></a>查看当前在用的内核版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r</span><br></pre></td></tr></table></figure><p>6.5.0-14-generic</p><h3 id="查看系统启动项"><a href="#查看系统启动项" class="headerlink" title="查看系统启动项"></a>查看系统启动项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看&#x27;Advanced options for Ubuntu&#x27;选项的uuid</span></span><br><span class="line">grep <span class="string">&quot;submenu &#x27;Advanced options for Ubuntu&#x27;&quot;</span> /boot/grub/grub.cfg | awk -F\&#x27; <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 内核版本选项</span></span><br><span class="line">grep <span class="string">&quot;menuentry_id_option &quot;</span> /boot/grub/grub.cfg | awk -F\&#x27; <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>比如 ‘Advanced options for Ubuntu’ 选项的 uuid 是 <code>gnulinux-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8</code> 内核版本启动项是 <code>gnulinux-5.15.0-1005-azure-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8</code> 那么最终的启动项配置就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnulinux-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8&gt;gnulinux-5.15.0-1005-azure-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8</span><br></pre></td></tr></table></figure><p>uuid 对应关系：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401112216030.png" alt="image.png"></p><p>对应的启动界面 submenu:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401112224241.png" alt="image.png"></p><p>对应的启动界面 menuentry:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401112225292.png" alt="image.png"></p><h3 id="修改默认启动项"><a href="#修改默认启动项" class="headerlink" title="修改默认启动项"></a>修改默认启动项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure><p>修改为上一步生成的 启动项配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">GRUB_DEFAULT</span>=<span class="string">&#x27;gnulinux-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8&gt;gnulinux-5.15.0-1005-azure-advanced-89ee03ba-6808-4977-a4fb-9b10174744f8&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="更新配置"><a href="#更新配置" class="headerlink" title="更新配置"></a>更新配置</h3><p>更新配置文件到 <code>/boot/grub/grub.cfg</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sourcing file `/etc/default/grub<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Sourcing file `/etc/default/grub.d/init-select.cfg&#x27;</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-6.5.0-14-generic</span><br><span class="line">Found initrd image: /boot/initrd.img-6.5.0-14-generic</span><br><span class="line">Found linux image: /boot/vmlinuz-5.15.0-40-generic</span><br><span class="line">Found initrd image: /boot/initrd.img-5.15.0-40-generic</span><br><span class="line">Found memtest86+ image: /boot/memtest86+.elf</span><br><span class="line">Found memtest86+ image: /boot/memtest86+.bin</span><br><span class="line">Warning: os-prober will not be executed to detect other bootable partitions.</span><br><span class="line">Systems on them will not be added to the GRUB boot configuration.</span><br><span class="line">Check GRUB_DISABLE_OS_PROBER documentation entry.</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="更换使用的内核版本（通过记录上一次选择的内核）"><a href="#更换使用的内核版本（通过记录上一次选择的内核）" class="headerlink" title="更换使用的内核版本（通过记录上一次选择的内核）"></a>更换使用的内核版本（通过记录上一次选择的内核）</h2><p>sudo vim &#x2F;etc&#x2F;default&#x2F;grub</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置为保存记录</span></span><br><span class="line"><span class="attr">GRUB_SAVEDEFAULT</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">GRUB_DEFAULT</span>=saved</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉这一行，使grub选项显示</span></span><br><span class="line"><span class="comment"># GRUB_TIMEOUT_STYLE=hidden</span></span><br><span class="line"><span class="attr">GRUB_TIMEOUT</span>=<span class="number">10</span></span><br></pre></td></tr></table></figure><p>更新 grub 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><p>重启后， 选择你想使用的内核， 下次重启就会自动选择此内核</p><div class="note danger flat"><p>注意： 可以在选择好内核后，再把 grub 界面隐藏掉。避免误操作。</p></div>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Kernel </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取Kubernetes的token</title>
      <link href="/posts/lr0clio1/"/>
      <url>/posts/lr0clio1/</url>
      
        <content type="html"><![CDATA[<h2 id="获取-admin-的-token"><a href="#获取-admin-的-token" class="headerlink" title="获取 admin 的 token"></a>获取 admin 的 token</h2><p>如果有这个 secret, 可以直接查看 token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system get secret admin-token-nwphb -o jsonpath=&#123;.data.token&#125; | <span class="built_in">base64</span> -d</span><br></pre></td></tr></table></figure><h2 id="新版-k8s-命令为"><a href="#新版-k8s-命令为" class="headerlink" title="新版 k8s 命令为"></a>新版 k8s 命令为</h2><p>选择一个现有的 serviceaccount</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get serviceaccount</span><br></pre></td></tr></table></figure><p>使用这个 serviceaccount 创建一个 token(并设置有效期)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create token default --duration 10m</span><br></pre></td></tr></table></figure><h2 id="新建一个用户获取-token"><a href="#新建一个用户获取-token" class="headerlink" title="新建一个用户获取 token"></a>新建一个用户获取 token</h2><p>如果考虑到权限没有合适的,或者没有相关的 secret,可以通过创建一个新的用户来获取 token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create serviceaccount admin-sa</span><br><span class="line"></span><br><span class="line">kubectl create clusterrolebinding admin-sa-binding --clusterrole=cluster-admin --serviceaccount=default:admin-sa</span><br><span class="line"></span><br><span class="line">kubectl create token admin-sa --duration 10m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云ACK中Nginx ingress使用CLB上的Https证书</title>
      <link href="/posts/lr01lzch/"/>
      <url>/posts/lr01lzch/</url>
      
        <content type="html"><![CDATA[<p>背景: 我们在客户那里部署了一套服务, 服务运行在客户提供的 ACK 集群, 我们删除了客户 ACK 自带的 nginx ingress, 通过自建的方式部署了两套 ingress, 一套绑定了公网 四层 CLB, 一套绑定了内网 四层 CLB, 也就是说是 CLB 转发到 ingress, 然后通过 ingress 转发到其他服务. 现在需要配置 Https 证书, 客户不同意我们配置证书到 ingress, 客户将证书放在了 CLB 上, 给了一个证书 ID</p><h2 id="查询阿里云文档"><a href="#查询阿里云文档" class="headerlink" title="查询阿里云文档"></a>查询阿里云文档</h2><p>阿里云的文档还是很详细, 通过 google 查询到文档地址: <a href="https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/add-annotations-to-the-yaml-file-of-a-service-to-configure-clb-instances">通过Annotation配置传统型负载均衡CLB</a></p><p>具体可以查看这里</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401051108111.png" alt="image.png"></p><p>HTTPS 请求会在 CLB 层解密，然后以 HTTP 请求的形式发送给后端的 Pod。</p><blockquote><p>这个在腾讯云的四层负载均衡里叫 TCP SSL 监听器。</p></blockquote><h2 id="配置-LoadBalancer-类型的-Service"><a href="#配置-LoadBalancer-类型的-Service" class="headerlink" title="配置 LoadBalancer 类型的 Service"></a>配置 LoadBalancer 类型的 Service</h2><p>因为我们的 CLB 是只给 ingress 使用, 所以修改 ingress 的 Service 配置 yaml:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-force-override-listeners:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id:</span> <span class="string">lb-&lt;负载均衡ID&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 新增了下面两行</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-protocol-port:</span> <span class="string">&quot;https:443,http:80&quot;</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-cert-id:</span> <span class="string">&quot;&lt;证书的ID&gt;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">public-controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.6</span><span class="number">.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">public-ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">nginx-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ipFamilies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IPv4</span></span><br><span class="line">  <span class="attr">ipFamilyPolicy:</span> <span class="string">SingleStack</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31443</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">public-controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br></pre></td></tr></table></figure><h2 id="CLB-后端端口配置问题"><a href="#CLB-后端端口配置问题" class="headerlink" title="CLB 后端端口配置问题"></a>CLB 后端端口配置问题</h2><p>照着上面步骤配置了以后, Https 访问证书是生效了, 但是没法转发到后端, 会报错: <code>The plain HTTP request was sent to HTTPS port</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401051117258.png" alt="image.png"></p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析:"></a>原因分析:</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250109154725382.png" alt="image.png"></p><p>这里 https 请求在 CLB 解密后, 请求后面的 Ingress 是用 http 协议来请求的, 按道理是所有请求都到 ingress-controller 的 HTTP 端口 才对（如上图）, 如果将 TCP SSL 的后端配置成了 HTTPS 就会出现报错: <code>The plain HTTP request was sent to HTTPS port</code></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>第一种方法，修改 CLB 配置，后端指向 HTTP 端口。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250109155853273.png" alt="Pasted image 20250109153734.webp|910"></p><p>第二种方法：将 service 的 443 端口也转发到 pod 的 80 端口即可. 对应的 yaml 文件:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-force-override-listeners:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id:</span> <span class="string">lb-&lt;负载均衡ID&gt;</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-protocol-port:</span> <span class="string">&quot;https:443,http:80&quot;</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-cert-id:</span> <span class="string">&quot;&lt;证书的ID&gt;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">public-controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.6</span><span class="number">.4</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">public-ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">nginx-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ipFamilies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IPv4</span></span><br><span class="line">  <span class="attr">ipFamilyPolicy:</span> <span class="string">SingleStack</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31443</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这里把https改成http即可</span></span><br><span class="line">    <span class="comment"># targetPort: https</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">public-controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">public-ingress-nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br></pre></td></tr></table></figure><p>把这里的 <code>targetPort: https</code> 改成 <code>targetPort: http</code> 即可.</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> ingress </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> ACK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django RestFramework 自定义显示字段</title>
      <link href="/posts/lqz1imdm/"/>
      <url>/posts/lqz1imdm/</url>
      
        <content type="html"><![CDATA[<p>有的时候序列化出来的字段并不是我们想要的， 比如说返回的用户 id，而我们想要返回的是用户名， 这个时候可以用到 django rest framework 的自定义字段功能。</p><h2 id="先看一下原始数据"><a href="#先看一下原始数据" class="headerlink" title="先看一下原始数据"></a>先看一下原始数据</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>这里 user 显示的是 id, 并不是我们想要的 username</p><h2 id="增加一个字段-显示-username"><a href="#增加一个字段-显示-username" class="headerlink" title="增加一个字段, 显示 username"></a>增加一个字段, 显示 username</h2><h3 id="models"><a href="#models" class="headerlink" title="models:"></a>models:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Game</span>(models.Model):</span><br><span class="line">    name = models.CharField(verbose_name=<span class="string">&#x27;游戏名字&#x27;</span>, max_length=<span class="number">10</span>)</span><br><span class="line">    desc = models.CharField(verbose_name=<span class="string">&#x27;描述&#x27;</span>, max_length=<span class="number">20</span>)</span><br><span class="line">    user = models.ForeignKey(to=<span class="string">&#x27;auth.User&#x27;</span>, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><h3 id="serializers"><a href="#serializers" class="headerlink" title="serializers:"></a>serializers:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Game</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameSerializer</span>(serializers.ModelSerializer):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这里使用StringRelatedField来获取系统自带用户的username(依赖于models里面定义个__str__方法), 详情见下图</span></span><br><span class="line">    user_val = serializers.StringRelatedField(source=<span class="string">&#x27;user&#x27;</span>, read_only=<span class="literal">True</span>, )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = Game</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line">        <span class="comment"># exclude = (&#x27;user&#x27;,)</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果不需要user字段, 下面可以去掉, 上面exclude = (&#x27;user&#x27;,)</span></span><br><span class="line">        extra_kwargs = &#123;</span><br><span class="line">            <span class="string">&quot;user&quot;</span>: &#123;<span class="string">&quot;read_only&quot;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401041811348.png" alt="image.png"></p><h3 id="views"><a href="#views" class="headerlink" title="views:"></a>views:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GameList</span>(generics.ListCreateAPIView):</span><br><span class="line">    queryset = Game.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = GameSerializer</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这里重写了perform_create, 保存数据的时候, user使用当前登录的用户.</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">perform_create</span>(<span class="params">self, serializer</span>):</span><br><span class="line">        serializer.save(user=self.request.user)</span><br></pre></td></tr></table></figure><h3 id="返回结果"><a href="#返回结果" class="headerlink" title="返回结果:"></a>返回结果:</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user_val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iuxt&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user_val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="返回用户的多个字段"><a href="#返回用户的多个字段" class="headerlink" title="返回用户的多个字段"></a>返回用户的多个字段</h2><h3 id="首先需要自定义一个序列化器"><a href="#首先需要自定义一个序列化器" class="headerlink" title="首先需要自定义一个序列化器"></a>首先需要自定义一个序列化器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Game</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义一个序列化, 使用django 自带的user 模型类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomUserSerializer</span>(serializers.ModelSerializer):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = User</span><br><span class="line">        fields = [<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;email&#x27;</span>] <span class="comment"># 指定序列化的字段</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameSerializer</span>(serializers.ModelSerializer):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = Game</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line">        <span class="comment"># exclude = (&#x27;user&#x27;,)</span></span><br><span class="line"></span><br><span class="line">        extra_kwargs = &#123;</span><br><span class="line">            <span class="string">&quot;user&quot;</span>: &#123;<span class="string">&quot;read_only&quot;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">to_representation</span>(<span class="params">self, instance</span>):</span><br><span class="line">        representation = <span class="built_in">super</span>(GameSerializer, self).to_representation(instance)</span><br><span class="line">        <span class="comment"># 这里修改user字段, 使用自定义序列化器.</span></span><br><span class="line">        <span class="comment"># 获取多个属性</span></span><br><span class="line">        representation[<span class="string">&#x27;user&#x27;</span>] = CustomUserSerializer(instance.user, context=self.context).data</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 或者获取其中的某一个值</span></span><br><span class="line">        <span class="comment"># representation[&#x27;user&#x27;] = CustomUserSerializer(instance.user, context=self.context).data.get(&#x27;username&#x27;)</span></span><br><span class="line">        <span class="keyword">return</span> representation</span><br></pre></td></tr></table></figure><h3 id="这个时候返回结果"><a href="#这个时候返回结果" class="headerlink" title="这个时候返回结果:"></a>这个时候返回结果:</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iuxt&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iuxt@qq.com&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sdg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test@qq.com&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Python </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl常用操作记录</title>
      <link href="/posts/lqyxid2z/"/>
      <url>/posts/lqyxid2z/</url>
      
        <content type="html"><![CDATA[<p>curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思。</p><p>它的功能非常强大，命令行参数多达几十种。如果熟练的话，完全可以取代 Postman 这一类的图形界面工具。</p><p>参考文章: <a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">https://www.ruanyifeng.com/blog/2019/09/curl-reference.html</a></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="A"><a href="#A" class="headerlink" title="-A"></a>-A</h3><p>-A 参数指定客户端的用户代理标头，即 <code>User-Agent</code>。curl 的默认用户代理字符串是 <code>curl/[version]</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将User-Agent改成 Chrome 浏览器</span></span><br><span class="line">curl -A <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36&#x27;</span> https://google.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除User-Agent</span></span><br><span class="line">curl -A <span class="string">&#x27;&#x27;</span> https://google.com</span><br></pre></td></tr></table></figure><p>也可以通过 -H(更改 Header) 参数直接指定 User-Agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">&#x27;User-Agent: php/1.0&#x27;</span> https://google.com</span><br></pre></td></tr></table></figure><h3 id="b"><a href="#b" class="headerlink" title="-b"></a>-b</h3><p>-b 参数用来向服务器发送 Cookie。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送cookie</span></span><br><span class="line">curl -b <span class="string">&#x27;foo=bar&#x27;</span> https://google.com</span><br><span class="line">curl -b <span class="string">&#x27;foo1=bar;foo2=bar2&#x27;</span> https://google.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取本地文件cookies.txt，里面是服务器设置的 Cookie（参见-c参数），将其发送到服务器。</span></span><br><span class="line">curl -b cookies.txt https://www.google.com</span><br></pre></td></tr></table></figure><h3 id="c"><a href="#c" class="headerlink" title="-c"></a>-c</h3><p>-c 参数将服务器设置的 Cookie 写入一个文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将服务器的 HTTP 回应所设置 Cookie 写入文本文件cookies.txt。</span></span><br><span class="line">curl -c cookies.txt https://www.google.com</span><br></pre></td></tr></table></figure><h3 id="d"><a href="#d" class="headerlink" title="-d"></a>-d</h3><p>-d 参数用于发送 POST 请求的数据体。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用-d参数以后，HTTP 请求会自动加上标头Content-Type : application/x-www-form-urlencoded。并且会自动将请求转为 POST 方法，因此可以省略-X POST。</span></span><br><span class="line">curl -d <span class="string">&#x27;login=emma＆password=123&#x27;</span> -X POST https://google.com/login</span><br><span class="line">curl -d <span class="string">&#x27;login=emma&#x27;</span> -d <span class="string">&#x27;password=123&#x27;</span> -X POST https://google.com/login</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -d参数可以读取本地文本文件的数据，向服务器发送。</span></span><br><span class="line">curl -d <span class="string">&#x27;@data.txt&#x27;</span> https://google.com/login</span><br></pre></td></tr></table></figure><h3 id="e"><a href="#e" class="headerlink" title="-e"></a>-e</h3><p>-e 参数用来设置 HTTP 的标头 Referer，表示请求的来源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将Referer标头设为https://google.com?q=example</span></span><br><span class="line">curl -e <span class="string">&#x27;https://google.com?q=example&#x27;</span> https://www.example.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -H参数可以通过直接添加标头Referer，达到同样效果。</span></span><br><span class="line">curl -H <span class="string">&#x27;Referer: https://google.com?q=example&#x27;</span> https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="F-和-T"><a href="#F-和-T" class="headerlink" title="-F 和 -T"></a>-F 和 -T</h3><p>-F 参数用来上传多个文件<br>-T 参数用于上传单个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给 HTTP 请求加上标头Content-Type: multipart/form-data，然后将文件photo.png作为file字段上传</span></span><br><span class="line">curl -F <span class="string">&#x27;file=@photo.png&#x27;</span> https://google.com/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 MIME 类型为image/png，否则 curl 会把 MIME 类型设为application/octet-stream</span></span><br><span class="line">curl -F <span class="string">&#x27;file=@photo.png;type=image/png&#x27;</span> https://google.com/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定文件名, 原始文件名为photo.png，但是服务器接收到的文件名为me.png</span></span><br><span class="line">curl -F <span class="string">&#x27;file=@photo.png;filename=me.png&#x27;</span> https://google.com/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传单个文件</span></span><br><span class="line">curl -T /path/to/file.txt http://example.com/upload</span><br></pre></td></tr></table></figure><h3 id="H"><a href="#H" class="headerlink" title="-H"></a>-H</h3><p>-H 参数添加 HTTP 请求的标头。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">&#x27;Accept-Language: en-US&#x27;</span> https://google.com</span><br><span class="line">curl -H <span class="string">&#x27;Accept-Language: en-US&#x27;</span> -H <span class="string">&#x27;Secret-Message: xyzzy&#x27;</span> https://google.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 HTTP 请求的标头是Content-Type: application/json，然后用-d参数发送 JSON 数据。</span></span><br><span class="line">curl -d <span class="string">&#x27;&#123;&quot;login&quot;: &quot;emma&quot;, &quot;pass&quot;: &quot;123&quot;&#125;&#x27;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> https://google.com/login</span><br></pre></td></tr></table></figure><h3 id="i"><a href="#i" class="headerlink" title="-i"></a>-i</h3><p>-i 参数打印出服务器回应的 HTTP 标头。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码</span></span><br><span class="line">curl -i https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="I-–head"><a href="#I-–head" class="headerlink" title="-I(–head)"></a>-I(–head)</h3><p>-I 参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="k"><a href="#k" class="headerlink" title="-k"></a>-k</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跳过 SSL 检测</span></span><br><span class="line">curl -k https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="L"><a href="#L" class="headerlink" title="-L"></a>-L</h3><p>-L 参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L -d <span class="string">&#x27;tweet=hi&#x27;</span> https://api.twitter.com/tweet</span><br></pre></td></tr></table></figure><h3 id="–limit-rate"><a href="#–limit-rate" class="headerlink" title="–limit-rate"></a>–limit-rate</h3><p>–limit-rate 用来限制 HTTP 请求和回应的带宽，模拟慢网速的环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将带宽限制在每秒 200K 字节</span></span><br><span class="line">curl --limit-rate 200k https://google.com</span><br></pre></td></tr></table></figure><h3 id="o"><a href="#o" class="headerlink" title="-o"></a>-o</h3><p>-o 参数将服务器的回应保存成文件，等同于 wget 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要指定保存的文件名</span></span><br><span class="line">curl -o example.html https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="O"><a href="#O" class="headerlink" title="-O"></a>-O</h3><p>-O 参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将服务器回应保存成文件，文件名为bar.html</span></span><br><span class="line">curl -O https://www.example.com/foo/bar.html</span><br></pre></td></tr></table></figure><h3 id="s"><a href="#s" class="headerlink" title="-s"></a>-s</h3><p>-s 参数将不输出错误和进度信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。</span></span><br><span class="line">curl -s https://www.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果想让 curl 不产生任何输出，可以使用下面的命令。</span></span><br><span class="line">curl -s -o /dev/null https://google.com</span><br></pre></td></tr></table></figure><h3 id="u"><a href="#u" class="headerlink" title="-u"></a>-u</h3><p>-u 参数用来设置服务器认证的用户名和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置用户名为bob，密码为12345，然后将其转为 HTTP 标头Authorization: Basic Ym9iOjEyMzQ1</span></span><br><span class="line">curl -u <span class="string">&#x27;bob:12345&#x27;</span> https://google.com/login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头</span></span><br><span class="line">curl https://bob:12345@google.com/login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置了用户名，执行后，curl 会提示用户输入密码</span></span><br><span class="line">curl -u <span class="string">&#x27;bob&#x27;</span> https://google.com/login</span><br></pre></td></tr></table></figure><h3 id="v"><a href="#v" class="headerlink" title="-v"></a>-v</h3><p>-v 参数输出通信的整个过程，用于调试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -v https://www.example.com</span><br><span class="line">curl --trace - https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="x"><a href="#x" class="headerlink" title="-x"></a>-x</h3><p>-x 参数指定 HTTP 请求的代理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请求的代理默认使用 HTTP 协议</span></span><br><span class="line">curl -x socks5://james:cats@myproxy.com:8080 https://www.example.com</span><br><span class="line">curl -x james:cats@myproxy.com:8080 https://www.example.com</span><br></pre></td></tr></table></figure><h3 id="X"><a href="#X" class="headerlink" title="-X"></a>-X</h3><p>-X 参数指定 HTTP 请求的方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST https://www.example.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> curl </tag>
            
            <tag> 常用操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>检查域名支持的HTTPS协议版本</title>
      <link href="/posts/lqxf8k8u/"/>
      <url>/posts/lqxf8k8u/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-NMAP-推荐"><a href="#使用-NMAP-推荐" class="headerlink" title="使用 NMAP(推荐)"></a>使用 NMAP(推荐)</h2><p>依赖于 <code>nmap</code>, <code>nmap</code> 需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-enum-ciphers -p 443 baidu.com</span><br></pre></td></tr></table></figure><p>比如 GitHub 只支持 TLS1.2 和 TLS1.3：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401031545944.png" alt="image.png"></p><h2 id="在线验证"><a href="#在线验证" class="headerlink" title="在线验证"></a>在线验证</h2><p><a href="https://myssl.com/">https://myssl.com/</a></p><p><a href="https://www.ssleye.com/ssltool/cipher_suites.html">https://www.ssleye.com/ssltool/cipher_suites.html</a></p><p><a href="https://www.site24x7.com/zhcn/tools/tls-checker.html">https://www.site24x7.com/zhcn/tools/tls-checker.html</a></p><h2 id="使用-CURL-验证"><a href="#使用-CURL-验证" class="headerlink" title="使用 CURL 验证"></a>使用 CURL 验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --tlsv1 --tls-max 1.0  https://github.com</span><br><span class="line">curl --tlsv1 --tls-max 1.0  https://www.baidu.com</span><br></pre></td></tr></table></figure><p>报错说明不支持当前版本:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl: (<span class="number">35</span>) LibreSSL/<span class="number">3.3</span>.<span class="number">6</span>: error:<span class="number">1404</span>B42E:SSL routine<span class="variable">s:ST_CONNECT</span>:tlsv1 alert protocol <span class="keyword">version</span></span><br></pre></td></tr></table></figure><h2 id="使用-OpenSSL"><a href="#使用-OpenSSL" class="headerlink" title="使用 OpenSSL"></a>使用 OpenSSL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证TLS1.2</span></span><br><span class="line">openssl s_client -connect www.baidu.com:443 -tls1_2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证TLS1.1</span></span><br><span class="line">openssl s_client -connect www.baidu.com:443 -tls1_1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证TLS1.0</span></span><br><span class="line">openssl s_client -connect www.baidu.com:443 -tls1</span><br></pre></td></tr></table></figure><p>如果握手失败的话，那么就是不支持了。</p><h2 id="服务端-TLS-版本配置"><a href="#服务端-TLS-版本配置" class="headerlink" title="服务端 TLS 版本配置"></a>服务端 TLS 版本配置</h2><p>可以通过配置服务端,比如 nginx 来设置支持的 TLS 版本.</p><h3 id="Nginx-配置修改"><a href="#Nginx-配置修改" class="headerlink" title="Nginx 配置修改"></a>Nginx 配置修改</h3><p>配置生成地址: <a href="https://ssl-config.mozilla.org/">https://ssl-config.mozilla.org/</a></p><p>注意： tls 版本的配置必须全局生效，如果你有多个 <code>vhost</code>，那么所有都需要修改，建议直接写到一个文件内，然后通过 <code>include</code> 的方式来引用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># generated 2024-01-03, Mozilla Guideline v5.7, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration</span><br><span class="line"># https://ssl-config.mozilla.org/#server=nginx&amp;version=1.17.7&amp;config=intermediate&amp;openssl=1.1.1k&amp;guideline=5.7</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br><span class="line">    ssl_certificate_key /path/to/private_key;</span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">    # curl https://ssl-config.mozilla.org/ffdhe2048.txt &gt; /path/to/dhparam</span><br><span class="line">    ssl_dhparam /path/to/dhparam;</span><br><span class="line"></span><br><span class="line">    # intermediate configuration</span><br><span class="line">    ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;</span><br><span class="line">    ssl_prefer_server_ciphers off;</span><br><span class="line"></span><br><span class="line">    # HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=63072000&quot; always;</span><br><span class="line"></span><br><span class="line">    # OCSP stapling</span><br><span class="line">    ssl_stapling on;</span><br><span class="line">    ssl_stapling_verify on;</span><br><span class="line"></span><br><span class="line">    # verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br><span class="line">    ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><span class="line"></span><br><span class="line">    # replace with the IP address of your resolver</span><br><span class="line">    resolver 127.0.0.1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="为什么启用了-TLS1-0，但是不生效"><a href="#为什么启用了-TLS1-0，但是不生效" class="headerlink" title="为什么启用了 TLS1.0，但是不生效"></a>为什么启用了 TLS1.0，但是不生效</h3><p>已经配置了 <code>ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</code> ，但是不生效，这个和其他参数有关，比如 <code>ssl_ciphers</code> ,如果你启用了 TLSv1，但是协议不支持，那也是不能启用的。</p><p>比如在 AlmaLinux 9 下， 需要如下配置才能正常启用 TLS1.0 （主要是： <code>ssl_ciphers DEFAULT:@SECLEVEL=0;</code> 将安全级别调低 ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">   server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">listen [::]:80;</span><br><span class="line">   listen       443 ssl http2;</span><br><span class="line">   listen       [::]:443 ssl http2;</span><br><span class="line">   server_name   a.i.com;</span><br><span class="line">   root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">   ssl_certificate &quot;i.com.crt&quot;;</span><br><span class="line">   ssl_certificate_key &quot;i.com.key&quot;;</span><br><span class="line">   ssl_session_timeout 1d;</span><br><span class="line">   ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions</span><br><span class="line">   ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">   ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class="line">   ssl_ciphers DEFAULT:@SECLEVEL=0;</span><br><span class="line"></span><br><span class="line">       error_page 404 /404.html;</span><br><span class="line">           location = /40x.html &#123;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       error_page 500 502 503 504 /50x.html;</span><br><span class="line">           location = /50x.html &#123;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为什么禁用了-TLS1-0-，但是不生效"><a href="#为什么禁用了-TLS1-0-，但是不生效" class="headerlink" title="为什么禁用了 TLS1.0 ，但是不生效"></a>为什么禁用了 TLS1.0 ，但是不生效</h3><p>原理类似上面，需要同步更改 <code>ssl_ciphers</code> 参数。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> tls </tag>
            
            <tag> https </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用openssl对文件进行加密</title>
      <link href="/posts/lqxdtb6m/"/>
      <url>/posts/lqxdtb6m/</url>
      
        <content type="html"><![CDATA[<h2 id="使用密码加密"><a href="#使用密码加密" class="headerlink" title="使用密码加密"></a>使用密码加密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定输入和输出文件操作</span></span><br><span class="line">openssl enc -e -aes256 -<span class="keyword">in</span> test.sh -out enc.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用管道符</span></span><br><span class="line"><span class="built_in">cat</span> test.sh | openssl enc -e -aes256 -out enc.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩后加密</span></span><br><span class="line">tar zcvf - 1.sh | openssl enc -e -aes256 -out temp</span><br></pre></td></tr></table></figure><h2 id="使用密码解密"><a href="#使用密码解密" class="headerlink" title="使用密码解密"></a>使用密码解密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定输入和输出文件操作</span></span><br><span class="line">openssl enc -d -aes256 -<span class="keyword">in</span> enc.sh -out 1.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用管道符进行操作</span></span><br><span class="line">openssl enc -d -aes256 -<span class="keyword">in</span> enc.sh | <span class="built_in">tee</span> a.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密后进行解压</span></span><br><span class="line">openssl enc -d -aes256 -<span class="keyword">in</span> temp | tar zxvf -</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django RESTframework 自定义Response</title>
      <link href="/posts/sfz4bc/"/>
      <url>/posts/sfz4bc/</url>
      
        <content type="html"><![CDATA[<p>比如我想给返回的 json 加上 code&#x2F; msg 等信息，可以通过修改 drf 的 response 来实现。</p><h2 id="全局生效"><a href="#全局生效" class="headerlink" title="全局生效"></a>全局生效</h2><p>参考：<a href="https://www.cnblogs.com/henryhong/p/djangodrf-zi-ding-yi-shu-ju-fan-hui-ge-shi.html">https://www.cnblogs.com/henryhong/p/djangodrf-zi-ding-yi-shu-ju-fan-hui-ge-shi.html</a></p><h3 id="默认情况"><a href="#默认情况" class="headerlink" title="默认情况"></a>默认情况</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;next&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;previous&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;results&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8000/api/category/2/&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AAA&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-07-02T14:18:44.993194+08:00&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8000/api/category/1/&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AAA&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-07-02T14:18:00+08:00&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>djangorestframwork</code> 可以通过自定义返回模板来重构返回数据的格式，我们查看 <code>restframework</code> 的默认设置可以看到,默认的模板是 <code>rest_framework.renderers.JSONRenderer</code> 和 <code>rest_framework.renderers.BrowsableAPIRenderer</code>，其中第一个是用于前端接收数据时的数据格式模板，第二个是 drf 在 api 查看界面的数据显示模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;DEFAULT_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">    <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework.renderers.BrowsableAPIRenderer&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="修改模板"><a href="#修改模板" class="headerlink" title="修改模板"></a>修改模板</h3><p>如果我们想要修改返回给前端的数据格式，那么我们可以首先修改配置参数（settings.py）中的 <code>DEFAULT_RENDERER_CLASSES</code>，将 <code>rest_framework.renderers.JSONRenderer</code> 修改为自己定义的模板类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;DEFAULT_RENDERER_CLASSES&#x27;</span>: (</span><br><span class="line">    <span class="string">&#x27;utils.custom_renderer.CustomRenderer&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework.renderers.BrowsableAPIRenderer&#x27;</span>,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>这里有一个注意点就是在开发时如果需要通过 drf 的 api 查看界面查看相应的 api 一定要将这个模板加上 <code>rest_framework.renderers.BrowsableAPIRenderer</code>，否则的话无法看到相应的界面，生产时无需该界面，也可通过相关命令关闭显示。</p><p><code>utils.custom_renderer.CustomRenderer</code> 其中 <code>utils.custome_render</code> 是自己的文件路径可根据自己的实际情况进行修改，<code>CustomRenderer</code> 是自己定义的返回模板类的名称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.renderers <span class="keyword">import</span> JSONRenderer</span><br><span class="line"><span class="comment"># 导入控制返回的JSON格式的类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomRenderer</span>(<span class="title class_ inherited__">JSONRenderer</span>):</span><br><span class="line">    <span class="comment"># 重构render方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self, data, accepted_media_type=<span class="literal">None</span>, renderer_context=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">if</span> renderer_context:</span><br><span class="line">            <span class="comment"># 判断实例的类型，返回的数据可能是列表也可能是字典</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, <span class="built_in">dict</span>):</span><br><span class="line">                <span class="comment"># 如果是字典的话应该是返回的数据，会包含msg,code,status等字段必须抽离出来</span></span><br><span class="line">                msg = data.pop(<span class="string">&#x27;msg&#x27;</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">                code = data.pop(<span class="string">&#x27;code&#x27;</span>, <span class="number">200</span>)</span><br><span class="line">                <span class="comment"># 重新构建返回的JSON字典</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;status&#x27;</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                    <span class="keyword">del</span> data[<span class="string">&#x27;status&#x27;</span>]</span><br><span class="line">                    data = data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    data = data</span><br><span class="line">            <span class="comment"># 自定义返回数据格式</span></span><br><span class="line">            ret = &#123;</span><br><span class="line">                <span class="string">&#x27;msg&#x27;</span>: msg,</span><br><span class="line">                <span class="string">&#x27;code&#x27;</span>: code,</span><br><span class="line">                <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;list&#x27;</span>: data,</span><br><span class="line">                    <span class="string">&#x27;total&#x27;</span>: <span class="built_in">len</span>(data),</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># 返回JSON数据</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>().render(ret, accepted_media_type, renderer_context)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>().render(data, accepted_media_type, renderer_context)</span><br></pre></td></tr></table></figure><h2 id="灵活调用"><a href="#灵活调用" class="headerlink" title="灵活调用"></a>灵活调用</h2><p>创建 <code>utils/response.py</code> 文件内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> six</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.serializers <span class="keyword">import</span> Serializer</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JsonResponse</span>(<span class="title class_ inherited__">Response</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    重写 from django.http import JsonResponse</span></span><br><span class="line"><span class="string">    An HttpResponse that allows its data to be rendered into arbitrary media types.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, data=<span class="literal">None</span>, code=<span class="number">200</span>, msg=<span class="string">&quot;success&quot;</span>, status=<span class="literal">None</span>, template_name=<span class="literal">None</span>, headers=<span class="literal">None</span>,</span></span><br><span class="line"><span class="params">                 exception=<span class="literal">False</span>, content_type=<span class="literal">None</span>, **kwargs</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Alters the init arguments slightly.</span></span><br><span class="line"><span class="string">        For example, drop &#x27;template_name&#x27;, and instead use &#x27;data&#x27;.</span></span><br><span class="line"><span class="string">        Setting &#x27;renderer&#x27; and &#x27;media_type&#x27; will typically be deferred,</span></span><br><span class="line"><span class="string">        For example being set automatically by the `APIView`.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>(Response, self).__init__(<span class="literal">None</span>, status=status)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, Serializer):</span><br><span class="line">            msg = (</span><br><span class="line">                <span class="string">&#x27;You passed a Serializer instance as data, but &#x27;</span></span><br><span class="line">                <span class="string">&#x27;probably meant to pass serialized `.data` or `.error`. representation.&#x27;</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(msg)</span><br><span class="line">        self.data = &#123;<span class="string">&quot;code&quot;</span>: code, <span class="string">&quot;message&quot;</span>: msg, <span class="string">&quot;data&quot;</span>: data&#125;</span><br><span class="line">        self.data.update(kwargs)</span><br><span class="line">        self.template_name = template_name</span><br><span class="line">        self.exception = exception</span><br><span class="line">        self.content_type = content_type</span><br><span class="line">        <span class="keyword">if</span> headers:</span><br><span class="line">            <span class="keyword">for</span> name, value <span class="keyword">in</span> six.iteritems(headers):</span><br><span class="line">                self[name] = value</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 <code>views.py</code> 中调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> JsonResponse(detail=<span class="string">&quot;您只能修改自己的数据&quot;</span>, code=<span class="number">403</span>, status=status.HTTP_403_FORBIDDEN)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Python </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看Navicat保存的密码</title>
      <link href="/posts/lqoui8yg/"/>
      <url>/posts/lqoui8yg/</url>
      
        <content type="html"><![CDATA[<p>Navicat 密码一旦保存, 再次编辑就没法查看密码是什么了, 包括之前可以使用的星号密码查看器也看不到密码, 我们可以通过导出链接文件, 然后通过解密被加密的密码来获取密码原文.</p><h2 id="导出加密密码"><a href="#导出加密密码" class="headerlink" title="导出加密密码"></a>导出加密密码</h2><p>打开 Navicat – 文件 – 导出连接<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312281454479.png" alt="image.png|758"></p><p>接下来的弹窗里, 勾选导出密码, 然后导出成 ncx 文件<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202409051736103.png" alt="image.png"></p><p>用文本编辑器打开 connections.ncx 文件, 复制 password 的值, 这个就是加密后的密码.</p><h2 id="使用-PHP-解密"><a href="#使用-PHP-解密" class="headerlink" title="使用 PHP 解密"></a>使用 PHP 解密</h2><p>电脑没有 PHP 环境, 所以选择使用 Docker 来运行 PHP, 操作如下:</p><h3 id="准备解密脚本"><a href="#准备解密脚本" class="headerlink" title="准备解密脚本"></a>准备解密脚本</h3><p>vim navicat-decode-password.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">FatSmallTools</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NavicatPassword</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$version</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$aesKey</span> = <span class="string">&#x27;libcckeylibcckey&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$aesIv</span> = <span class="string">&#x27;libcciv libcciv &#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowString</span> = <span class="string">&#x27;3DC5CA39&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowKey</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowIv</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$version</span> = <span class="number">12</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;version = <span class="variable">$version</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blowKey = <span class="title function_ invoke__">sha1</span>(<span class="string">&#x27;3DC5CA39&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blowIv = <span class="title function_ invoke__">hex2bin</span>(<span class="string">&#x27;d9c7c3c8870d64bd&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">$this</span>-&gt;version) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptEleven</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptTwelve</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptEleven</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$round</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) / <span class="number">8</span>));</span><br><span class="line">        <span class="variable">$leftLength</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) % <span class="number">8</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;blowIv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$round</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="number">8</span>), <span class="variable">$currentVector</span>));</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$currentVector</span>, <span class="variable">$temp</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$temp</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$leftLength</span>) &#123;</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="variable">$leftLength</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strtoupper</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$result</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptBlock</span>(<span class="params"><span class="variable">$block</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$block</span>, <span class="string">&#x27;BF-ECB&#x27;</span>, <span class="variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptBlock</span>(<span class="params"><span class="variable">$block</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$block</span>, <span class="string">&#x27;BF-ECB&#x27;</span>, <span class="variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">xorBytes</span>(<span class="params"><span class="variable">$str1</span>, <span class="variable">$str2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str1</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$result</span> .= <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$str1</span>[<span class="variable">$i</span>]) ^ <span class="title function_ invoke__">ord</span>(<span class="variable">$str2</span>[<span class="variable">$i</span>]));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptTwelve</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$string</span>, <span class="string">&#x27;AES-128-CBC&#x27;</span>, <span class="variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="variable">$this</span>-&gt;aesIv);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strtoupper</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$result</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">$this</span>-&gt;version) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">decryptEleven</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">decryptTwelve</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptEleven</span>(<span class="params"><span class="variable">$upperString</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$string</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$upperString</span>));</span><br><span class="line"></span><br><span class="line">        <span class="variable">$round</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) / <span class="number">8</span>));</span><br><span class="line">        <span class="variable">$leftLength</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) % <span class="number">8</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;blowIv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$round</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$encryptedBlock</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="number">8</span>);</span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">decryptBlock</span>(<span class="variable">$encryptedBlock</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$currentVector</span>, <span class="variable">$encryptedBlock</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$temp</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$leftLength</span>) &#123;</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="variable">$leftLength</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptTwelve</span>(<span class="params"><span class="variable">$upperString</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$string</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$upperString</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$string</span>, <span class="string">&#x27;AES-128-CBC&#x27;</span>, <span class="variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="variable">$this</span>-&gt;aesIv);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">FatSmallTools</span>\<span class="title">NavicatPassword</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要指定版本，11 适用于11版本或以下.</span></span><br><span class="line"><span class="comment">// 12 适用于12版本和以上, 个人测试16版本可以正常解密.</span></span><br><span class="line"><span class="variable">$navicatPassword</span> = <span class="keyword">new</span> <span class="title class_">NavicatPassword</span>(<span class="number">12</span>);</span><br><span class="line"><span class="comment">//$navicatPassword = new NavicatPassword(11);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解密, 从命令行参数读取</span></span><br><span class="line"><span class="variable">$encrypted_password</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>][<span class="number">1</span>];</span><br><span class="line"><span class="variable">$decode</span> = <span class="variable">$navicatPassword</span>-&gt;<span class="title function_ invoke__">decrypt</span>(<span class="variable">$encrypted_password</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$decode</span>.<span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="使用-Docker-版-PHP-来执行脚本"><a href="#使用-Docker-版-PHP-来执行脚本" class="headerlink" title="使用 Docker 版 PHP 来执行脚本"></a>使用 Docker 版 PHP 来执行脚本</h3><p>执行 php 脚本,使用 cli 版本的镜像即可. 这里选择 <code>php:8.3.1-cli</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>:/data php:8.3.1-cli php /data/navicat-decode-password.php <span class="string">&quot;F0FC4E94542FF60596CC6FFA9F5F68D1&quot;</span></span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407041653042.png" alt="image.png"></p><p>密码会打印在控制台上.</p><h2 id="优化版脚本"><a href="#优化版脚本" class="headerlink" title="优化版脚本"></a>优化版脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">list=$(grep <span class="string">&quot;&lt;Connection ConnectionName=&quot;</span> connections.ncx)</span><br><span class="line"></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span>        <span class="comment"># 指定分隔符为换行</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;list[*]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    name=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | awk -F <span class="string">&#x27;ConnectionName=&quot;&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    user=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | awk -F <span class="string">&#x27;UserName=&quot;&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    host=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | awk -F <span class="string">&#x27;Host=&quot;&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    port=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | awk -F <span class="string">&#x27;Port=&quot;&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    en_password=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | awk -F <span class="string">&#x27;Password=&quot;&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;&quot; &#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    password=$(docker run --<span class="built_in">rm</span> -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>:/data php:8.3.1-cli php /data/navicat-decode-password.php <span class="string">&quot;<span class="variable">$en_password</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;地址:  <span class="variable">$host</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;端口:  <span class="variable">$port</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用户： <span class="variable">$user</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;密码： <span class="variable">$password</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> ----------------------------------------------------------------------------------------</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>脚本会读取 <code>connections.ncx</code> 文件，并按照格式将内容输出：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407041658550.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django RestFramework 使用router生成路由</title>
      <link href="/posts/lqmfi6wc/"/>
      <url>/posts/lqmfi6wc/</url>
      
        <content type="html"><![CDATA[<p>django 使用的是模块化结构，每个 app 都可以独立拆分，那么注册路由的时候也可以灵活一点， 使用 drf 框架提供的 router 来自动生成路由</p><p>应用级 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> routers</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">router = routers.DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;groups&#x27;</span>, views.GroupViewSet)</span><br><span class="line">router.register(<span class="string">r&#x27;students&#x27;</span>, views.StudentViewSet)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;/&#x27;</span>, include(router.urls)),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里 path 路径是&#x2F;， 引用了 router， router 注册了两个路由， 分别是 groups 和 students， 生成的 api 路径就是 <code>/groups/</code> 和 <code>/students</code></p><p>根级路由 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> app01.urls <span class="keyword">import</span> router <span class="keyword">as</span> app01_router</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;api/&#x27;</span>, include(app01_router.urls))</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这里定义了 api&#x2F; 引入了 app01 里面的 router</p><p>那么最终的 url 结构就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8000/api/groups/</span><br><span class="line">http://localhost:8000/api/students/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> Python </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat命令修改windows环境变量</title>
      <link href="/posts/lqgfuqik/"/>
      <url>/posts/lqgfuqik/</url>
      
        <content type="html"><![CDATA[<p>在 bat 下修改环境变量有几种方式, 比如 <code>set</code> <code>setx</code> <code>vmic ENVIRONMENT</code></p><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>windows 的 set 和 bash 里面直接赋值类似, 只在当前脚本中生效, 比如</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a=b</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%a%</span></span><br><span class="line">b</span><br></pre></td></tr></table></figure><h2 id="setx"><a href="#setx" class="headerlink" title="setx"></a>setx</h2><p>setx 和 set 类似, 不一样的是 setx 会把设置持久化保存起来</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setx a c</span><br></pre></td></tr></table></figure><p>因为 setx 直接将环境变量保存在注册表中, 所以 cmd 终端需要关闭重新打开才能生效</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%a%</span></span><br><span class="line">c</span><br></pre></td></tr></table></figure><p>后续就算重启电脑, 也会生效, 不过数据量比较大的时候会报错： <code>WARNING: The data being saved is truncated to 1024 characters</code>， 最终修改的内容也是不完整的。所以不建议使用</p><h2 id="vmic"><a href="#vmic" class="headerlink" title="vmic"></a>vmic</h2><h3 id="wmic-常用命令"><a href="#wmic-常用命令" class="headerlink" title="wmic 常用命令"></a>wmic 常用命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建系统变量</span><br><span class="line">wmic ENVIRONMENT create name=&quot;PPTV_HOME&quot;,username=&quot;&lt;system&gt;&quot;,VariableValue=&quot;<span class="variable">%home%</span>&quot;</span><br><span class="line"></span><br><span class="line"># 创建用户变量(替换一下计算机名和用户名)</span><br><span class="line">wmic ENVIRONMENT create name=&quot;PPTV_HOME&quot;,username=&quot;计算机名\\用户名&quot;,VariableValue=&quot;<span class="variable">%home%</span>&quot;</span><br><span class="line"></span><br><span class="line"># 查看环境变量</span><br><span class="line">wmic environment where &quot;name=&#x27;<span class="built_in">Path</span>&#x27;&quot; get UserName,VariableValue</span><br><span class="line"></span><br><span class="line"># 删除环境变量</span><br><span class="line">wmic ENVIRONMENT where &quot;name=&#x27;PPTV_HOME&#x27;&quot; delete</span><br></pre></td></tr></table></figure><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">REM 设置一下需要添加环境变量的目录</span></span><br><span class="line"><span class="built_in">SET</span> DestFile=&quot;<span class="variable">%USERPROFILE%</span>\bin&quot;</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">REM 增加bin环境变量</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">path</span> | <span class="built_in">findstr</span> &quot;<span class="variable">%DestFile%</span>&quot; &gt;<span class="built_in">nul</span> &amp;&amp; (</span><br><span class="line">    <span class="built_in">echo</span> 环境变量已存在</span><br><span class="line">) || (</span><br><span class="line">    <span class="built_in">echo</span> 环境变量不存在</span><br><span class="line">    wmic ENVIRONMENT where &quot;name=&#x27;<span class="built_in">Path</span>&#x27; and username=&#x27;<span class="variable">%USERDOMAIN%</span>\\<span class="variable">%USERNAME%</span>&#x27;&quot; <span class="built_in">set</span> VariableValue=&quot;<span class="variable">%Path%</span>;<span class="variable">%DestFile%</span>&quot;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="注册表方式"><a href="#注册表方式" class="headerlink" title="注册表方式"></a>注册表方式</h2><h3 id="当前用户环境变量"><a href="#当前用户环境变量" class="headerlink" title="当前用户环境变量"></a>当前用户环境变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Environment]</span><br><span class="line">&quot;a&quot;=&quot;b&quot;</span><br></pre></td></tr></table></figure><h3 id="系统环境变量"><a href="#系统环境变量" class="headerlink" title="系统环境变量"></a>系统环境变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment]</span><br><span class="line">&quot;c&quot;=&quot;d&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubectl进行多集群管理</title>
      <link href="/posts/lqacdmqv/"/>
      <url>/posts/lqacdmqv/</url>
      
        <content type="html"><![CDATA[<p>平常使用跳板机来管理, 经常多个环境多套集群, 那么如何用一个 kubectl 如何管理这些集群.</p><h2 id="推荐方式"><a href="#推荐方式" class="headerlink" title="推荐方式"></a>推荐方式</h2><p>这种方式对系统的侵入性比较小，也不用修改 kubeconfig 文件，也不用在 linux 中增加用户等。。</p><p>准备不同的 kubeconfig 文件，比如 <code>prod</code> <code>uat</code></p><h3 id="脚本一"><a href="#脚本一" class="headerlink" title="脚本一"></a>脚本一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> KUBECONFIG=./prod </span><br><span class="line">bash</span><br></pre></td></tr></table></figure><p>这里 export 是必须的，export 的作用是将环境变量传递到子进程中，而 bash 是这个脚本的子进程。</p><h3 id="脚本二"><a href="#脚本二" class="headerlink" title="脚本二"></a>脚本二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KUBECONFIG=./prod</span><br></pre></td></tr></table></figure><p>执行的时候通过 <code>. a.sh</code> 或 <code>source a.sh</code> 的时候，source 或 . 的作用是将环境变量传递到当前 shell 中。</p><h2 id="使用不同的-kubeconfig-管理"><a href="#使用不同的-kubeconfig-管理" class="headerlink" title="使用不同的 kubeconfig 管理"></a>使用不同的 kubeconfig 管理</h2><h3 id="使用不同的-Linux-用户"><a href="#使用不同的-Linux-用户" class="headerlink" title="使用不同的 Linux 用户"></a>使用不同的 Linux 用户</h3><p>每个 Linux 用户的 <code>~/.kube/config</code> 配置不同即可, 比如创建一个 uat 用户,一个 prod 用户, 分别配置不同的 config 文件</p><h3 id="使用环境变量"><a href="#使用环境变量" class="headerlink" title="使用环境变量"></a>使用环境变量</h3><p>设置一个 <code>KUBECONFIG</code> 指定到 kubeconfig 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KUBECONFIG=config-uat kubectl get pod</span><br></pre></td></tr></table></figure><h3 id="使用参数"><a href="#使用参数" class="headerlink" title="使用参数"></a>使用参数</h3><p>同使用环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod --kubeconfig=config-uat</span><br></pre></td></tr></table></figure><h2 id="使用一个-kubeconfig"><a href="#使用一个-kubeconfig" class="headerlink" title="使用一个 kubeconfig"></a>使用一个 kubeconfig</h2><p>我觉得这种方法很繁琐且复杂，并且还会修改 kubeconfig。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>确保每个 kubeconfig 里面部分参数唯一性,可以手动修改一下</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312181126408.png" alt="image.png"></p><h3 id="合并配置文件"><a href="#合并配置文件" class="headerlink" title="合并配置文件"></a>合并配置文件</h3><p>假设一个配置文件名为: uat, 另一个为: prod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KUBECONFIG=uat:prod kubectl config view --flatten &gt; merged-kubeconfig</span><br></pre></td></tr></table></figure><h3 id="验证合并结果"><a href="#验证合并结果" class="headerlink" title="验证合并结果"></a>验证合并结果</h3><p>完成合并后，可以使用以下命令验证新的 kubeconfig 文件是否包含了所有的集群、用户和上下文定义, 如果上面没有保证唯一性, 那么合并后的配置就是不完整的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=merged-kubeconfig</span><br></pre></td></tr></table></figure><h3 id="使用配置文件"><a href="#使用配置文件" class="headerlink" title="使用配置文件"></a>使用配置文件</h3><p>除了指定配置文件外 (如果配置文件放到~&#x2F;.kube&#x2F;config 内,不需要加 –kubeconfig 参数)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到uat集群, 配置会保存到配置文件(下次默认就是uat集群了)</span></span><br><span class="line">kubectl config use-context uat --kubeconfig=merged-kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到prod集群</span></span><br><span class="line">kubectl config use-context prod --kubeconfig=merged-kubeconfig</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> kubectl </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> 权限管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes使用存储挂载单个文件</title>
      <link href="/posts/lq292e56/"/>
      <url>/posts/lq292e56/</url>
      
        <content type="html"><![CDATA[<p>一般来说, 挂载存储都是把一个 PV 挂载到一个路径, 挂载后此路径下原来的文件就会不见, 只能看到挂载后的文件, 和在 Linux 下挂载磁盘是一样的. 那么现在有个需求:</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>此服务是 java 程序, 数据库使用的是内嵌的 h2 database, 下图中的两个文件就是数据库的文件. 这两个文件是存在于根目录下的, 假设此程序数据库文件是代码写死的 (真实情况是: 数据库路径是可以更改的), 现在要部署到 kubernetes 中, 并对数据库做持久化.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312121923294.png" alt="image.png"></p><h2 id="使用-subpath"><a href="#使用-subpath" class="headerlink" title="使用 subpath"></a>使用 subpath</h2><p>根据之前挂载 configmap 到单个文件的经验, 我们应该使用 subpath 来挂载, 先创建好 pvc, yml 如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metabase-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">managed-nfs-storage</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">10Gi</span></span><br></pre></td></tr></table></figure><p>statefulset 的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;metabase&quot;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/metabase:test</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase.db.mv.db</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">metabase.db.mv.db</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase.db.trace.db</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">metabase.db.trace.db</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">metabase-pvc</span></span><br></pre></td></tr></table></figure><p>但是这样挂载后, 容器内的 metabase.db.mv.db 和 metabase.db.trace.db 是目录, 并不是文件, 程序也自然无法启动.</p><h2 id="subpath-原理"><a href="#subpath-原理" class="headerlink" title="subpath 原理"></a>subpath 原理</h2><p>下面是绑定 subPath 的源码部分，我们可以看到下面的 <code>t.Model()&amp;os.ModeDir</code> 部分，如果 <code>subPath</code> 是一个文件夹的话就会去创建这个文件夹，如果是文件的话就进行单独挂载。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doBindSubPath</span><span class="params">(mounter Interface, subpath Subpath, kubeletPid <span class="type">int</span>)</span></span> (hostPath <span class="type">string</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// Create target of the bind mount. A directory for directories, empty file</span></span><br><span class="line">    <span class="comment">// for everything else.</span></span><br><span class="line">    t, err := os.Lstat(subpath.Path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;lstat %s failed: %s&quot;</span>, subpath.Path, err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> t.Mode() &amp; os.ModeDir &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> err = os.Mkdir(bindPathTarget, <span class="number">0750</span>); err != <span class="literal">nil</span> &amp;&amp; !os.IsExist(err) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;error creating directory %s: %s&quot;</span>, bindPathTarget, err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// &quot;/bin/touch &lt;bindDir&gt;&quot;.</span></span><br><span class="line">        <span class="comment">// A file is enough for all possible targets (symlink, device, pipe,</span></span><br><span class="line">        <span class="comment">// socket, ...), bind-mounting them into a file correctly changes type</span></span><br><span class="line">        <span class="comment">// of the target file.</span></span><br><span class="line">        <span class="keyword">if</span> err = ioutil.WriteFile(bindPathTarget, []<span class="type">byte</span>&#123;&#125;, <span class="number">0640</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;error creating file %s: %s&quot;</span>, bindPathTarget, err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们可不可以通过手动创建好文件来实现需求, 答案是可以的. 你可以自己测试下, 但是在存储中手动创建文件也太不优雅了..</p><h2 id="使用-init-container-来自动创建空文件"><a href="#使用-init-container-来自动创建空文件" class="headerlink" title="使用 init container 来自动创建空文件"></a>使用 init container 来自动创建空文件</h2><p>init container 非常适合来做这件事, 那么完整的 yaml 文件如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">metabase-StatefulSet</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;metabase&quot;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">busybox:1.28</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, <span class="string">&quot;touch /metabase/metabase.db.mv.db /metabase/metabase.db.trace.db&quot;</span>]</span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">metabase-pvc</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/metabase:test</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase.db.mv.db</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">metabase.db.mv.db</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase.db.trace.db</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">metabase.db.trace.db</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/metabase/plugins</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="string">plugins</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metabase-pv</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">metabase-pvc</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">metabase</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">intranet</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">metabase.i.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">metabase.i.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">metabase</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><p>这样完美解决了问题, 并且不会影响到目录下的其他文件.</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 挂载 </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm部署一套高可用k8s 1.29集群 for AlmaLinux9(RHEL9)</title>
      <link href="/posts/lq0y87n5/"/>
      <url>/posts/lq0y87n5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 AlmaLinux9 使用 kubeadm 搭建集群， <a href="/posts/526ffc9a/">ubuntu部署文档</a>, 有疑问的地方可以看 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/">官方文档</a>, 本教程需要能访问 <strong>国际互联网</strong> 。不能的话，需要解决镜像拉取问题、yum 安装组件的问题。</p></blockquote><h2 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h2><blockquote><p>我的机器详情如下, 配置至少为 4C4G</p></blockquote><table><thead><tr><th>hostname</th><th>IP</th><th>作用</th></tr></thead><tbody><tr><td>master1</td><td>10.0.0.11</td><td>k8s master 节点</td></tr><tr><td>master2</td><td>10.0.0.12</td><td>k8s master 节点</td></tr><tr><td>master3</td><td>10.0.0.13</td><td>k8s master 节点</td></tr><tr><td>worker1</td><td>10.0.0.21</td><td>k8s worker 节点</td></tr><tr><td>worker2</td><td>10.0.0.22</td><td>k8s worker 节点</td></tr></tbody></table><p>每台机器都做域名解析，或者绑定 hosts（直接使用 ip 地址会有警告）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.0.10  public kube-apiserver</span><br><span class="line">10.0.0.11 master1</span><br><span class="line">10.0.0.12 master2</span><br><span class="line">10.0.0.13 master3</span><br></pre></td></tr></table></figure><p>每台机器都关闭防火墙和 SELinux</p><blockquote><p>负载均衡机器必须要关闭,因为 6443 不是 nginx 的标准端口,会被 selinux 拦截, 防火墙也需要放行 6443 端口, 可以考虑直接关闭防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># RHEL9系列完全关闭selinux需要修改内核启动参数，/etc/selinux/config 文件里面有说明</span></span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><blockquote><p>基础环境是不管 master 还是 worker 都需要的环境</p></blockquote><ol><li>禁用 swap</li><li>确保每个节点上 MAC 地址和 product_uuid 的唯一性 <code>sudo cat /sys/class/dmi/id/product_uuid</code></li><li>修改 hostname</li></ol><h3 id="安装-runtime"><a href="#安装-runtime" class="headerlink" title="安装 runtime"></a>安装 runtime</h3><h4 id="设置内核参数"><a href="#设置内核参数" class="headerlink" title="设置内核参数"></a>设置内核参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置必需的 sysctl 参数，这些参数在重新启动后仍然存在。</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用 sysctl 参数而无需重新启动</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h4 id="启用内核模块"><a href="#启用内核模块" class="headerlink" title="启用内核模块"></a>启用内核模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧版本Docker</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">              docker-client \</span><br><span class="line">              docker-client-latest \</span><br><span class="line">              docker-common \</span><br><span class="line">              docker-latest \</span><br><span class="line">              docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">              docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker仓库</span></span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装containerd</span></span><br><span class="line">sudo yum install containerd.io -y</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>从 yum 源安装的 containerd 默认禁用了 cri，可以使用命令重新生成默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 软件包中自带的配置文件不全，使用命令生成。</span></span><br><span class="line">containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合 runc 使用 systemd cgroup 驱动，在 `/etc/containerd/config.toml` 中设置</span></span><br><span class="line">sed -i <span class="string">&#x27;s#SystemdCgroup = .*#SystemdCgroup = true#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 pause容器 镜像，不能拉取官方镜像的可以使用阿里云镜像源</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s#sandbox_image = .*#sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;#g&#x27; /etc/containerd/config.toml</span></span><br><span class="line">sed -i <span class="string">&#x27;s#sandbox_image = .*#sandbox_image = &quot;registry.k8s.io/pause:3.9&quot;#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> containerd</span><br><span class="line">sudo systemctl restart containerd</span><br></pre></td></tr></table></figure><h4 id="crictl-配置"><a href="#crictl-配置" class="headerlink" title="crictl 配置"></a>crictl 配置</h4><p>之前使用 docker 的时候，docker 给我们做了很多好用的工具，现在用了 containerd，管理容器我们用 cri 管理工具 crictl，创建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/crictl.yaml &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key</span></span><br><span class="line"><span class="string">exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可用的版本</span></span><br><span class="line">yum list kubelet kubeadm kubectl  --showduplicates --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo yum install -y kubelet-1.29.5 kubeadm-1.29.5 kubectl-1.29.5 --disableexcludes=kubernetes</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now kubelet</span><br></pre></td></tr></table></figure><h2 id="kube-apiserver-高可用方案"><a href="#kube-apiserver-高可用方案" class="headerlink" title="kube-apiserver 高可用方案"></a>kube-apiserver 高可用方案</h2><p>高可用方案有很多种，其他方案请参考 <a href="/posts/10cef768/">Kubernetes之master高可用方案</a></p><p>这里使用<strong>每台</strong>节点部署 nginx 反代来实现高可用，这种方式需要<strong>所有</strong>节点都安装负载均衡 (包括 master 和 worker )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/kube-lb/&#123;conf,logs,sbin&#125;</span><br><span class="line"></span><br><span class="line">curl -L -C - https://file.babudiu.com/f/qjhX/kube-lb -o /etc/kube-lb/sbin/kube-lb</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/kube-lb/sbin/kube-lb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/kube-lb/conf/kube-lb.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">user root;</span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line">error_log  /etc/kube-lb/logs/error.log warn;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  3000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        server 10.0.0.11:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.12:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.13:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 127.0.0.1:8443;</span><br><span class="line">        proxy_connect_timeout 1s;</span><br><span class="line">        proxy_pass backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/kube-lb.service &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=l4 nginx proxy <span class="keyword">for</span> kube-apiservers</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStartPre=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -t</span><br><span class="line">ExecStart=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb</span><br><span class="line">ExecReload=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -s reload</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-lb</span><br></pre></td></tr></table></figure><div class="note default flat"><p>kube-lb 其实就是自己编译的 Nginx，精简了 http 模块，只开启了 stream 模块用作 4 层转发，详细参数如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.24.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)</span><br><span class="line">configure arguments: --with-stream --without-http --without-http_uwsgi_module --without-http_scgi_module --without-http_fastcgi_module</span><br></pre></td></tr></table></figure></div><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><h3 id="提前拉镜像（可选）"><a href="#提前拉镜像（可选）" class="headerlink" title="提前拉镜像（可选）"></a>提前拉镜像（可选）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull \</span><br><span class="line">--kubernetes-version 1.29.5 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><h3 id="kubeadm-init"><a href="#kubeadm-init" class="headerlink" title="kubeadm init"></a>kubeadm init</h3><p>在 master1 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;127.0.0.1:8443&quot;</span> \</span><br><span class="line">--kubernetes-version 1.29.5 \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><ul><li>也可以用 <code>kubeadm config print init-defaults &gt; init.yaml</code> 生成 kubeadm 的配置，并用 <code>kubeadm init --config=init.yaml</code> 来创建集群。</li><li>如果负载均衡没有准备好，也可以临时添加 VIP <code>ip addr add 10.0.0.10 dev eth0</code></li><li>如果不能拉官方镜像，增加参数使用阿里云镜像源 <code>--image-repository registry.aliyuncs.com/google_containers</code></li></ul><h3 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">安装flannel插件</button><button type="button" class="tab">安装calico插件</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果修改了 pod-network-cidr 这个yml文件也需要修改</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待补充</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><a href="/posts/sepu3k/">kubeadm 部署的集群 常见问题汇总</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前后端跨域问题</title>
      <link href="/posts/lpuzlvhd/"/>
      <url>/posts/lpuzlvhd/</url>
      
        <content type="html"><![CDATA[<h2 id="啥是跨域"><a href="#啥是跨域" class="headerlink" title="啥是跨域"></a>啥是跨域</h2><p>跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。</p><p>跨源 HTTP 请求的一个例子：运行在 <a href="https://domain-a.com/">https://domain-a.com</a> 的 JavaScript 代码使用 XMLHttpRequest 来发起一个到 <a href="https://domain-b.com/data.json">https://domain-b.com/data.json</a> 的请求。</p><p>出于安全性，浏览器限制脚本内发起的跨源 HTTP 请求。例如，XMLHttpRequest 和 Fetch API 遵循同源策略。这意味着使用这些 API 的 Web 应用程序只能从加载应用程序的同一个域请求 HTTP 资源，除非响应报文包含了正确 CORS 响应头。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061646763.png" alt="image.png"></p><h2 id="为什么会跨域"><a href="#为什么会跨域" class="headerlink" title="为什么会跨域"></a>为什么会跨域</h2><p>说到跨域不得不谈的就是浏览器的同源策略，跨域也是因为浏览器这个机制引起的，这个机制的存在还是在于安全。</p><h3 id="什么是源"><a href="#什么是源" class="headerlink" title="什么是源"></a>什么是源</h3><p>Web 内容的源由用于访问它的 URL 的方案 (协议)，主机 (域名) 和端口定义。只有当方案，主机和端口都匹配时，两个对象具有相同的起源。</p><p>同源不同源一句话就可以判断：就是 url 中 scheme host port 都相同即为同源。</p><h3 id="URL-结构"><a href="#URL-结构" class="headerlink" title="URL 结构"></a>URL 结构</h3><p>URL 代表着是统一资源定位符（Uniform Resource Locator）。URL 无非就是一个给定的独特资源在 Web 上的地址。</p><p>URL 有如下结构组成：</p><p>Scheme 或者 Protocol, 常见的就是 http 或者 https<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061647029.png" alt="image.png"><br>Domain Name 也叫做 host 域名<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061648575.png" alt="image.png"></p><p>port 端口号<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061648625.png" alt="image.png"></p><p> Parameters 参数<br> <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061648585.png" alt="image.png"></p><p> Anchor 锚点，一般用于定位位置<br> <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061648639.png" alt="image.png"></p><h3 id="同源不同源举例"><a href="#同源不同源举例" class="headerlink" title="同源不同源举例"></a>同源不同源举例</h3><p><em>就是 url 中 scheme host port 都相同即为同源。</em> 下面是几个不同源的例子, 如果访问就会产生跨域问题.</p><table><thead><tr><th>前端域名</th><th>后端域名</th><th>原因</th></tr></thead><tbody><tr><td><a href="https://example.com/">https://example.com/</a></td><td><a href="http://example.com/api">http://example.com/api</a></td><td>协议不一样</td></tr><tr><td><a href="http://example.com/">http://example.com</a></td><td><a href="http://api.example.com/">http://api.example.com</a></td><td>host 不一样</td></tr><tr><td><a href="http://example.com/">http://example.com</a></td><td><a href="http://example.com:8080/">http://example.com:8080</a></td><td>端口不一样</td></tr></tbody></table><h2 id="跨域问题的症状"><a href="#跨域问题的症状" class="headerlink" title="跨域问题的症状"></a>跨域问题的症状</h2><h3 id="有跨域问题"><a href="#有跨域问题" class="headerlink" title="有跨域问题"></a>有跨域问题</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061635874.png" alt="image.png"></p><h3 id="正常情况"><a href="#正常情况" class="headerlink" title="正常情况"></a>正常情况</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061643686.png" alt="image.png"></p><h2 id="后端解决方案"><a href="#后端解决方案" class="headerlink" title="后端解决方案"></a>后端解决方案</h2><p>三、后端解决方案<br>后端框架也很多，实现原理差不多，都是修改下相应头。以常用的 Java SpringCloud 和 nodejs koa 框架为例。</p><p>Http 协议 CORS 头<br>跨域其实也是 http 层面上可以解决的问题，后端解决也是比较简单的，也是项目常见的解决手法。</p><p>CORS （Cross-Origin Resource Sharing，跨域资源共享）是一个系统，它由一系列传输的 HTTP 头组成，这些 HTTP 头决定浏览器是否阻止前端 JavaScript 代码获取跨域请求的响应。</p><p>同源安全策略 默认阻止“跨域”获取资源。但是 CORS 给了 web 服务器这样的权限，即服务器可以选择，允许跨域请求访问到它们的资源。其实就是一些 Header 头:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin  指示请求的资源能共享给哪些域。</span><br><span class="line">Access-Control-Allow-Credentials   指示当请求的凭证标记为 <span class="literal">true</span> 时，是否响应该请求。</span><br><span class="line">Access-Control-Allow-Headers   用在对预请求的响应中，指示实际的请求中可以使用哪些 HTTP 头。</span><br><span class="line">Access-Control-Allow-Methods  指定对预请求的响应中，哪些 HTTP 方法允许访问请求的资源。</span><br><span class="line">Access-Control-Expose-Headers  指示哪些 HTTP 头的名称能在响应中列出。</span><br><span class="line">Access-Control-Max-Age  指示预请求的结果能被缓存多久。</span><br><span class="line">Access-Control-Request-Headers   用于发起一个预请求，告知服务器正式请求会使用那些 HTTP 头。</span><br><span class="line">Access-Control-Request-Method   用于发起一个预请求，告知服务器正式请求会使用哪一种 HTTP 请求方法。</span><br><span class="line">Origin    指示获取资源的请求是从什么域发起的。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GatewayCorsConfiguation</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 初始化cors配置对象</span></span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        configuration.setAllowCredentials(<span class="literal">true</span>); <span class="comment">// 允许使用cookie，但是使用cookie是addAllowedOrigin必须是具体的地址，不能是*</span></span><br><span class="line"><span class="comment">//        configuration.addAllowedOrigin(&quot;*&quot;);</span></span><br><span class="line">        configuration.addAllowedOrigin(<span class="string">&quot;http://manage.leyou.com&quot;</span>);</span><br><span class="line">        configuration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);  <span class="comment">//允许的请求方式,get,put,post,delete</span></span><br><span class="line">        configuration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);<span class="comment">//允许的头信息</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//初始化cors的源对象配置</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">corsConfigurationSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        corsConfigurationSource.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>,configuration);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//3.返回新的CorsFilter.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(corsConfigurationSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运维解决方案"><a href="#运维解决方案" class="headerlink" title="运维解决方案"></a>运维解决方案</h2><h3 id="Nginx-ingress-配置"><a href="#Nginx-ingress-配置" class="headerlink" title="Nginx ingress 配置"></a>Nginx ingress 配置</h3><p>增加注解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nginx.ingress.kubernetes.io/cors-allow-credentials: <span class="string">&#x27;true&#x27;</span></span><br><span class="line">nginx.ingress.kubernetes.io/cors-allow-headers: &gt;-</span><br><span class="line">  DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization</span><br><span class="line">nginx.ingress.kubernetes.io/cors-allow-methods: <span class="string">&#x27;PUT, GET, POST, OPTIONS&#x27;</span></span><br><span class="line">nginx.ingress.kubernetes.io/cors-allow-origin: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">nginx.ingress.kubernetes.io/enable-cors: <span class="string">&#x27;true&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h3><h4 id="使用-proxy-pass-转发"><a href="#使用-proxy-pass-转发" class="headerlink" title="使用 proxy_pass 转发"></a>使用 proxy_pass 转发</h4><p>此方法是将后端地址反代到前端的一个 location, 这样就是同源了.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /api &#123;</span><br><span class="line">   proxy_pass https://b.test.com; # 设置代理服务器的协议和地址</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-Nginx-增加-Header"><a href="#使用-Nginx-增加-Header" class="headerlink" title="使用 Nginx 增加 Header"></a>使用 Nginx 增加 Header</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.example.com;</span><br><span class="line">    root         /usr/share/nginx/html;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">    </span><br><span class="line">        proxy_pass http://localhost:8188/;</span><br><span class="line">        # 设置是否允许 cookie 传输</span><br><span class="line">        add_header Access-Control-Allow-Credentials true;</span><br><span class="line">        # 允许请求地址跨域 * 做为通配符</span><br><span class="line">        add_header Access-Control-Allow-Origin * always;</span><br><span class="line">        # 允许跨域的请求方法</span><br><span class="line">        add_header Access-Control-Allow-Methods &#x27;GET, POST, PUT, DELETE, OPTIONS&#x27;;</span><br><span class="line">        add_header Access-Control-Allow-Headers &#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#x27;;</span><br><span class="line"></span><br><span class="line">        if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">            return 204;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="后端服务和-Nginx-同时处理了跨域"><a href="#后端服务和-Nginx-同时处理了跨域" class="headerlink" title="后端服务和 Nginx 同时处理了跨域"></a>后端服务和 Nginx 同时处理了跨域</h3><p>跨域问题后端和 Nginx 不要同时处理, 不然会报错:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312071706036.png" alt="image.png"><br>这个时候删除 Nginx 上的 Access-Control-Allow-Origin 配置即可, 建议后端和 Nginx 不要同时配置跨域.</p><h3 id="Header-不在允许的列表中"><a href="#Header-不在允许的列表中" class="headerlink" title="Header 不在允许的列表中"></a>Header 不在允许的列表中</h3><p>出现跨域问题的时候, 可以在浏览器的控制台看到详情, 比如下图提示 <code>x-xxx-client-version</code> 这个 header 不在 <code>Access-Control-Allow-Headers</code> 中, 那你再手动加一下就行了.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312061638756.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
            <tag> Nginx </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> 编码 </tag>
            
            <tag> ingress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows中的符号连接</title>
      <link href="/posts/so24vr/"/>
      <url>/posts/so24vr/</url>
      
        <content type="html"><![CDATA[<h2 id="mklink-命令"><a href="#mklink-命令" class="headerlink" title="mklink 命令"></a>mklink 命令</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mklink /D 原始文件/目录  链接文件</span><br><span class="line">/D      创建目录符号链接。默认为文件符号链接。</span><br><span class="line">/H      创建硬链接而非符号链接。</span><br><span class="line">/J      创建目录联接。</span><br></pre></td></tr></table></figure><table><thead><tr><th>特性</th><th><code>/H</code>（硬链接）</th><th><code>/D</code>（符号链接）</th><th><code>/J</code>（目录链接）</th></tr></thead><tbody><tr><td><strong>支持目标类型</strong></td><td>仅文件</td><td>文件或目录</td><td>仅目录</td></tr><tr><td><strong>跨分区支持</strong></td><td>否</td><td>是</td><td>否</td></tr><tr><td><strong>网络路径支持</strong></td><td>否</td><td>是</td><td>否</td></tr><tr><td><strong>与目标的关系</strong></td><td>共享同一数据，删除链接不影响文件</td><td>目标被删除，链接无效</td><td>目标被删除，链接无效</td></tr><tr><td><strong>生效范围</strong></td><td>文件系统</td><td>文件系统</td><td>文件系统</td></tr><tr><td><strong>创建所需权限</strong></td><td>无</td><td>需要管理员权限</td><td>无</td></tr><tr><td><strong>性能影响</strong></td><td>最低</td><td>较低（需要额外解析符号链接）</td><td>较低</td></tr></tbody></table><h2 id="PowerShell-中的-New-Item"><a href="#PowerShell-中的-New-Item" class="headerlink" title="PowerShell 中的 New-Item"></a>PowerShell 中的 New-Item</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 符号链接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> SymbolicLink <span class="literal">-Path</span> C:\Users\iuxt\SynologyDrive <span class="literal">-Target</span> D:\SynologyDrive\</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录连接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Junction</span><br><span class="line"></span><br><span class="line"><span class="comment"># 硬链接</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> HardLink</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>将ova或qcow2导入到PVE虚拟机</title>
      <link href="/posts/lphwqhtr/"/>
      <url>/posts/lphwqhtr/</url>
      
        <content type="html"><![CDATA[<p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312011531317.png" alt="Proxmox_logo_standard_hex_2000px-768x116.png"></p><p>比如我们从 VMware Workstation 导出的虚拟机镜像 (ova 或者 ovf), 如果我想要导入到 proxmox 中, proxmox 默认是不支持导入 OVA 虚拟机的, 可以通过转换虚拟机虚拟磁盘的方法将虚拟磁盘附加到现有的 pve 虚拟机中.</p><h2 id="提取-vmdk-虚拟磁盘文件"><a href="#提取-vmdk-虚拟磁盘文件" class="headerlink" title="提取 vmdk 虚拟磁盘文件"></a>提取 vmdk 虚拟磁盘文件</h2><p>这一步如果是 ova, 则需要用解压缩软件解压一下, 如果是 ovf, 直接就能看到 vmdk 文件</p><h2 id="转换虚拟磁盘文件"><a href="#转换虚拟磁盘文件" class="headerlink" title="转换虚拟磁盘文件"></a>转换虚拟磁盘文件</h2><p>使用工具 qemu-img 进行转换, 如果是导入到 pve, 可以不转换, 使用 qm 命令会自动转换的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从另一台PVE导出qcow2可以这样</span></span><br><span class="line">qemu-img convert -p -O qcow2 -c /dev/mapper/pve-vm--110--disk--0 VM110.qcow2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从vmdk文件转换可以这样 -c 是压缩</span></span><br><span class="line">qemu-img convert -c -f vmdk myvm-disk1.vmdk -O qcow2 myvm-disk1.qcow2</span><br></pre></td></tr></table></figure><h2 id="在-PVE-上创建新的虚拟机"><a href="#在-PVE-上创建新的虚拟机" class="headerlink" title="在 PVE 上创建新的虚拟机"></a>在 PVE 上创建新的虚拟机</h2><p>此步骤需要记录一下虚拟机的 ID</p><h2 id="上传虚拟磁盘文件到-PVE"><a href="#上传虚拟磁盘文件到-PVE" class="headerlink" title="上传虚拟磁盘文件到 PVE"></a>上传虚拟磁盘文件到 PVE</h2><p>pve 本质上就是 debian linux, 你可以用任何方便的方式上传, 比如在机器上使用 wget 下载, 或者 scp sftp rz 等上传</p><h2 id="使用-qm-importdisk-命令导入"><a href="#使用-qm-importdisk-命令导入" class="headerlink" title="使用 qm importdisk 命令导入"></a>使用 qm importdisk 命令导入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk  &lt;vmid&gt; &lt;images-name&gt; &lt;storage pool&gt;  --format=&lt;disk-fs&gt; </span><br><span class="line">vmid：vm的<span class="built_in">id</span> 例如102</span><br><span class="line">images-name：磁盘镜像的名字</span><br><span class="line">storage pool: 存储磁盘镜像的位置，如lvm-thin <span class="built_in">local</span></span><br><span class="line">disk-fs: 磁盘镜像格式  raw/vmdk/qcow2</span><br></pre></td></tr></table></figure><p>导入成功后, 在虚拟机界面可以看到一个未使用磁盘</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311281414540.png" alt="image.png"></p><p>双击未使用磁盘, 点击添加即可</p><p>最后调整一下启动项顺序.</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> 数据迁移 </tag>
            
            <tag> proxmox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows命令行使用其他用户身份运行</title>
      <link href="/posts/snagrk/"/>
      <url>/posts/snagrk/</url>
      
        <content type="html"><![CDATA[<p>比如说我一个脚本使用管理员权限运行，那么它调用的其他程序默认都是以管理员权限运行的。我想要以普通用户程序来运行，有以下几种方法：</p><h2 id="runas-方式"><a href="#runas-方式" class="headerlink" title="runas 方式"></a>runas 方式</h2><h3 id="指定权限运行"><a href="#指定权限运行" class="headerlink" title="指定权限运行"></a>指定权限运行</h3><p>0x20000 是标准用户权限<br>0x40000 是管理员权限</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas /trustlevel:<span class="number">0</span>x20000 &quot;wt.exe&quot;</span><br></pre></td></tr></table></figure><p>这种方式我测试会造成 wsl 报错“UtilTranslatePathList”</p><h3 id="指定用户执行"><a href="#指定用户执行" class="headerlink" title="指定用户执行"></a>指定用户执行</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas /user:iuxt wt.exe&quot;</span><br></pre></td></tr></table></figure><p>这种方式会<strong>弹窗让你输入密码</strong>（每次）</p><h2 id="psexec"><a href="#psexec" class="headerlink" title="psexec"></a>psexec</h2><p>psexec 是微软官方的一组小工具：<a href="https://learn.microsoft.com/zh-cn/sysinternals/downloads/psexec">https://learn.microsoft.com/zh-cn/sysinternals/downloads/psexec</a> 需要用到里面的 <code>psexec64.exe</code> 然后调用此工具。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe -u iuxt -p YourPassword C:\<span class="built_in">Path</span>\To\wt.exe</span><br></pre></td></tr></table></figure><p>缺点：</p><ol><li>需要在命令行指定用户名和密码（有安全隐患）</li><li>运行的时候会有个黑框框一闪而过，并且第一次启动会有个窗口，需要点一下 agree</li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用tailscale打通内网</title>
      <link href="/posts/loz4xrye/"/>
      <url>/posts/loz4xrye/</url>
      
        <content type="html"><![CDATA[<p>家里有一台群晖 nas, 通过 quickconnect 连接太慢了, 并且有些操作不能通过 quickconnect, 比如直接 smb 挂载目录</p><h2 id="群晖-nas-安装"><a href="#群晖-nas-安装" class="headerlink" title="群晖 nas 安装"></a>群晖 nas 安装</h2><p>群晖国内应用商店已经下架了这个 APP, 你可以尝试着在应用中心搜索 tailscale, 如果可以搜索到, 就直接安装即可. 搜索不到的话, 可以使用离线安装的方式:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311151015762.png" alt="image.png"></p><p>到官网下载离线 SPK 包:<br><a href="https://pkgs.tailscale.com/stable/#spks">https://pkgs.tailscale.com/stable/#spks</a><br>根据你的系统架构来下载包, intel cpu 下载 x86_64 架构的包. 然后进入群晖软件中心, 点击手动安装, 上传 spk 包安装</p><p>第一次打开 tailscale 需要登录, 登录页面不支持 quickconnect 远程连接, 所以建议在家配置好 tailscale</p><h2 id="windows-安装"><a href="#windows-安装" class="headerlink" title="windows 安装"></a>windows 安装</h2><p>安装成功后， 右键任务栏图标，点击 login 登录 tailscale 账号</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311141320528.png" alt="image.png"></p><p>登录成功后，可以在官网<a href="https://login.tailscale.com/admin/machines">https://login.tailscale.com/admin/machines</a> 查看到所有的设备和 IP 地址等信息。</p><h2 id="访问方式"><a href="#访问方式" class="headerlink" title="访问方式"></a>访问方式</h2><p>tailscale 可以使用 ip 地址来访问，或者使用 tailscale 的 dns 域名，比如<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311141324348.png" alt="image.png"></p><p>建议给常用设备设置 <code>Disable key expiry</code> 防止登录过期.</p><p>我可以使用 mac-mini 来访问我的其中一台机而不用记住 IP 地址。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311141324477.png" alt="image.png"></p><h2 id="查看是否打洞成功"><a href="#查看是否打洞成功" class="headerlink" title="查看是否打洞成功"></a>查看是否打洞成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tailscale ping zhanglikundemac-mini.tailff0c6.ts.net</span><br><span class="line">pong from zhanglikundemac-mini (100.107.120.45) via DERP(tok) <span class="keyword">in</span> 208ms</span><br><span class="line">pong from zhanglikundemac-mini (100.107.120.45) via DERP(sfo) <span class="keyword">in</span> 172ms</span><br><span class="line">pong from zhanglikundemac-mini (100.107.120.45) via DERP(tok) <span class="keyword">in</span> 1.71s</span><br></pre></td></tr></table></figure><p>结果显示 DERP 就是走的中继，比较慢</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看kubernetes节点的硬件配置</title>
      <link href="/posts/lo57b8gx/"/>
      <url>/posts/lo57b8gx/</url>
      
        <content type="html"><![CDATA[<p><code>kubectl describe node</code> 可以查看到信息, 这里使用 jq 进行一下数据处理格式化.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node -o json | jq <span class="string">&#x27;.items[] | &quot;===========================================&quot;, &quot;机器名: \(.metadata.labels.&quot;kubernetes.io/hostname&quot;) &quot;, &quot;CPU: \(.status.capacity.cpu) 核&quot;,  &quot;内存大小:  \(.status.capacity.memory)&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>输出结果类似于:</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310251137563.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用操作 </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爷的青春结束了</title>
      <link href="/posts/lo4f92df/"/>
      <url>/posts/lo4f92df/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>回忆是抓不到的月光握紧就变黑暗，回忆是美好的，但不要沉迷于回忆，不要尝试安装模拟器去回忆之前的老游戏啦，会浪费现在的时间，童年是找不回来了，过好当下吧。一个在线体验老游戏的网址： <a href="https://zaixianwan.app/">https://zaixianwan.app</a></p><h2 id="为啥写这篇文章"><a href="#为啥写这篇文章" class="headerlink" title="为啥写这篇文章"></a>为啥写这篇文章</h2><p>时间过的太快， 看着身边的东西都变了样，有时候突然想起很久以前玩过的游戏，但是怎么也想不起名字，就算想起来了，搜索引擎都搜不到相关的文章，只能勉强搜到一些包浆了的图，所以还是记录下来，对自己的过去做个记录。</p><h2 id="俄罗斯方块机"><a href="#俄罗斯方块机" class="headerlink" title="俄罗斯方块机"></a>俄罗斯方块机</h2><h2 id="FC-游戏机"><a href="#FC-游戏机" class="headerlink" title="FC 游戏机"></a>FC 游戏机</h2><p>FC 游戏机指的是任天堂的红白机， 但是在中国普及开来的时候已经是盗版遍地了， 不仅仅是机器盗版， 还有很多盗版游戏， 还记得外星科技等等开发的那些塞尔达？</p><p>模拟器网上到处都是, 很多都是在线玩的. 比如 <a href="https://zaixianwan.app/">https://zaixianwan.app</a></p><p>一个背景音乐下载网站: <a href="https://www.zophar.net/music/">https://www.zophar.net/music/</a></p><p>NSFPlay 播放器：<a href="https://bbbradsmith.github.io/nsfplay/">https://bbbradsmith.github.io/nsfplay/</a></p><p>开源 nfs 编辑器: <a href="https://famistudio.org/">https://famistudio.org/</a></p><h3 id="小霸王"><a href="#小霸王" class="headerlink" title="小霸王"></a>小霸王</h3><p>当时村里已经有小伙伴用上了盗版小霸王（没错，是盗版的小霸王，真的小霸王还是比较贵的），和小霸王一样拥有键盘、打字游戏、光枪（玩打鸭子游戏），两个手柄，两张游戏卡带， 大概长这个样子：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310121159789.webp" alt="20200726003955_22567911932703161853315.webp"></p><p>小学的时候，经常去小伙伴家里一块玩， 那时候没有游戏卡，就玩上面的打字游戏。。。后面知道了可以玩游戏就一发不可收拾了</p><h3 id="最便宜的-FC-游戏机"><a href="#最便宜的-FC-游戏机" class="headerlink" title="最便宜的 FC 游戏机"></a>最便宜的 FC 游戏机</h3><p>等我有了第一台 FC 游戏机的时候， 好像已经上初中了（当时住校，有了一些饭钱），我们那边商店买了一台 16 块钱的山寨游戏机，只有两个手柄加一个主机和充电器。 附上牛屎图（花屏了可以用嘴舔舔）：</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310051410090.jpg","alt":"10001.jpg","title":""},{"url":"https://static.zahui.fan/images/202310051412370.png","alt":"image.png","title":""}]</div>  </div><p>类似于这样， 当时家里的电视还是黑白的， 只能用射频线 RF 来连接， 就是把线插到电视机天线插座上面，然后进行搜台， 当然画质也比较差， 有时候运气好，可以搜到别人家的游戏画面。后面换了彩电，可以用 AV 线连接电视了。</p><h2 id="磁带机和-CD-机"><a href="#磁带机和-CD-机" class="headerlink" title="磁带机和 CD 机"></a>磁带机和 CD 机</h2><p>小学时候听的磁带机，听的最多的就是刀郎的歌，什么《2002 年的第一场雪》啦。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202406192347275.JPG","alt":"IMG_20240608_215503.JPG","title":""},{"url":"https://static.zahui.fan/images/202406192356750.JPG","alt":"IMG_20240616_215110.JPG|674","title":""},{"url":"https://static.zahui.fan/images/202406192348081.JPG","alt":"IMG_20240608_215742.JPG|657","title":""},{"url":"https://static.zahui.fan/images/202406192348606.JPG","alt":"IMG_20240608_215747.JPG|694","title":""},{"url":"https://static.zahui.fan/images/202406192349694.JPG","alt":"IMG_20240608_215952.JPG","title":""}]</div>  </div><p>CD 机，听的第一首歌是 林俊杰 - 就是我</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202406082223717.jpg","alt":"10003.jpg|403","title":""},{"url":"https://static.zahui.fan/images/202406082223884.jpg","alt":"10006.jpg|408","title":""},{"url":"https://static.zahui.fan/images/202406082223922.jpg","alt":"10002.jpg|408","title":""},{"url":"https://static.zahui.fan/images/202406082224807.jpg","alt":"10004.jpg|406","title":""},{"url":"https://static.zahui.fan/images/202406082224306.webp","alt":"5c404375c9bf59863.jpg_e1080.webp|411","title":""},{"url":"https://static.zahui.fan/images/202406192349314.PNG","alt":"IMG_20240608_221428.PNG|766","title":""},{"url":"https://static.zahui.fan/images/202406192350667.PNG","alt":"IMG_20240608_221335.PNG|762","title":""}]</div>  </div><h2 id="复读机和录音机"><a href="#复读机和录音机" class="headerlink" title="复读机和录音机"></a>复读机和录音机</h2><p>播放磁带的那种，骗自己是用来学英语的（初中高中英语老师上课都会拎着一个大录音机到教室播放听力磁带）</p><h2 id="MP3-和-MP4"><a href="#MP3-和-MP4" class="headerlink" title="MP3 和 MP4"></a>MP3 和 MP4</h2><p>初中的时候流行的 MP3，怕老师发现，有些带喇叭的 mp3 可以塞到手套里放在耳朵附近听歌。高中的时候流行的 MP4，MP3 刚开始硬盘只有 128MB。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202407311803167.JPEG","alt":"","title":""},{"url":"https://static.zahui.fan/images/202406192351063.JPG","alt":"IMG_20240608_220430.JPG|691","title":""},{"url":"https://static.zahui.fan/images/202406192352094.JPG","alt":"IMG_20240608_220739.JPG|525","title":""},{"url":"https://static.zahui.fan/images/202406192352050.JPG","alt":"IMG_20240608_220948.JPG|525","title":""},{"url":"https://static.zahui.fan/images/202406192354750.JPG","alt":"IMG_20240608_221020.JPG","title":""}]</div>  </div><h2 id="电子辞典"><a href="#电子辞典" class="headerlink" title="电子辞典"></a>电子辞典</h2><h3 id="步步高电子词典朗文-4980"><a href="#步步高电子词典朗文-4980" class="headerlink" title="步步高电子词典朗文 4980"></a>步步高电子词典朗文 4980</h3><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310051554583.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051552668.png","alt":"image.png","title":""}]</div>  </div><p>初中和高中时候玩的，就是个普通的电子词典，不一样的地方是它有 1MB 的磁盘空间，可以下载游戏，比较有名的游戏有： 伏魔记、三国霸业、魔塔等， 一节 7 号电池就能续航很久。</p><p>在线游玩地址: <a href="https://bbk-games.zahui.fan/">https://bbk-games.zahui.fan/</a> 和 <a href="https://bbk-games.zahui.fan/bbk-games/">https://bbk-games.zahui.fan/bbk-games/</a></p><h4 id="伏魔记"><a href="#伏魔记" class="headerlink" title="伏魔记"></a>伏魔记</h4><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310131217857.png" alt="image.png"></p><h4 id="三国霸业"><a href="#三国霸业" class="headerlink" title="三国霸业"></a>三国霸业</h4><p>策略游戏，有各种兵种，记得比较搞笑的是可以劝降，不停得派人去招安敌方武将。。。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404242244027.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202404242244619.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202404242245727.png","alt":"image.png","title":""}]</div>  </div><h4 id="魔塔"><a href="#魔塔" class="headerlink" title="魔塔"></a>魔塔</h4><p>移植自 flash 游戏魔塔</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404242247479.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202404242248180.png","alt":"image.png","title":""}]</div>  </div><h3 id="步步高学习机-s1"><a href="#步步高学习机-s1" class="headerlink" title="步步高学习机 s1"></a>步步高学习机 s1</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310051624647.png" alt="image.png"></p><h4 id="雷霆战机"><a href="#雷霆战机" class="headerlink" title="雷霆战机"></a>雷霆战机</h4><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404242241769.png","alt":"","title":""},{"url":"https://static.zahui.fan/images/202404242240958.png","alt":"","title":""}]</div>  </div><h4 id="使命"><a href="#使命" class="headerlink" title="使命"></a>使命</h4><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404121845999.png" alt="202404121845999.png|229"></p><h2 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h2><h3 id="TCl-5188"><a href="#TCl-5188" class="headerlink" title="TCl 5188"></a>TCl 5188</h3><p>家里的第一台手机, 那时候用的是一台 TCL 5188 翻盖手机, 屏幕是黑白的蓝色背光, 功能非常单一。 开机会有一个福字，外面的屏幕可以显示一些常见的信息。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310051520215.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311160017851.png","alt":"image.png","title":""}]</div>  </div><h3 id="充话费送的手机"><a href="#充话费送的手机" class="headerlink" title="充话费送的手机"></a>充话费送的手机</h3><p>充话费送的手机：预存 120 话费送一个联想的手机，分辨率是 128x128， 当时中国移动推广自己的移动梦网（在任意界面长按 0 就能直接跳到移动梦网界面，自带浏览器默认的首页就是移动梦网，还不能改，不过书签、历史记录这些都是带的），就这种低端的手机都带上网的功能，当然流量费很贵，最开始流量是 10 元&#x2F;MB，后来才改成 1 元&#x2F;MB， 当时就用它看看新闻、上上 3GQQ（网页版纯文字的 QQ）这个手机还不能运行 APP，能网上就不错了。如图：</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310051527179.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051524403.png","alt":"image.png","title":""}]</div>  </div><h3 id="诺基亚-1600"><a href="#诺基亚-1600" class="headerlink" title="诺基亚 1600"></a>诺基亚 1600</h3><p>爸爸用的手机，当年我高考的时候带进考场的就是这个。这个时候的诺基亚手机几乎都支持关闭背光使用, 不论黑白屏幕还是彩屏, 在其他机器上从来没见过的.哪怕现在支持息屏显示的机器, 也不能关闭背光使用.</p><p>特点：</p><ol><li>彩屏、支持关闭背光使用</li><li>砸核桃</li><li>可以玩贪吃蛇、骰子游戏、彩球滑梯。</li></ol><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212317251.png" alt="image.png"></p><p>附上诺基亚的半反半透屏幕：</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311242219869.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311242219862.png","alt":"image.png|476","title":""},{"url":"https://static.zahui.fan/images/202311242220233.png","alt":"image.png|430","title":""}]</div>  </div><h3 id="中兴-s190"><a href="#中兴-s190" class="headerlink" title="中兴 s190"></a>中兴 s190</h3><p>这个手机比较神奇， 同样的分辨率是 128x128，但是它竟然自带了手机 QQ 客户端，并且还有 UC 浏览器，并且支持 brew 平台（高通的软件平台，支持在商店安装 app，不过都是一些收费的游戏，游戏提供试玩时间）在上面玩过北京捷通华声的军魂系列，还有一款抄袭 cs 射击游戏， 这个手机我在高四复读的时候还在用。也就是这部手机让我对中兴特别有好感，上大学又买了三款中兴的手机。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310051529730.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051529733.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051529081.png","alt":"image.png","title":""}]</div>  </div><h3 id="LG-BL20E"><a href="#LG-BL20E" class="headerlink" title="LG BL20E"></a>LG BL20E</h3><p>不得不说, 这个手机是真心好看, 滑盖加黑红的设计, 摄像头是施耐德的 500 万像素, 在当时秒杀很多诺基亚了, 我一直用到上大学, 手机支持 java 程序，分辨率是 240x320 ，下载软件我都是选择的诺基亚</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311212242320.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311211912539.png","alt":"image.png|614","title":""},{"url":"https://static.zahui.fan/images/202311211915393.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212058064.png","alt":"image.png|619","title":""}]</div>  </div><h3 id="中兴-N788"><a href="#中兴-N788" class="headerlink" title="中兴 N788"></a>中兴 N788</h3><p>当时预存花费赠送的手机, 电信版, 当时有个口号: 一入电信深似海，从此手机不好买。说的就是当时没有全网通手机，移动手机插移动卡有 3G 信号，插联通卡只有 2G 信号，联通手机也类似。但是电信手机只能使用电信卡，电信卡也只能用在电信手机上，所以当时都是预存话费送手机的居多，当时的华为也还是低端充话费送的那种。神庙逃亡比较流行，但是这手机玩不了，内存只有 256MB，会闪退。我那时候还不会刷机，跟着论坛教程怎么也学不会 root，花了 15 块钱去手机店 root</p><p>手机参数：<br>网络模式：CDMA2000<br>外观设计：直板<br>主屏尺寸：3.5 英寸 480x320 像素<br>触摸屏：电容屏，多点触控<br>摄像头像素：320 万像素 CMOS<br>操作系统：Android OS 2.3<br>RAM 容量：256MB<br>ROM 容量：512MB<br>电池容量：1400mAh</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212343262.png" alt="image.png"></p><h3 id="中兴-V880"><a href="#中兴-V880" class="headerlink" title="中兴 V880"></a>中兴 V880</h3><p>v880 联通定制机器<br>u880 移动定制机器<br>n880 电信定制机器</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122242956.png" alt="image.png"></p><h3 id="中兴-N881F"><a href="#中兴-N881F" class="headerlink" title="中兴 N881F"></a>中兴 N881F</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212359434.png" alt="image.png"></p><p>手机配置：</p><p>960x540<br>1.2G 双核<br>768MB + 4GB<br>Android 4.0.4</p><h3 id="中兴-N909"><a href="#中兴-N909" class="headerlink" title="中兴 N909"></a>中兴 N909</h3><p>这款手机是电信定制机 (那时候还没有全网通这个概念, 电信版不兼容移动联通版本), 购买于中国电信官网，刷了 MIUI v5 使用，这个时候的运营商合约机配置还行，系统是真的差劲，几乎就是原生的 Android(中兴预装了 3d 蘑菇壁纸，划屏蘑菇会跟着转)，并且预装了一堆运营商定制软件，还不能卸载。手机内存 1G</p><p>电池：1800mAh<br>屏幕：4.5 英寸 480×854(FWVGA) 像素<br>操作系统：Android 4.1<br>CPU 型号：高通 MSM8625Q 四核 1228MHz<br>内存：1GB + 4GB<br>摄像头：500 万像素 + 30 万像素</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311160027547.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212353759.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212353266.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212354101.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212352147.png","alt":"image.png","title":""}]</div>  </div><h3 id="诺基亚-lumia-636"><a href="#诺基亚-lumia-636" class="headerlink" title="诺基亚 lumia 636"></a>诺基亚 lumia 636</h3><p>这是一台 Windows Phone 8.1 手机, 联通 4G(移动 4G 是 Lumia 638), 支持小娜语音助手, 可以通过语音控制微信发消息等 (需要更新其他区域的固件). 这个操作也是遥遥领先当时的其他手机, 不过此版本系统稳定性堪忧, 会不定时自动重启, 微软也不解决。为了稳定, 只能用回旧版本系统. wp 类似 ios，支持消息推送，不过软件功能缺失，只能勉强实现基本功能。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311242221057.png" alt="image.png|382"></p><h3 id="天语大黄蜂小黄蜂"><a href="#天语大黄蜂小黄蜂" class="headerlink" title="天语大黄蜂小黄蜂"></a>天语大黄蜂小黄蜂</h3><p>天语 k-touch 当时也很火, 大小黄蜂都是预存话费送的, 刷机也很 6, 可以刷 MIUI, 当时 MIUI 还是引领潮流的。当时预装的是 云 OS<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122240898.png" alt="image.png"></p><h3 id="小米-2S"><a href="#小米-2S" class="headerlink" title="小米 2S"></a>小米 2S</h3><p>这手机当时是需要抢购的（饥饿营销），小米 2s 确实是小米的一代经典机器。配置顶级，售价 1999（我买的时候是 1299），MIUI v5 也是遥遥领先同行。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311242230287.png" alt="image.png|584"></p><h2 id="手机经典游戏"><a href="#手机经典游戏" class="headerlink" title="手机经典游戏"></a>手机经典游戏</h2><h4 id="诺基亚老款手机-空间大战"><a href="#诺基亚老款手机-空间大战" class="headerlink" title="诺基亚老款手机 空间大战"></a>诺基亚老款手机 空间大战</h4><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310051648444.gif" alt="动画.gif"></p><h4 id="诺基亚-1600-彩球滑梯"><a href="#诺基亚-1600-彩球滑梯" class="headerlink" title="诺基亚 1600 彩球滑梯"></a>诺基亚 1600 彩球滑梯</h4><p><a href="https://www.bilibili.com/video/BV1a84y1M7gn/?vd_source=48f94495443a524e8f8b6eaf47c94823">https://www.bilibili.com/video/BV1a84y1M7gn/?vd_source=48f94495443a524e8f8b6eaf47c94823</a></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212324718.png" alt="image.png"><br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212326418.png" alt="image.png"></p><h4 id="诺基亚-贪吃蛇"><a href="#诺基亚-贪吃蛇" class="headerlink" title="诺基亚 贪吃蛇"></a>诺基亚 贪吃蛇</h4><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311212327524.png" alt="image.png"></p><h3 id="java-平台-j2me"><a href="#java-平台-j2me" class="headerlink" title="java 平台 j2me"></a>java 平台 j2me</h3><p>这个就是比较正统的非智能机上面的软件平台了，软件的后缀是 jar 或 jad（签名的 jar）签名版不会每次都弹出联网的提示。这个时候手机普遍是诺基亚的 s40 平台（非智能并兼容 java），诺基亚手机入门机器分辨率普遍不高，176x208 这个样子居多，高端机器是 240x320 分辨率，市面上的 java 游戏大概都是这些分辨率。这个时候可以安装官方版本的手机 QQ 和 UC 浏览器了。但是缺点是软件不支持后台运行（步步高的国产机可以后台运行一个软件，诺基亚的都不能后台运行软件）</p><h3 id="s60v3"><a href="#s60v3" class="headerlink" title="s60v3"></a>s60v3</h3><p>这个是 Symbian 智能系统了，没啥好说的， 也兼容 java 软件，软件后缀是 sis 和 sisx，手机 qq 可以后台运行，当时觉得比较震惊的还有手机版 360 安全卫士，有个浏览悬浮窗可以看到实时的网速。</p><h4 id="爱上手机-QQ"><a href="#爱上手机-QQ" class="headerlink" title="爱上手机 QQ"></a>爱上手机 QQ</h4><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311160024172.png","alt":"Screenshot_20231115-202451.png","title":""},{"url":"https://static.zahui.fan/images/202311160025084.png","alt":"Screenshot_20231115-202545.png","title":""}]</div>  </div><h4 id="UC-浏览器"><a href="#UC-浏览器" class="headerlink" title="UC 浏览器"></a>UC 浏览器</h4><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311160025520.png","alt":"Screenshot_20231115-113906.png","title":""},{"url":"https://static.zahui.fan/images/202311160025985.png","alt":"Screenshot_20231115-114134.png","title":""}]</div>  </div><h4 id="钻石狂潮"><a href="#钻石狂潮" class="headerlink" title="钻石狂潮"></a>钻石狂潮</h4><p>gameloft 的钻石狂潮（据说是部分诺基亚手机自带的游戏）</p><p>益智解密类游戏，有很多隐藏元素， 对手速也有要求。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310071530545.png" alt="Screenshot_20231004-224318.png"></p><h4 id="刺客"><a href="#刺客" class="headerlink" title="刺客"></a>刺客</h4><p>盛天堂的刺客系列，刺客之六国相印、刺客之骨肉分离</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310071728548.png" alt="Screenshot_20231007-172451.png"></p><h4 id="军魂"><a href="#军魂" class="headerlink" title="军魂"></a>军魂</h4><p>北京捷通华声的军魂系列，如军魂之二战风云, 这个游戏的特别之处在于路线多样性, 比如游戏中有步兵, 坦克, 船, 飞机, 比如步兵和坦克会走陆地, 船走水路, 飞机在空中飞, 这就有 3 条路线了. 同时武器也具有多样性, 机枪碉堡打小兵比较好, 炮台打坦克, 打飞机必须使用防空炮. 另外还有一种隐身小兵, 需要建造雷达, 在雷达的范围内才能发现.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310071530402.png" alt="java_20231004-193114.png"></p><h4 id="喜羊羊大战葫芦娃"><a href="#喜羊羊大战葫芦娃" class="headerlink" title="喜羊羊大战葫芦娃"></a>喜羊羊大战葫芦娃</h4><p>喜羊羊大战葫芦娃, 一个格斗游戏</p><h4 id="反恐炸弹人-阿童木"><a href="#反恐炸弹人-阿童木" class="headerlink" title="反恐炸弹人 - 阿童木"></a>反恐炸弹人 - 阿童木</h4><p>类似于炸弹人的游戏， 它的特点是道具很多， 地形复杂，比如有个鞋可以把炸弹踢走， 还可以骑恐龙。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310131534813.png" alt="Screenshot_20231013-143221.png"></p><h4 id="植物僵尸"><a href="#植物僵尸" class="headerlink" title="植物僵尸"></a>植物僵尸</h4><p>没错， 这个是 java 版的山寨植物大战僵尸，虽说是山寨，游戏质量还是可以的。游戏中的僵尸被替换成了清朝僵尸一跳一跳的，到游戏后期，有皇后、戴帽子的僵尸、皇上等等，这个是我最开始接触到的植物大战僵尸，以至于后面玩到了正版的，当时还觉得是盗版的，因为僵尸太写实了。。。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202310242223023.png","alt":"Screenshot_20231024-220906.png","title":""},{"url":"https://static.zahui.fan/images/202310242226174.png","alt":"Screenshot_20231024-220925.png","title":""},{"url":"https://static.zahui.fan/images/202310242226041.png","alt":"Screenshot_20231024-221325.png","title":""},{"url":"https://static.zahui.fan/images/202310242226157.png","alt":"Screenshot_20231024-221321.png","title":""},{"url":"https://static.zahui.fan/images/202310242230103.png","alt":"Screenshot_20231024-221346.png","title":""}]</div>  </div><h2 id="手机系统-刷机"><a href="#手机系统-刷机" class="headerlink" title="手机系统 &amp; 刷机"></a>手机系统 &amp; 刷机</h2><h3 id="为什么要刷机"><a href="#为什么要刷机" class="headerlink" title="为什么要刷机"></a>为什么要刷机</h3><p>刷机就是给手机换一个操作系统，至于为什么要换，给没经历过的小朋友说明一下，举个例子：中兴 v880 手机的官方定价是 1499 元，但是大部分人拿到这台手机的花费是 0 元，也就是运营商合约机，比如你办一张新卡，月租 39&#x2F;月，绑定 1 年不能更换套餐，手机就免费送你了（也就是充话费送的手机），这个手机是原生安卓 2.x 系统，几乎没有任何厂商的优化，预装了超级多的运营商 APP（且都是不能卸载的，当时还没有预装软件相关的法律法规），想卸载就只能 root 或者刷机成 MIUI、Flyme 等其他好用的系统。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404122252023.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202404122246899.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202404122232205.png","alt":"image.png|677","title":""}]</div>  </div><h3 id="冒泡游戏平台"><a href="#冒泡游戏平台" class="headerlink" title="冒泡游戏平台"></a>冒泡游戏平台</h3><p>参考知乎用户的回答：<a href="https://www.zhihu.com/question/24946202">https://www.zhihu.com/question/24946202</a></p><p>想要体验，可以安装 iacMrp-Mrp 冒泡模拟器， 或者直接在线游玩<a href="https://vmrp.github.io/">https://vmrp.github.io/</a>，或者：<a href="https://zengming00.github.io/">https://zengming00.github.io/</a> 开源作者：<a href="https://github.com/vmrp">https://github.com/vmrp</a></p><p>玩游戏 我要冒泡！</p><p>在智能机之前的功能机时代，正规军有诺基亚、摩托罗拉、索尼爱立信等，它们支持 j2me 也就是 java 平台，软件数量自然不用说，那么还有一批山寨机，它们价格便宜、电池大、声音大、双卡双待（甚至 4 卡 4 待）一批国内团队开始为山寨机打造各种专用软件和游戏平台，比如杭州斯凯的 MRP 平台、至尊宝 meg 平台、悠米 jra、艾华 iava 平台、雪鲤鱼 APP 平台，沃勤平台，上海酷吧平台，一时间国产手机软件平台如雨后春笋，百花齐放百家争鸣，其中最著名的就是 MRP 游戏和冒泡社区 MRP 是杭州斯凯网络科技公司自主研发的专用软件格式，是一种轻量级的虚拟平台 MINIJ 平台格式文件，用标准的 ANSI C 编写。可以说它是国产机专用游戏格式，比 Java 程序容量小，占据更少的系统内存，可以在恶劣的硬件条件下流畅运行各种程序，这一点非常适合包括国产的贴牌、杂牌及数量极其庞大的其它山寨机。这个公司还专门搞了个应用平台，叫做冒泡社区，在当年的山寨机上你只要在待机界面输入一串神秘代码： <code>*#220807#</code> ，你就能打开一扇新世界的大门，进入一个堪称山寨机乐园的世界，里面有游戏、小说、各种程序，还有各种你意想不到的东西除了像冒泡浏览器、冒泡书城、冒泡音乐播放器这样的基础应用外，软件商城里的各类游戏是值得大书特书的，里面的游戏全部是国产，制作公司除了斯凯本家之外，还吸引了乐堂动漫、美游、陆行鲨、华娱无线、FAST、大连斯芬克斯等优秀游戏制作公司，推出了包括街机风动作游戏、飞行射击、RPG、即时战略、策略、竞速等几乎囊括了游戏的全部类型，当然，这些游戏不仅要付费下载，里面还有氪金选项，可以说是一举奠定了中国手机游戏的盈利模式，影响至今随着破解手段的增多，冒泡社区开始往手机网游方向发展，图形手机网游哦，当年文字网游大行其道的时候，推出全部图形在线网游，魄力相当大，其中优秀代表是幻想三国、仙剑问情，至今让有无数玩家坚守、无数玩家回忆。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311212309263.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212309891.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202311212254207.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051534088.png","alt":"image.png","title":""},{"url":"https://static.zahui.fan/images/202310051534381.png","alt":"image.png","title":""}]</div>  </div><h3 id="MIUI"><a href="#MIUI" class="headerlink" title="MIUI"></a>MIUI</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122235311.png" alt="image.png|557"></p><p>啥都不说了，看图吧</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202311242248301.png","alt":"image.png|326","title":""},{"url":"https://static.zahui.fan/images/202311242248592.png","alt":"image.png|329","title":""},{"url":"https://static.zahui.fan/images/202311242248038.png","alt":"image.png|358","title":""},{"url":"https://static.zahui.fan/images/202311242249054.png","alt":"image.png|361","title":""},{"url":"https://static.zahui.fan/images/202311242252126.png","alt":"image.png|378","title":""},{"url":"https://static.zahui.fan/images/202311242252042.png","alt":"image.png|691","title":""},{"url":"https://static.zahui.fan/images/202311242253845.png","alt":"image.png|693","title":""},{"url":"https://static.zahui.fan/images/202311242253052.png","alt":"image.png|457","title":""},{"url":"https://static.zahui.fan/images/202311242254984.png","alt":"image.png|746","title":""},{"url":"https://static.zahui.fan/images/202311242255232.png","alt":"image.png|402","title":""}]</div>  </div><h3 id="乐蛙"><a href="#乐蛙" class="headerlink" title="乐蛙"></a>乐蛙</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122236978.png" alt="image.png|516"></p><h3 id="CyanogenMod-和-Lineage-OS"><a href="#CyanogenMod-和-Lineage-OS" class="headerlink" title="CyanogenMod 和 Lineage OS"></a>CyanogenMod 和 Lineage OS</h3><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404122234154.png","alt":"image.png|525","title":""},{"url":"https://static.zahui.fan/images/202404122236329.png","alt":"image.png|471","title":""}]</div>  </div><h3 id="魔趣-Mokee"><a href="#魔趣-Mokee" class="headerlink" title="魔趣 Mokee"></a>魔趣 Mokee</h3><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404122235421.png","alt":"image.png|550","title":""},{"url":"https://static.zahui.fan/images/202404122231358.png","alt":"image.png|545","title":""}]</div>  </div><h3 id="云-OS-（阿里）"><a href="#云-OS-（阿里）" class="headerlink" title="云 OS （阿里）"></a>云 OS （阿里）</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122237448.png" alt="image.png"></p><p>魅族 MX4 就有安卓版和云 OS 版<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122239585.png" alt="image.png"></p><h3 id="百度云-OS"><a href="#百度云-OS" class="headerlink" title="百度云 OS"></a>百度云 OS</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404122238942.png" alt="image.png"></p><p>百度还收购了点心 OS</p><h3 id="腾讯-tita-或者-TOS"><a href="#腾讯-tita-或者-TOS" class="headerlink" title="腾讯 tita 或者 TOS"></a>腾讯 tita 或者 TOS</h3><p>没用过。。适配的机器比较少</p><h3 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h3><p>高中 3 年没见过安卓, 复读班同学有安卓机了, 一个 sharp 当时觉得很惊艳. 玩雷霆赛车可以使用重力感应来控制车辆转弯。</p><p>大学一个宿舍, 5 个非智能手机, 一台 oppo 的智能机，过了半年，都换成了智能机</p><h3 id="IOS-5-IOS-6"><a href="#IOS-5-IOS-6" class="headerlink" title="IOS 5 &amp; IOS 6"></a>IOS 5 &amp; IOS 6</h3><p>第一次见 ios6 是在同学的 <code>iPhone 5</code> 上面的，黑色 <code>iPhone 5</code> 配上拟物化界面，非常漂亮。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202406082220437.jpg","alt":"10001 (1).jpg|533","title":""},{"url":"https://static.zahui.fan/images/202406082221158.jpg","alt":"10001 (2).jpg|530","title":""},{"url":"https://static.zahui.fan/images/202406082221594.jpg","alt":"10001 (3).jpg|599","title":""},{"url":"https://static.zahui.fan/images/202406082221666.jpg","alt":"10001.jpg|604","title":""},{"url":"https://static.zahui.fan/images/202406080907985.PNG","alt":"","title":""},{"url":"https://static.zahui.fan/images/202406080908491.JPG","alt":"202406080908491.JPG|474","title":""},{"url":"https://static.zahui.fan/images/202406080908363.JPG","alt":"202406080908363.JPG|522","title":""},{"url":"https://static.zahui.fan/images/202406200002342.jpg","alt":"","title":""},{"url":"https://static.zahui.fan/images/202406200003461.webp","alt":"10073.webp","title":""},{"url":"https://static.zahui.fan/images/202406200004119.png","alt":"10025.png","title":""},{"url":"https://static.zahui.fan/images/202406200004958.png","alt":"10027.png","title":""},{"url":"https://static.zahui.fan/images/202406200004140.png","alt":"10029.png","title":""},{"url":"https://static.zahui.fan/images/202406200006910.png","alt":"10085.png","title":""},{"url":"https://static.zahui.fan/images/202406200007027.png","alt":"10148.png","title":""},{"url":"https://static.zahui.fan/images/202406200007634.webp","alt":"10147.webp","title":""},{"url":"https://static.zahui.fan/images/202406200007238.png","alt":"10149.png","title":""},{"url":"https://static.zahui.fan/images/202406200008719.png","alt":"10152.png","title":""},{"url":"https://static.zahui.fan/images/202406200008634.webp","alt":"10151.webp","title":""},{"url":"https://static.zahui.fan/images/202406200008544.webp","alt":"10157.webp","title":""}]</div>  </div><h2 id="其他小物件"><a href="#其他小物件" class="headerlink" title="其他小物件"></a>其他小物件</h2><h3 id="红灯收音机"><a href="#红灯收音机" class="headerlink" title="红灯收音机"></a>红灯收音机</h3><p>爷爷听了一辈子的收音机，只停留在一个台上，接下来是新闻和报纸摘要时间~<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312011724446.png" alt="image.png"></p><h3 id="手机来电闪"><a href="#手机来电闪" class="headerlink" title="手机来电闪"></a>手机来电闪</h3><p>来电闪灯除了好看之外，还有个用处，就是判断网速情况（非智能手机是没有软件支持悬浮窗的，不能像塞班装个 360 就可以显示流量悬浮窗，知道网页能不能打开），一般来说，先打开个网页，然后翻过手机看它闪得厉害不，如果闪着闪着不闪了，而网页还在加载，那么大概率一时半会是加载不出来了，就取消然后重新点击😄</p><h3 id="万能充"><a href="#万能充" class="headerlink" title="万能充"></a>万能充</h3><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://static.zahui.fan/images/202404250117867.JPEG","alt":"IMG_0759.JPG_compressed.JPEG|314","title":""},{"url":"https://static.zahui.fan/images/202404250117868.JPEG","alt":"IMG_0759.JPG_compressed.JPEG|322","title":""}]</div>  </div><h3 id="大头贴"><a href="#大头贴" class="headerlink" title="大头贴"></a>大头贴</h3><p>在机器上拍照后会像拍立得一样出来，然后可以贴在手机、书上等，图片搜集自网络<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407311820527.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找出占用Kubernetes节点磁盘的Pod</title>
      <link href="/posts/lo47lj11/"/>
      <url>/posts/lo47lj11/</url>
      
        <content type="html"><![CDATA[<p>有部分开发不规范导致日志写入容器, 在 k8s 环境下导致节点磁盘空间占用过高, 解决方案有:</p><ol><li>通过监控告警来提前预防</li><li>挂载磁盘, 容器日志写入磁盘</li><li>使用自动清理脚本</li></ol><h2 id="kubectl-查询每个-pod-占用磁盘空间"><a href="#kubectl-查询每个-pod-占用磁盘空间" class="headerlink" title="kubectl 查询每个 pod 占用磁盘空间"></a>kubectl 查询每个 pod 占用磁盘空间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get --raw /api/v1/nodes/10.20.20.12/proxy/stats/summary | jq <span class="string">&#x27;.pods[] | &quot;PodName:  \(.podRef.name)&quot;, &quot;usedBytes:   \(.containers[].rootfs.usedBytes)&quot;, &quot;======================================================&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>输出结果如图:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202310241858426.png" alt="image.png"></p><h2 id="Docker-相关操作"><a href="#Docker-相关操作" class="headerlink" title="Docker 相关操作"></a>Docker 相关操作</h2><h3 id="查看容器磁盘占用"><a href="#查看容器磁盘占用" class="headerlink" title="查看容器磁盘占用"></a>查看容器磁盘占用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 节点上查看磁盘使用情况,并安装从大到小排序,可以看到各个容器的占用磁盘空间。</span></span><br><span class="line">docker ps -a --format <span class="string">&quot;table &#123;&#123;.Size&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span> | <span class="built_in">sort</span> -hr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看磁盘总体使用情况</span></span><br><span class="line">docker system <span class="built_in">df</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux里安装crontab并运行</title>
      <link href="/posts/lnmt2t0q/"/>
      <url>/posts/lnmt2t0q/</url>
      
        <content type="html"><![CDATA[<p>常见的 linux 发行版都自带了 crontab 服务, 但是我们常用的容器镜像是没有的, 不要问我为什么要在容器里运行 crontab…<br><a href="/posts/2de1df7e/">Linux定时执行任务crontab</a><br><a href="/posts/63d10d9c/">Linux的crontab无法执行的一些问题</a></p><h2 id="CentOS-RedHat-系列"><a href="#CentOS-RedHat-系列" class="headerlink" title="CentOS&#x2F;RedHat 系列"></a>CentOS&#x2F;RedHat 系列</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y cronie</span><br></pre></td></tr></table></figure><h3 id="配置文件位置"><a href="#配置文件位置" class="headerlink" title="配置文件位置"></a>配置文件位置</h3><p>后面的 root 是用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/root</span><br></pre></td></tr></table></figure><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line">crond</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前台运行</span></span><br><span class="line">crond -f </span><br></pre></td></tr></table></figure><h2 id="Ubuntu-Debian-系列"><a href="#Ubuntu-Debian-系列" class="headerlink" title="Ubuntu&#x2F;Debian 系列"></a>Ubuntu&#x2F;Debian 系列</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y cron</span><br></pre></td></tr></table></figure><h3 id="配置文件位置-1"><a href="#配置文件位置-1" class="headerlink" title="配置文件位置"></a>配置文件位置</h3><p>后面的 root 是用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><h3 id="启动命令-1"><a href="#启动命令-1" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line">cron</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前台运行</span></span><br><span class="line">cron -f</span><br></pre></td></tr></table></figure><h2 id="Alpine"><a href="#Alpine" class="headerlink" title="Alpine"></a>Alpine</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>官方镜像自带了</p><h3 id="配置文件位置-2"><a href="#配置文件位置-2" class="headerlink" title="配置文件位置"></a>配置文件位置</h3><p>后面的 root 是用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/crontabs/root</span><br></pre></td></tr></table></figure><h3 id="启动命令-2"><a href="#启动命令-2" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前台运行</span></span><br><span class="line">crond -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line">crond</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Crontab </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动清理日志脚本</title>
      <link href="/posts/lnd7yqpw/"/>
      <url>/posts/lnd7yqpw/</url>
      
        <content type="html"><![CDATA[<p>公司的业务服务会打日志到磁盘, 程序已经做了日志切割, 时间一长磁盘占满会导致业务异常, 普通的清理逻辑是使用 crontab 定时删除文件, 比如每天 1 点删除创建日期超过 30 天的日志文件, 大部分情况下工作是 OK 的, 但是执行周期太长, 如果当天日志暴增, 不能及时删除文件. 也会有隐患, 优化版脚本如下:</p><p>日志清理分以下几种:</p><ol><li>历史日志, 并且未在写入的日志, 这种可以直接删除掉.</li><li>当前正在写入的日志, 需要清理, 这种不能删除, 可以通过清空文件的方式来释放空间</li></ol><blockquote><p>set -euo pipefail 的作用:<br>set -e: 脚本中有任何一条命令执行失败, 整个脚本就失败<br>set -u: 脚本中的变量有任何一个变量为空, 整个脚本执行失败<br>-o pipefail: 脚本中的管道中任何一条命令执行失败, 也会认为脚本执行失败</p></blockquote><p>脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -uo pipefail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘的文件系统(df -h里面显示的)</span></span><br><span class="line">FILESYSTEM=<span class="string">&quot;/dev/vda1&quot;</span></span><br><span class="line"><span class="comment"># 业务日志目录</span></span><br><span class="line">LOGS_FOLDER=<span class="string">&quot;/logs/&quot;</span></span><br><span class="line"><span class="comment"># 这里的日志文件不做处理, 一般是需要保留的当天日志.</span></span><br><span class="line">EXCLUDE_LOGS=<span class="string">&quot;a.log|b.log|c.log|d.log&quot;</span></span><br><span class="line"><span class="comment"># 这里的日志只清空，不删除</span></span><br><span class="line">EMPTY_LOGS=(</span><br><span class="line">/var/log/stdout</span><br><span class="line">/root/agent.log</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 清理日志记录</span></span><br><span class="line">LOG=/root/clean.log</span><br><span class="line"><span class="comment"># 当前时间</span></span><br><span class="line">NOW=$(<span class="built_in">date</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"></span><br><span class="line">USEAGE=$(<span class="built_in">df</span> -h | grep -vE <span class="string">&#x27;tmpfs|cdrom&#x27;</span> | grep <span class="string">&quot;<span class="variable">$&#123;FILESYSTEM&#125;</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&quot;%&quot;</span> -f1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;NOW&#125;</span> filesystem used <span class="variable">$&#123;USEAGE&#125;</span>%&quot;</span> &gt;&gt; <span class="variable">$&#123;LOG&#125;</span> 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$USEAGE</span> -ge 80 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;EMPTY_LOGS[*]&#125;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;NOW&#125;</span> clean <span class="variable">$i</span>&quot;</span> &gt;&gt; <span class="variable">$&#123;LOG&#125;</span> 2&gt;&amp;1</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    logfile=$(<span class="built_in">ls</span> -t <span class="variable">$&#123;LOGS_FOLDER&#125;</span> | grep -Ev <span class="variable">$&#123;EXCLUDE_LOGS&#125;</span> | <span class="built_in">tail</span> -1)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;NOW&#125;</span> clean <span class="variable">$&#123;logfile&#125;</span>&quot;</span> &gt;&gt; <span class="variable">$&#123;LOG&#125;</span> 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">rm</span> -f <span class="variable">$&#123;LOGS_FOLDER&#125;</span><span class="variable">$&#123;logfile&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>磁盘使用率低于 80% 不会执行操作, 所以可以缩短 crontab 执行的间隔, 我一般设置成 5 分钟检测一次, crontab 内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /data/tools/clean.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>注意: crontab 最后需要保留一个空行</p></div>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cli </tag>
            
            <tag> Crontab </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速安装Prometheus监控组件</title>
      <link href="/posts/ln38vw8d/"/>
      <url>/posts/ln38vw8d/</url>
      
        <content type="html"><![CDATA[<p>复制粘贴就能用，适用于非容器化安装， k8s 环境看这个， 更方便 <a href="/posts/61baae6f/">Kubernetes中使用Prometheus对集群节点做监控</a></p><p>安装方式为二进制安装，使用 systemd 来管理（也可以使用 supervisor 等进程管理工具）</p><h2 id="安装-node-exporter"><a href="#安装-node-exporter" class="headerlink" title="安装 node_exporter"></a>安装 node_exporter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[ -d /data/src ] || <span class="built_in">mkdir</span> -p /data/src</span><br><span class="line"><span class="built_in">cd</span> /data/src/</span><br><span class="line">curl -OL -C - https://file.babudiu.com/f/rRi2/node_exporter-1.6.1.linux-amd64.tar.gz</span><br><span class="line">tar xf node_exporter-1.6.1.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">ln</span> -sf /data/src/node_exporter-1.6.1.linux-amd64 ../node_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;/etc/systemd/system/node_exporter.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=node_exporter</span></span><br><span class="line"><span class="string">Documentation=https://prometheus.io/</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">ExecStart=/data/node_exporter/node_exporter</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now node_exporter</span><br></pre></td></tr></table></figure><h2 id="安装-Prometheus"><a href="#安装-Prometheus" class="headerlink" title="安装 Prometheus"></a>安装 Prometheus</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[ -d /data/src ] || <span class="built_in">mkdir</span> -p /data/src</span><br><span class="line"><span class="built_in">cd</span> /data/src/</span><br><span class="line">curl -OL -C - https://file.babudiu.com/f/vlsA/prometheus-2.49.1.linux-amd64.tar.gz</span><br><span class="line">tar xf prometheus-2.49.1.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">ln</span> -sf /data/src/prometheus-2.49.1.linux-amd64 ../prometheus</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;/etc/systemd/system/prometheus.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Prometheus Server</span></span><br><span class="line"><span class="string">Documentation=https://prometheus.io/docs/introduction/overview/</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/data/prometheus/prometheus \</span></span><br><span class="line"><span class="string">  --config.file=/data/prometheus/prometheus.yml \</span></span><br><span class="line"><span class="string">  --storage.tsdb.path=/data/prometheus/data</span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -HUP $MAINPID</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now prometheus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> prometheus </tag>
            
            <tag> 监控 </tag>
            
            <tag> node_exporter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile中ADD文件的路径问题</title>
      <link href="/posts/lmucp5lg/"/>
      <url>/posts/lmucp5lg/</url>
      
        <content type="html"><![CDATA[<p>首先看一个案例</p><p>当前目录的文件如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@devops_build watcher_svr]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── 1</span><br><span class="line">├── 2</span><br><span class="line">│   └── 3</span><br><span class="line">└── Dockerfile</span><br><span class="line"></span><br><span class="line">1 directory, 3 files</span><br></pre></td></tr></table></figure><p><code>Dockerfile</code> 文件内容如下:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.20</span>.<span class="number">1</span>-buster</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> * /code/</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /code</span></span><br></pre></td></tr></table></figure><p>本意是想把当前目录下的所有文件放到容器内的 <code>/code</code> 目录, 这个时候使用 <code>docker build</code> 后无法启动, 进入容器, 打开 <code>/code</code> 一看:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@devops_build watcher_svr]<span class="comment"># docker run -it test bash</span></span><br><span class="line">root@cb7543054ef2:/code<span class="comment"># ls -al</span></span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 2 root root 4096 Sep 22 08:47 .</span><br><span class="line">drwxr-xr-x 1 root root 4096 Sep 22 08:47 ..</span><br><span class="line">-rw-r--r-- 1 root root    0 Sep 22 08:45 1</span><br><span class="line">-rw-r--r-- 1 root root    0 Sep 22 08:45 3</span><br><span class="line">-rw-r--r-- 1 root root   75 Sep 22 08:46 Dockerfile</span><br><span class="line">root@cb7543054ef2:/code<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>会发现, 本来 3 这个文件应该是在 2 这个文件夹内的, 现在统一都跑到了上级目录了, 文件路径完全变了. 自然无法启动. 可以做如下修改:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.20</span>.<span class="number">1</span>-buster</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./ /code/</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /code</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
            <tag> CICD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下使用bat脚本来新增环境变量</title>
      <link href="/posts/lmsslh3g/"/>
      <url>/posts/lmsslh3g/</url>
      
        <content type="html"><![CDATA[<p>自己创建了一个 bin 目录用于存放一些 exe 或者 bat 用于快速调用, 把它加到 PATH 环境变量中就可以在任意路径来调用了.</p><h2 id="查看环境变量"><a href="#查看环境变量" class="headerlink" title="查看环境变量"></a>查看环境变量</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span></span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setx <span class="built_in">PATH</span> &quot;<span class="variable">%PATH%</span>;<span class="variable">%USERPROFILE%</span>\bin&quot;</span><br></pre></td></tr></table></figure><p>这里需要注意把原有的 <code>%PATH%</code> 带上, 不然就会覆盖掉 PATH 变量, <code>%USERPROFILE%</code> 指的是个人文件夹, 我的就是 <code>C:\Users\iuxt</code></p><h2 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h2><p>首先判断一下有没有环境变量, 没有的话就增加, 有的话什么都不做.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">path</span> | <span class="built_in">findstr</span> &quot;<span class="variable">%USERPROFILE%</span>\bin&quot; &gt;<span class="built_in">nul</span> &amp;&amp; (</span><br><span class="line">    <span class="built_in">echo</span> 环境变量已存在</span><br><span class="line">) || (</span><br><span class="line">    <span class="built_in">echo</span> 环境变量不存在</span><br><span class="line">    setx <span class="built_in">PATH</span> &quot;<span class="variable">%PATH%</span>;<span class="variable">%USERPROFILE%</span>\bin&quot;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s解除service端口限制</title>
      <link href="/posts/lmri345s/"/>
      <url>/posts/lmri345s/</url>
      
        <content type="html"><![CDATA[<p>我自己写了一个 svc 的 yaml 文件，部署的时候报错，不在默认的范围内，默认范围是: <code>30000-32767</code></p><p><code>kubectl apply -f nginx-src.yaml</code></p><p>报错:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The Service <span class="string">&quot;nginx&quot;</span> is invalid: spec.ports[0].nodePort: Invalid value: 80: provided port is not <span class="keyword">in</span> the valid range. The range of valid ports is 30000-32767</span><br></pre></td></tr></table></figure><p>如果是 kubeadm 部署<br>修改配置文件 <code>vim /etc/kubernetes/manifests/kube-apiserver.yaml</code></p><p>在启动参数里面添加如下一行</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">--service-node-port-range=1-65535</span></span><br></pre></td></tr></table></figure><p>重启 kube-apiserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kube-system kube-apiserver-xxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL查询出所有没有主键的表</title>
      <link href="/posts/lmoa36fz/"/>
      <url>/posts/lmoa36fz/</url>
      
        <content type="html"><![CDATA[<p>作者：May22Night<br>链接：<a href="https://www.jianshu.com/p/f484c63e5c96">https://www.jianshu.com/p/f484c63e5c96</a></p><h2 id="压缩版"><a href="#压缩版" class="headerlink" title="压缩版:"></a>压缩版:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.TABLE_SCHEMA,a.TABLE_NAME <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> TABLE_SCHEMA,TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="string">&#x27;mysql&#x27;</span>,<span class="string">&#x27;information_schema&#x27;</span>,<span class="string">&#x27;performance_schema&#x27;</span>,<span class="string">&#x27;sys&#x27;</span>,<span class="string">&#x27;sysdb&#x27;</span>)) <span class="keyword">as</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> TABLE_SCHEMA,TABLE_NAME <span class="keyword">FROM</span> information_schema.TABLE_CONSTRAINTS <span class="keyword">WHERE</span> CONSTRAINT_TYPE<span class="operator">=</span><span class="string">&#x27;PRIMARY KEY&#x27;</span> <span class="keyword">AND</span> TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="string">&#x27;mysql&#x27;</span>,<span class="string">&#x27;information_schema&#x27;</span>,<span class="string">&#x27;performance_schema&#x27;</span>,<span class="string">&#x27;sys&#x27;</span>,<span class="string">&#x27;sysdb&#x27;</span>)) <span class="keyword">as</span> b <span class="keyword">ON</span> a.TABLE_SCHEMA<span class="operator">=</span>b.TABLE_SCHEMA <span class="keyword">AND</span> a.TABLE_NAME<span class="operator">=</span>b.TABLE_NAME <span class="keyword">WHERE</span> b.TABLE_NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h2 id="美化版"><a href="#美化版" class="headerlink" title="美化版:"></a>美化版:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    a.TABLE_SCHEMA,</span><br><span class="line">    a.TABLE_NAME </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        TABLE_SCHEMA,</span><br><span class="line">        TABLE_NAME </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        information_schema.TABLES </span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">    TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span> ( <span class="string">&#x27;mysql&#x27;</span>, <span class="string">&#x27;information_schema&#x27;</span>, <span class="string">&#x27;performance_schema&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>, <span class="string">&#x27;sysdb&#x27;</span> )) <span class="keyword">AS</span> a</span><br><span class="line">    <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        TABLE_SCHEMA,</span><br><span class="line">        TABLE_NAME </span><br><span class="line">    <span class="keyword">FROM</span></span><br><span class="line">        information_schema.TABLE_CONSTRAINTS </span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">        CONSTRAINT_TYPE <span class="operator">=</span> <span class="string">&#x27;PRIMARY KEY&#x27;</span> </span><br><span class="line">    <span class="keyword">AND</span> TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span> ( <span class="string">&#x27;mysql&#x27;</span>, <span class="string">&#x27;information_schema&#x27;</span>, <span class="string">&#x27;performance_schema&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>, <span class="string">&#x27;sysdb&#x27;</span> )) <span class="keyword">AS</span> b <span class="keyword">ON</span> a.TABLE_SCHEMA <span class="operator">=</span> b.TABLE_SCHEMA </span><br><span class="line">    <span class="keyword">AND</span> a.TABLE_NAME <span class="operator">=</span> b.TABLE_NAME </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    b.TABLE_NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h2 id="sql-解释"><a href="#sql-解释" class="headerlink" title="sql 解释:"></a>sql 解释:</h2><p>查询结果中 <code>TABLE_SCHEMA</code> 是库名，<code>TABLE_NAME</code> 就是表名。<br>其查询原理就是 <code>information_schema</code> 库中存储了各个库与表的结构，在 <code>information_schema.TABLES</code> 表中存储了所有表，<code>information_schema.TABLE_CONSTRAINTS</code> 表中存储了表相关的约束，主键就是一种约束，所以 <code>CONSTRAINT_TYPE</code> 字段为 <code>PRIMARY KEY</code> 值的就是拥有主键的表。<br>有了所有表的表名，还有了所有拥有主键的表，那么就简单了，以查询出的全部表为主表，左联一下，右表为空的就是没有主键的表。<br>SQL 中排除了 mysql 自带的五个库，同时解决了不同名的库拥有相同名的表的情况，还有优化空间，不过我觉得不是业务 SQL，没必要优化了。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows下实现一个快速转换音乐格式的小工具</title>
      <link href="/posts/lmm46hng/"/>
      <url>/posts/lmm46hng/</url>
      
        <content type="html"><![CDATA[<p>搞点歌在车里听，但是早年 10w 的合资车只能听 mp3 格式，所以把需要我珍藏的音乐转换成 mp3 拷进 U 盘， 转换格式工具当然是选择 ffmpeg 了。搜了下命令是：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i xxx.flac -acodec libmp3lame xxx.mp3</span><br></pre></td></tr></table></figure><p>接下来需要做一个稍微自动化一点的工具，比如把 flac 文件拖放到 bat 脚本上，就能实现自动转换格式。</p><p>完整脚本如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line">ffmpeg -i &quot;%~s1&quot; -acodec libmp3lame &quot;<span class="variable">%~dp0%</span>~n1.mp3&quot;</span><br></pre></td></tr></table></figure><p>其中 chcp 65001 是为了防止 bat 脚本中包含中文导致的乱码。申明脚本编码为 UTF-8， 脚本保存的时候也要以 UTF-8 编码保存， 如果不加 <code>chcp 65001</code>, 那么需要使用 windows 记事本打开重新保存编码选择 <code>ANSI</code>， 因为 cmd 默认的编码就是 GBK<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309162228582.png" alt="image.png"></p><p>以下是一些常用的代码页。</p><table><thead><tr><th>代码页</th><th>说明</th></tr></thead><tbody><tr><td>65001</td><td>UTF-8 代码页</td></tr><tr><td>950</td><td>繁体中文</td></tr><tr><td>936</td><td>简体中文默认 GBK</td></tr><tr><td>437</td><td>MS-DOS 美国英语</td></tr></tbody></table><p>另外脚本里用到的变量说明：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 无后缀名： %~n1</span><br><span class="line"><span class="built_in">echo</span> 有后缀名： %~nx1</span><br><span class="line"><span class="built_in">echo</span> 绝对路径： %<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> 短路径名的绝对路径： %~s1</span><br><span class="line"><span class="built_in">echo</span> 驱动器和路径： %~dp1</span><br><span class="line"><span class="built_in">echo</span> 驱动器： %~d1</span><br><span class="line"><span class="built_in">echo</span> 路径： %~p1</span><br><span class="line"><span class="built_in">echo</span> 文件属性： %~a1</span><br><span class="line"><span class="built_in">echo</span> 日期/时间： %~t1</span><br><span class="line"><span class="built_in">echo</span> 文件大小： %~z1@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 当前的bat文件：&quot;%~<span class="number">0</span>&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：&quot;%~d0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：&quot;%~dp0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：&quot;%~f0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：&quot;%~sdp0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前<span class="built_in">CMD</span>默认目录：&quot;<span class="variable">%cd%</span>&quot;</span><br></pre></td></tr></table></figure><p>上面的脚本用到了短路径， 短路径的好处是可以解决路径中带有空格的问题。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> cmd </tag>
            
            <tag> bat </tag>
            
            <tag> cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL2 - Ubuntu配置记录</title>
      <link href="/posts/lmeiruso/"/>
      <url>/posts/lmeiruso/</url>
      
        <content type="html"><![CDATA[<h2 id="WSL-防火墙规则"><a href="#WSL-防火墙规则" class="headerlink" title="WSL 防火墙规则"></a>WSL 防火墙规则</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-NetAdapter</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;WSL&quot;</span> <span class="literal">-Direction</span> Inbound  <span class="literal">-InterfaceAlias</span> <span class="string">&quot;vEthernet (WSL)&quot;</span>  <span class="literal">-Action</span> Allow</span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><h3 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h3><p>使用中科大的源: <a href="https://mirrors.ustc.edu.cn/help/ubuntu.html">https://mirrors.ustc.edu.cn/help/ubuntu.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 老版本Ubuntu</span></span><br><span class="line"><span class="comment"># sudo sed -i &#x27;s@//.*.ubuntu.com@//mirrors.ustc.edu.cn@g&#x27; /etc/apt/sources.list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 24 及以上</span></span><br><span class="line">sudo sed -i <span class="string">&#x27;s@//.*.ubuntu.com@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list.d/ubuntu.sources</span><br></pre></td></tr></table></figure><h3 id="安装常用的包"><a href="#安装常用的包" class="headerlink" title="安装常用的包"></a>安装常用的包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br><span class="line">sudo apt install -y zip libmysqlclient-dev build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev lrzsz</span><br></pre></td></tr></table></figure><h3 id="当前用户免-sudo-密码"><a href="#当前用户免-sudo-密码" class="headerlink" title="当前用户免 sudo 密码"></a>当前用户免 sudo 密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /etc/sudoers.d/iuxt &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">%sudo   ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br><span class="line"><span class="string">$USER   ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="WSL-开启-systemd-支持-仅支持-WSL2"><a href="#WSL-开启-systemd-支持-仅支持-WSL2" class="headerlink" title="WSL 开启 systemd 支持 (仅支持 WSL2)"></a>WSL 开启 systemd 支持 (仅支持 WSL2)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">touch</span> /etc/startup.sh</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /etc/startup.sh</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/wsl.conf &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[boot]</span><br><span class="line">systemd=<span class="literal">true</span></span><br><span class="line"><span class="built_in">command</span>=/etc/startup.sh</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="git-配置"><a href="#git-配置" class="headerlink" title="git 配置"></a>git 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y git git-lfs</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> ~/.gitconfig &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[user]</span><br><span class="line">        name = zhanglikun</span><br><span class="line">        email = x@zahui.fan</span><br><span class="line">        signingkey = zhanglikun</span><br><span class="line">[credential]</span><br><span class="line">        helper = store</span><br><span class="line">[core]</span><br><span class="line">        autocrlf = <span class="literal">false</span></span><br><span class="line">        quotepath = <span class="literal">false</span></span><br><span class="line">[init]</span><br><span class="line">        defaultBranch = master</span><br><span class="line">[pull]</span><br><span class="line">        rebase = <span class="literal">false</span></span><br><span class="line">[commit]</span><br><span class="line">        gpgsign = <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="zsh-配置"><a href="#zsh-配置" class="headerlink" title="zsh 配置"></a>zsh 配置</h2><h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y zsh</span><br></pre></td></tr></table></figure><h3 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh my zsh"></a>安装 oh my zsh</h3><p><a href="https://ohmyz.sh/#install">https://ohmyz.sh/#install</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p><a href="https://github.com/romkatv/powerlevel10k">https://github.com/romkatv/powerlevel10k</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主题配置</span></span><br><span class="line">sed -i <span class="string">&#x27;s#^ZSH_THEME=.*#ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;#g&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="安装一些插件"><a href="#安装一些插件" class="headerlink" title="安装一些插件"></a>安装一些插件</h3><p><a href="https://github.com/zsh-users/zsh-autosuggestions">https://github.com/zsh-users/zsh-autosuggestions</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y fzf</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">omz plugin <span class="built_in">enable</span> z git sudo zsh-autosuggestions zsh-syntax-highlighting fzf</span><br></pre></td></tr></table></figure><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h3 id="修改默认编辑器"><a href="#修改默认编辑器" class="headerlink" title="修改默认编辑器"></a>修改默认编辑器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo update-alternatives --config editor</span></span><br><span class="line">sudo <span class="built_in">ln</span> -sf /usr/bin/vim.basic /etc/alternatives/editor</span><br><span class="line"></span><br><span class="line"><span class="comment"># select-editor</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;SELECTED_EDITOR=&quot;/usr/bin/vim.basic&quot;&#x27;</span> &gt; ~/.selected_editor</span><br></pre></td></tr></table></figure><h3 id="安装-vim-plug-插件管理工具"><a href="#安装-vim-plug-插件管理工具" class="headerlink" title="安装 vim plug 插件管理工具"></a>安装 vim plug 插件管理工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> ~/.vimrc &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; On-demand loading</span></span><br><span class="line"><span class="string">Plug &#x27;preservim/nerdtree&#x27;, &#123; &#x27;on&#x27;: &#x27;NERDTreeToggle&#x27; &#125;</span></span><br><span class="line"><span class="string">Plug &#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="string">Plug &#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">call plug#end()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set paste</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; nerdtree</span></span><br><span class="line"><span class="string">let NERDTreeWinPos=&quot;</span>left<span class="string">&quot;</span></span><br><span class="line"><span class="string">noremap &lt;F8&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> airline</span><br><span class="line"><span class="built_in">set</span> laststatus=2  <span class="string">&quot;永远显示状态栏</span></span><br><span class="line"><span class="string">let g:airline_powerline_fonts = 1  &quot;</span>支持 powerline 字体</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1 &quot;显示窗口tab和buffer</span></span><br><span class="line"><span class="built_in">let</span> g:airline_theme=<span class="string">&#x27;molokai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line"><span class="built_in">let</span> g:airline_symbols = &#123;&#125;</span><br><span class="line">endif</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">&#x27;▶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">&#x27;❯&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">&#x27;◀&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">&#x27;❮&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.linenr = <span class="string">&#x27;¶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.branch = <span class="string">&#x27;⎇&#x27;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>进入 vim 命令界面, 输入 <code>:PlugInstall</code> 安装插件</p><h2 id="常用环境安装"><a href="#常用环境安装" class="headerlink" title="常用环境安装"></a>常用环境安装</h2><p>安装 golang python nodejs 查看 <a href="/posts/5e168f7e">快速搭建环境记录</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一些配置</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker &amp;&amp; sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span>,</span><br><span class="line">  <span class="string">&quot;iptables&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前用户执行docker命令，需要注销用户</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p>安装 zssh, 查看 <a href="/posts/e48170f8">改造windows-terminal支持lrzsz</a></p><h2 id="常用-alias"><a href="#常用-alias" class="headerlink" title="常用 alias"></a>常用 alias</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 模仿macOS打开访达，使用 <span class="keyword">open</span> . 在此处打开文件管理器。</span><br><span class="line">alias <span class="keyword">open</span>=<span class="string">&#x27;explorer.exe&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="常用软链接"><a href="#常用软链接" class="headerlink" title="常用软链接"></a>常用软链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /mnt/c/Users/iuxt/Desktop ~</span><br><span class="line"><span class="built_in">ln</span> -sf /mnt/c/Users/iuxt/Documents ~</span><br><span class="line"><span class="built_in">ln</span> -sf /mnt/c/Users/iuxt/Downloads ~</span><br><span class="line"><span class="built_in">ln</span> -sf /mnt/c/Users/iuxt/OneDrive ~</span><br></pre></td></tr></table></figure><h2 id="tssh"><a href="#tssh" class="headerlink" title="tssh"></a>tssh</h2><p><a href="/posts/shqeci/">trzsz 使用记录</a></p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>如果 wsl 中的服务，在 Windows 上通过 localhost 访问太慢，比如 windows 上的 navicat 连接 wsl 里 docker 跑的 wsl 时，可以尝试使用 127.0.0.1 来替代 localhost，可能会有奇效。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
            <tag> wsl2 </tag>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux终端复用器Screen和tmux</title>
      <link href="/posts/lm9yw00q/"/>
      <url>/posts/lm9yw00q/</url>
      
        <content type="html"><![CDATA[<p>参考阮一峰的博客<a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">https://www.ruanyifeng.com/blog/2019/10/tmux.html</a></p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>想象一下, 我在自己电脑远程 SSH 连接服务器, 正在命令行执行 mysqldump, 突然 (断网\电脑蓝屏) 了, 那么终端就断了, mysqldump 也就断了, 就需要重新来过. 终端复用器就是创建一个虚拟的终端, 可以挂在后台, 随时想进就进, 还有其他好用的功能, 比如将终端日志保存到文件内.</p><p>常用的工具有 tmux 和 screen, tmux 类似于 screen, 但是功能更强大, screen 的记录日志功能很好用, 两者各有千秋. 另外终端复用器对 <code>rz/sz</code> 这种工具的兼容性都不好, 建议不要用来进行 <code>rz/sz</code> 传文件</p><h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos</span></span><br><span class="line">yum install -y tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">apt-get install -y tmux</span><br></pre></td></tr></table></figure><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><p>输入 <code>tmux</code> 即可启动, 在终端下面有一条状态栏, 显示当前的终端编号.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309081022830.png"></p><p>退出输入: <code>exit</code> 或者按下 <code>Ctrl + d</code> 或者直接关闭窗口<br>查看后台运行的会话: <code>tmux ls</code><br>进入会话: <code>tmux a -t 0</code></p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><table><thead><tr><th>操作</th><th>命令或快捷键</th></tr></thead><tbody><tr><td>打开 tmux</td><td>tmux</td></tr><tr><td>新建 tmux 并起名字</td><td>tmux new -s 会话的名字</td></tr><tr><td>分离会话 (放在后台)</td><td>Ctrl+b d</td></tr><tr><td>查看所有会话列表</td><td>tmux ls</td></tr><tr><td>进入会话 (编号或名字都可以)</td><td>tmux attach -t 0&#x2F;会话名字</td></tr><tr><td>杀死会话</td><td>tmux kill-session -t 0&#x2F;会话名字</td></tr><tr><td>切换会话</td><td>tmux switch -t 0&#x2F;会话名字</td></tr><tr><td>重命名会话</td><td>tmux rename-session -t 0 会话新名字</td></tr></tbody></table><h2 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">apt-get install screen</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">yum install screen</span><br></pre></td></tr></table></figure><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><table><thead><tr><th>操作</th><th>命令或快捷键</th></tr></thead><tbody><tr><td>打开 screen</td><td>screen</td></tr><tr><td>放在后台</td><td>Ctrl + a d</td></tr><tr><td>查看后台的会话</td><td>screen -ls</td></tr><tr><td>进入后台会话</td><td>screen -r pid 号 (screen -ls 可以查看到)</td></tr><tr><td>创建一个收集日志的会话</td><td>screen -L (日志在当前目录, screen 开头的 log 文件)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cli </tag>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins pipeline中正确使用git</title>
      <link href="/posts/lm8t2usn/"/>
      <url>/posts/lm8t2usn/</url>
      
        <content type="html"><![CDATA[<p>看到很多 jenkins 使用都是直接执行 git clone 命令, 这么做有以下几个缺点.</p><ol><li>需要耗费时间去处理 git 分支, 代码冲突等工作, 还需要判断是使用 git clone 还是 git pull</li><li>账号密码 (或者 ssh 秘钥) 需要存储在构建机器上, 如果更换了构建节点, 那么需要重新配置, 即对构建环境有依赖, 构建环境是个黑盒子, 因为你不知道上个维护者在这台构建机器上做了什么.</li><li>不受 jenkins 管理, 比如删除流水线, 拉取的代码任然存在机器上</li><li>做个分支选项框是个痛苦的事情<br>将代码交给 jenkins 管理则省去了这些操作.</li></ol><h2 id="使用凭据管理账号密码"><a href="#使用凭据管理账号密码" class="headerlink" title="使用凭据管理账号密码"></a>使用凭据管理账号密码</h2><p>在 系统管理 – 凭据 – 系统 – 全局凭据 里面增加一个新的凭据</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309071447808.png" alt="凭据"><br>成功后记录一下 ID</p><h2 id="编写流水线"><a href="#编写流水线" class="headerlink" title="编写流水线"></a>编写流水线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    parameters &#123;</span><br><span class="line">      gitParameter branch: &#x27;&#x27;, branchFilter: &#x27;.*&#x27;, defaultValue: &#x27;&#x27;, name: &#x27;BRANCH&#x27;, quickFilterEnabled: true, selectedValue: &#x27;NONE&#x27;, sortMode: &#x27;NONE&#x27;, tagFilter: &#x27;*&#x27;, type: &#x27;GitParameterDefinition&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#x27;Hello&#x27;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                git branch: &quot;$&#123;BRANCH&#125;&quot;.split(&#x27;/&#x27;)[-1], credentialsId: &#x27;test&#x27;, url: &#x27;https://gitlab.i.com/devops/auppus_wfe.git&#x27;</span><br><span class="line">                sh &#x27;ls -al&#x27;</span><br><span class="line">                sh &#x27;git log&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>branch 不支持 origin&#x2F;master 这种格式, 所以需要用 split 处理一下</p><h2 id="如何生成流水线"><a href="#如何生成流水线" class="headerlink" title="如何生成流水线"></a>如何生成流水线</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309071527237.png"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins升级插件引发的血案</title>
      <link href="/posts/lm784jlv/"/>
      <url>/posts/lm784jlv/</url>
      
        <content type="html"><![CDATA[<p>我们公司用的 jenkins 是老版本, 不知道什么时候谁点了升级插件, 但是没有重启 jenkins, 一直用者好好的, 突然有一天有个倒霉蛋重启了 jenkins,然后就报错了.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309061002748.png"></p><p>搜索了一圈的解决方案:<br>关闭认证, 配置文件在 <code>.jenkins/config.xml</code> 目录中, 需要先切换到 jenkins 用户, 先备份 <code>cp .jenkins/config.xml&#123;,.bak&#125;</code> 然后再修改</p><p>将 authorizationStrategy 这一块改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">authorizationStrategy</span> <span class="attr">class</span>=<span class="string">&quot;hudson.security.FullControlOnceLoggedInAuthorizationStrategy&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">denyAnonymousReadAccess</span>&gt;</span>false<span class="tag">&lt;/<span class="name">denyAnonymousReadAccess</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">authorizationStrategy</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将 securityRealm 块 删除, 保存后重启 jenkins, 日志里会打印账号密码, 用这个登陆.</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309061119937.png"></p><p>登陆后, 可以看到各种不兼容的插件了.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309061126649.png"></p><p>现在升级 jenkins 版本, 升级后可以看到插件都兼容了, 然后将有更新的插件都更新一下.</p><p>如果无法启动, 注意查看 jenkins 启动日志, 我公司升级后提示 java 版本不兼容, 需要将 java 8 升级到 java 11 才可启动新版 jenkins, 为了不影响现有流水线构建, 所以不修改环境变量了, 指定 java 版本来运行新版 jenkins</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jdk-11.0.19/bin/java -jar jenkins.war</span><br></pre></td></tr></table></figure><p>最后将 config.xml.bak 复制为 config.xml, 替换旧的 config.xml</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> 升级版本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次生产环境数据库迁移</title>
      <link href="/posts/73848ed5/"/>
      <url>/posts/73848ed5/</url>
      
        <content type="html"><![CDATA[<h2 id="迁移要求"><a href="#迁移要求" class="headerlink" title="迁移要求"></a>迁移要求</h2><p>不要清理目标数据</p><p>迁移是老环境迁移到新环境， 新环境之前有过使用记录了， 要求不删除现有的数据， 将老数据导入。有以下几个问题：</p><ol><li>导出的 sql 里面不能带 drop table 语句，所以在 mysqldump 的时候需要加上 <code>--skip-add-drop-table</code> 参数</li><li>主键或唯一键重复的问题，需要增加参数 <code>--skip-extended-insert</code></li><li>sql 执行失败了需要继续， 因为现有数据可能和老环境冲突， 所以插入失败不能影响其他数据的插入， 这里选择在 mysql 控制台执行 source 命令。</li></ol><h2 id="备份源数据库"><a href="#备份源数据库" class="headerlink" title="备份源数据库"></a>备份源数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h192.168.21.26 -P3306 -uroot -p&lt;password&gt; --skip-add-drop-table --skip-extended-insert --databases test_database &gt; test.sql</span><br></pre></td></tr></table></figure><blockquote><p>–skip-add-drop-table 这个参数为了不在 sql 文件里面增加 drop 语句，不加的话，执行这个 sql 会先将表删掉，再重新创建。<br>–skip-extended-insert 导出的 sql 一个 insert 对应一条数据。</p></blockquote><h2 id="如何将备份的-sql-发送到目标机器"><a href="#如何将备份的-sql-发送到目标机器" class="headerlink" title="如何将备份的 sql 发送到目标机器"></a>如何将备份的 sql 发送到目标机器</h2><p>数据量较大，又受限于网络情况， 所以直接在服务器上导出后，使用 tar 压缩， 然后通过 nginx 将文件暴露出来，在目标机器上使用 wget 下载。</p><h2 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h2><h3 id="迁移后数据量相差过大"><a href="#迁移后数据量相差过大" class="headerlink" title="迁移后数据量相差过大"></a>迁移后数据量相差过大</h3><p>因为目标数据库不需要清空，所以增加了 <code>--skip-add-drop-table</code> 参数，导出的 sql 是不带 drop 语句的， 默认情况下 mysqldump 导出的 sql 为下图右边这种，即会把很多条数据整合成一条 insert 语句，那么如果里面有一条数据存在主键冲突，整条 insert 就会失败，这就是造成数据量相差过大的原因。所以这种情况需要增加 <code>--skip-extended-insert</code> 参数。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402071656925.png" alt="image.png"></p><h3 id="库名不一致如何修改"><a href="#库名不一致如何修改" class="headerlink" title="库名不一致如何修改"></a>库名不一致如何修改</h3><p>两个环境库名不一致， 需要修改 sql 里面的库名， sql 文件又太大， 选择使用 sed 命令来修改 (不要小瞧这一步，我们一个 24G 的 sql 文件修改耗时 15 分钟左右)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s/USE `idk_base`;/USE `db_idk_base`;/g;&#x27;</span> -i test.sql</span><br></pre></td></tr></table></figure><h3 id="下载上传太慢的问题"><a href="#下载上传太慢的问题" class="headerlink" title="下载上传太慢的问题"></a>下载上传太慢的问题</h3><p>选择服务器使用公网直接传输，不再通过自己的电脑中转。</p><h3 id="跳板机超时被关闭的问题"><a href="#跳板机超时被关闭的问题" class="headerlink" title="跳板机超时被关闭的问题"></a>跳板机超时被关闭的问题</h3><p>在 mysql 命令行界面执行 source 命令， 如果窗口被关闭，那么执行就停止了， 使用 nohup 又无法做到交互式执行， 于是选择 screen</p><p>使用 screen -L 来创建一个新的虚拟窗口（-L 参数可以将控制台的所有输出记录到当前目录下的一个文件内）， 在里面执行 mysql 命令 source 命令后，按下 ctrl +a d 就可以放到后台执行， 执行 screen -r 恢复连接之前的 screen 界面。</p><p>screen 详细使用教程可以查看 <a href="/posts/lm9yw00q">Linux终端复用器Screen和tmux</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据迁移 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下实现快速登陆带有两步验证的ssh跳板机</title>
      <link href="/posts/ee380870/"/>
      <url>/posts/ee380870/</url>
      
        <content type="html"><![CDATA[<p>我们有个堡垒机当前的登陆流程是： ssh username@ip -p port –&gt; 输入密码 –&gt; 打开手机 –&gt; 查看两部验证码 –&gt; 输入 –&gt; 连接成功</p><h2 id="解决输入密码的问题"><a href="#解决输入密码的问题" class="headerlink" title="解决输入密码的问题"></a>解决输入密码的问题</h2><p>mac 因为安全问题使用 brew 已经无法安装 sshpass 这个包了， 我们可以使用 ssh key 来进行免密登陆并提高安全性。不同的跳板机平台设置方式不太一样，一般都是在个人信息设置里面增加 ssh 公钥。</p><p>输入密码还可以用一个叫 tssh 的开源工具来实现（兼容 openssh 且支持 lrzsz）</p><h2 id="解决输入两步验证码的问题"><a href="#解决输入两步验证码的问题" class="headerlink" title="解决输入两步验证码的问题"></a>解决输入两步验证码的问题</h2><p>两步验证码就是 TOTP，基于生成的 6 位数字， 30s 更换一次， 我们需要先拿到 TOTP 的 seed， 一般都会给一个二维码，用二维码解析工具解析， 解析出来的内容大致类似于：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otpauth://totp/Microsof<span class="variable">t:iuxt</span>@outlook.<span class="keyword">com</span>?secret=XUHHW5TKKTYGMJYM&amp;issuer=Microsoft</span><br></pre></td></tr></table></figure><p>secret&#x3D; 后面的内容就是 TOTP 的 seed</p><h3 id="使用脚本来生成两步验证码"><a href="#使用脚本来生成两步验证码" class="headerlink" title="使用脚本来生成两步验证码"></a>使用脚本来生成两步验证码</h3><p>可以使用 python 的 pyotp 包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">totp = pyotp.TOTP(sys.argv[<span class="number">1</span>])</span><br><span class="line">totp_password = totp.now()</span><br><span class="line"><span class="built_in">print</span>(totp_password)</span><br></pre></td></tr></table></figure><h3 id="写入剪切板"><a href="#写入剪切板" class="headerlink" title="写入剪切板"></a>写入剪切板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ~/code/tools/totp.py XUHHW5TKKTYGMJYM | pbcopy</span><br></pre></td></tr></table></figure><p>然后登陆的时候直接粘贴就可以了。</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>~&#x2F;.zshrc 里面的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> <span class="built_in">test</span>=<span class="string">&#x27;python3 ~/code/tools/totp.py XUHHW5TKKTYGMJYM | pbcopy &amp;&amp; ssh xxx@x.x.x.x -p 60022&#x27;</span></span><br></pre></td></tr></table></figure><p>需要连接跳板机的时候， 直接执行 test， 然后粘贴即可。 虽然没有完全自动化， 但是也不用低头打开手机查看验证码了。</p><p>iterm2 带有 action， 可以根据屏幕显示来执行命令， 理论上可以自动填充 TOTP，暂时没有时间测试。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率工具 </tag>
            
            <tag> mac </tag>
            
            <tag> python </tag>
            
            <tag> pyotp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用echo server测试ingress-nginx服务</title>
      <link href="/posts/635c073a/"/>
      <url>/posts/635c073a/</url>
      
        <content type="html"><![CDATA[<p>这个是 <a href="/posts/c86b58e3">灰度的方案</a></p><h2 id="创建正式环境的服务"><a href="#创建正式环境的服务" class="headerlink" title="创建正式环境的服务"></a>创建正式环境的服务</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">production</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">production</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/ingress-nginx/e2e-test-echo@sha256:6fc5aa2994c86575975bb20a5203651207029a0d28e3f491d8a127d08baadab4</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NODE_NAME</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_IP</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">status.podIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">production</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">echo.prod.mydomain.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="创建灰度环境的服务"><a href="#创建灰度环境的服务" class="headerlink" title="创建灰度环境的服务"></a>创建灰度环境的服务</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">canary</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">canary</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">canary</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/ingress-nginx/e2e-test-echo@sha256:6fc5aa2994c86575975bb20a5203651207029a0d28e3f491d8a127d08baadab4</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NODE_NAME</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_IP</span></span><br><span class="line">            <span class="attr">valueFrom:</span></span><br><span class="line">              <span class="attr">fieldRef:</span></span><br><span class="line">                <span class="attr">fieldPath:</span> <span class="string">status.podIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">canary</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">canary</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/canary:</span> <span class="string">\&quot;true\&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/canary-weight:</span> <span class="string">\&quot;50\&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">echo.prod.mydomain.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="对灰度进行测试"><a href="#对灰度进行测试" class="headerlink" title="对灰度进行测试"></a>对灰度进行测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用域名访问</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 10); <span class="keyword">do</span> curl -s --resolve echo.prod.mydomain.com:80:<span class="variable">$INGRESS_CONTROLLER_IP</span> echo.prod.mydomain.com  | grep <span class="string">&quot;Hostname&quot;</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 带上header访问</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 100); <span class="keyword">do</span> curl -s -H <span class="string">&quot;gray:never&quot;</span> https://test.i.com  -k | grep <span class="string">&quot;Hostname&quot;</span>; <span class="keyword">done</span> | grep -c canary</span><br></pre></td></tr></table></figure><p>输出大概类似于：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Hostname: production-5c5f65d859-phqzc</span><br><span class="line">Hostname: canary-6697778457-zkfjf</span><br><span class="line">Hostname: canary-6697778457-zkfjf</span><br><span class="line">Hostname: production-5c5f65d859-phqzc</span><br><span class="line">Hostname: canary-6697778457-zkfjf</span><br><span class="line">Hostname: production-5c5f65d859-phqzc</span><br><span class="line">Hostname: production-5c5f65d859-phqzc</span><br><span class="line">Hostname: production-5c5f65d859-phqzc</span><br><span class="line">Hostname: canary-6697778457-zkfjf</span><br><span class="line">Hostname: production-5c5f65d859-phqzc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> echo-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus标签处理</title>
      <link href="/posts/prometheus_tag/"/>
      <url>/posts/prometheus_tag/</url>
      
        <content type="html"><![CDATA[<h2 id="元标签"><a href="#元标签" class="headerlink" title="元标签"></a>元标签</h2><p>在被监控端纳入普罗米修斯里面定义了一些元数据标签<br>在 Prometheus 所有的 Target 实例中，都包含一些默认的 Metadata 标签信息。可以通过 Prometheus UI 的 Status 里面的 Service Discovery 查看</p><table><thead><tr><th>Metadata 标签</th><th>说明</th></tr></thead><tbody><tr><td><strong>address</strong></td><td>当前 Target 实例的访问地址 host:port</td></tr><tr><td><strong>scheme</strong></td><td>采集目标服务访问地址的 HTTP Scheme，HTTP 或者 HTTPS</td></tr><tr><td><strong>metrics_path</strong></td><td>采集目标服务访问地址的访问路径</td></tr></tbody></table><p>上面这些标签将会告诉 Prometheus 如何从该 Target 实例中获取监控数据。除了这些默认的标签以外，我们还可以为 Target 添加自定义的标签。</p><p>元标签是不会写到数据库当中的，使用 promql 是查询不到这些标签的，如果需要源标签的数据（比如 k8s 部署的 Prometheus 使用自动发现获取 pod 监控），这个时候就需要把一些元标签重新打标签来使用。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202307311829414.png"></p><p>比如上图，监控 k8s 的 pod 状态， 因为 pod 是动态的，所以需要 pod 名字和 pod 的 namespace 信息，就可以从元标签中取值。</p><h2 id="自定义标签"><a href="#自定义标签" class="headerlink" title="自定义标签"></a>自定义标签</h2><p>可以针对特定的标签去查询，比如根据厂商、项目等来区分。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Beijing Linux Server&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.179.99:9100&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">address:</span> <span class="string">beijing</span></span><br><span class="line">      <span class="attr">project:</span> <span class="string">mysql</span></span><br><span class="line"> </span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Shanghai Linux Server&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.179.99:9100&#x27;</span>]</span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">address:</span> <span class="string">shanghai</span></span><br><span class="line">      <span class="attr">project:</span> <span class="string">www</span></span><br></pre></td></tr></table></figure><h2 id="重新标记标签"><a href="#重新标记标签" class="headerlink" title="重新标记标签"></a>重新标记标签</h2><p>action 重新标记标签动作, 可以取的值有：</p><table><thead><tr><th>动作</th><th>作用</th></tr></thead><tbody><tr><td>replace</td><td>默认，通过 regex 匹配 source_label 的值，使用 replacement 来引用表达式匹配的分组，分组使用 $1,$2…引用（正则匹配，提取字段创建新标签）</td></tr><tr><td>keep</td><td>删除 regex 与连接不匹配的目标 source_labels ， keep drop 就是让普罗米修斯采集和不采集哪些目标</td></tr><tr><td>drop</td><td>删除 regex 与连接匹配的目标 source_labels</td></tr><tr><td>labeldrop</td><td>删除 regex 匹配的标签</td></tr><tr><td>labelkeep</td><td>删除 regex 不匹配的标签</td></tr><tr><td>labelmap</td><td>匹配 regex 所有标签名称，并将捕获的内容分组，用第一个分组内容作为新的标签名（使用正则提取出多个字段，使用匹配到的作为新标签名，但是标签的内容不会改变，相对于对原有标签换了个名字）</td></tr></tbody></table><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><h3 id="动态生成添加标签（对已有的标签重新标记）"><a href="#动态生成添加标签（对已有的标签重新标记）" class="headerlink" title="动态生成添加标签（对已有的标签重新标记）"></a>动态生成添加标签（对已有的标签重新标记）</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Linux Server&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.179.99:9100&#x27;</span>]</span><br><span class="line">  <span class="attr">metric_relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">    <span class="attr">source_labels:</span> [<span class="string">&quot;instance&quot;</span>]</span><br><span class="line">    <span class="attr">regex:</span> <span class="string">(.*):([0-9]+)</span>  <span class="comment"># 正则匹配标签值，( )分组</span></span><br><span class="line">    <span class="attr">replacement:</span> <span class="string">$1</span>       <span class="comment"># 引用分组匹配的内容</span></span><br><span class="line">    <span class="attr">target_label:</span> <span class="string">&quot;ip&quot;</span></span><br></pre></td></tr></table></figure><p>可以看到该标签已经进入数据库里面了，这样就根据源标签通过正则匹配动态生成了新的标签</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202307311816271.png"></p><h3 id="选择采集的目标"><a href="#选择采集的目标" class="headerlink" title="选择采集的目标"></a>选择采集的目标</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Linux Server&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.179.99:9100&#x27;</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">drop</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">&quot;192.168.179.99:9100&quot;</span>   <span class="comment"># 正则匹配标签值</span></span><br><span class="line">    <span class="attr">source_labels:</span> [<span class="string">&quot;_address_&quot;</span>]</span><br></pre></td></tr></table></figure><p>在 target 里面就没有了，在普罗米修斯里面就看不到该台机器，同时 exporter 也不会被停止.</p><h3 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h3><p>有些标签不希望被存储上，那么可以使用 labeldrop, 删除 regex 匹配的标签去完成不需要入库 将里面的标签删除掉，在入库之前删除</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;Linux Server&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.179.99:9100&#x27;</span>]</span><br><span class="line">  <span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labeldrop</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">&quot;job&quot;</span>   <span class="comment">#正则匹配标签名称</span></span><br></pre></td></tr></table></figure><h3 id="keep"><a href="#keep" class="headerlink" title="keep"></a>keep</h3><p>Keep 只有匹配的才会去采集数据，不匹配的就不采集。下面意思就是 pod 当中有些注解中声明了 prometheus_io_scrape 这个字段，那么就会把你纳入监控，如果没有声明就不会纳入监控。也就是 k8s 当中部署了这么多 pod，谁要监控，谁不要被监控，在部署 service 可以指定是否需要采集，如果需要采集需要在注解当中声明 prometheus_io_scrape: true</p><p>在 service 里面声明配置注解，那么就会采集注解里面含有这个值的</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">prometheus.io/scrape:</span> <span class="string">&#x27;true&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 带注解  prometheus.io/scrape: true  的才会被采集，不然不采集，不入库</span><br><span class="line">- source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class="line">  action: keep</span><br><span class="line">  regex: true</span><br></pre></td></tr></table></figure><h3 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h3><p>处理监控 pod 连接的 ip 地址，api 接口，还有协议都需要重新标记默认的字段</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重命名采集目标协议</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">  <span class="attr">regex:</span> <span class="string">(https?)</span></span><br><span class="line">  <span class="attr">source_labels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__meta_kubernetes_service_annotation_prometheus_io_scheme</span></span><br><span class="line">  <span class="attr">target_label:</span> <span class="string">__scheme__</span></span><br><span class="line"><span class="comment"># 重命名采集目标指标URL路径</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">  <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">  <span class="attr">source_labels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__meta_kubernetes_service_annotation_prometheus_io_path</span></span><br><span class="line">  <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line"><span class="comment"># 重命名采集目标地址</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">  <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">  <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">  <span class="attr">source_labels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__address__</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__meta_kubernetes_service_annotation_prometheus_io_port</span></span><br><span class="line">  <span class="attr">target_label:</span> <span class="string">__address__</span></span><br></pre></td></tr></table></figure><p>这里就可以使用新的标签 kubernetes_namespace 在 promql 里面基于命名空间这个标签去查询了，因为 __meta_kubernetes_namespace 这个标签是不会被存储的</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成命名空间标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">  <span class="attr">source_labels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__meta_kubernetes_namespace</span></span><br><span class="line">  <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改NodeIP:10250为APIServerIP:6443</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">  <span class="attr">regex:</span> <span class="string">(.*)</span></span><br><span class="line">  <span class="attr">source_labels:</span> [<span class="string">&quot;__address__&quot;</span>]  <span class="string">源标签配匹为address</span></span><br><span class="line">  <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">  <span class="attr">replacement:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.61</span><span class="string">:6443</span></span><br></pre></td></tr></table></figure><h3 id="labelmap"><a href="#labelmap" class="headerlink" title="labelmap"></a>labelmap</h3><p>做上面这些事情是有两个阶段的，一个是采集之前，一个是采集之后，如果在采集之前重新定义标签没生效，那么可以使用采集之后的标签（因为使用的是 k8s 的服务发现，不管用的是哪个服务发现，默认带的都是源标签 __meta_kubernetes_node_label 比如 consul 那么就是以 consul 开头的，这些不同服务发现的标签就是为了新标签的生成，就是为了更加好的标识监控指标，源标签是不会入库的）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">relabel_configs:</span></span><br><span class="line">  <span class="comment"># 将标签(.*)作为新标签名，原有值不变（新的标签名字会被入库查询）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">    <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.*)</span> </span><br></pre></td></tr></table></figure><p>(.<em>) 以其开头所有值匹配到，用这个匹配的值作为新的标签名字，新的标签名字就可以入库，就会被查询，因为元标签以下划线开头的是不会入库的，后面是用不了的&#x2F;这样做的目的就是将后面 (.</em>) 匹配的值作为一个新标签，并且将原有值赋予新标签，后面可以基于这个新标签查询数据了</p><p>原文链接：<a href="https://blog.csdn.net/qq_34556414/article/details/113503945">https://blog.csdn.net/qq_34556414/article/details/113503945</a></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> 监控 </tag>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows下以服务方式运行MySQL</title>
      <link href="/posts/c1f1096a/"/>
      <url>/posts/c1f1096a/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本文安装的是 zip 包, 安装方式更灵活</p><p>下载地址: <a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202307242242296.png" alt="下载页面"></p><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>在 mysql 根目录下创建 <code>my.ini</code> 文件,输入以下内容 (根据自己需求调整):</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录, 也可以用相对路径,默认为当前目录下的data目录</span></span><br><span class="line"><span class="attr">datadir</span> = C:/Users/iuxt/<span class="literal">On</span>eDrive/<span class="number">1</span>/mysqld/data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span> = <span class="number">200</span></span><br><span class="line"><span class="comment"># 设置服务端使用的字符集</span></span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span> = INNODB</span><br><span class="line"><span class="comment"># 设置redolog日志文件大小</span></span><br><span class="line"><span class="attr">innodb_log_file_size</span> = <span class="number">256</span>M</span><br><span class="line"><span class="comment"># 关闭binlog</span></span><br><span class="line">disable-log-bin</span><br><span class="line"><span class="comment"># 表名不区分大小写</span></span><br><span class="line"><span class="attr">lower_case_table_names</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><p>没有 data 目录的话, 需要先初始化才能继续其他操作.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bin\mysqld.exe --initialize</span><br></pre></td></tr></table></figure><p>然后在 data 目录下, 有个 <code>&lt;计算机名&gt;.err</code> 文件, 这个文件里面就包含了临时密码.</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bin\mysql.exe -h127.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> -uroot -p</span><br></pre></td></tr></table></figure><p>输入刚才看到的临时密码, 登录成功后执行以下命令修改默认 root 密码, 创建远程 root 用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><h2 id="直接启动-不推荐"><a href="#直接启动-不推荐" class="headerlink" title="直接启动 (不推荐)"></a>直接启动 (不推荐)</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bin\mysqld.exe</span><br></pre></td></tr></table></figure><h2 id="通过服务启动"><a href="#通过服务启动" class="headerlink" title="通过服务启动"></a>通过服务启动</h2><p>通过服务起的的话, <code>my.ini</code> 配置文件里面就不能写相对路径了.</p><h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld.exe install mysqld</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysqld</span><br></pre></td></tr></table></figure><h3 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop mysqld</span><br></pre></td></tr></table></figure><h3 id="删除服务"><a href="#删除服务" class="headerlink" title="删除服务"></a>删除服务</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete mysqld</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 服务 </tag>
            
            <tag> mysqld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes的3中探针readinessProbe、livenessProbe和startupProbe</title>
      <link href="/posts/af97998/"/>
      <url>/posts/af97998/</url>
      
        <content type="html"><![CDATA[<h2 id="探针"><a href="#探针" class="headerlink" title="探针"></a>探针</h2><p>K8S 提供了 3 种探针</p><p>startupProbe 启动检查（1.16 版本新增）<br>livenessProbe 存活检查<br>readinessProbe 就绪检查</p><h3 id="startupProbe"><a href="#startupProbe" class="headerlink" title="startupProbe"></a>startupProbe</h3><p>kubernetes 1.16 版本新增功能，用于判断容器内应用程序是否已经启动，如果配置了 startuprobe，就会先禁用其他的探测，直到它成功为止，成功后将不再进行探测。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">startupProbe:</span>                     <span class="comment"># 健康检查方式：[readinessProbe,livenessProbe,StartupProbe]</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span>             <span class="comment"># 检测失败3次表示未就绪</span></span><br><span class="line">  <span class="attr">httpGet:</span>                        <span class="comment"># 请求方式</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/health</span>                 <span class="comment"># 请求路径</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span>                    <span class="comment"># 请求端口</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">HTTP</span>                  <span class="comment"># 请求协议</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">20</span>         <span class="comment"># 容器启动后要等待多少秒后存活和就绪探测器才被初始化，默认是 0 秒，最小值是 0。</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span>               <span class="comment"># 执行探测的时间间隔（单位是秒）。默认是 10 秒。最小值是 1。 </span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span>             <span class="comment"># 探测器在失败后，被视为成功的最小连续成功数。默认值是 1 存活和启动探测的这个值必须是1 最小值是 1</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">2</span>             <span class="comment"># 当探测失败时，Kubernetes 的重试次数。 存活探测情况下的放弃就意味着重新启动容器。 就绪探测情况下的放弃 Pod 会被打上未就绪的标签。默认值是 3。最小值是 1。</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">1</span>               <span class="comment"># 探测的超时后等待多少秒。默认值是 1 秒。最小值是 1。</span></span><br></pre></td></tr></table></figure><h3 id="readinessProbe"><a href="#readinessProbe" class="headerlink" title="readinessProbe"></a>readinessProbe</h3><p>一般用于探测容器内的程序是否健康，它的返回值如果为 success，那么就代表这个容器已经完成启动，并且程序已经是可以接受流量的状态. 这个时候就会被加到 service 的后端列表中，即可以对外提供服务。</p><h3 id="livenessProbe"><a href="#livenessProbe" class="headerlink" title="livenessProbe"></a>livenessProbe</h3><p>用于探测容器是否运行，如果探测失败，kubelet 会根据配置的重启策略进行相应的处理，如果没有配置该探针，默认就是 success</p><h2 id="检查方式"><a href="#检查方式" class="headerlink" title="检查方式"></a>检查方式</h2><h3 id="httpget"><a href="#httpget" class="headerlink" title="httpget"></a>httpget</h3><p>kubelet 会向容器内运行的服务（服务在监听 8080 端口）发送一个 HTTP GET 请求来执行探测。 如果服务器上 &#x2F;healthz 路径下的处理程序返回成功代码，则 kubelet 认为容器是健康存活的。 如果处理程序返回失败代码，则 kubelet 会杀死这个容器并将其重启。</p><p>返回大于或等于 200 并且小于 400 的任何代码都标示成功，其它返回代码都标示失败。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livenessProbe:</span></span><br><span class="line">  <span class="attr">httpGet:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">httpHeaders:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Custom-Header</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">Awesome</span></span><br></pre></td></tr></table></figure><h3 id="tcp-端口"><a href="#tcp-端口" class="headerlink" title="tcp 端口"></a>tcp 端口</h3><p>端口通了则成功，不通则失败</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">startupProbe:</span></span><br><span class="line">  <span class="attr">tcpSocket:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><p>如果命令执行成功并且返回值为 0，kubelet 就会认为这个容器是健康存活的。 如果这个命令返回非 0 值，kubelet 会杀死这个容器并重新启动它。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livenessProbe:</span></span><br><span class="line">  <span class="attr">exec:</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/tmp/healthy</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">2</span>          <span class="comment"># 当探测失败时，Kubernetes 的重试次数。 存活探测情况下的放弃就意味着重新启动容器。 就绪探测情况下的放弃 Pod 会被打上未就绪的标签。默认值是 3。最小值是 1。</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="一个线上的配置"><a href="#一个线上的配置" class="headerlink" title="一个线上的配置"></a>一个线上的配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livenessProbe:</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">httpGet:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/actuator/info</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">readinessProbe:</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">httpGet:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/actuator/info</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">startupProbe:</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">tcpSocket:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line">  <span class="attr">limits:</span></span><br><span class="line">    <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">memory:</span> <span class="string">2560Mi</span></span><br><span class="line">  <span class="attr">requests:</span></span><br><span class="line">    <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">memory:</span> <span class="string">2560Mi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> 生命周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL慢查询日志</title>
      <link href="/posts/d7f12bf0/"/>
      <url>/posts/d7f12bf0/</url>
      
        <content type="html"><![CDATA[<p>慢 SQL 一般都是指慢查询</p><p>开启慢查询会带来一定的性能影响。<br>参考: <a href="http://c.biancheng.net/view/7782.html">http://c.biancheng.net/view/7782.html</a></p><h2 id="查询慢查询日志功能状态"><a href="#查询慢查询日志功能状态" class="headerlink" title="查询慢查询日志功能状态"></a>查询慢查询日志功能状态</h2><p>默认情况下，慢查询日志功能是关闭的。可以通过以下命令查看是否开启慢查询日志功能。命令和执行过程如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;slow_query%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name       <span class="operator">|</span> <span class="keyword">Value</span>                                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> slow_query_log      <span class="operator">|</span> OFF                                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file <span class="operator">|</span> C:\ProgramData\MySQL\MySQL Server <span class="number">5.7</span>\Data\LAPTOP<span class="operator">-</span>UHQ6V8KP<span class="operator">-</span>slow.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;long_query_time&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name   <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> long_query_time <span class="operator">|</span> <span class="number">10.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>slow_query_log： 慢查询开启状态<br>slow_query_log_file： 慢查询日志存放的位置（一般设置为 MySQL 的数据存放目录）<br>long_query_time： 查询超过多少秒才记录</p><h2 id="启动和设置慢查询日志"><a href="#启动和设置慢查询日志" class="headerlink" title="启动和设置慢查询日志"></a>启动和设置慢查询日志</h2><p>可以通过 log-slow-queries 选项开启慢查询日志。通过 long_query_time 选项来设置时间值，时间以秒为单位。如果查询时间超过了这个时间值，这个查询语句将被记录到慢查询日志。</p><h3 id="修改配置文件方式"><a href="#修改配置文件方式" class="headerlink" title="修改配置文件方式"></a>修改配置文件方式</h3><p>将 log_slow_queries 选项和 long_query_time 选项加入到配置文件的 [mysqld] 组中。格式如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">log-slow-queries</span>=/data/mysql/slow.log</span><br><span class="line"><span class="attr">long_query_time</span>=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># log-slow-queries 参数指定慢查询日志的存储路径，如果是相对路径，慢查询日志将存储到 MySQL 数据库的数据文件夹下。如果不指定文件名，默认文件名为 hostname-slow.log，hostname 是 MySQL 服务器的主机名。</span></span><br><span class="line"><span class="comment"># long_query_time 参数是设定的时间值，该值的单位是秒。如果不设置 long_query_time 选项，默认时间为 10 秒。</span></span><br></pre></td></tr></table></figure><h3 id="执行-sql-命令方式"><a href="#执行-sql-命令方式" class="headerlink" title="执行 sql 命令方式"></a>执行 sql 命令方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> slow_query_log<span class="operator">=</span><span class="keyword">ON</span><span class="operator">/</span>OFF;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> long_query_time<span class="operator">=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="删除慢查询日志"><a href="#删除慢查询日志" class="headerlink" title="删除慢查询日志"></a>删除慢查询日志</h2><p>慢查询日志的删除方法与通用日志的删除方法是一样的。可以使用 mysqladmin 命令来删除。也可以使用手工方式来删除。mysqladmin 命令的语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -p flush-logs</span><br></pre></td></tr></table></figure><p>执行该命令后，命令行会提示输入密码。输入正确密码后，将执行删除操作。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webdav使用记录</title>
      <link href="/posts/1e91b84d/"/>
      <url>/posts/1e91b84d/</url>
      
        <content type="html"><![CDATA[<h2 id="在-windows-挂载到-z-盘"><a href="#在-windows-挂载到-z-盘" class="headerlink" title="在 windows 挂载到 z 盘"></a>在 windows 挂载到 z 盘</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:: 映射坚果云webdav, PERSISTENT:no表示不会记忆映射, 重启会丢失.</span><br><span class="line"><span class="built_in">net</span> use Z: https://dav.jianguoyun.com/dav/ /user:iuxt@qq.com &lt;密码&gt; /PERSISTENT:no</span><br></pre></td></tr></table></figure><h2 id="通过-curl-使用-webdav"><a href="#通过-curl-使用-webdav" class="headerlink" title="通过 curl 使用 webdav"></a>通过 curl 使用 webdav</h2><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地的test-new.zip文件上传到远程为test.zip</span></span><br><span class="line">curl --user x@zahui.fan:&lt;密码&gt; https://file.babudiu.com/dav/test.zip -T ./test-new.zip </span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留文件名不变</span></span><br><span class="line">curl --user x@zahui.fan:&lt;密码&gt; https://file.babudiu.com/dav/ -T ./test-new.zip </span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建根目录 xxxxxxx</span></span><br><span class="line">curl --user x@zahui.fan:&lt;密码&gt; -X MKCOL https://file.babudiu.com/dav/xxxxxxx/</span><br></pre></td></tr></table></figure><h3 id="重命名文件（移动文件）"><a href="#重命名文件（移动文件）" class="headerlink" title="重命名文件（移动文件）"></a>重命名文件（移动文件）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将远程的目录名 1 改为 2</span></span><br><span class="line">curl --user x@zahui.fan:&lt;密码&gt; -X MOVE --header <span class="string">&#x27;Destination:https://file.babudiu.com/dav/2/&#x27;</span> https://file.babudiu.com/dav/1/</span><br></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user x@zahui.fan:&lt;密码&gt; -X DELETE https://file.babudiu.com/dav/2/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> cli </tag>
            
            <tag> curl </tag>
            
            <tag> webdav </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python处理字符串</title>
      <link href="/posts/5d196648/"/>
      <url>/posts/5d196648/</url>
      
        <content type="html"><![CDATA[<h2 id="读取多行字符串"><a href="#读取多行字符串" class="headerlink" title="读取多行字符串"></a>读取多行字符串</h2><p>使用字符串的 splitlines 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&#x27;&#x27;&#x27;1 2 3</span></span><br><span class="line"><span class="string">4 5 6</span></span><br><span class="line"><span class="string">7 8 9&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data.splitlines()  --&gt;  [&#x27;1 2 3&#x27;, &#x27;4 5 6&#x27;, &#x27;7 8 9&#x27;]</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data.splitlines():</span><br><span class="line">    i = [i <span class="keyword">for</span> i <span class="keyword">in</span> line.split(<span class="string">&#x27; &#x27;</span>) <span class="keyword">if</span> i] <span class="comment"># 去除列表中的空值</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><p>使用 <code>%</code> 这种格式化方式即将被废弃, 可以使用 <code>&#123;&#125;</code> 这种占位符, 更直观</p><h3 id="使用位置替换"><a href="#使用位置替换" class="headerlink" title="使用位置替换"></a>使用位置替换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;0&#125;, &#123;1&#125;, &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;a, b, c&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;&#125;, &#123;&#125;, &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)  <span class="comment"># 3.1+ only</span></span><br><span class="line"><span class="string">&#x27;a, b, c&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;2&#125;, &#123;1&#125;, &#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;c, b, a&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;2&#125;, &#123;1&#125;, &#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(*<span class="string">&#x27;abc&#x27;</span>)      <span class="comment"># unpacking argument sequence</span></span><br><span class="line"><span class="string">&#x27;c, b, a&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;0&#125;&#123;1&#125;&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;abra&#x27;</span>, <span class="string">&#x27;cad&#x27;</span>)   <span class="comment"># arguments&#x27; indices can be repeated</span></span><br><span class="line"><span class="string">&#x27;abracadabra&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="按名称替换参数"><a href="#按名称替换参数" class="headerlink" title="按名称替换参数"></a>按名称替换参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Coordinates: &#123;latitude&#125;, &#123;longitude&#125;&#x27;</span>.<span class="built_in">format</span>(latitude=<span class="string">&#x27;37.24N&#x27;</span>, longitude=<span class="string">&#x27;-115.81W&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;Coordinates: 37.24N, -115.81W&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>coord = &#123;<span class="string">&#x27;latitude&#x27;</span>: <span class="string">&#x27;37.24N&#x27;</span>, <span class="string">&#x27;longitude&#x27;</span>: <span class="string">&#x27;-115.81W&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Coordinates: &#123;latitude&#125;, &#123;longitude&#125;&#x27;</span>.<span class="built_in">format</span>(**coord)</span><br><span class="line"><span class="string">&#x27;Coordinates: 37.24N, -115.81W&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在ubuntu22.04或LinuxMint21上安装深信服Easyconnect</title>
      <link href="/posts/6f69bd6/"/>
      <url>/posts/6f69bd6/</url>
      
        <content type="html"><![CDATA[<p>正常在 ubuntu22.04 或者 linuxmint21 上安装 Easyconnect, 可以安装, 但是无法启动.</p><p>是因为 pango 这个库版本较高导致. 需要手动将低版本的动态链接库放到 easyconnect 程序目录下.</p><h2 id="查看链接库"><a href="#查看链接库" class="headerlink" title="查看链接库"></a>查看链接库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/sangfor/EasyConnect</span><br><span class="line">ldd EasyConnect | grep pango</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202306281905022.png"></p><h2 id="下载对应的-deb-包"><a href="#下载对应的-deb-包" class="headerlink" title="下载对应的 deb 包"></a>下载对应的 deb 包</h2><p>下载地址: <a href="http://kr.archive.ubuntu.com/ubuntu/pool/main/p/pango1.0/">http://kr.archive.ubuntu.com/ubuntu/pool/main/p/pango1.0/</a></p><p>amd64 架构需要下载如下几个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libpangocairo-1.0-0_1.40.14-1_amd64.deb</span><br><span class="line">libpangoft2-1.0-0_1.40.14-1_amd64.deb</span><br><span class="line">libpango-1.0-0_1.40.14-1_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="解压-deb-包"><a href="#解压-deb-包" class="headerlink" title="解压 deb 包"></a>解压 deb 包</h2><p>这 3 个 deb 包不需要安装, 解压把相关文件放到 easyconnect 安装目录即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ar -vx libpangocairo-1.0-0_1.40.14-1_amd64.deb &amp;&amp; tar xf data.tar.xz</span><br><span class="line">ar -vx libpangoft2-1.0-0_1.40.14-1_amd64.deb &amp;&amp; tar xf data.tar.xz</span><br><span class="line">ar -vx libpango-1.0-0_1.40.14-1_amd64.deb &amp;&amp; tar xf data.tar.xz</span><br></pre></td></tr></table></figure><p>将解压后的 <code>usr/lib/x86_64-linux-gnu</code> 里面的所有文件复制到 <code>/usr/share/sangfor/EasyConnect</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> usr/lib/x86_64-linux-gnu/* /usr/share/sangfor/EasyConnect/</span><br></pre></td></tr></table></figure><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>再次检查链接库, 发现已经指向安装目录了</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202306281923022.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深信服 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> linuxmint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python列表操作</title>
      <link href="/posts/e367d008/"/>
      <url>/posts/e367d008/</url>
      
        <content type="html"><![CDATA[<h2 id="列表去除空值"><a href="#列表去除空值" class="headerlink" title="列表去除空值"></a>列表去除空值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = [ <span class="string">&quot;a&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;&quot;</span> ]</span><br><span class="line">i = [ tmp <span class="keyword">for</span> tmp <span class="keyword">in</span> i <span class="keyword">if</span> tmp ]</span><br><span class="line"><span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用操作 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes节点维护流程</title>
      <link href="/posts/52feaa76/"/>
      <url>/posts/52feaa76/</url>
      
        <content type="html"><![CDATA[<blockquote><p>节点设置为 <code>SchedulingDisabled</code> 其实就是打上污点 <code>node.kubernetes.io/unschedulable:NoSchedule</code></p></blockquote><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>kubectl cordon <node></td><td>将 node 设置为 SchedulingDisabled, 不允许新的 pod 调度上来, 旧的 pod 不受影响</td></tr><tr><td>kubectl drain <node></td><td>先驱逐 node 上的 pod, k8s 会在其他节点重新创建, 然后将节点设置为 SchedulingDisabled</td></tr><tr><td>kubectl uncordon <node></td><td>恢复调度, 删除 SchedulingDisabled 污点</td></tr></tbody></table><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h3><p>将节点上现有的 pod 驱逐, 不追求优雅</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl drain &lt;node&gt; --delete-local-data=<span class="literal">true</span> --ignore-daemonsets=<span class="literal">true</span> --force</span><br></pre></td></tr></table></figure><p>操作完毕后, 将节点恢复调度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl uncordon &lt;node&gt;</span><br></pre></td></tr></table></figure><h3 id="对集群无影响的操作"><a href="#对集群无影响的操作" class="headerlink" title="对集群无影响的操作"></a>对集群无影响的操作</h3><p>先针对节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl cordon &lt;node&gt;</span><br></pre></td></tr></table></figure><p>然后等待节点上的 pod 自然转移 (比如版本发布等)</p><p>然后将节点下线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete node &lt;node&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制部署Kuberntes</title>
      <link href="/posts/67853ccb/"/>
      <url>/posts/67853ccb/</url>
      
        <content type="html"><![CDATA[<h2 id="一些基本信息"><a href="#一些基本信息" class="headerlink" title="一些基本信息"></a>一些基本信息</h2><p>我这里以 AlmaLinux9 系统为例，类似 CentOS9 或 RHEL9 ，其他系统部分操作需要根据情况修改。</p><table><thead><tr><th>主机名称</th><th>IP 地址</th><th>说明</th><th>Kubernetes 组件</th><th>其他软件</th></tr></thead><tbody><tr><td>master1</td><td>10.0.0.11</td><td>master 节点</td><td>kube-apiserver、kube-controller-manager、kube-scheduler、etcd、kubelet、kube-proxy</td><td>haproxy、keepalived、containerd</td></tr><tr><td>master2</td><td>10.0.0.12</td><td>master 节点</td><td>kube-apiserver、kube-controller-manager、kube-scheduler、etcd、kubelet、kube-proxy</td><td>haproxy、keepalived、containerd</td></tr><tr><td>master3</td><td>10.0.0.13</td><td>master 节点</td><td>kube-apiserver、kube-controller-manager、kube-scheduler、etcd、kubelet、kube-proxy</td><td>haproxy、keepalived、containerd</td></tr><tr><td>worker1</td><td>10.0.0.21</td><td>node 节点</td><td>kubelet、kube-proxy</td><td>containerd</td></tr><tr><td>worker2</td><td>10.0.0.22</td><td>node 节点</td><td>kubelet、kube-proxy</td><td>containerd</td></tr></tbody></table><table><thead><tr><th>名称</th><th>IP 地址</th><th>说明</th></tr></thead><tbody><tr><td>SERVICE_CIDR</td><td>10.96.0.0&#x2F;12</td><td></td></tr><tr><td>CLUSTER_CIDR &#x2F; Pod CIDR</td><td>10.244.0.0&#x2F;16</td><td>这个配置需要和网络插件中的配置保持一致</td></tr><tr><td>集群 DNS kube-dns 的 Cluster IP</td><td>10.96.0.10</td><td></td></tr></tbody></table><p>本文使用到的所有包，可以在这里下载到：<a href="https://www.123pan.com/s/fjQkjv-MCUJH.html">https://www.123pan.com/s/fjQkjv-MCUJH.html</a> 提取码:4zyF</p><h2 id="服务器基础配置"><a href="#服务器基础配置" class="headerlink" title="服务器基础配置"></a>服务器基础配置</h2><p>这里的步骤在所有节点上都需要执行。</p><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br></pre></td></tr></table></figure><h3 id="关闭-SELinux"><a href="#关闭-SELinux" class="headerlink" title="关闭 SELinux"></a>关闭 SELinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="关闭交换分区"><a href="#关闭交换分区" class="headerlink" title="关闭交换分区"></a>关闭交换分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><h3 id="配置-ulimit-限制"><a href="#配置-ulimit-限制" class="headerlink" title="配置 ulimit 限制"></a>配置 ulimit 限制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -SHn 65535</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/security/limits.d/k8s-limits.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">* soft nofile 65535</span></span><br><span class="line"><span class="string">* hard nofile 65535</span></span><br><span class="line"><span class="string">* soft nproc 65535</span></span><br><span class="line"><span class="string">* hard nproc 65535</span></span><br><span class="line"><span class="string">* soft memlock unlimited</span></span><br><span class="line"><span class="string">* hard memlock unlimited</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>参数解释</p><p>soft nofile 655360<br>soft 表示软限制，nofile 表示一个进程可打开的最大文件数，默认值为 1024。这里的软限制设置为 655360，即一个进程可打开的最大文件数为 655360。</p><p>hard nofile 131072<br>hard 表示硬限制，即系统设置的最大值。nofile 表示一个进程可打开的最大文件数，默认值为 4096。这里的硬限制设置为 131072，即系统设置的最大文件数为 131072。</p><p>soft nproc 655350<br>soft 表示软限制，nproc 表示一个用户可创建的最大进程数，默认值为 30720。这里的软限制设置为 655350，即一个用户可创建的最大进程数为 655350。</p><p>hard nproc 655350<br>hard 表示硬限制，即系统设置的最大值。nproc 表示一个用户可创建的最大进程数，默认值为 4096。这里的硬限制设置为 655350，即系统设置的最大进程数为 655350。</p><p>soft memlock unlimited<br>seft 表示软限制，memlock 表示一个进程可锁定在 RAM 中的最大内存，默认值为 64 KB。这里的软限制设置为 unlimited，即一个进程可锁定的最大内存为无限制。</p><p>hard memlock unlimited<br>hard 表示硬限制，即系统设置的最大值。memlock 表示一个进程可锁定在 RAM 中的最大内存，默认值为 64 KB。这里的硬限制设置为 unlimited，即系统设置的最大内存锁定为无限制。</p></div><h3 id="内核模块配置"><a href="#内核模块配置" class="headerlink" title="内核模块配置"></a>内核模块配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">yum install ipvsadm ipset sysstat conntrack libseccomp -y</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/modules-load.d/ipvs.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">ip_vs</span><br><span class="line">ip_vs_rr</span><br><span class="line">ip_vs_wrr</span><br><span class="line">ip_vs_sh</span><br><span class="line">nf_conntrack</span><br><span class="line">ip_tables</span><br><span class="line">ip_set</span><br><span class="line">xt_set</span><br><span class="line">ipt_set</span><br><span class="line">ipt_rpfilter</span><br><span class="line">ipt_REJECT</span><br><span class="line">ipip</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载内核模块</span></span><br><span class="line">systemctl restart systemd-modules-load.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证配置结果</span></span><br><span class="line">lsmod | grep -e ip_vs -e nf_conntrack</span><br><span class="line"><span class="comment"># ip_vs_sh               16384  0</span></span><br><span class="line"><span class="comment"># ip_vs_wrr              16384  0</span></span><br><span class="line"><span class="comment"># ip_vs_rr               16384  0</span></span><br><span class="line"><span class="comment"># ip_vs                 180224  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span></span><br><span class="line"><span class="comment"># nf_conntrack          176128  1 ip_vs</span></span><br><span class="line"><span class="comment"># nf_defrag_ipv6         24576  2 nf_conntrack,ip_vs</span></span><br><span class="line"><span class="comment"># nf_defrag_ipv4         16384  1 nf_conntrack</span></span><br><span class="line"><span class="comment"># libcrc32c              16384  3 nf_conntrack,xfs,ip_vs</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>参数解释</p><p>ip_vs<br>IPVS 是 Linux 内核中的一个模块，用于实现负载均衡和高可用性。它通过在前端代理服务器上分发传入请求到后端实际服务器上，提供了高性能和可扩展的网络服务。</p><p>ip_vs_rr<br>IPVS 的一种调度算法之一，使用轮询方式分发请求到后端服务器，每个请求按顺序依次分发。</p><p>ip_vs_wrr<br>IPVS 的一种调度算法之一，使用加权轮询方式分发请求到后端服务器，每个请求按照指定的权重比例分发。</p><p>ip_vs_sh<br>IPVS 的一种调度算法之一，使用哈希方式根据源 IP 地址和目标 IP 地址来分发请求。</p><p>nf_conntrack<br>这是一个内核模块，用于跟踪和管理网络连接，包括 TCP、UDP 和 ICMP 等协议。它是实现防火墙状态跟踪的基础。</p><p>ip_tables<br>这是一个内核模块，提供了对 Linux 系统 IP 数据包过滤和网络地址转换（NAT）功能的支持。</p><p>ip_set<br>这是一个内核模块，扩展了 iptables 的功能，支持更高效的 IP 地址集合操作。</p><p>xt_set<br>这是一个内核模块，扩展了 iptables 的功能，支持更高效的数据包匹配和操作。</p><p>ipt_set<br>这是一个用户空间工具，用于配置和管理 xt_set 内核模块。</p><p>ipt_rpfilter<br>这是一个内核模块，用于实现反向路径过滤，用于防止 IP 欺骗和 DDoS 攻击。</p><p>ipt_REJECT<br>这是一个 iptables 目标，用于拒绝 IP 数据包，并向发送方发送响应，指示数据包被拒绝。</p><p>ipip<br>这是一个内核模块，用于实现 IP 封装在 IP（IP-over-IP）的隧道功能。它可以在不同网络之间创建虚拟隧道来传输 IP 数据包。</p></div><h3 id="内核参数配置"><a href="#内核参数配置" class="headerlink" title="内核参数配置"></a>内核参数配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.tcp_keepalive_intvl =15</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_max_orphans = 327680</span><br><span class="line">net.ipv4.tcp_orphan_retries = 3</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.ip_conntrack_max = 65536</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><div class="note success flat"><ol><li><p>net.ipv4.ip_forward &#x3D; 1</p><ul><li>这个参数启用了 IPv4 的 IP 转发功能，允许服务器作为网络路由器转发数据包。</li></ul></li><li><p>net.bridge.bridge-nf-call-iptables &#x3D; 1</p><ul><li>当使用网络桥接技术时，将数据包传递到 iptables 进行处理。</li></ul></li><li><p>fs.may_detach_mounts &#x3D; 1</p><ul><li>允许在挂载文件系统时，允许被其他进程使用。</li></ul></li><li><p>vm.overcommit_memory&#x3D;1</p><ul><li>该设置允许原始的内存过量分配策略，当系统的内存已经被完全使用时，系统仍然会分配额外的内存。</li></ul></li><li><p>vm.panic_on_oom&#x3D;0</p><ul><li>当系统内存不足（OOM）时，禁用系统崩溃和重启。</li></ul></li><li><p>fs.inotify.max_user_watches&#x3D;89100</p><ul><li>设置系统允许一个用户的 inotify 实例可以监控的文件数目的上限。</li></ul></li><li><p>fs.file-max&#x3D;52706963</p><ul><li>设置系统同时打开的文件数的上限。</li></ul></li><li><p>fs.nr_open&#x3D;52706963</p><ul><li>设置系统同时打开的文件描述符数的上限。</li></ul></li><li><p>net.netfilter.nf_conntrack_max&#x3D;2310720</p><ul><li>设置系统可以创建的网络连接跟踪表项的最大数量。</li></ul></li><li><p>net.ipv4.tcp_keepalive_time &#x3D; 600</p><ul><li>设置 TCP 套接字的空闲超时时间（秒），超过该时间没有活动数据时，内核会发送心跳包。</li></ul></li><li><p>net.ipv4.tcp_keepalive_probes &#x3D; 3</p><ul><li>设置未收到响应的 TCP 心跳探测次数。</li></ul></li><li><p>net.ipv4.tcp_keepalive_intvl &#x3D; 15</p><ul><li>设置 TCP 心跳探测的时间间隔（秒）。</li></ul></li><li><p>net.ipv4.tcp_max_tw_buckets &#x3D; 36000</p><ul><li>设置系统可以使用的 TIME_WAIT 套接字的最大数量。</li></ul></li><li><p>net.ipv4.tcp_tw_reuse &#x3D; 1</p><ul><li>启用 TIME_WAIT 套接字的重新利用，允许新的套接字使用旧的 TIME_WAIT 套接字。</li></ul></li><li><p>net.ipv4.tcp_max_orphans &#x3D; 327680</p><ul><li>设置系统可以同时存在的 TCP 套接字垃圾回收包裹数的最大数量。</li></ul></li><li><p>net.ipv4.tcp_orphan_retries &#x3D; 3</p><ul><li>设置系统对于孤立的 TCP 套接字的重试次数。</li></ul></li><li><p>net.ipv4.tcp_syncookies &#x3D; 1</p><ul><li>启用 TCP SYN cookies 保护，用于防止 SYN 洪泛攻击。</li></ul></li><li><p>net.ipv4.tcp_max_syn_backlog &#x3D; 16384</p><ul><li>设置新的 TCP 连接的半连接数（半连接队列）的最大长度。</li></ul></li><li><p>net.ipv4.ip_conntrack_max &#x3D; 65536</p><ul><li>设置系统可以创建的网络连接跟踪表项的最大数量。</li></ul></li><li><p>net.ipv4.tcp_timestamps &#x3D; 0</p><ul><li>关闭 TCP 时间戳功能，用于提供更好的安全性。</li></ul></li><li><p>net.core.somaxconn &#x3D; 16384</p><ul><li>设置系统核心层的连接队列的最大值。</li></ul></li></ol></div><h3 id="配置-hosts"><a href="#配置-hosts" class="headerlink" title="配置 hosts"></a>配置 hosts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/hosts &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"></span><br><span class="line">10.0.0.11 master1</span><br><span class="line">10.0.0.12 master2</span><br><span class="line">10.0.0.13 master3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="容器运行时"><a href="#容器运行时" class="headerlink" title="容器运行时"></a>容器运行时</h2><p>容器运行时常用的有 <code>Docker</code> 和 <code>containerd</code>，这里安装 <code>containerd</code></p><p>CNI 插件地址： <a href="https://github.com/containernetworking/plugins/">https://github.com/containernetworking/plugins/</a><br>Containerd 地址： <a href="https://github.com/containerd/containerd/releases/">https://github.com/containerd/containerd/releases/</a><br>runc 地址： <a href="https://github.com/opencontainers/runc/releases">https://github.com/opencontainers/runc/releases</a></p><p>容器运行时所有节点都要安装</p><h3 id="配置-Containerd-所需的内核模块"><a href="#配置-Containerd-所需的内核模块" class="headerlink" title="配置 Containerd 所需的内核模块"></a>配置 Containerd 所需的内核模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/modules-load.d/containerd.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl restart systemd-modules-load.service</span><br></pre></td></tr></table></figure><div class="note success flat"><p> 参数解释：</p><ol><li>overlay：overlay 是容器 d 默认使用的存储驱动，它提供了一种轻量级的、可堆叠的、逐层增量的文件系统。它通过在现有文件系统上叠加文件系统层来创建容器的文件系统视图。每个容器可以有自己的一组文件系统层，这些层可以共享基础镜像中的文件，并在容器内部进行修改。使用 overlay 可以有效地使用磁盘空间，并使容器更加轻量级。</li><li>br_netfilter：br_netfilter 是 Linux 内核提供的一个网络过滤器模块，用于在容器网络中进行网络过滤和 NAT 转发。当容器和主机之间的网络通信需要进行 DNAT 或者 SNAT 时，br_netfilter 模块可以将 IP 地址进行转换。它还可以提供基于 iptables 规则的网络过滤功能，用于限制容器之间或容器与外部网络之间的通信。</li></ol></div><h3 id="配置-Containerd-所需的内核参数"><a href="#配置-Containerd-所需的内核参数" class="headerlink" title="配置 Containerd 所需的内核参数"></a>配置 Containerd 所需的内核参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/sysctl.d/99-kubernetes-cri.conf &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables  = 1</span><br><span class="line">net.ipv4.ip_forward                 = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><div class="note success flat"><p>参数解释：</p><ul><li>net.bridge.bridge-nf-call-iptables：这个参数控制网络桥接设备是否调用 iptables 规则处理网络数据包。当该参数设置为 1 时，网络数据包将被传递到 iptables 进行处理；当该参数设置为 0 时，网络数据包将绕过 iptables 直接传递。默认情况下，这个参数的值是 1，即启用 iptables 规则处理网络数据包。</li><li>net.ipv4.ip_forward：这个参数用于控制是否启用 IP 转发功能。IP 转发使得操作系统可以将接收到的数据包从一个网络接口转发到另一个网络接口。当该参数设置为 1 时，启用 IP 转发功能；当该参数设置为 0 时，禁用 IP 转发功能。在网络环境中，通常需要启用 IP 转发功能来实现不同网络之间的通信。默认情况下，这个参数的值是 0，即禁用 IP 转发功能。</li><li>net.bridge.bridge-nf-call-ip6tables：这个参数与 net.bridge.bridge-nf-call-iptables 类似，但是它用于 IPv6 数据包的处理。当该参数设置为 1 时，IPv6 数据包将被传递到 ip6tables 进行处理；当该参数设置为 0 时，IPv6 数据包将绕过 ip6tables 直接传递。默认情况下，这个参数的值是 1，即启用 ip6tables 规则处理 IPv6 数据包。</li></ul></div><h3 id="安装-Containerd"><a href="#安装-Containerd" class="headerlink" title="安装 Containerd"></a>安装 Containerd</h3><p><code>cri-containerd-cni-*-linux-amd64.tar.gz</code> 里面包含了 cni 插件和 runc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/containerd/containerd/releases/</span></span><br><span class="line"><span class="comment"># https://github.com/containerd/containerd/releases/download/v1.7.13/cri-containerd-cni-1.7.13-linux-amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line">tar -xzf cri-containerd-cni-*-linux-amd64.tar.gz -C /</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/cni/net.d/10-containerd-net.conflist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建服务启动文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/containerd.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=containerd container runtime</span><br><span class="line">Documentation=https://containerd.io</span><br><span class="line">After=network.target local-fs.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStartPre=-/sbin/modprobe overlay</span><br><span class="line">ExecStart=/usr/local/bin/containerd</span><br><span class="line">Type=notify</span><br><span class="line">Delegate=<span class="built_in">yes</span></span><br><span class="line">KillMode=process</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">TasksMax=infinity</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note success flat"><p>参数解释：</p><p>这是一个用于启动 containerd 容器运行时的 systemd unit 文件。下面是对该文件不同部分的详细解释：</p><p>[Unit]<br>Description&#x3D;containerd container runtime<br>描述该 unit 的作用是作为 containerd 容器运行时。</p><p>Documentation&#x3D;<a href="https://containerd.io/">https://containerd.io</a><br>指向容器运行时的文档的 URL。</p><p>After&#x3D;network.target local-fs.target<br>定义了在哪些依赖项之后该 unit 应该被启动。在网络和本地文件系统加载完成后启动，确保了容器运行时在这些依赖项可用时才会启动。</p><p>[Service]<br>ExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay<br>在启动 containerd 之前执行的命令。这里的命令是尝试加载内核的 overlay 模块，如果失败则忽略错误继续执行下面的命令。</p><p>ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;containerd<br>实际执行的命令，用于启动 containerd 容器运行时。</p><p>Type&#x3D;notify<br>指定服务的通知类型。这里使用 notify 类型，表示当服务就绪时会通过通知的方式告知 systemd。</p><p>Delegate&#x3D;yes<br>允许 systemd 对此服务进行重启和停止操作。</p><p>KillMode&#x3D;process<br>在终止容器运行时时使用的 kill 模式。这里使用 process 模式，表示通过终止进程来停止容器运行时。</p><p>Restart&#x3D;always<br>定义了当容器运行时终止后的重启策略。这里设置为 always，表示无论何时终止容器运行时，都会自动重新启动。</p><p>RestartSec&#x3D;5<br>在容器运行时终止后重新启动之前等待的秒数。</p><p>LimitNPROC&#x3D;infinity<br>指定容器运行时可以使用的最大进程数量。这里设置为无限制。</p><p>LimitCORE&#x3D;infinity<br>指定容器运行时可以使用的最大 CPU 核心数量。这里设置为无限制。</p><p>LimitNOFILE&#x3D;infinity<br>指定容器运行时可以打开的最大文件数。这里设置为无限制。</p><p>TasksMax&#x3D;infinity<br>指定容器运行时可以创建的最大任务数。这里设置为无限制。</p><p>OOMScoreAdjust&#x3D;-999<br>指定容器运行时的 OOM（Out-Of-Memory）分数调整值。负数值表示容器运行时的优先级较高。</p><p>[Install]<br>WantedBy&#x3D;multi-user.target<br>定义了服务的安装位置。这里指定为 multi-user.target，表示将服务安装为多用户模式下的启动项。</p></div><p>如果 containerd 官方不维护带 cni 插件和 runc 的包了，可以这样手动安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载cni插件 https://github.com/containernetworking/plugins/</span></span><br><span class="line"><span class="comment"># mkdir -p /etc/cni/net.d /opt/cni/bin </span></span><br><span class="line"><span class="comment"># tar xf cni-plugins-linux-amd64-v*.tgz -C /opt/cni/bin/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载runc https://github.com/opencontainers/runc/releases</span></span><br><span class="line"><span class="comment"># install -m 755 runc.amd64 /usr/local/sbin/runc</span></span><br></pre></td></tr></table></figure><h3 id="Containerd-配置文件"><a href="#Containerd-配置文件" class="headerlink" title="Containerd 配置文件"></a>Containerd 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建默认配置文件</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/containerd</span><br><span class="line">containerd config default | <span class="built_in">tee</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Containerd的配置文件</span></span><br><span class="line">sed -i <span class="string">&#x27;s#SystemdCgroup = .*#SystemdCgroup = true#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line">sed -i <span class="string">&quot;s#registry.k8s.io#m.daocloud.io/registry.k8s.io#g&quot;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="启动并设置为开机启动"><a href="#启动并设置为开机启动" class="headerlink" title="启动并设置为开机启动"></a>启动并设置为开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载systemd管理的单位文件。当你修改了某个单位文件（如.service文件、.socket文件等），需要运行该命令来刷新systemd对该文件的配置。</span></span><br><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> --now containerd.service</span><br><span class="line">systemctl status containerd.service</span><br><span class="line">journalctl -u containerd -f</span><br></pre></td></tr></table></figure><h3 id="配置-crictl-客户端"><a href="#配置-crictl-客户端" class="headerlink" title="配置 crictl 客户端"></a>配置 crictl 客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/kubernetes-sigs/cri-tools/releases/</span></span><br><span class="line"><span class="comment"># https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.29.0/crictl-v1.29.0-linux-amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xf crictl-v*-linux-amd64.tar.gz -C /usr/local/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/crictl.yaml &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line"><span class="built_in">timeout</span>: 10</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">crictl info</span><br></pre></td></tr></table></figure><h2 id="ApiServer-高可用方案"><a href="#ApiServer-高可用方案" class="headerlink" title="ApiServer 高可用方案"></a>ApiServer 高可用方案</h2><p>高可用方案有很多种，其他方案请参考 <a href="/posts/10cef768/">Kubernetes之master高可用方案</a><br>这里使用<strong>每台</strong>节点部署 nginx 反代来实现高可用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/kube-lb/&#123;conf,logs,sbin&#125;</span><br><span class="line"></span><br><span class="line">curl -L -C - https://file.babudiu.com/f/qjhX/kube-lb -o /etc/kube-lb/sbin/kube-lb</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/kube-lb/sbin/kube-lb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/kube-lb/conf/kube-lb.conf &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">user root;</span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line">error_log  /etc/kube-lb/logs/error.log warn;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  3000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        server 10.0.0.11:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.12:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.13:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 127.0.0.1:6443;</span><br><span class="line">        proxy_connect_timeout 1s;</span><br><span class="line">        proxy_pass backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/kube-lb.service &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=l4 nginx proxy <span class="keyword">for</span> kube-apiservers</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStartPre=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -t</span><br><span class="line">ExecStart=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb</span><br><span class="line">ExecReload=/etc/kube-lb/sbin/kube-lb -c /etc/kube-lb/conf/kube-lb.conf -p /etc/kube-lb -s reload</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-lb</span><br></pre></td></tr></table></figure><div class="note default flat"><p>kube-lb 其实就是自己编译的 Nginx，精简了 http 模块，只开启了 stream 模块用作 4 层转发，详细参数如下：</p><p>nginx version: nginx&#x2F;1.24.0<br>built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)<br>configure arguments: –with-stream –without-http –without-http_uwsgi_module –without-http_scgi_module –without-http_fastcgi_module</p></div><h2 id="准备证书和-kubeconfig-文件"><a href="#准备证书和-kubeconfig-文件" class="headerlink" title="准备证书和 kubeconfig 文件"></a>准备证书和 kubeconfig 文件</h2><h3 id="安装-cfssl"><a href="#安装-cfssl" class="headerlink" title="安装 cfssl"></a>安装 cfssl</h3><p>也可以使用 openssl，但 openssl 相对要稍微麻烦一点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master1节点下载证书生成工具</span></span><br><span class="line"><span class="comment"># wget &quot;https://github.com/cloudflare/cfssl/releases/download/v1.6.4/cfssl_1.6.4_linux_amd64&quot; -O /usr/local/bin/cfssl</span></span><br><span class="line"><span class="comment"># wget &quot;https://github.com/cloudflare/cfssl/releases/download/v1.6.4/cfssljson_1.6.4_linux_amd64&quot; -O /usr/local/bin/cfssljson</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 软件包内有</span></span><br><span class="line"><span class="built_in">cp</span> cfssl_*_linux_amd64 /usr/local/bin/cfssl</span><br><span class="line"><span class="built_in">cp</span> cfssljson_*_linux_amd64 /usr/local/bin/cfssljson</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/cfssl /usr/local/bin/cfssljson</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/kubernetes/ssl/ &amp;&amp; <span class="built_in">cd</span> ~/kubernetes/</span><br></pre></td></tr></table></figure><h3 id="解压-k8s-可执行文件"><a href="#解压-k8s-可执行文件" class="headerlink" title="解压 k8s 可执行文件"></a>解压 k8s 可执行文件</h3><p>官方开源地址： <a href="https://github.com/kubernetes/kubernetes/">https://github.com/kubernetes/kubernetes/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://dl.k8s.io/v1.29.2/kubernetes-server-linux-amd64.tar.gz</span></span><br><span class="line">tar -xf kubernetes-server-linux-amd64.tar.gz  --strip-components=3 -C /usr/local/bin kubernetes/server/bin/kube&#123;<span class="built_in">let</span>,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是一个tar命令，用于解压指定的kubernetes-server-linux-amd64.tar.gz文件，并将其中的特定文件提取到/usr/local/bin目录下。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 命令的解释如下：</span></span><br><span class="line"><span class="comment"># - tar：用于处理tar压缩文件的命令。</span></span><br><span class="line"><span class="comment"># - -xf：表示解压操作。</span></span><br><span class="line"><span class="comment"># - kubernetes-server-linux-amd64.tar.gz：要解压的文件名。</span></span><br><span class="line"><span class="comment"># - --strip-components=3：表示解压时忽略压缩文件中的前3级目录结构，提取文件时直接放到目标目录中。</span></span><br><span class="line"><span class="comment"># - -C /usr/local/bin：指定提取文件的目标目录为/usr/local/bin。</span></span><br><span class="line"><span class="comment"># - kubernetes/server/bin/kube&#123;let,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125;：要解压和提取的文件名模式，用花括号括起来表示模式中的多个可能的文件名。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将组件发送到其他节点</span></span><br><span class="line">Master=<span class="string">&#x27;master1 master2 master3&#x27;</span></span><br><span class="line">Worker=<span class="string">&#x27;worker1 worker2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝master组件</span></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> <span class="variable">$Master</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$NODE</span></span><br><span class="line">    scp /usr/local/bin/kube&#123;<span class="built_in">let</span>,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125; <span class="variable">$NODE</span>:/usr/local/bin/</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝worker组件</span></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> <span class="variable">$Worker</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$NODE</span></span><br><span class="line">    scp /usr/local/bin/kube&#123;<span class="built_in">let</span>,-proxy&#125; <span class="variable">$NODE</span>:/usr/local/bin/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="准备-Etcd-证书配置文件、证书签名请求"><a href="#准备-Etcd-证书配置文件、证书签名请求" class="headerlink" title="准备 Etcd 证书配置文件、证书签名请求"></a>准备 Etcd 证书配置文件、证书签名请求</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 证书在随便一台机器上生成</span></span><br><span class="line"><span class="built_in">cat</span> &gt; ca-config.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;signing&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;expiry&quot;</span>: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;profiles&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;kubernetes&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;usages&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;signing&quot;</span>,</span><br><span class="line">            <span class="string">&quot;key encipherment&quot;</span>,</span><br><span class="line">            <span class="string">&quot;server auth&quot;</span>,</span><br><span class="line">            <span class="string">&quot;client auth&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;expiry&quot;</span>: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># CA证书设置过期时间为100年</span></span><br><span class="line"><span class="comment"># `profiles`部分定义了不同的证书配置文件。</span></span><br><span class="line"><span class="comment"># 在这里，只有一个配置文件`kubernetes`。它包含了以下`usages`和过期时间`expiry`：</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 1. `signing`：用于对其他证书进行签名</span></span><br><span class="line"><span class="comment"># 2. `key encipherment`：用于加密和解密传输数据</span></span><br><span class="line"><span class="comment"># 3. `server auth`：用于服务器身份验证</span></span><br><span class="line"><span class="comment"># 4. `client auth`：用于客户端身份验证</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; etcd-ca-csr.json  &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;etcd&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;etcd&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Etcd Security&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ca&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;expiry&quot;</span>: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是一个用于生成证书签名请求（Certificate Signing Request，CSR）的JSON配置文件。JSON配置文件指定了生成证书签名请求所需的数据。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># - &quot;CN&quot;: &quot;etcd&quot; 指定了希望生成的证书的CN字段（Common Name），即证书的主题，通常是该证书标识的实体的名称。</span></span><br><span class="line"><span class="comment"># - &quot;key&quot;: &#123;&#125; 指定了生成证书所使用的密钥的配置信息。&quot;algo&quot;: &quot;rsa&quot; 指定了密钥的算法为RSA，&quot;size&quot;: 2048 指定了密钥的长度为2048位。</span></span><br><span class="line"><span class="comment"># - &quot;names&quot;: [] 包含了生成证书时所需的实体信息。在这个例子中，只包含了一个实体，其相关信息如下：</span></span><br><span class="line"><span class="comment">#   - &quot;C&quot;: &quot;CN&quot; 指定了实体的国家/地区代码，这里是中国。</span></span><br><span class="line"><span class="comment">#   - &quot;ST&quot;: &quot;Shanghai&quot; 指定了实体所在的省/州。</span></span><br><span class="line"><span class="comment">#   - &quot;L&quot;: &quot;Shanghai&quot; 指定了实体所在的城市。</span></span><br><span class="line"><span class="comment">#   - &quot;O&quot;: &quot;etcd&quot; 指定了实体的组织名称。</span></span><br><span class="line"><span class="comment">#   - &quot;OU&quot;: &quot;Etcd Security&quot; 指定了实体所属的组织单位。</span></span><br><span class="line"><span class="comment"># - &quot;ca&quot;: &#123;&#125; 指定了生成证书时所需的CA（Certificate Authority）配置信息。</span></span><br><span class="line"><span class="comment">#   - &quot;expiry&quot;: &quot;876000h&quot; 指定了证书的有效期，这里是876000小时。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成了Etcd的CA证书</span></span><br><span class="line">cfssl gencert -initca etcd-ca-csr.json | cfssljson -bare ssl/etcd-ca</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; etcd-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;etcd&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;etcd&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Etcd Security&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用etcd的ca证书和证书签名请求来生成etcd的证书</span></span><br><span class="line">cfssl gencert \</span><br><span class="line">   -ca=ssl/etcd-ca.pem \</span><br><span class="line">   -ca-key=ssl/etcd-ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -hostname=127.0.0.1,master1,master2,master3,10.0.0.11,10.0.0.12,10.0.0.13 \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   etcd-csr.json | cfssljson -bare ssl/etcd</span><br></pre></td></tr></table></figure><h3 id="生成-apiserver-证书"><a href="#生成-apiserver-证书" class="headerlink" title="生成 apiserver 证书"></a>生成 apiserver 证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在随便一台机器上执行</span></span><br><span class="line"><span class="built_in">cat</span> &gt; ca-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;Kubernetes&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ca&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;expiry&quot;</span>: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成CA证书，Kubernetes使用</span></span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ssl/ca</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; apiserver-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;kube-apiserver&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;Kubernetes&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用CA生成apiserver证书</span></span><br><span class="line">cfssl gencert \</span><br><span class="line">  -ca=ssl/ca.pem   \</span><br><span class="line">  -ca-key=ssl/ca-key.pem   \</span><br><span class="line">  -config=ca-config.json   \</span><br><span class="line">  -hostname=10.96.0.1,127.0.0.1,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster,kubernetes.default.svc.cluster.local,10.0.0.10,10.0.0.11,10.0.0.12,10.0.0.13,10.0.0.14,10.0.0.15 \</span><br><span class="line">  -profile=kubernetes apiserver-csr.json | cfssljson -bare ssl/apiserver</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-apiserver-聚合证书"><a href="#生成-apiserver-聚合证书" class="headerlink" title="生成 apiserver 聚合证书"></a>生成 apiserver 聚合证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; front-proxy-ca-csr.json  &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">     <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ca&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;expiry&quot;</span>: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cfssl gencert -initca front-proxy-ca-csr.json | cfssljson -bare ssl/front-proxy-ca </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; front-proxy-client-csr.json  &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;front-proxy-client&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">     <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert  \</span><br><span class="line">    -ca=ssl/front-proxy-ca.pem   \</span><br><span class="line">    -ca-key=ssl/front-proxy-ca-key.pem   \</span><br><span class="line">    -config=ca-config.json   \</span><br><span class="line">    -profile=kubernetes front-proxy-client-csr.json | cfssljson -bare ssl/front-proxy-client</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-kube-controller-manager-证书"><a href="#生成-kube-controller-manager-证书" class="headerlink" title="生成 kube-controller-manager 证书"></a>生成 kube-controller-manager 证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; kube-controller-manager-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;system:kube-controller-manager&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;system:kube-controller-manager&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cfssl gencert \</span><br><span class="line">   -ca=ssl/ca.pem \</span><br><span class="line">   -ca-key=ssl/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   kube-controller-manager-csr.json | cfssljson -bare ssl/controller-manager</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-controller-manager-kubeconfig"><a href="#生成-controller-manager-kubeconfig" class="headerlink" title="生成 controller-manager.kubeconfig"></a>生成 controller-manager.kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">     --certificate-authority=ssl/ca.pem \</span><br><span class="line">     --embed-certs=<span class="literal">true</span> \</span><br><span class="line">     --server=https://127.0.0.1:6443 \</span><br><span class="line">     --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-context system:kube-controller-manager@kubernetes \</span><br><span class="line">    --cluster=kubernetes \</span><br><span class="line">    --user=system:kube-controller-manager \</span><br><span class="line">    --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-credentials system:kube-controller-manager \</span><br><span class="line">      --client-certificate=ssl/controller-manager.pem \</span><br><span class="line">      --client-key=ssl/controller-manager-key.pem \</span><br><span class="line">      --embed-certs=<span class="literal">true</span> \</span><br><span class="line">      --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context system:kube-controller-manager@kubernetes \</span><br><span class="line">     --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-scheduler-的证书"><a href="#生成-scheduler-的证书" class="headerlink" title="生成 scheduler 的证书"></a>生成 scheduler 的证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; scheduler-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;system:kube-scheduler&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;system:kube-scheduler&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert \</span><br><span class="line">  -ca=ssl/ca.pem \</span><br><span class="line">  -ca-key=ssl/ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes \</span><br><span class="line">  scheduler-csr.json | cfssljson -bare ssl/scheduler</span><br></pre></td></tr></table></figure><h3 id="生成-scheduler-kubeconfig"><a href="#生成-scheduler-kubeconfig" class="headerlink" title="生成 scheduler.kubeconfig"></a>生成 scheduler.kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://127.0.0.1:6443 \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-credentials system:kube-scheduler \</span><br><span class="line">  --client-certificate=ssl/scheduler.pem \</span><br><span class="line">  --client-key=ssl/scheduler-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-context system:kube-scheduler@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-scheduler \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context system:kube-scheduler@kubernetes \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-kubectl-的证书配置"><a href="#生成-kubectl-的证书配置" class="headerlink" title="生成 kubectl 的证书配置"></a>生成 kubectl 的证书配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; admin-csr.json &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;system:masters&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert \</span><br><span class="line">   -ca=ssl/ca.pem \</span><br><span class="line">   -ca-key=ssl/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   admin-csr.json | cfssljson -bare ssl/admin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成-kubectl-的-admin-kubeconfig"><a href="#生成-kubectl-的-admin-kubeconfig" class="headerlink" title="生成 kubectl 的 admin.kubeconfig"></a>生成 kubectl 的 admin.kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes     \</span><br><span class="line">  --certificate-authority=ssl/ca.pem     \</span><br><span class="line">  --embed-certs=<span class="literal">true</span>     \</span><br><span class="line">  --server=https://127.0.0.1:6443     \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-credentials kubernetes-admin  \</span><br><span class="line">  --client-certificate=ssl/admin.pem     \</span><br><span class="line">  --client-key=ssl/admin-key.pem     \</span><br><span class="line">  --embed-certs=<span class="literal">true</span>     \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-context kubernetes-admin@kubernetes    \</span><br><span class="line">  --cluster=kubernetes     \</span><br><span class="line">  --user=kubernetes-admin     \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context kubernetes-admin@kubernetes --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export KUBECONFIG=&#x27;/etc/kubernetes/admin.kubeconfig&#x27;&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="创建-kube-proxy-证书"><a href="#创建-kube-proxy-证书" class="headerlink" title="创建 kube-proxy 证书"></a>创建 kube-proxy 证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; kube-proxy-csr.json  &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;system:kube-proxy&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;names&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;C&quot;</span>: <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;L&quot;</span>: <span class="string">&quot;Shanghai&quot;</span>,</span><br><span class="line">      <span class="string">&quot;O&quot;</span>: <span class="string">&quot;system:kube-proxy&quot;</span>,</span><br><span class="line">      <span class="string">&quot;OU&quot;</span>: <span class="string">&quot;Kubernetes-manual&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert \</span><br><span class="line">   -ca=ssl/ca.pem \</span><br><span class="line">   -ca-key=ssl/ca-key.pem \</span><br><span class="line">   -config=ca-config.json \</span><br><span class="line">   -profile=kubernetes \</span><br><span class="line">   kube-proxy-csr.json | cfssljson -bare ssl/kube-proxy</span><br></pre></td></tr></table></figure><h3 id="创建-kube-proxy-kubeconfig"><a href="#创建-kube-proxy-kubeconfig" class="headerlink" title="创建 kube-proxy.kubeconfig"></a>创建 kube-proxy.kubeconfig</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes     \</span><br><span class="line">  --certificate-authority=ssl/ca.pem     \</span><br><span class="line">  --embed-certs=<span class="literal">true</span>     \</span><br><span class="line">  --server=https://127.0.0.1:6443     \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-credentials kube-proxy  \</span><br><span class="line">  --client-certificate=ssl/kube-proxy.pem     \</span><br><span class="line">  --client-key=ssl/kube-proxy-key.pem     \</span><br><span class="line">  --embed-certs=<span class="literal">true</span>     \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-context kube-proxy@kubernetes    \</span><br><span class="line">  --cluster=kubernetes     \</span><br><span class="line">  --user=kube-proxy     \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context kube-proxy@kubernetes --kubeconfig=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="创建-ServiceAccount-Key"><a href="#创建-ServiceAccount-Key" class="headerlink" title="创建 ServiceAccount Key"></a>创建 ServiceAccount Key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ssl/sa.key 2048</span><br><span class="line">openssl rsa -<span class="keyword">in</span> ssl/sa.key -pubout -out ssl/sa.pub</span><br></pre></td></tr></table></figure><h3 id="将证书发送到其他-master-节点"><a href="#将证书发送到其他-master-节点" class="headerlink" title="将证书发送到其他 master 节点"></a>将证书发送到其他 master 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> master1 master2 master3; <span class="keyword">do</span></span><br><span class="line">    ssh <span class="variable">$&#123;NODE&#125;</span> <span class="string">&quot;mkdir /etc/kubernetes/pki/ -p&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;NODE&#125;</span> <span class="string">&quot;mkdir /etc/etcd/ssl/ -p&quot;</span></span><br><span class="line">    <span class="keyword">for</span> FILE <span class="keyword">in</span> etcd-ca-key.pem etcd-ca.pem etcd-key.pem etcd.pem; <span class="keyword">do</span> scp ~/kubernetes/ssl/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/etcd/ssl/<span class="variable">$&#123;FILE&#125;</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> FILE <span class="keyword">in</span> admin.pem admin-key.pem apiserver.pem apiserver-key.pem front-proxy-ca.pem front-proxy-client-key.pem sa.pub sa.key ca.pem ca-key.pem front-proxy-ca-key.pem front-proxy-client.pem; <span class="keyword">do</span></span><br><span class="line">        scp ~/kubernetes/ssl/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/kubernetes/pki/<span class="variable">$&#123;FILE&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> FILE <span class="keyword">in</span> kube-proxy.kubeconfig admin.kubeconfig controller-manager.kubeconfig scheduler.kubeconfig; <span class="keyword">do</span></span><br><span class="line">        scp ~/kubernetes/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$NODE</span>:/etc/kubernetes/<span class="variable">$&#123;FILE&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="Etcd-部署"><a href="#Etcd-部署" class="headerlink" title="Etcd 部署"></a>Etcd 部署</h2><p>下载地址： <a href="https://github.com/etcd-io/etcd/releases/">https://github.com/etcd-io/etcd/releases/</a></p><h3 id="准备可执行文件"><a href="#准备可执行文件" class="headerlink" title="准备可执行文件"></a>准备可执行文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/etcd-io/etcd/releases/download/v3.5.12/etcd-v3.5.12-linux-amd64.tar.gz</span></span><br><span class="line">tar -xf etcd*.tar.gz</span><br><span class="line"></span><br><span class="line">Master=<span class="string">&#x27;master1 master2 master3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝master组件</span></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> <span class="variable">$Master</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$NODE</span></span><br><span class="line">    scp etcd-*/etcd* <span class="variable">$NODE</span>:/usr/local/bin/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="Etcd-master1-配置"><a href="#Etcd-master1-配置" class="headerlink" title="Etcd master1 配置"></a>Etcd master1 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/etcd/etcd.config.yml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">name: <span class="string">&#x27;master1&#x27;</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">&#x27;https://10.0.0.11:2380&#x27;</span></span><br><span class="line">listen-client-urls: <span class="string">&#x27;https://10.0.0.11:2379,http://127.0.0.1:2379&#x27;</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">&#x27;https://10.0.0.11:2380&#x27;</span></span><br><span class="line">advertise-client-urls: <span class="string">&#x27;https://10.0.0.11:2379&#x27;</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">&#x27;proxy&#x27;</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">&#x27;master1=https://10.0.0.11:2380,master2=https://10.0.0.12:2380,master3=https://10.0.0.13:2380&#x27;</span></span><br><span class="line">initial-cluster-token: <span class="string">&#x27;etcd-k8s-cluster&#x27;</span></span><br><span class="line">initial-cluster-state: <span class="string">&#x27;new&#x27;</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line">enable-v2: <span class="literal">true</span></span><br><span class="line">enable-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">&#x27;off&#x27;</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">log-package-levels:</span><br><span class="line">log-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="Etcd-master2-配置"><a href="#Etcd-master2-配置" class="headerlink" title="Etcd master2 配置"></a>Etcd master2 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/etcd/etcd.config.yml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">name: <span class="string">&#x27;master2&#x27;</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">&#x27;https://10.0.0.12:2380&#x27;</span></span><br><span class="line">listen-client-urls: <span class="string">&#x27;https://10.0.0.12:2379,http://127.0.0.1:2379&#x27;</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">&#x27;https://10.0.0.12:2380&#x27;</span></span><br><span class="line">advertise-client-urls: <span class="string">&#x27;https://10.0.0.12:2379&#x27;</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">&#x27;proxy&#x27;</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">&#x27;master1=https://10.0.0.11:2380,master2=https://10.0.0.12:2380,master3=https://10.0.0.13:2380&#x27;</span></span><br><span class="line">initial-cluster-token: <span class="string">&#x27;etcd-k8s-cluster&#x27;</span></span><br><span class="line">initial-cluster-state: <span class="string">&#x27;new&#x27;</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line">enable-v2: <span class="literal">true</span></span><br><span class="line">enable-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">&#x27;off&#x27;</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">log-package-levels:</span><br><span class="line">log-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="Etcd-master3-配置"><a href="#Etcd-master3-配置" class="headerlink" title="Etcd master3 配置"></a>Etcd master3 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/etcd/etcd.config.yml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">name: <span class="string">&#x27;master3&#x27;</span></span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: <span class="string">&#x27;https://10.0.0.13:2380&#x27;</span></span><br><span class="line">listen-client-urls: <span class="string">&#x27;https://10.0.0.13:2379,http://127.0.0.1:2379&#x27;</span></span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: <span class="string">&#x27;https://10.0.0.13:2380&#x27;</span></span><br><span class="line">advertise-client-urls: <span class="string">&#x27;https://10.0.0.13:2379&#x27;</span></span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: <span class="string">&#x27;proxy&#x27;</span></span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: <span class="string">&#x27;master1=https://10.0.0.11:2380,master2=https://10.0.0.12:2380,master3=https://10.0.0.13:2380&#x27;</span></span><br><span class="line">initial-cluster-token: <span class="string">&#x27;etcd-k8s-cluster&#x27;</span></span><br><span class="line">initial-cluster-state: <span class="string">&#x27;new&#x27;</span></span><br><span class="line">strict-reconfig-check: <span class="literal">false</span></span><br><span class="line">enable-v2: <span class="literal">true</span></span><br><span class="line">enable-pprof: <span class="literal">true</span></span><br><span class="line">proxy: <span class="string">&#x27;off&#x27;</span></span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: <span class="string">&#x27;/etc/etcd/ssl/etcd.pem&#x27;</span></span><br><span class="line">  key-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-key.pem&#x27;</span></span><br><span class="line">  peer-client-cert-auth: <span class="literal">true</span></span><br><span class="line">  trusted-ca-file: <span class="string">&#x27;/etc/etcd/ssl/etcd-ca.pem&#x27;</span></span><br><span class="line">  auto-tls: <span class="literal">true</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">log-package-levels:</span><br><span class="line">log-outputs: [default]</span><br><span class="line">force-new-cluster: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建-Etcd-的-Systemd-service"><a href="#创建-Etcd-的-Systemd-service" class="headerlink" title="创建 Etcd 的 Systemd service"></a>创建 Etcd 的 Systemd service</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有的master节点都需要执行</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/etcd.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Service</span><br><span class="line">Documentation=https://coreos.com/etcd/docs/latest/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/local/bin/etcd --config-file=/etc/etcd/etcd.config.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=etcd3.service</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Etcd， etcd需要只要两个节点才能启动，尽量这几个节点一块启动。</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now etcd</span><br><span class="line">systemctl status etcd</span><br><span class="line">journalctl -u etcd -f</span><br></pre></td></tr></table></figure><h3 id="查看-Etcd-状态"><a href="#查看-Etcd-状态" class="headerlink" title="查看 Etcd 状态"></a>查看 Etcd 状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line">etcdctl --endpoints=<span class="string">&quot;10.0.0.13:2379,10.0.0.12:2379,10.0.0.11:2379&quot;</span> --cacert=/etc/etcd/ssl/etcd-ca.pem --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem endpoint status --write-out=table</span><br></pre></td></tr></table></figure><h2 id="master-节点组件安装"><a href="#master-节点组件安装" class="headerlink" title="master 节点组件安装"></a>master 节点组件安装</h2><h3 id="安装-Apiserver"><a href="#安装-Apiserver" class="headerlink" title="安装 Apiserver"></a>安装 Apiserver</h3><h4 id="master1-节点配置"><a href="#master1-节点配置" class="headerlink" title="master1 节点配置"></a>master1 节点配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kube-apiserver.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --bind-address=10.0.0.11  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --advertise-address=10.0.0.11 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://10.0.0.11:2379,https://10.0.0.12:2379,https://10.0.0.13:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --enable-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User \</span><br><span class="line">      --enable-aggregator-routing=<span class="literal">true</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="master2-节点配置"><a href="#master2-节点配置" class="headerlink" title="master2 节点配置"></a>master2 节点配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kube-apiserver.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --bind-address=10.0.0.12  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --advertise-address=10.0.0.12 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/12  \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://10.0.0.11:2379,https://10.0.0.12:2379,https://10.0.0.13:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --enable-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User \</span><br><span class="line">      --enable-aggregator-routing=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="master3-节点配置"><a href="#master3-节点配置" class="headerlink" title="master3 节点配置"></a>master3 节点配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kube-apiserver.service  &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-apiserver \</span><br><span class="line">      --v=2  \</span><br><span class="line">      --allow-privileged=<span class="literal">true</span>  \</span><br><span class="line">      --bind-address=10.0.0.13  \</span><br><span class="line">      --secure-port=6443  \</span><br><span class="line">      --advertise-address=10.0.0.13 \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">      --service-node-port-range=30000-32767  \</span><br><span class="line">      --etcd-servers=https://10.0.0.11:2379,https://10.0.0.12:2379,https://10.0.0.13:2379 \</span><br><span class="line">      --etcd-cafile=/etc/etcd/ssl/etcd-ca.pem  \</span><br><span class="line">      --etcd-certfile=/etc/etcd/ssl/etcd.pem  \</span><br><span class="line">      --etcd-keyfile=/etc/etcd/ssl/etcd-key.pem  \</span><br><span class="line">      --client-ca-file=/etc/kubernetes/pki/ca.pem  \</span><br><span class="line">      --tls-cert-file=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem  \</span><br><span class="line">      --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem  \</span><br><span class="line">      --service-account-key-file=/etc/kubernetes/pki/sa.pub  \</span><br><span class="line">      --service-account-signing-key-file=/etc/kubernetes/pki/sa.key  \</span><br><span class="line">      --service-account-issuer=https://kubernetes.default.svc.cluster.local \</span><br><span class="line">      --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname  \</span><br><span class="line">      --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota  \</span><br><span class="line">      --authorization-mode=Node,RBAC  \</span><br><span class="line">      --enable-bootstrap-token-auth=<span class="literal">true</span>  \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem  \</span><br><span class="line">      --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.pem  \</span><br><span class="line">      --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client-key.pem  \</span><br><span class="line">      --requestheader-allowed-names=aggregator  \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group  \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra-  \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User \</span><br><span class="line">      --enable-aggregator-routing=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="启动-apiserver（所有-master-节点）"><a href="#启动-apiserver（所有-master-节点）" class="headerlink" title="启动 apiserver（所有 master 节点）"></a>启动 apiserver（所有 master 节点）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-apiserver.service</span><br><span class="line">systemctl status kube-apiserver.service</span><br><span class="line">journalctl -u kube-apiserver -f</span><br></pre></td></tr></table></figure><h3 id="配置-kube-controller-manager-service"><a href="#配置-kube-controller-manager-service" class="headerlink" title="配置 kube-controller-manager service"></a>配置 kube-controller-manager service</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有master节点配置，且配置相同</span></span><br><span class="line"><span class="comment"># 10.244.0.0/16为pod网段，按需求设置你自己的网段</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kube-controller-manager.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-controller-manager \</span><br><span class="line">      --v=2 \</span><br><span class="line">      --bind-address=0.0.0.0 \</span><br><span class="line">      --root-ca-file=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">      --cluster-signing-cert-file=/etc/kubernetes/pki/ca.pem \</span><br><span class="line">      --cluster-signing-key-file=/etc/kubernetes/pki/ca-key.pem \</span><br><span class="line">      --service-account-private-key-file=/etc/kubernetes/pki/sa.key \</span><br><span class="line">      --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">      --leader-elect=<span class="literal">true</span> \</span><br><span class="line">      --use-service-account-credentials=<span class="literal">true</span> \</span><br><span class="line">      --node-monitor-grace-period=40s \</span><br><span class="line">      --node-monitor-period=5s \</span><br><span class="line">      --controllers=*,bootstrapsigner,tokencleaner \</span><br><span class="line">      --allocate-node-cidrs=<span class="literal">true</span> \</span><br><span class="line">      --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">      --cluster-cidr=10.244.0.0/16 \</span><br><span class="line">      --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.pem</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="启动-kube-controller-manager，并查看状态"><a href="#启动-kube-controller-manager，并查看状态" class="headerlink" title="启动 kube-controller-manager，并查看状态"></a>启动 kube-controller-manager，并查看状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-controller-manager.service</span><br><span class="line">systemctl status kube-controller-manager.service</span><br><span class="line">journalctl -u kube-controller-manager.service -f</span><br></pre></td></tr></table></figure><h3 id="配置-kube-scheduler-service"><a href="#配置-kube-scheduler-service" class="headerlink" title="配置 kube-scheduler service"></a>配置 kube-scheduler service</h3><h4 id="所有-master-节点配置，且配置相同"><a href="#所有-master-节点配置，且配置相同" class="headerlink" title="所有 master 节点配置，且配置相同"></a>所有 master 节点配置，且配置相同</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kube-scheduler.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-scheduler \</span><br><span class="line">      --v=2 \</span><br><span class="line">      --bind-address=0.0.0.0 \</span><br><span class="line">      --leader-elect=<span class="literal">true</span> \</span><br><span class="line">      --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="启动并查看服务状态"><a href="#启动并查看服务状态" class="headerlink" title="启动并查看服务状态"></a>启动并查看服务状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-scheduler.service</span><br><span class="line">systemctl status kube-scheduler.service</span><br><span class="line">journalctl -u kube-scheduler -f</span><br></pre></td></tr></table></figure><h3 id="TLS-Bootstrapping-配置"><a href="#TLS-Bootstrapping-配置" class="headerlink" title="TLS Bootstrapping 配置"></a>TLS Bootstrapping 配置</h3><h4 id="在-master1-上配置"><a href="#在-master1-上配置" class="headerlink" title="在 master1 上配置"></a>在 master1 上配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># name token-id token-secret 如要修改一块修改</span></span><br><span class="line"><span class="built_in">cat</span> &gt; bootstrap.secret.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: bootstrap-token-g1yhn5</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="built_in">type</span>: bootstrap.kubernetes.io/token</span><br><span class="line">stringData:</span><br><span class="line">  description: <span class="string">&quot;The default bootstrap token generated by &#x27;kubelet &#x27;.&quot;</span></span><br><span class="line">  token-id: g1yhn5</span><br><span class="line">  token-secret: vqvd8tenyvtjn7lq</span><br><span class="line">  usage-bootstrap-authentication: <span class="string">&quot;true&quot;</span></span><br><span class="line">  usage-bootstrap-signing: <span class="string">&quot;true&quot;</span></span><br><span class="line">  auth-extra-groups:  system:bootstrappers:default-node-token,system:bootstrappers:worker,system:bootstrappers:ingress</span><br><span class="line"> </span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubelet-bootstrap</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:node-bootstrapper</span><br><span class="line">subjects:</span><br><span class="line">- apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Group</span><br><span class="line">  name: system:bootstrappers:default-node-token</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: node-autoapprove-bootstrap</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient</span><br><span class="line">subjects:</span><br><span class="line">- apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Group</span><br><span class="line">  name: system:bootstrappers:default-node-token</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: node-autoapprove-certificate-rotation</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span><br><span class="line">subjects:</span><br><span class="line">- apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Group</span><br><span class="line">  name: system:nodes</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kube-apiserver-to-kubelet</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - <span class="string">&quot;&quot;</span></span><br><span class="line">    resources:</span><br><span class="line">      - nodes/proxy</span><br><span class="line">      - nodes/stats</span><br><span class="line">      - nodes/log</span><br><span class="line">      - nodes/spec</span><br><span class="line">      - nodes/metrics</span><br><span class="line">    verbs:</span><br><span class="line">      - <span class="string">&quot;*&quot;</span></span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: system:kube-apiserver</span><br><span class="line">  namespace: <span class="string">&quot;&quot;</span></span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:kube-apiserver-to-kubelet</span><br><span class="line">subjects:</span><br><span class="line">  - apiGroup: rbac.authorization.k8s.io</span><br><span class="line">    kind: User</span><br><span class="line">    name: kube-apiserver</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl config set-cluster kubernetes     \</span><br><span class="line">    --certificate-authority=/etc/kubernetes/pki/ca.pem     \</span><br><span class="line">    --embed-certs=<span class="literal">true</span>     --server=https://127.0.0.1:6443     \</span><br><span class="line">    --kubeconfig=bootstrap-kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面的token保持一致</span></span><br><span class="line">kubectl config set-credentials tls-bootstrap-token-user     \</span><br><span class="line">    --token=g1yhn5.vqvd8tenyvtjn7lq \</span><br><span class="line">    --kubeconfig=bootstrap-kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config set-context tls-bootstrap-token-user@kubernetes     \</span><br><span class="line">    --cluster=kubernetes     \</span><br><span class="line">    --user=tls-bootstrap-token-user     \</span><br><span class="line">    --kubeconfig=bootstrap-kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl config use-context tls-bootstrap-token-user@kubernetes     \</span><br><span class="line">    --kubeconfig=bootstrap-kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl create -f bootstrap.secret.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># bootstrap-kubelet.kubeconfig 文件分发到其他所有节点，包括master和worker</span></span><br><span class="line">scp bootstrap-kubelet.kubeconfig master1:/etc/kubernetes/</span><br><span class="line">scp bootstrap-kubelet.kubeconfig master2:/etc/kubernetes/</span><br><span class="line">scp bootstrap-kubelet.kubeconfig master3:/etc/kubernetes/</span><br></pre></td></tr></table></figure><h4 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">kubectl get cs</span><br><span class="line">Warning: v1 ComponentStatus is deprecated <span class="keyword">in</span> v1.19+</span><br><span class="line">NAME                 STATUS    MESSAGE   ERROR</span><br><span class="line">scheduler            Healthy   ok        </span><br><span class="line">controller-manager   Healthy   ok        </span><br><span class="line">etcd-0               Healthy   ok </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="worker-节点配置（新增-worker-节点）"><a href="#worker-节点配置（新增-worker-节点）" class="headerlink" title="worker 节点配置（新增 worker 节点）"></a>worker 节点配置（新增 worker 节点）</h2><p>master 节点上也可以部署 <code>kubelet</code> 和 <code>kube-proxy</code> ，如果 <code>master</code> 节点仅做管理，不进行调度与访问，可以不安装 <code>kubelet</code> 和 <code>kube-proxy</code>, 不安装 <code>kubelet</code>，那么 <code>kubectl get node</code> 不显示。</p><h3 id="在-master1-上将证书复制到-node-节点"><a href="#在-master1-上将证书复制到-node-节点" class="headerlink" title="在 master1 上将证书复制到 node 节点"></a>在 master1 上将证书复制到 node 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/kubernetes/</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> NODE <span class="keyword">in</span> worker1 worker2; <span class="keyword">do</span></span><br><span class="line">    ssh <span class="variable">$NODE</span> <span class="built_in">mkdir</span> -p /etc/kubernetes/pki</span><br><span class="line">    scp ssl/ca.pem <span class="variable">$NODE</span>:/etc/kubernetes/pki/</span><br><span class="line">    scp bootstrap-kubelet.kubeconfig kube-proxy.kubeconfig <span class="variable">$NODE</span>:/etc/kubernetes/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="kubelet-配置"><a href="#kubelet-配置" class="headerlink" title="kubelet 配置"></a>kubelet 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /var/lib/kubelet /var/log/kubernetes /etc/systemd/system/kubelet.service.d /etc/kubernetes/manifests/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有k8s节点配置kubelet service</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/kubelet.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network-online.target firewalld.service containerd.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Requires=containerd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kubelet \</span><br><span class="line">    --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.kubeconfig  \</span><br><span class="line">    --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</span><br><span class="line">    --config=/etc/kubernetes/kubelet-conf.yml \</span><br><span class="line">    --container-runtime-endpoint=unix:///run/containerd/containerd.sock  \</span><br><span class="line">    --node-labels=node.kubernetes.io/node=</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有k8s节点创建kubelet的配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/kubernetes/kubelet-conf.yml &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">address: 0.0.0.0</span><br><span class="line">port: 10250</span><br><span class="line">readOnlyPort: 10255</span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line">  webhook:</span><br><span class="line">    cacheTTL: 2m0s</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">  x509:</span><br><span class="line">    clientCAFile: /etc/kubernetes/pki/ca.pem</span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook:</span><br><span class="line">    cacheAuthorizedTTL: 5m0s</span><br><span class="line">    cacheUnauthorizedTTL: 30s</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">cgroupsPerQOS: <span class="literal">true</span></span><br><span class="line">clusterDNS:</span><br><span class="line">- 10.96.0.10</span><br><span class="line">clusterDomain: cluster.local</span><br><span class="line">containerLogMaxFiles: 5</span><br><span class="line">containerLogMaxSize: 10Mi</span><br><span class="line">contentType: application/vnd.kubernetes.protobuf</span><br><span class="line">cpuCFSQuota: <span class="literal">true</span></span><br><span class="line">cpuManagerPolicy: none</span><br><span class="line">cpuManagerReconcilePeriod: 10s</span><br><span class="line">enableControllerAttachDetach: <span class="literal">true</span></span><br><span class="line">enableDebuggingHandlers: <span class="literal">true</span></span><br><span class="line">enforceNodeAllocatable:</span><br><span class="line">- pods</span><br><span class="line">eventBurst: 10</span><br><span class="line">eventRecordQPS: 5</span><br><span class="line">evictionHard:</span><br><span class="line">  imagefs.available: 15%</span><br><span class="line">  memory.available: 100Mi</span><br><span class="line">  nodefs.available: 10%</span><br><span class="line">  nodefs.inodesFree: 5%</span><br><span class="line">evictionPressureTransitionPeriod: 5m0s</span><br><span class="line">failSwapOn: <span class="literal">true</span></span><br><span class="line">fileCheckFrequency: 20s</span><br><span class="line">hairpinMode: promiscuous-bridge</span><br><span class="line">healthzBindAddress: 127.0.0.1</span><br><span class="line">healthzPort: 10248</span><br><span class="line">httpCheckFrequency: 20s</span><br><span class="line">imageGCHighThresholdPercent: 85</span><br><span class="line">imageGCLowThresholdPercent: 80</span><br><span class="line">imageMinimumGCAge: 2m0s</span><br><span class="line">iptablesDropBit: 15</span><br><span class="line">iptablesMasqueradeBit: 14</span><br><span class="line">kubeAPIBurst: 10</span><br><span class="line">kubeAPIQPS: 5</span><br><span class="line">makeIPTablesUtilChains: <span class="literal">true</span></span><br><span class="line">maxOpenFiles: 1000000</span><br><span class="line">maxPods: 110</span><br><span class="line">nodeStatusUpdateFrequency: 10s</span><br><span class="line">oomScoreAdj: -999</span><br><span class="line">podPidsLimit: -1</span><br><span class="line">registryBurst: 10</span><br><span class="line">registryPullQPS: 5</span><br><span class="line">resolvConf: /etc/resolv.conf</span><br><span class="line">rotateCertificates: <span class="literal">true</span></span><br><span class="line">runtimeRequestTimeout: 2m0s</span><br><span class="line">serializeImagePulls: <span class="literal">true</span></span><br><span class="line">staticPodPath: /etc/kubernetes/manifests</span><br><span class="line">streamingConnectionIdleTimeout: 4h0m0s</span><br><span class="line">syncFrequency: 1m0s</span><br><span class="line">volumeStatsAggPeriod: 1m0s</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动kubelet</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet.service</span><br><span class="line">systemctl status kubelet.service</span><br><span class="line">journalctl -u kubelet -f</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群</span></span><br><span class="line">[root@master1 ~]<span class="comment"># kubectl  get node</span></span><br><span class="line">NAME           STATUS   ROLES    AGE   VERSION</span><br><span class="line">master1   Ready    &lt;none&gt;   16s   v1.29.2</span><br><span class="line">master2   Ready    &lt;none&gt;   13s   v1.29.2</span><br><span class="line">master3   Ready    &lt;none&gt;   12s   v1.29.2</span><br><span class="line">worker1   Ready    &lt;none&gt;   10s   v1.29.2</span><br><span class="line">worker2   Ready    &lt;none&gt;   9s    v1.29.2</span><br><span class="line"></span><br><span class="line">[root@master1 ~]<span class="comment"># kubectl describe node | grep Runtime</span></span><br><span class="line">  Container Runtime Version:  containerd://1.7.13</span><br><span class="line">  Container Runtime Version:  containerd://1.7.13</span><br><span class="line">  Container Runtime Version:  containerd://1.7.13</span><br><span class="line">  Container Runtime Version:  containerd://1.7.13</span><br><span class="line">  Container Runtime Version:  containerd://1.7.13</span><br></pre></td></tr></table></figure><h3 id="kube-proxy-配置"><a href="#kube-proxy-配置" class="headerlink" title="kube-proxy 配置"></a>kube-proxy 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有节点执行</span></span><br><span class="line"><span class="built_in">cat</span> &gt;  /usr/lib/systemd/system/kube-proxy.service &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube Proxy</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-proxy \</span><br><span class="line">  --config=/etc/kubernetes/kube-proxy.yaml \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有k8s节点添加kube-proxy的配置</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/kubernetes/kube-proxy.yaml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="string">bindAddress: 0.0.0.0</span></span><br><span class="line"><span class="string">clientConnection:</span></span><br><span class="line"><span class="string">  acceptContentTypes: &quot;&quot;</span></span><br><span class="line"><span class="string">  burst: 10</span></span><br><span class="line"><span class="string">  contentType: application/vnd.kubernetes.protobuf</span></span><br><span class="line"><span class="string">  kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig</span></span><br><span class="line"><span class="string">  qps: 5</span></span><br><span class="line"><span class="string">clusterCIDR: 10.244.0.0/16</span></span><br><span class="line"><span class="string">configSyncPeriod: 15m0s</span></span><br><span class="line"><span class="string">conntrack:</span></span><br><span class="line"><span class="string">  max: null</span></span><br><span class="line"><span class="string">  maxPerCore: 32768</span></span><br><span class="line"><span class="string">  min: 131072</span></span><br><span class="line"><span class="string">  tcpCloseWaitTimeout: 1h0m0s</span></span><br><span class="line"><span class="string">  tcpEstablishedTimeout: 24h0m0s</span></span><br><span class="line"><span class="string">enableProfiling: false</span></span><br><span class="line"><span class="string">healthzBindAddress: 0.0.0.0:10256</span></span><br><span class="line"><span class="string">hostnameOverride: &quot;&quot;</span></span><br><span class="line"><span class="string">iptables:</span></span><br><span class="line"><span class="string">  masqueradeAll: false</span></span><br><span class="line"><span class="string">  masqueradeBit: 14</span></span><br><span class="line"><span class="string">  minSyncPeriod: 0s</span></span><br><span class="line"><span class="string">  syncPeriod: 30s</span></span><br><span class="line"><span class="string">ipvs:</span></span><br><span class="line"><span class="string">  masqueradeAll: true</span></span><br><span class="line"><span class="string">  minSyncPeriod: 5s</span></span><br><span class="line"><span class="string">  scheduler: &quot;rr&quot;</span></span><br><span class="line"><span class="string">  syncPeriod: 30s</span></span><br><span class="line"><span class="string">kind: KubeProxyConfiguration</span></span><br><span class="line"><span class="string">metricsBindAddress: 127.0.0.1:10249</span></span><br><span class="line"><span class="string">mode: &quot;ipvs&quot;</span></span><br><span class="line"><span class="string">nodePortAddresses: null</span></span><br><span class="line"><span class="string">oomScoreAdj: -999</span></span><br><span class="line"><span class="string">portRange: &quot;&quot;</span></span><br><span class="line"><span class="string">udpIdleTimeout: 250ms</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动kube-proxy</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kube-proxy.service</span><br><span class="line">systemctl status kube-proxy.service</span><br><span class="line">journalctl -u kube-proxy -f</span><br></pre></td></tr></table></figure><h2 id="新增-master-节点"><a href="#新增-master-节点" class="headerlink" title="新增 master 节点"></a>新增 master 节点</h2><p>未完待续</p><h3 id="新增-Etcd-节点"><a href="#新增-Etcd-节点" class="headerlink" title="新增 Etcd 节点"></a>新增 Etcd 节点</h3><p>略</p><h3 id="新增-kube-apiserver-和-kube-scheduler-和-kube-controller-manager"><a href="#新增-kube-apiserver-和-kube-scheduler-和-kube-controller-manager" class="headerlink" title="新增 kube-apiserver 和 kube-scheduler 和 kube-controller-manager"></a>新增 kube-apiserver 和 kube-scheduler 和 kube-controller-manager</h3><p>略</p><h2 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h2><h3 id="部署-flannel-网络插件"><a href="#部署-flannel-网络插件" class="headerlink" title="部署 flannel 网络插件"></a>部署 flannel 网络插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class="line"><span class="comment"># net-conf.json:  这里需要修改为Pod网段</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; kube-flannel.yml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">---</span><br><span class="line">kind: Namespace</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-flannel</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">    pod-security.kubernetes.io/enforce: privileged</span><br><span class="line">---</span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">  name: flannel</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">&quot;&quot;</span></span><br><span class="line">  resources:</span><br><span class="line">  - pods</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">&quot;&quot;</span></span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">&quot;&quot;</span></span><br><span class="line">  resources:</span><br><span class="line">  - nodes/status</span><br><span class="line">  verbs:</span><br><span class="line">  - patch</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">  name: flannel</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: flannel</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: flannel</span><br><span class="line">  namespace: kube-flannel</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">  name: flannel</span><br><span class="line">  namespace: kube-flannel</span><br><span class="line">---</span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-flannel-cfg</span><br><span class="line">  namespace: kube-flannel</span><br><span class="line">  labels:</span><br><span class="line">    tier: node</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">    app: flannel</span><br><span class="line">data:</span><br><span class="line">  cni-conf.json: |</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cbr0&quot;</span>,</span><br><span class="line">      <span class="string">&quot;cniVersion&quot;</span>: <span class="string">&quot;0.3.1&quot;</span>,</span><br><span class="line">      <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;flannel&quot;</span>,</span><br><span class="line">          <span class="string">&quot;delegate&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;hairpinMode&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;isDefaultGateway&quot;</span>: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;portmap&quot;</span>,</span><br><span class="line">          <span class="string">&quot;capabilities&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;portMappings&quot;</span>: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  net-conf.json: |</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;EnableNFTables&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;Backend&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-flannel-ds</span><br><span class="line">  namespace: kube-flannel</span><br><span class="line">  labels:</span><br><span class="line">    tier: node</span><br><span class="line">    app: flannel</span><br><span class="line">    k8s-app: flannel</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: flannel</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        tier: node</span><br><span class="line">        app: flannel</span><br><span class="line">    spec:</span><br><span class="line">      affinity:</span><br><span class="line">        nodeAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            nodeSelectorTerms:</span><br><span class="line">            - matchExpressions:</span><br><span class="line">              - key: kubernetes.io/os</span><br><span class="line">                operator: In</span><br><span class="line">                values:</span><br><span class="line">                - linux</span><br><span class="line">      hostNetwork: <span class="literal">true</span></span><br><span class="line">      priorityClassName: system-node-critical</span><br><span class="line">      tolerations:</span><br><span class="line">      - operator: Exists</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      serviceAccountName: flannel</span><br><span class="line">      initContainers:</span><br><span class="line">      - name: install-cni-plugin</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/iuxt/flannel-cni-plugin:v1.4.1-flannel1</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">        - <span class="built_in">cp</span></span><br><span class="line">        args:</span><br><span class="line">        - -f</span><br><span class="line">        - /flannel</span><br><span class="line">        - /opt/cni/bin/flannel</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: cni-plugin</span><br><span class="line">          mountPath: /opt/cni/bin</span><br><span class="line">      - name: install-cni</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/iuxt/flannel:v0.25.2</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">        - <span class="built_in">cp</span></span><br><span class="line">        args:</span><br><span class="line">        - -f</span><br><span class="line">        - /etc/kube-flannel/cni-conf.json</span><br><span class="line">        - /etc/cni/net.d/10-flannel.conflist</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: cni</span><br><span class="line">          mountPath: /etc/cni/net.d</span><br><span class="line">        - name: flannel-cfg</span><br><span class="line">          mountPath: /etc/kube-flannel/</span><br><span class="line">      containers:</span><br><span class="line">      - name: kube-flannel</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/iuxt/flannel:v0.25.2</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">        - /opt/bin/flanneld</span><br><span class="line">        args:</span><br><span class="line">        - --ip-masq</span><br><span class="line">        - --kube-subnet-mgr</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: <span class="string">&quot;100m&quot;</span></span><br><span class="line">            memory: <span class="string">&quot;50Mi&quot;</span></span><br><span class="line">        securityContext:</span><br><span class="line">          privileged: <span class="literal">false</span></span><br><span class="line">          capabilities:</span><br><span class="line">            add: [<span class="string">&quot;NET_ADMIN&quot;</span>, <span class="string">&quot;NET_RAW&quot;</span>]</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: POD_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.name</span><br><span class="line">        - name: POD_NAMESPACE</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.namespace</span><br><span class="line">        - name: EVENT_QUEUE_DEPTH</span><br><span class="line">          value: <span class="string">&quot;5000&quot;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: run</span><br><span class="line">          mountPath: /run/flannel</span><br><span class="line">        - name: flannel-cfg</span><br><span class="line">          mountPath: /etc/kube-flannel/</span><br><span class="line">        - name: xtables-lock</span><br><span class="line">          mountPath: /run/xtables.lock</span><br><span class="line">      volumes:</span><br><span class="line">      - name: run</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /run/flannel</span><br><span class="line">      - name: cni-plugin</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /opt/cni/bin</span><br><span class="line">      - name: cni</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /etc/cni/net.d</span><br><span class="line">      - name: flannel-cfg</span><br><span class="line">        configMap:</span><br><span class="line">          name: kube-flannel-cfg</span><br><span class="line">      - name: xtables-lock</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /run/xtables.lock</span><br><span class="line">          <span class="built_in">type</span>: FileOrCreate</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建flannel插件</span></span><br><span class="line">kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><h2 id="附加组件部署"><a href="#附加组件部署" class="headerlink" title="附加组件部署"></a>附加组件部署</h2><h3 id="部署-coreDNS"><a href="#部署-coreDNS" class="headerlink" title="部署 coreDNS"></a>部署 coreDNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; coredns.yaml &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:coredns</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">    - <span class="string">&quot;&quot;</span></span><br><span class="line">    resources:</span><br><span class="line">    - endpoints</span><br><span class="line">    - services</span><br><span class="line">    - pods</span><br><span class="line">    - namespaces</span><br><span class="line">    verbs:</span><br><span class="line">    - list</span><br><span class="line">    - watch</span><br><span class="line">  - apiGroups:</span><br><span class="line">    - discovery.k8s.io</span><br><span class="line">    resources:</span><br><span class="line">    - endpointslices</span><br><span class="line">    verbs:</span><br><span class="line">    - list</span><br><span class="line">    - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:coredns</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:coredns</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  Corefile: |</span><br><span class="line">    .:53 &#123;</span><br><span class="line">        errors</span><br><span class="line">        health &#123;</span><br><span class="line">          lameduck 5s</span><br><span class="line">        &#125;</span><br><span class="line">        ready</span><br><span class="line">        kubernetes cluster.local in-addr.arpa ip6.arpa &#123;</span><br><span class="line">          fallthrough in-addr.arpa ip6.arpa</span><br><span class="line">        &#125;</span><br><span class="line">        prometheus :9153</span><br><span class="line">        forward . /etc/resolv.conf &#123;</span><br><span class="line">          max_concurrent 1000</span><br><span class="line">        &#125;</span><br><span class="line">        cache 30</span><br><span class="line">        loop</span><br><span class="line">        reload</span><br><span class="line">        loadbalance</span><br><span class="line">    &#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/name: <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line">    app.kubernetes.io/name: coredns</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment"># replicas: not specified here:</span></span><br><span class="line">  <span class="comment"># 1. Default is 1.</span></span><br><span class="line">  <span class="comment"># 2. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class="line">  strategy:</span><br><span class="line">    <span class="built_in">type</span>: RollingUpdate</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-dns</span><br><span class="line">      app.kubernetes.io/name: coredns</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-dns</span><br><span class="line">        app.kubernetes.io/name: coredns</span><br><span class="line">    spec:</span><br><span class="line">      priorityClassName: system-cluster-critical</span><br><span class="line">      serviceAccountName: coredns</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: <span class="string">&quot;CriticalAddonsOnly&quot;</span></span><br><span class="line">          operator: <span class="string">&quot;Exists&quot;</span></span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/os: linux</span><br><span class="line">      affinity:</span><br><span class="line">         podAntiAffinity:</span><br><span class="line">           requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">           - labelSelector:</span><br><span class="line">               matchExpressions:</span><br><span class="line">               - key: k8s-app</span><br><span class="line">                 operator: In</span><br><span class="line">                 values: [<span class="string">&quot;kube-dns&quot;</span>]</span><br><span class="line">             topologyKey: kubernetes.io/hostname</span><br><span class="line">      containers:</span><br><span class="line">      - name: coredns</span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/iuxt/coredns:1.9.4</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            memory: 170Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 70Mi</span><br><span class="line">        args: [ <span class="string">&quot;-conf&quot;</span>, <span class="string">&quot;/etc/coredns/Corefile&quot;</span> ]</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          mountPath: /etc/coredns</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns</span><br><span class="line">          protocol: UDP</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns-tcp</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 9153</span><br><span class="line">          name: metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        securityContext:</span><br><span class="line">          allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">          capabilities:</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">            drop:</span><br><span class="line">            - all</span><br><span class="line">          readOnlyRootFilesystem: <span class="literal">true</span></span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /health</span><br><span class="line">            port: 8080</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /ready</span><br><span class="line">            port: 8181</span><br><span class="line">            scheme: HTTP</span><br><span class="line">      dnsPolicy: Default</span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: coredns</span><br><span class="line">            items:</span><br><span class="line">            - key: Corefile</span><br><span class="line">              path: Corefile</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/port: <span class="string">&quot;9153&quot;</span></span><br><span class="line">    prometheus.io/scrape: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">&quot;true&quot;</span></span><br><span class="line">    kubernetes.io/name: <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line">    app.kubernetes.io/name: coredns</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    app.kubernetes.io/name: coredns</span><br><span class="line">  clusterIP: 10.96.0.10</span><br><span class="line">  ports:</span><br><span class="line">  - name: dns</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: UDP</span><br><span class="line">  - name: dns-tcp</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - name: metrics</span><br><span class="line">    port: 9153</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f coredns.yaml</span><br></pre></td></tr></table></figure><h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get po -n kube-system -l k8s-app=kube-dns</span><br></pre></td></tr></table></figure><h3 id="验证-CoreDNS"><a href="#验证-CoreDNS" class="headerlink" title="验证 CoreDNS"></a>验证 CoreDNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig @10.96.0.10 kubernetes.default.svc.cluster.local +short</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><a href="/posts/sepu3k/">kubeadm 部署的集群 常见问题汇总</a></p><h3 id="Ubuntu-里面无法启动-CoreDNS"><a href="#Ubuntu-里面无法启动-CoreDNS" class="headerlink" title="Ubuntu 里面无法启动 CoreDNS"></a>Ubuntu 里面无法启动 CoreDNS</h3><p><a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/dns-debugging-resolution/#known-issues">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/dns-debugging-resolution/#known-issues</a></p><p>有些 Linux 发行版本（比如 Ubuntu）默认使用一个本地的 DNS 解析器（systemd-resolved）。 systemd-resolved 会用一个存根文件（Stub File）来覆盖 &#x2F;etc&#x2F;resolv.conf 内容， 从而可能在上游服务器中解析域名产生转发环（forwarding loop）。 这个问题可以通过手动指定 kubelet 的 –resolv-conf 标志为正确的 resolv.conf（如果是 systemd-resolved， 则这个文件路径为 &#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;resolv.conf）来解决。 kubeadm 会自动检测 systemd-resolved 并对应的更改 kubelet 的命令行标志。</p><p>Kubernetes 的安装并不会默认配置节点的 resolv.conf 文件来使用集群的 DNS 服务，因为这个配置对于不同的发行版本是不一样的。这个问题应该迟早会被解决的。</p><p>Linux 的 libc（又名 glibc）默认将 DNS nameserver 记录限制为 3， 而 Kubernetes 需要使用 1 条 nameserver 记录。 这意味着如果本地的安装已经使用了 3 个 nameserver，那么其中有些条目将会丢失。 要解决此限制，节点可以运行 dnsmasq，以提供更多 nameserver 条目。 你也可以使用 kubelet 的 –resolv-conf 标志来解决这个问题。</p><p>如果你使用 Alpine 3.17 或更早版本作为你的基础镜像，DNS 可能会由于 Alpine 的设计问题而无法工作。 在 musl 1.24 版本之前，DNS 存根解析器都没有包括 TCP 回退， 这意味着任何超过 512 字节的 DNS 调用都会失败。请将你的镜像升级到 Alpine 3.18 或更高版本。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建dns解析服务bind9</title>
      <link href="/posts/sf0bjv/"/>
      <url>/posts/sf0bjv/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="built_in">bind</span></span><br></pre></td></tr></table></figure><p>我是 <code>AlmaLinux 9</code> 安装的是 <code>9.16.23</code> 版本</p><h2 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h2><h3 id="修改监听地址"><a href="#修改监听地址" class="headerlink" title="修改监听地址"></a>修改监听地址</h3><p>默认监听地址为 <code>127.0.0.1</code> 需要对外提供服务，修改监听地址，可以改成本机内网 ip，也可以直接修改成 any， 表示任意接口都监听。</p><p><code>vim /etc/named.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listen-on port 53 &#123; any; &#125;;</span><br><span class="line">...</span><br><span class="line">allow-query     &#123; any; &#125;;</span><br></pre></td></tr></table></figure><h3 id="去掉默认配置"><a href="#去掉默认配置" class="headerlink" title="去掉默认配置"></a>去掉默认配置</h3><p><code>vim /etc/named.conf</code></p><p>下面这几行配置我是直接注释掉的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">      type hint;</span><br><span class="line">      file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;/etc/named.root.key&quot;;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="增加-zone-配置"><a href="#增加-zone-配置" class="headerlink" title="增加 zone 配置"></a>增加 zone 配置</h3><p>放在 <code>/etc/named.conf</code> 文件最后面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/* 设置默认上游DNS，本地解析不了的域名从上游获取 */</span><br><span class="line">zone &quot;.&quot; &#123;</span><br><span class="line">    type forward;</span><br><span class="line">    forwarders &#123; 114.114.114.114; 119.29.29.29; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/* 正向查找 i.com 从 i.com 这个文件里查找 */</span><br><span class="line">zone &quot;i.com&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">    file &quot;i.com&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/* 反向查找 ip地址 10 开头的 从 i.loopback 里查找 */</span><br><span class="line">zone &quot;10.IN-ADDR.ARPA&quot; &#123;</span><br><span class="line">    type master;</span><br><span class="line">    file &quot;i.loopback&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="zone-配置"><a href="#zone-配置" class="headerlink" title="zone 配置"></a>zone 配置</h2><p><code>vim /var/named/i.com</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ORIGIN i.com.</span><br><span class="line">$TTL 4h</span><br><span class="line"></span><br><span class="line">i.com.    IN      SOA     ns1.i.com. admin.i.com. (</span><br><span class="line">                                2022021101  ; serial number YYMMDDNN</span><br><span class="line">                                1d          ; Slave Refresh</span><br><span class="line">                                1h          ; Slave Retry Time in case of a problem</span><br><span class="line">                                4w          ; Slave Expire Time</span><br><span class="line">                                2h          ; Maximum Caching Time in case of failed lookups</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">@                  IN  NS      ns1.i.com.</span><br><span class="line">@                  IN  NS      ns2.i.com.</span><br><span class="line">ns1                IN  A       10.0.0.10</span><br><span class="line">ns2                IN  A       10.0.0.20</span><br><span class="line"></span><br><span class="line">a                  IN  A       9.9.9.9</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>TTL 生存周期</li><li>IN SOA 授权信息开始</li><li>ns1.i.com. dns 区域的地址</li><li>admin.i.com. 域名管理员邮箱（不要用@符号）</li><li>10.0.0.30 10.0.0.35 这时两个 dns 服务器的 ip 地址</li><li>a 表示 a.i.com 解析到 9.9.9.9</li></ul><h2 id="反向解析配置"><a href="#反向解析配置" class="headerlink" title="反向解析配置"></a>反向解析配置</h2><p><code>vim /var/named/i.loopback</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ORIGIN 10.IN-ADDR.ARPA.</span><br><span class="line">$TTL 4h</span><br><span class="line">@       IN      SOA     ns1.i.com. admin.i.com. (</span><br><span class="line">                            2022021001  ; serial number YYMMDDNN</span><br><span class="line">                            1d          ; Slave Refresh</span><br><span class="line">                            1h          ; Slave Retry Time in case of a problem</span><br><span class="line">                            4w          ; Slave Expire Time</span><br><span class="line">                            2h          ; Maximum Caching Time in case of failed lookups</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@       IN      NS      ns1.i.com.</span><br><span class="line">@       IN      NS      ns2.i.com.</span><br><span class="line"></span><br><span class="line">; PTR RR maps an IPv4 address to a host name</span><br><span class="line">2.0.0   IN      PTR     shanghai.i.com.</span><br><span class="line">3.0.0   IN      PTR     beijing.i.com.</span><br></pre></td></tr></table></figure><p>说明：<br>反向解析 记录 ip 也是反写的， 2.0.0 表示 0.0.2 ，完整的 ip 就是 10.0.0.2</p><p>在 <code>/etc/named.conf</code> 中， <code>zone &quot;10.IN-ADDR.ARPA&quot; &#123;</code> 也可以改成 <code>&quot;0.0.10.IN-ADDR.ARPA&quot; &#123;</code> 表示匹配 10.0.0 开头的 ip 反查，那么 i.loopback 中的 2.0.0 就可以写成 2</p><h2 id="增加从服务器"><a href="#增加从服务器" class="headerlink" title="增加从服务器"></a>增加从服务器</h2><table><thead><tr><th>服务器</th><th>ip</th></tr></thead><tbody><tr><td>主 DNS 服务器</td><td>10.0.0.10</td></tr><tr><td>从 DNS 服务器</td><td>10.0.0.20</td></tr></tbody></table><h3 id="主服务器配置"><a href="#主服务器配置" class="headerlink" title="主服务器配置"></a>主服务器配置</h3><p>在主服务器的区域配置文件中允许该从服务器的更新请求，即修改 allow-update {允许更新区域信息的主机地址;}; 参数，然后重启主服务器的 DNS 服务程序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/* 正向查找 i.com 从 i.com 这个文件里查找 */</span><br><span class="line">zone &quot;i.com&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">    file &quot;i.com&quot;;</span><br><span class="line">    allow-update &#123; 10.0.0.20; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/* 反向查找 ip地址 10 开头的 从 i.loopback 里查找 */</span><br><span class="line">zone &quot;10.IN-ADDR.ARPA&quot; &#123;</span><br><span class="line">    type master;</span><br><span class="line">    file &quot;i.loopback&quot;;</span><br><span class="line">    allow-update &#123; 10.0.0.20; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>增加了从服务器，每次更新主配置文件，需要同步更新 serial number</p></div><h3 id="从服务器配置"><a href="#从服务器配置" class="headerlink" title="从服务器配置"></a>从服务器配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/* 正向查找 i.com 从 i.com 这个文件里查找 */</span><br><span class="line">zone &quot;i.com&quot; IN &#123;</span><br><span class="line">    type slave;</span><br><span class="line">    file &quot;i.com&quot;;</span><br><span class="line">    masters &#123; 10.0.0.10; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/* 反向查找 ip地址 10 开头的 从 i.loopback 里查找 */</span><br><span class="line">zone &quot;10.IN-ADDR.ARPA&quot; &#123;</span><br><span class="line">    type slave;</span><br><span class="line">    file &quot;i.loopback&quot;;</span><br><span class="line">    masters &#123; 10.0.0.10; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>等待同步完成后， 在 <code>/var/named/</code> 目录里面就能看到文件。</p><h4 id="手动同步"><a href="#手动同步" class="headerlink" title="手动同步"></a>手动同步</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从服务器上执行</span></span><br><span class="line">rndc retransfer &lt;zone&gt;</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p><a href="/posts/ae8cd9d9/">检查域名解析</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> DNS </tag>
            
            <tag> 开源软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openssh配置记录</title>
      <link href="/posts/658a72d5/"/>
      <url>/posts/658a72d5/</url>
      
        <content type="html"><![CDATA[<h2 id="优化登录速度"><a href="#优化登录速度" class="headerlink" title="优化登录速度"></a>优化登录速度</h2><p>关闭 UseDNS 和 GSSAPIAuthentication 可以加速 SSH 登录, UseDNS 和 GSSAPIAuthentication 是什么？</p><p>每次登录 SSH 时总是要停顿等待一下才能连接上，,这是因为 OpenSSH 服务器有一个 DNS 查找选项 UseDNS 默认情况下是打开的。</p><blockquote><p>UseDNS 选项打开状态下，当客户端试图登录 SSH 服务器时，服务器端先根据客户端的 IP 地址进行 DNS，PTR 反向查询出客户端的主机名，然后根据查询出的客户端主机名进行 DNS 正向 A 记录查询，验证与其原始 IP 地址是否一致，这是防止客户端欺骗的一种措施，但一般我们的是动态 IP 不会有 PTR 记录，打开这个选项不过是在白白浪费时间而已，不如将其关闭。</p><p>GSSAPI ( Generic Security Services Application Programming Interface) 是一套类似 Kerberos 5 的通用网络安全系统接口。该接口是对各种不同的客户端服务器安全机制的封装，以消除安全接口的不同，降低编程难度。但该接口在目标机器无域名解析时会有问题</p></blockquote><p>编辑配置文件 <code>vim /etc/ssh/sshd_config</code></p><p>找到 UseDNS 选项，去掉注释 <code>#UseDNS yes</code> 改为 <code>UseDNS no</code><br>找到 GSSAPIAuthentication 选项，去掉注释 <code>#GSSAPIAuthentication yes</code> 改为 <code>GSSAPIAuthentication no</code><br>保存配置文件</p><p>重启 OpenSSH 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> OpenSSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的ulimit限制</title>
      <link href="/posts/c1a3cdd/"/>
      <url>/posts/c1a3cdd/</url>
      
        <content type="html"><![CDATA[<h2 id="临时设置"><a href="#临时设置" class="headerlink" title="临时设置"></a>临时设置</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>ulimit -a</td><td>查看所有限制值</td></tr><tr><td>ulimit -n 65535</td><td>临时调整 open files 限制值</td></tr></tbody></table><h2 id="永久设置"><a href="#永久设置" class="headerlink" title="永久设置"></a>永久设置</h2><p>配置文件:<br>&#x2F;etc&#x2F;security&#x2F;limits.conf</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*               soft    nofile          65535</span><br><span class="line">*               hard    nofile          65535</span><br><span class="line">*               hard    <span class="built_in">nproc</span>           65535</span><br><span class="line">*               soft    <span class="built_in">nproc</span>           65535</span><br><span class="line">root            soft    nofile          65535</span><br><span class="line">root            hard    nofile          65535</span><br><span class="line">root            hard    <span class="built_in">nproc</span>           65535</span><br><span class="line">root            soft    <span class="built_in">nproc</span>           65535</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*               soft    nofile          65535</span><br><span class="line">*               hard    nofile          65535</span><br><span class="line">*               hard    <span class="built_in">nproc</span>           65535</span><br><span class="line">*               soft    <span class="built_in">nproc</span>           65535</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSLg配置图形支持和配置rime输入法</title>
      <link href="/posts/81886814/"/>
      <url>/posts/81886814/</url>
      
        <content type="html"><![CDATA[<p>WSLg 是微软的 wsl2 中自带的显示图形界面的功能，可以和 windows 完美融合在一块，不过由于 wsl 系统比较精简，会缺少一些图形包和输入法等。</p><h2 id="设置中文显示"><a href="#设置中文显示" class="headerlink" title="设置中文显示"></a>设置中文显示</h2><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装中文字体</span></span><br><span class="line">sudo apt install language-pack-zh-hans fonts-noto-cjk fonts-noto-cjk-extra</span><br><span class="line"></span><br><span class="line"><span class="comment"># locales 配置 en_US.UTF-8 和 zh_CN.UTF-8 </span></span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g&#x27;</span> /etc/locale.gen</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^# zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/g&#x27;</span> /etc/locale.gen</span><br><span class="line"></span><br><span class="line">sudo locale-gen</span><br></pre></td></tr></table></figure><h3 id="设置显示语言为中文"><a href="#设置显示语言为中文" class="headerlink" title="设置显示语言为中文"></a>设置显示语言为中文</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /etc/default/locale &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">LANG=zh_CN.UTF-8</span><br><span class="line">LANGUAGE=<span class="string">&quot;zh_CN:zh:en_US:en&quot;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="配置中文输入法"><a href="#配置中文输入法" class="headerlink" title="配置中文输入法"></a>配置中文输入法</h2><h3 id="安装-im-config"><a href="#安装-im-config" class="headerlink" title="安装 im-config"></a>安装 im-config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zenity im-config</span><br><span class="line">im-config</span><br><span class="line"><span class="comment"># 选择fcitx5，其余都选OK</span></span><br></pre></td></tr></table></figure><h3 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk4 fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 fcitx5-frontend-qt5 fcitx5-config-qt</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>需要修改 profile 文件， 开机自启动 fcitx5 和设置环境变量， 注意以下适用于 bash，如果是 zsh，则对应的路径是 <code>/etc/zsh/zprofile</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> -a /etc/profile &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">/usr/bin/fcitx5 --<span class="built_in">disable</span>=wayland -d --verbose <span class="string">&#x27;*&#x27;</span>=0</span><br><span class="line"><span class="built_in">export</span> INPUT_METHOD=fcitx</span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=fcitx</span><br><span class="line"><span class="built_in">export</span> SDL_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> GLFW_IM_MODULE=ibus</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>重启一下 wsl</p><h3 id="增加输入法"><a href="#增加输入法" class="headerlink" title="增加输入法"></a>增加输入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fcitx5-configtool</span><br></pre></td></tr></table></figure><p>在界面中去掉默认输入法，增加中文输入法</p><h3 id="配置常用脚本"><a href="#配置常用脚本" class="headerlink" title="配置常用脚本"></a>配置常用脚本</h3><p>由于 wsl 的图形界面不完整，没办法在任务栏右击输入法图标的方式来执行 部署 或 同步 任务，所以通过脚本来实现。</p><p>同步脚本：</p><blockquote><p>同步位置配置在 <code>~/.local/share/fcitx5/rime/installation.yaml</code> 内的 <code>sync_dir: &quot;/mnt/c/Users/iuxt/OneDrive/sync/rime_sync</code>“</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">pkill fcitx5</span><br><span class="line"><span class="built_in">cd</span> ~/.local/share/fcitx5/rime/</span><br><span class="line">rime_dict_manager -s</span><br><span class="line">/usr/bin/fcitx5 --<span class="built_in">disable</span>=wayland -d --verbose <span class="string">&#x27;*&#x27;</span>=0</span><br></pre></td></tr></table></figure><p>部署脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">pkill fcitx5</span><br><span class="line">rime_deployer --build ~/.local/share/fcitx5/rime/ /usr/share/rime-data ~/.local/share/fcitx5/rime/build</span><br><span class="line">/usr/bin/fcitx5 --<span class="built_in">disable</span>=wayland -d --verbose <span class="string">&#x27;*&#x27;</span>=0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用inkscape制作svg封面图</title>
      <link href="/posts/sel6im/"/>
      <url>/posts/sel6im/</url>
      
        <content type="html"><![CDATA[<p>注意：本文不适用于将其他格式转换成 svg ，只适用于原生 svg</p><p>svg 全名叫可缩放矢量图形，就算放大也不会失真，下面是个对比：</p><h2 id="svg-示例"><a href="#svg-示例" class="headerlink" title="svg 示例"></a>svg 示例</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/public/elasticsearch.svg" alt="svg示例图|472"></p><h2 id="png-示例"><a href="#png-示例" class="headerlink" title="png 示例"></a>png 示例</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/elasticsearch.webp" alt="elasticsearch.webp|471"></p><h2 id="使用-inkscape-调整-svg-属性"><a href="#使用-inkscape-调整-svg-属性" class="headerlink" title="使用 inkscape 调整 svg 属性"></a>使用 inkscape 调整 svg 属性</h2><h3 id="调整画布大小"><a href="#调整画布大小" class="headerlink" title="调整画布大小"></a>调整画布大小</h3><p>作用是设置成 3:2 的分辨率</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300829087.png" alt="image.png|830"></p><p>大小 调整好后，调整缩放，调整到自己觉得 ok 就行，可以多测试效果。</p><h3 id="调整元素的位置"><a href="#调整元素的位置" class="headerlink" title="调整元素的位置"></a>调整元素的位置</h3><p>比如我想要让图标在文字的上方</p><p>到图层里，选择要操作的图层，使用鼠标上下调整位置（左右位置通过居中来自动调整）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300834196.png" alt="image.png|829"></p><p>这里如果调整一个元素，其他的元素跟着一块动了，你需要到图层里面看看有没有分组，要先取消分组才能继续调整。</p><p>一个整体想要一块调整， 那需要先放到一个分组里面，快捷键 <code>Ctrl + G</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300839850.png" alt="image.png|828"></p><p>在对齐与分布里面，相较于<strong>页面</strong>选择水平居中</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300840422.png" alt="image.png|823"></p><h2 id="使用-VSCode-插件来压缩-svg"><a href="#使用-VSCode-插件来压缩-svg" class="headerlink" title="使用 VSCode 插件来压缩 svg"></a>使用 VSCode 插件来压缩 svg</h2><p>svg 本质上就是 xml 文本文件，可以通过 VSCode 插件来压缩大小（矢量图形，压缩不会损失画质）</p><p>安装一个 svg 扩展，我用的是这个：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300848735.png" alt="image.png"></p><p>然后打开 svg 文件，右键会有个 压缩 svg 的选项。</p><h3 id="压缩前后文件内容对比"><a href="#压缩前后文件内容对比" class="headerlink" title="压缩前后文件内容对比"></a>压缩前后文件内容对比</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300850919.png" alt="image.png|804"></p><h3 id="压缩前后文件大小对比"><a href="#压缩前后文件大小对比" class="headerlink" title="压缩前后文件大小对比"></a>压缩前后文件大小对比</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202405300851886.png" alt="image.png"></p><p>注意： 使用其他图片转换成的 svg 不行，并不是真的原生 svg</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> svg </tag>
            
            <tag> 矢量图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes集群中挂载configmap到pod中</title>
      <link href="/posts/75a76e3b/"/>
      <url>/posts/75a76e3b/</url>
      
        <content type="html"><![CDATA[<h2 id="挂载整个-configmap"><a href="#挂载整个-configmap" class="headerlink" title="挂载整个 configmap"></a>挂载整个 configmap</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">1.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    11111111111111111</span></span><br><span class="line"><span class="string"></span>  <span class="attr">2.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    22222222222222222</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/busybox:1.36.1</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">sleep</span> <span class="string">infinity</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span>                 <span class="comment"># volumes的名字</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/</span>                     <span class="comment"># 容器内的目录</span></span><br></pre></td></tr></table></figure><p>此时 pod 内 <code>/var</code> 目录下会有两个文件 1.txt 和 2.txt。另外，如果 <code>/var</code> 目录原来是有数据的，那么挂载后里面也就只有 1.txt 和 2.txt， 看不到原来的文件了。（和挂载类似）</p><h2 id="挂载指定的-key-到目录"><a href="#挂载指定的-key-到目录" class="headerlink" title="挂载指定的 key 到目录"></a>挂载指定的 key 到目录</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">1.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    11111111111111111</span></span><br><span class="line"><span class="string"></span>  <span class="attr">2.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    22222222222222222</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="number">1.</span><span class="string">txt</span>                      <span class="comment"># 对应的configmap的key</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">logstash.yml</span>              <span class="comment"># 挂载到容器内的文件名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="number">2.</span><span class="string">txt</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">jvm.options</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/busybox:1.36.1</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">sleep</span> <span class="string">infinity</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span>                 <span class="comment"># volumes的名字</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/</span>                     <span class="comment"># 容器内的目录</span></span><br></pre></td></tr></table></figure><p>如上配置， 在容器中文件即为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/var/logstash.yml     --&gt;    11111111111111111</span><br><span class="line">/var/jvm.options      --&gt;    22222222222222222</span><br></pre></td></tr></table></figure><p>这种挂载方式 会影响到原 &#x2F;var&#x2F; 目录中的文件和目录。</p><p>增加 item 有两个作用：</p><ul><li>可以自定义挂载后的文件名</li><li>可以选择 configmap 里面哪些 key 挂载，哪些 key 不挂载</li></ul><h2 id="使用-subpath-挂载-configmap"><a href="#使用-subpath-挂载-configmap" class="headerlink" title="使用 subpath 挂载 configmap"></a>使用 subpath 挂载 configmap</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">1.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    11111111111111111</span></span><br><span class="line"><span class="string"></span>  <span class="attr">2.txt:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    22222222222222222</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">busybox-configmap</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/busybox:1.36.1</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">sleep</span> <span class="string">infinity</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span>                      <span class="comment"># volume的名字</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/1.txt</span>                     <span class="comment"># 容器内的路径</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="number">1.</span><span class="string">txt</span>                            <span class="comment"># 指定configmap里面的key</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/2.txt</span></span><br><span class="line">          <span class="attr">subPath:</span> <span class="number">2.</span><span class="string">txt</span></span><br></pre></td></tr></table></figure><p>这种挂载方式不会影响到 &#x2F;var 目录内原始的文件，只是增加了这两个文件。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 挂载 </tag>
            
            <tag> configmap </tag>
            
            <tag> volume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Kubernetes集群中部署多个Nginx Ingress Controller</title>
      <link href="/posts/c4b9bd31/"/>
      <url>/posts/c4b9bd31/</url>
      
        <content type="html"><![CDATA[<p>为什么要在集群中部署两个 Nginx Ingress Controller？ 因为公司的入口目前是在一个 Ingress 上， 公网域名也解析到了这个 Ingress Controller 上面，不过有些内网的服务，我们并不想让它暴露在外，那么可以再部署一个内网使用的 Ingress Controller。</p><p>官方介绍地址：<a href="https://kubernetes.github.io/ingress-nginx/user-guide/multiple-ingress/">https://kubernetes.github.io/ingress-nginx/user-guide/multiple-ingress/</a></p><p>我准备将这两个 ingressclass 放在两个 namespace 里面。</p><h2 id="先抽出-clusterrole-和-clusterrolebinding"><a href="#先抽出-clusterrole-和-clusterrolebinding" class="headerlink" title="先抽出 clusterrole 和 clusterrolebinding"></a>先抽出 clusterrole 和 clusterrolebinding</h2><p>因为可以使用一个 clusterrole，没必要每个 ingress controller 都创建 clusterrole</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">coordination.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">leases</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingressclasses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">validatingwebhookconfigurations</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="comment"># 这里绑定了两个ServiceAccount</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">intranet-ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">intranet-ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="comment"># 这里绑定了两个ServiceAccount</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">intranet-ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">intranet-ingress-nginx</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">internet-ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">internet-ingress-nginx</span></span><br></pre></td></tr></table></figure><h2 id="修改-namespace"><a href="#修改-namespace" class="headerlink" title="修改 namespace"></a>修改 namespace</h2><p>所有 namespace 都需要修改成新的</p><h2 id="修改-ingressclass"><a href="#修改-ingressclass" class="headerlink" title="修改 ingressclass"></a>修改 ingressclass</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">internet</span>                                        <span class="comment"># ingressclass 名字，和controller的启动参数需要保持一致</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">controller:</span> <span class="string">k8s.io/internet-ingress-nginx</span>             <span class="comment"># controller 名字，和controller的启动参数需要保持一致</span></span><br></pre></td></tr></table></figure><h2 id="修改启动参数"><a href="#修改启动参数" class="headerlink" title="修改启动参数"></a>修改启动参数</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">minReadySeconds:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/instance:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">internet-ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--election-id=ingress-controller-leader</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--controller-class=k8s.io/internet-ingress-nginx</span>            <span class="comment"># 和上面的controller保持一致</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--ingress-class=internet</span>                                    <span class="comment"># 和上面的ingressclass保持一致</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook=:8443</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook-certificate=/usr/local/certificates/cert</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook-key=/usr/local/certificates/key</span></span><br></pre></td></tr></table></figure><h2 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h2><p>这是我修改好的 yaml 文件，可以直接 apply 即可创建 ingress controller</p><p><a href="https://github.com/iuxt/ops/tree/master/kubernetes/infra/nginx-ingress/nginx-ingress-dual">https://github.com/iuxt/ops/tree/master/kubernetes/infra/nginx-ingress/nginx-ingress-dual</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Ingress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下tmp目录的管理</title>
      <link href="/posts/23ada041/"/>
      <url>/posts/23ada041/</url>
      
        <content type="html"><![CDATA[<h2 id="生成临时文件"><a href="#生成临时文件" class="headerlink" title="生成临时文件"></a>生成临时文件</h2><p>可以使用 mktemp 命令生成 tmp 文件，mktemp -d 生成临时目录，避免临时目录重复使用的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">tmp_file=<span class="string">&quot;<span class="subst">$(mktemp)</span>&quot;</span></span><br><span class="line">tmp_folder=<span class="string">&quot;<span class="subst">$(mktemp -d)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$tmp_file</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$tmp_folder</span></span><br></pre></td></tr></table></figure><h2 id="tmp-目录定时清理"><a href="#tmp-目录定时清理" class="headerlink" title="tmp 目录定时清理"></a>tmp 目录定时清理</h2><p>这个是由 systemd 的几个模块实现的， 在 centos7 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemd-tmpfiles-setup.service  ：Create Volatile Files and Directories</span><br><span class="line">systemd-tmpfiles-setup-dev.service：Create static device nodes <span class="keyword">in</span> /dev</span><br><span class="line">systemd-tmpfiles-clean.service ：Cleanup of Temporary Directories</span><br></pre></td></tr></table></figure><p>配置文件也有 3 个地方：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/tmpfiles.d/*.conf</span><br><span class="line">/run/tmpfiles.d/*.conf</span><br><span class="line">/usr/lib/tmpfiles.d/*.conf</span><br></pre></td></tr></table></figure><p>&#x2F;tmp 目录的清理规则主要取决于 <code>/usr/lib/tmpfiles.d/tmp.conf</code> 文件的设定，默认的配置内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  This file is part of systemd.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  systemd is free software; you can redistribute it and/or modify it</span></span><br><span class="line"><span class="comment">#  under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="comment">#  the Free Software Foundation; either version 2.1 of the License, or</span></span><br><span class="line"><span class="comment">#  (at your option) any later version.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See tmpfiles.d(5) for details</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clear tmp directories separately, to make them easier to override</span></span><br><span class="line">v /tmp 1777 root root 10d</span><br><span class="line">v /var/tmp 1777 root root 30d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exclude namespace mountpoints created with PrivateTmp=yes</span></span><br><span class="line">x /tmp/systemd-private-%b-*</span><br><span class="line">X /tmp/systemd-private-%b-*/tmp</span><br><span class="line">x /var/tmp/systemd-private-%b-*</span><br><span class="line">X /var/tmp/systemd-private-%b-*/tmp</span><br></pre></td></tr></table></figure><p>如你不想让系统自动清理&#x2F;tmp 下以 tomcat 开头的目录，那么增加下面这条内容到配置文件中即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x /tmp/tomcat.*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离线安装Docker</title>
      <link href="/posts/b4ed6a46/"/>
      <url>/posts/b4ed6a46/</url>
      
        <content type="html"><![CDATA[<h2 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h2><p>离线二进制包下载地址</p><ul><li>官方地址：<a href="https://downrload.docker.com/linux/static/stable/x86_64/">https://downrload.docker.com/linux/static/stable/x86_64/</a></li><li>阿里云镜像地址：<a href="https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/">https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/docker-24.0.9.tgz</span><br><span class="line"></span><br><span class="line">tar xf docker-24.0.9.tgz</span><br><span class="line"><span class="built_in">mv</span> docker/* /usr/bin/</span><br></pre></td></tr></table></figure><h2 id="创建-systemd-配置"><a href="#创建-systemd-配置" class="headerlink" title="创建 systemd 配置"></a>创建 systemd 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/containerd.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=containerd container runtime</span></span><br><span class="line"><span class="string">Documentation=https://containerd.io</span></span><br><span class="line"><span class="string">After=network.target local-fs.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStartPre=-/sbin/modprobe overlay</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/bin/containerd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"><span class="string">Delegate=yes</span></span><br><span class="line"><span class="string">KillMode=process</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string">LimitNPROC=infinity</span></span><br><span class="line"><span class="string">LimitCORE=infinity</span></span><br><span class="line"><span class="string">LimitNOFILE=infinity</span></span><br><span class="line"><span class="string">TasksMax=infinity</span></span><br><span class="line"><span class="string">OOMScoreAdjust=-999</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/docker.service &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Docker Application Container Engine</span></span><br><span class="line"><span class="string">Documentation=https://docs.docker.com</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -s HUP $MAINPID</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">LimitNOFILE=infinity</span></span><br><span class="line"><span class="string">LimitNPROC=infinity</span></span><br><span class="line"><span class="string">LimitCORE=infinity</span></span><br><span class="line"><span class="string">TimeoutStartSec=0</span></span><br><span class="line"><span class="string">Delegate=yes</span></span><br><span class="line"><span class="string">KillMode=process</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/docker.socket &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Docker Socket for the API</span></span><br><span class="line"><span class="string">PartOf=docker.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Socket]</span></span><br><span class="line"><span class="string">ListenStream=/var/run/docker.sock</span></span><br><span class="line"><span class="string">SocketMode=0660</span></span><br><span class="line"><span class="string">SocketUser=root</span></span><br><span class="line"><span class="string">SocketGroup=docker</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=sockets.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /etc/docker</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;1g&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor接入外部trivy镜像漏洞扫描</title>
      <link href="/posts/8b932a1b/"/>
      <url>/posts/8b932a1b/</url>
      
        <content type="html"><![CDATA[<p>harbor 接入 trivy 漏洞扫描, 用到的开源工具 <a href="https://github.com/aquasecurity/harbor-scanner-trivy">harbor-scanner-trivy</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>需要依赖 Redis, 先安装 Redis</p><h3 id="安装-trivy"><a href="#安装-trivy" class="headerlink" title="安装 trivy"></a>安装 trivy</h3><p>trivy 是扫描核心组件， 需要安装，参考 trivy 官网安装文档</p><p><a href="https://aquasecurity.github.io/trivy/v0.41/getting-started/installation/">https://aquasecurity.github.io/trivy/v0.41/getting-started/installation/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">RELEASE_VERSION=$(grep -Po <span class="string">&#x27;(?&lt;=VERSION_ID=&quot;)[0-9]&#x27;</span> /etc/os-release)</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF | sudo tee -a /etc/yum.repos.d/trivy.repo</span></span><br><span class="line"><span class="string">[trivy]</span></span><br><span class="line"><span class="string">name=Trivy repository</span></span><br><span class="line"><span class="string">baseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/$RELEASE_VERSION/\$basearch/</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgkey=https://aquasecurity.github.io/trivy-repo/rpm/public.key</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sudo yum -y install trivy</span><br></pre></td></tr></table></figure><p>trivy 首次运行会从 github 下载漏洞数据库，需要确保机器可以连接 GitHub，执行 <code>trivy image --download-db-only</code> 会下载 db，db 数据存储在 <code>~/.cache/trivy</code></p><h3 id="安装-scanner-trivy"><a href="#安装-scanner-trivy" class="headerlink" title="安装 scanner-trivy"></a>安装 scanner-trivy</h3><p>开源地址：<a href="https://github.com/aquasecurity/harbor-scanner-trivy">https://github.com/aquasecurity/harbor-scanner-trivy</a></p><p>scanner-trivy 是通过环境变量读取配置</p><p>启动命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SCANNER_API_SERVER_ADDR=:8181 SCANNER_REDIS_URL=redis://localhost:6379 ./scanner-trivy</span><br></pre></td></tr></table></figure><p>或者通过 supervisor 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[program:trivy]</span><br><span class="line">numprocs=1</span><br><span class="line">user=root</span><br><span class="line"><span class="built_in">command</span>=/data/server/trivy/scanner-trivy</span><br><span class="line">directory=/data/server/trivy/</span><br><span class="line">redirect_stderr=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/data/logs/trivy.log</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">startsecs=10</span><br><span class="line">environment=SCANNER_API_SERVER_ADDR=:8181,SCANNER_REDIS_URL=redis://localhost:6379</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>harbor 系统管理 审查服务 扫描器 里面添加 trivy 地址：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202305121619236.png" alt="trivy扫描器"></p><p>然后就可以正常扫描镜像了</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202305121624912.png" alt="扫描结果"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="使用国内镜像更新"><a href="#使用国内镜像更新" class="headerlink" title="使用国内镜像更新"></a>使用国内镜像更新</h3><p>借助 <a href="https://github.com/oras-project/oras">oras</a> 来拉取镜像， 需要先安装 <a href="https://github.com/oras-project/oras">oras</a></p><p>更新数据库的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/trivy &amp;&amp; <span class="built_in">rm</span> -rf /tmp/db.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! /usr/local/bin/oras  pull ghcr.nju.edu.cn/aquasecurity/trivy-db:2 -v --insecure ;<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;pull trivy-db failed&quot;</span> &gt;&gt; /tmp/trivy.log</span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /tmp/trivy &amp;&amp; tar -zxvf /tmp/db.tar.gz -C /tmp/trivy</span><br><span class="line">/bin/cp -rfp /tmp/trivy/* /root/.cache/trivy/db/</span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/trivy &amp;&amp; <span class="built_in">rm</span> -rf /tmp/db.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/trivy-java &amp;&amp; <span class="built_in">rm</span> -rf /tmp/javadb.tar.gz</span><br><span class="line"><span class="keyword">if</span> ! /usr/local/bin/oras  pull ghcr.nju.edu.cn/aquasecurity/trivy-java-db:1  -v --insecure ;<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;pull trivy-java-db failed&quot;</span> &gt;&gt; /tmp/trivy.log</span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /tmp/trivy-java  &amp;&amp; tar -zxvf /tmp/javadb.tar.gz -C /tmp/trivy-java</span><br><span class="line">/bin/cp -rfp /tmp/trivy-java/* /root/.cache/trivy/java-db</span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/trivy-java &amp;&amp; <span class="built_in">rm</span> -rf /tmp/javadb.tar.gz</span><br></pre></td></tr></table></figure><p>使用 <code>crontab</code> 执行此脚本， 一天一次即可。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 镜像 </tag>
            
            <tag> harbor </tag>
            
            <tag> 容器 </tag>
            
            <tag> 漏洞扫描 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python常用配置</title>
      <link href="/posts/b19de2c2/"/>
      <url>/posts/b19de2c2/</url>
      
        <content type="html"><![CDATA[<h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><h3 id="升级-pip-版本"><a href="#升级-pip-版本" class="headerlink" title="升级 pip 版本"></a>升级 pip 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://mirrors.ustc.edu.cn/pypi/web/simple pip -U</span><br></pre></td></tr></table></figure><h2 id="镜像源"><a href="#镜像源" class="headerlink" title="镜像源"></a>镜像源</h2><p>中科大源配置说明： <a href="https://mirrors.ustc.edu.cn/help/pypi.html">https://mirrors.ustc.edu.cn/help/pypi.html</a></p><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://mirrors.ustc.edu.cn/pypi/web/simple package</span><br></pre></td></tr></table></figure><h3 id="设为默认"><a href="#设为默认" class="headerlink" title="设为默认"></a>设为默认</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">通过pip命令来配置</button><button type="button" class="tab">通过配置文件来配置</button></div><div class="tab-contents"><div class="tab-item-content active"><p>升级 pip 到最新的版本 (&gt;&#x3D;10.0.0) 后进行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url https://mirrors.ustc.edu.cn/pypi/web/simple</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>vim ~&#x2F;.config&#x2F;pip&#x2F;pip.conf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://mirrors.ustc.edu.cn/pypi/web/simple</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="windows-调用虚拟环境"><a href="#windows-调用虚拟环境" class="headerlink" title="windows 调用虚拟环境"></a>windows 调用虚拟环境</h2><p>在 bat 脚本中调用 Python 虚拟环境，可以使用</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">.\venv\Scripts\python.exe ocr.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Nginx反向代理域名</title>
      <link href="/posts/bad354d3/"/>
      <url>/posts/bad354d3/</url>
      
        <content type="html"><![CDATA[<p>需求如下：研发代码里写死了地址 <a href="https://b.com/">https://b.com</a> 现在在不想发布新代码的情况下修改地址为 <a href="https://a.com/">https://a.com</a></p><h2 id="手动增加反向代理的-header"><a href="#手动增加反向代理的-header" class="headerlink" title="手动增加反向代理的 header"></a>手动增加反向代理的 header</h2><p>先 <code>ping a.com</code> 获取到服务器的 ip</p><p>所以临时在 pod 里面新增了 nginx 服务，配置如下，由于是代理 https 服务，还需要配置 ssl 证书，刚好有证书。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  ssl_certificate   /etc/nginx/ssl.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/ssl.key;</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  server_name b.com;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass https://139.224.186.170;                        # ping 出来的域名IP</span><br><span class="line">    proxy_set_header HOST a.com;                  # 增加header HOST: a.com</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="优化写法"><a href="#优化写法" class="headerlink" title="优化写法"></a>优化写法</h2><p>nginx 提供了内置变量 $proxy_host，优化写法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  ssl_certificate   /etc/nginx/ssl.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/ssl.key;</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  server_name b.com;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass https://a.com;</span><br><span class="line">    proxy_set_header HOST $proxy_host;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="本地绑定-hosts"><a href="#本地绑定-hosts" class="headerlink" title="本地绑定 hosts"></a>本地绑定 hosts</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   b.com</span><br></pre></td></tr></table></figure><h2 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h2><p>这个时候两个域名访问效果一模一样了.</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304181941595.png" alt="访问效果"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python解析xml</title>
      <link href="/posts/9f75a5fc/"/>
      <url>/posts/9f75a5fc/</url>
      
        <content type="html"><![CDATA[<p>xml 是一种固有的分层数据格式，最自然的表示方式是解析成树状。 ElementTree 将整个 xml 文档解析成树状结构， Element 就表示这个树状结构中的单节点。整个 xml 文档与 Python 交互（读取和写入文件）是在 ElementTree（相当于整棵树）上完成。单个 xml 元素及其子元素的交互是在 Element（相当于 leaf）上完成。</p><h2 id="XML-语法"><a href="#XML-语法" class="headerlink" title="XML 语法"></a>XML 语法</h2><h3 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h3><p>从 XML 1.1 开始，在一个完整的 XML 文档中，必须包含一个 XML 文档的声明，并且该声明必须位于文档的第一行。XML 文档声明的语法格式如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;version&quot;</span> encoding=<span class="string">&quot;value&quot;</span> standalone=<span class="string">&quot;value&quot;</span> ?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>version：用于指定遵循 XML 规范的版本号。在 XML 声明中必须包含 version 属性，且该属性必须放在 XML 声明中其他属性之前。</li><li>encoding：用来指定 XML 文档所使用的编码集。</li><li>standalone：用来指定该 XML 文档是否和一个外部文档嵌套使用，取值为 yes 或 no。如果设置属性值为 yes，说明是一个独立的 XML 文档，与外部文件无关联；如果设置属性值为 no，说明 XML 文档不独立。</li></ul><h3 id="元素定义"><a href="#元素定义" class="headerlink" title="元素定义"></a>元素定义</h3><p>XML 文档中的主体内容都是由元素（Element）组成的，元素是以树形分层结构排列的，一个元素可以嵌套在另一个元素中。XML 文档中有且仅有一个顶层元素，称为文档元素或根元素。元素一般是由开始标签、属性、元素内容和结束标签构成，具体示例如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">城市</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">城市</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果一个元素中没有嵌套子元素，也没有包含文本内容，称为空元素，比如 <code>&lt; img &gt;&lt; /img &gt;</code> 可以简写为 <code>&lt; img/ &gt;</code></p><h3 id="属性定义"><a href="#属性定义" class="headerlink" title="属性定义"></a>属性定义</h3><p>在 XML 文档中，可以为元素定义属性。属性是对元素的进一步描述和说明。在一个元素中，可以自定义多个属性，属性是依附于元素存在的，并且每个属性都有自己的名称和取值，具体示例如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">售价</span> <span class="attr">单位</span>=<span class="string">&quot;元&quot;</span>&gt;</span>68<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要注意的是，在 XML 文档中，属性的命名规范与元素相同，属性值必须要用双引号（””）或者单引号（’’）引起来，否则被视为错误。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>注释是为了便于阅读和理解，如果想在 XML 文档中插入一些附加信息，比如作者姓名、地址或电话等，这些信息是对文档结构或文档内容的解释，不属于 XML 文档的内容，因此 XML 解析器不会处理注释内容。具体语法格式如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释信息 --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="脚本举例"><a href="#脚本举例" class="headerlink" title="脚本举例"></a>脚本举例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"></span><br><span class="line">xml_text = <span class="string">&#x27;&#x27;&#x27;&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;namesilo&gt;</span></span><br><span class="line"><span class="string">    &lt;request&gt;</span></span><br><span class="line"><span class="string">        &lt;operation&gt;dnsListRecords&lt;/operation&gt;</span></span><br><span class="line"><span class="string">        &lt;ip&gt;111.111.111.111&lt;/ip&gt;</span></span><br><span class="line"><span class="string">    &lt;/request&gt;</span></span><br><span class="line"><span class="string">    &lt;reply&gt;</span></span><br><span class="line"><span class="string">        &lt;code&gt;300&lt;/code&gt;</span></span><br><span class="line"><span class="string">        &lt;detail&gt;success&lt;/detail&gt;</span></span><br><span class="line"><span class="string">        &lt;resource_record&gt;</span></span><br><span class="line"><span class="string">            &lt;type&gt;A&lt;/type&gt;</span></span><br><span class="line"><span class="string">            &lt;host&gt;xxxx.com&lt;/host&gt;</span></span><br><span class="line"><span class="string">            &lt;value&gt;111.111.111.111&lt;/value&gt;</span></span><br><span class="line"><span class="string">            &lt;distance&gt;0&lt;/distance&gt;</span></span><br><span class="line"><span class="string">        &lt;/resource_record&gt;</span></span><br><span class="line"><span class="string">        &lt;resource_record&gt;</span></span><br><span class="line"><span class="string">            &lt;type&gt;A&lt;/type&gt;</span></span><br><span class="line"><span class="string">            &lt;host&gt;guanyu.xxxx.com&lt;/host&gt;</span></span><br><span class="line"><span class="string">            &lt;value&gt;111.111.111.111&lt;/value&gt;</span></span><br><span class="line"><span class="string">            &lt;distance&gt;0&lt;/distance&gt;</span></span><br><span class="line"><span class="string">        &lt;/resource_record&gt;</span></span><br><span class="line"><span class="string">        &lt;resource_record a=&quot;b&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;type&gt;CNAME&lt;/type&gt;</span></span><br><span class="line"><span class="string">            &lt;host&gt;www.xxxx.com&lt;/host&gt;</span></span><br><span class="line"><span class="string">            &lt;value&gt;guanyu.xxxx.com&lt;/value&gt;</span></span><br><span class="line"><span class="string">            &lt;distance&gt;0&lt;/distance&gt;</span></span><br><span class="line"><span class="string">        &lt;/resource_record&gt;</span></span><br><span class="line"><span class="string">    &lt;/reply&gt;</span></span><br><span class="line"><span class="string">&lt;/namesilo&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">root = ET.XML(xml_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(root.tag)                         <span class="comment"># namesilo </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> resource_record <span class="keyword">in</span> root.<span class="built_in">iter</span>(<span class="string">&#x27;resource_record&#x27;</span>):    <span class="comment"># 全局遍历</span></span><br><span class="line">    <span class="built_in">print</span>(resource_record.attrib)               <span class="comment"># 这里分别输出3个 &#123;&#125; &#123;&#125; &#123;&#x27;a&#x27;: &#x27;b&#x27;&#125;</span></span><br><span class="line">    <span class="built_in">print</span>(resource_record.find(<span class="string">&quot;host&quot;</span>).text)    <span class="comment"># 这里分别输出3个 host</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># findtext 和 find(&quot;xxx&quot;).text 是一样的</span></span><br><span class="line">    <span class="built_in">print</span>(resource_record.findtext(<span class="string">&quot;type&quot;</span>))     <span class="comment"># 这里输出3个 type</span></span><br></pre></td></tr></table></figure><h2 id="查找方法"><a href="#查找方法" class="headerlink" title="查找方法"></a>查找方法</h2><ul><li><code>iter(tag=None)</code> 遍历 Element 的 child，可以指定 tag 精确查找</li><li><code>findall(match)</code> 查找当前元素 tag 或 path 能匹配的 child 节点</li><li><code>find(match)</code> 查找当前元素 tag 或 path 能匹配的第一个 child 节点</li><li><code>get(key, default=None)</code> 获取元素指定 key 对应的 attrib，如果没有 attrib，返回 default。</li></ul><h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><ul><li><code>Element.text</code> 直接修改字段</li><li><code>Element.remove()</code> 删除字段</li><li><code>Element.set()</code> 添加或修改属性 attrib</li><li><code>with Element.append()</code> 添加新的 child</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian常用配置</title>
      <link href="/posts/8c4ff9d2/"/>
      <url>/posts/8c4ff9d2/</url>
      
        <content type="html"><![CDATA[<p>这里以 Debian12 为例</p><h2 id="修改国内源"><a href="#修改国内源" class="headerlink" title="修改国内源"></a>修改国内源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@//.*debian.org@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><p>vim &#x2F;etc&#x2F;network&#x2F;interfaces</p><h3 id="固定-ip-配置"><a href="#固定-ip-配置" class="headerlink" title="固定 ip 配置"></a>固定 ip 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s3</span><br><span class="line">iface enp0s3 inet static</span><br><span class="line">    address 192.168.1.240/24</span><br><span class="line">    network 192.168.1.0</span><br><span class="line">    broadcast 192.168.1.255</span><br><span class="line">    gateway 192.168.1.1</span><br><span class="line">    dns-nameservers 8.8.8.8</span><br><span class="line"># 其中 network\broadcast 可以省略不写</span><br></pre></td></tr></table></figure><h3 id="DHCP-配置"><a href="#DHCP-配置" class="headerlink" title="DHCP 配置"></a>DHCP 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iface enp0s3 inet dhcp</span><br></pre></td></tr></table></figure><h3 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart networking.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>改造windows terminal支持lrzsz</title>
      <link href="/posts/e48170f8/"/>
      <url>/posts/e48170f8/</url>
      
        <content type="html"><![CDATA[<p>在 windows 下使用 xshell，如果执行 rz 或者 sz 是可以快捷上传&#x2F;下载文件到本地的，这在使用堡垒机登录服务器会很有用，或者多层 ssh 嵌套的时候，某种极端的场景下，这可能是唯一的解决方案了。在 windows 下使用 xshell 连接服务器，这时候输入 rz，会弹出一个文件选择框：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304122017543.png" alt="xshell 文件选框"></p><p>但是在 windows terminal 下，是这样的：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304122018087.png" alt="Windows Terminal乱码"></p><p>无意中发现了一个开源工具，可以解决这个问题，开源地址是：<a href="https://github.com/qingyunha/zssh">https://github.com/qingyunha/zssh</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="通过源码安装"><a href="#通过源码安装" class="headerlink" title="通过源码安装"></a>通过源码安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/qingyunha/zssh.git</span><br><span class="line"><span class="built_in">cd</span> zssh</span><br><span class="line">go get zssh</span><br></pre></td></tr></table></figure><p>默认可执行文件是在 GOBIN 中, 需要放到系统的 PATH 目录中。</p><h3 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/qingyunha/zssh/releases/download/v0.1.0/zssh_linux_amd64 -o /usr/local/bin/zssh</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/zssh</span><br></pre></td></tr></table></figure><p>使用方法： 使用 <code>zssh</code> 替代 <code>ssh</code> 命令即可。</p><p>效果如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304131056437.png" alt="rz上传"></p><p>另外还有 <a href="https://github.com/trzsz/trzsz">trzsz</a> 这样的类似开源工具，需要服务器上安装 trzsz 软件</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> lrzsz </tag>
            
            <tag> Windows Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins优雅的增加一个windows节点</title>
      <link href="/posts/288e897b/"/>
      <url>/posts/288e897b/</url>
      
        <content type="html"><![CDATA[<h2 id="配置-windows"><a href="#配置-windows" class="headerlink" title="配置 windows"></a>配置 windows</h2><p>这里我选择使用 ssh 来连接 windows，这样可以完全由 jenkins 来管理 windows 节点，比如 agent 的启动与停止、agent 的更新等都不需要登录 windows 来操作了。</p><h3 id="安装-openssh-server"><a href="#安装-openssh-server" class="headerlink" title="安装 openssh server"></a>安装 openssh server</h3><p><del>这里选择 moba ssh server， 下载地址：<a href="https://mobassh.mobatek.net/download.html">https://mobassh.mobatek.net/download.html</a></del> moba ssh server 基于 cygwin 和原生 windows 有差别，特殊情况下执行结果不一致，我放弃了，转而使用原生 openssh 服务</p><p>GitHub 地址：<a href="https://github.com/PowerShell/Win32-OpenSSH/releases">https://github.com/PowerShell/Win32-OpenSSH/releases</a></p><p>最新版和 jenkins 兼容性有些问题，我用的是 v8.1.0.0p1-Beta 版， 下载 OpenSSH-Win64.zip 解压到 windows 的 <code>C:\Program Files\OpenSSH</code> 目录下，然后执行 (管理员权限运行 powershell)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;C:\Program Files\OpenSSH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装sshd服务</span></span><br><span class="line">powershell <span class="literal">-ExecutionPolicy</span> Bypass <span class="operator">-File</span> <span class="built_in">install-sshd</span>.ps1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙打开22端口</span></span><br><span class="line">netsh advfirewall firewall add rule name=sshd <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow protocol=TCP localport=<span class="number">22</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line"><span class="built_in">Set-Service</span> sshd <span class="literal">-StartupType</span> Automatic</span><br><span class="line"><span class="built_in">Set-Service</span> ssh<span class="literal">-agent</span> <span class="literal">-StartupType</span> Automatic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line"><span class="built_in">Start-Service</span> sshd</span><br><span class="line"><span class="built_in">Start-Service</span> ssh<span class="literal">-agent</span></span><br></pre></td></tr></table></figure><h3 id="配置-java-环境"><a href="#配置-java-环境" class="headerlink" title="配置 java 环境"></a>配置 java 环境</h3><p>jenkins 默认不会读取环境变量， 所以我们需要手动复制 java 的文件夹到工作目录，假设工作目录设定为 <code>C:\jenkins-agent</code>, 那么 java 路径就是 <code>C:\jenkins-agent\jdk\bin\java.exe</code></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>使用 jenkins 机器（主节点）执行：<code>ssh user@&lt;windows ip&gt;</code> 连接成功即可。</p><h2 id="配置-jenkins"><a href="#配置-jenkins" class="headerlink" title="配置 jenkins"></a>配置 jenkins</h2><p>jenkins 系统管理 –&gt; 节点管理</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111530133.png" alt="配置从节点"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111531143.png" alt="添加凭据"></p><h2 id="构建流水线"><a href="#构建流水线" class="headerlink" title="构建流水线"></a>构建流水线</h2><p>确认节点上线了。<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111546325.png" alt="节点状态"></p><p>这里限制构建所在的节点<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111546102.png" alt="指定构建节点"></p><p>构建过程选择 执行 Windows 批处理命令<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111547029.png" alt="构建步骤"></p><p>已经可以正常构建了<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111728884.png" alt="构建输出"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>在 windows 里面可以正常执行，在 jenkins 提示命令不存在， 原因是 jenkins 不会加载 windows 自带的配置文件，解决方法：</p><ol><li>使用绝对路径</li><li>配置 PATH 环境变量到 jenkins</li><li>手动配置你需要的工具的路径</li></ol><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111819597.png" alt="命令不存在"></p><p>我更喜欢第二种方法：</p><p>到 windows 里面 cmd 执行 path 命令，将 path 后面的值复制</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111821871.png" alt="path结果"></p><p>配置在 jenkins –&gt; 节点列表 –&gt; 相关节点的环境变量中。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111822648.png" alt="配置环境变量"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> windows </tag>
            
            <tag> agnet </tag>
            
            <tag> cygwin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2配置记录</title>
      <link href="/posts/ltqmt2r2/"/>
      <url>/posts/ltqmt2r2/</url>
      
        <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>macOS 的快捷键图标表示</p><table><thead><tr><th>控制键</th><th>说明</th></tr></thead><tbody><tr><td>⌘</td><td>command</td></tr><tr><td>⌃</td><td>control</td></tr><tr><td>⌥</td><td>option</td></tr><tr><td>⇧</td><td>shift</td></tr></tbody></table><p>其中 control 开头的快捷键不止在 iTerm2 中可用，在所有 shell 终端中都是可用的。</p><h3 id="标签（tab）"><a href="#标签（tab）" class="headerlink" title="标签（tab）"></a>标签（tab）</h3><table><thead><tr><th>功能</th><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td>新建标签</td><td>command + t</td><td></td></tr><tr><td>关闭标签</td><td>command + w</td><td></td></tr><tr><td>切换标签</td><td>command + ← 或 →</td><td>可以用 command + 数字键，切换到指定的 tab 上</td></tr><tr><td>切换全屏</td><td>command + enter</td><td>等同于 fn + f, fn + f 在所有 macOS 软件中都可用</td></tr></tbody></table><h3 id="分屏"><a href="#分屏" class="headerlink" title="分屏"></a>分屏</h3><table><thead><tr><th>功能</th><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td>垂直分屏</td><td>command + d</td><td></td></tr><tr><td>水平分屏</td><td>command + shift + d</td><td></td></tr><tr><td>切换到不同的分屏</td><td>command + option + 上下左右</td><td></td></tr><tr><td>同时操作所有窗口</td><td>command + shift + i</td><td>操作打开的所有 tab 和分屏, 功能生效时，右上角有个图标提示</td></tr></tbody></table><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><table><thead><tr><th>功能</th><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td>快速定位光标</td><td>option + 鼠标点击</td><td>很常用的功能</td></tr><tr><td>查找</td><td>command + f</td><td></td></tr><tr><td>清屏</td><td>control + l</td><td></td></tr><tr><td>搜索命令历史</td><td>control + r</td><td></td></tr><tr><td>清除当前行</td><td>control + u</td><td>清除当前行，无论光标在哪里。</td></tr><tr><td>到行首</td><td>control + a</td><td></td></tr><tr><td>到行尾</td><td>control + e</td><td></td></tr></tbody></table><h3 id="不常用或不建议使用的快捷键"><a href="#不常用或不建议使用的快捷键" class="headerlink" title="不常用或不建议使用的快捷键"></a>不常用或不建议使用的快捷键</h3><table><thead><tr><th>功能</th><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td>前进后退</td><td>control + f&#x2F;b</td><td>相当于 ← →</td></tr><tr><td>查看剪贴板历史</td><td>command + shift + h</td><td></td></tr><tr><td>上一条命令</td><td>control + p</td><td>相当于按 ↑</td></tr><tr><td>删除当前光标的一个字符</td><td>control + d</td><td>等同于 fn + ⌫ 或 DEL 键</td></tr><tr><td>删除光标之前的一个字符</td><td>control + h</td><td>等同于 ⌫</td></tr><tr><td>删除光标之前的单词</td><td>control + w</td><td></td></tr><tr><td>删除到文本末尾</td><td>control + k</td><td></td></tr></tbody></table><h2 id="备份还原配置"><a href="#备份还原配置" class="headerlink" title="备份还原配置"></a>备份还原配置</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>在 Profiles –&gt; Other Actions 里面，导出 json 文件备份</p><h3 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h3><p>同样的位置 import json， 或者放到 <code>~/Library/Application Support/iTerm2/DynamicProfiles</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率工具 </tag>
            
            <tag> 常用操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ingress Nginx 配置ssl双向认证</title>
      <link href="/posts/lefqq7f4/"/>
      <url>/posts/lefqq7f4/</url>
      
        <content type="html"><![CDATA[<p>记录一下在 kuberentes 下使用 ingress-nginx 来配置 ssl 双向认证，可以参考其他几篇文章：<br><a href="/posts/28c679c3">使用certbot自动申请ssl证书</a></p><p><a href="/posts/1e777b9e">使用acme.sh来自动更新https证书</a></p><p><a href="/posts/097e5b7c">制作和使用自签名证书</a></p><p><a href="/posts/b78a00fa">Nginx配置SSL双向认证</a></p><h2 id="创建-CA-证书"><a href="#创建-CA-证书" class="headerlink" title="创建 CA 证书"></a>创建 CA 证书</h2><p>执行以下命令，创建自签的 CA 证书。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -sha256 -newkey rsa:4096 -keyout ca.key -out ca.crt -days 3650 -nodes -subj <span class="string">&#x27;/CN=Fern Cert Authority&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="生成-server-证书"><a href="#生成-server-证书" class="headerlink" title="生成 server 证书"></a>生成 server 证书</h2><blockquote><p>这里可以使用公共的 CA 签发的证书， 比如各大云服务商购买的证书。下面是自签证书的步骤。</p></blockquote><h3 id="生成-Server-端证书的请求文件"><a href="#生成-Server-端证书的请求文件" class="headerlink" title="生成 Server 端证书的请求文件"></a>生成 Server 端证书的请求文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -newkey rsa:4096 -keyout server.key -out server.csr -nodes -subj <span class="string">&#x27;/CN=foo.bar.com&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="使用根证书签发-Server-端请求文件，生成-Server-端证书"><a href="#使用根证书签发-Server-端请求文件，生成-Server-端证书" class="headerlink" title="使用根证书签发 Server 端请求文件，生成 Server 端证书"></a>使用根证书签发 Server 端请求文件，生成 Server 端证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -sha256 -days 365 -<span class="keyword">in</span> server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt</span><br></pre></td></tr></table></figure><h3 id="配置到-ingress-里"><a href="#配置到-ingress-里" class="headerlink" title="配置到 ingress 里"></a>配置到 ingress 里</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls foo-bar-com --cert=server.crt --key=server.key</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">http-svc</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">tls-secret</span></span><br></pre></td></tr></table></figure><h2 id="生成-client-证书"><a href="#生成-client-证书" class="headerlink" title="生成 client 证书"></a>生成 client 证书</h2><h3 id="生成-Client-端证书的请求文件"><a href="#生成-Client-端证书的请求文件" class="headerlink" title="生成 Client 端证书的请求文件"></a>生成 Client 端证书的请求文件</h3><blockquote><p>双向认证一般都是别人使用自己的 key 生成 csr 给到我们， 然后我们用 CA 签名证书，然后将签名后的证书给到别人，后续别人使用证书和自己的私钥就可以访问服务。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -newkey rsa:4096 -keyout client.key -out client.csr -nodes -subj <span class="string">&#x27;/CN=Fern&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="生成-client-端证书"><a href="#生成-client-端证书" class="headerlink" title="生成 client 端证书"></a>生成 client 端证书</h3><p>执行以下命令，使用根证书签发 Client 端请求文件，生成 Client 端证书。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -sha256 -days 365 -<span class="keyword">in</span> client.csr -CA ca.crt -CAkey ca.key -set_serial 02 -out client.crt </span><br></pre></td></tr></table></figure><h3 id="配置双向认证"><a href="#配置双向认证" class="headerlink" title="配置双向认证"></a>配置双向认证</h3><p>创建 secret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic ca-secret --from-file=ca.crt=ca.crt</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-tls-verify-client:</span> <span class="string">&quot;on&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-tls-secret:</span> <span class="string">&quot;default/ca-secret&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-tls-verify-depth:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">http-svc</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">tls-secret</span></span><br></pre></td></tr></table></figure><h2 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自签server证书也可以增加 --cacert ca.crt 参数指定ca证书，客户端也是信任的</span></span><br><span class="line">curl --cert ./client.crt --key ./client.key https://foo.bar.com/actuator/info -k</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> Ingress </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes创建一个只读用户</title>
      <link href="/posts/lefa6qhl/"/>
      <url>/posts/lefa6qhl/</url>
      
        <content type="html"><![CDATA[<p>其实用到的是 RBAC 授权，官方文档在：<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/">https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/rbac/</a></p><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 生成私钥</span><br><span class="line">openssl genrsa -out dev.key <span class="number">2048</span></span><br><span class="line"></span><br><span class="line"># 基于这个私钥生成证书请求</span><br><span class="line">openssl req -<span class="keyword">new</span> -key dev.key -out dev.csr -subj <span class="string">&quot;/CN=dev&quot;</span></span><br><span class="line"></span><br><span class="line"># 使用CA证书签发</span><br><span class="line">openssl  x509 -req -in dev.csr -CA /etc/kubernetes/pki/<span class="keyword">ca</span>.crt -CAkey /etc/kubernetes/pki/<span class="keyword">ca</span>.key -CAcreateserial -out dev.crt -days <span class="number">3000</span></span><br></pre></td></tr></table></figure><h2 id="通过证书生成-kubeconfig-配置文件"><a href="#通过证书生成-kubeconfig-配置文件" class="headerlink" title="通过证书生成 kubeconfig 配置文件"></a>通过证书生成 kubeconfig 配置文件</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 生成用户kubeconfig</span><br><span class="line">kubectl config <span class="keyword">set</span>-cluster  kubernetes \</span><br><span class="line">  --kubeconfig=dev.<span class="keyword">conf</span> \</span><br><span class="line">  --server=<span class="string">&quot;https://10.0.0.3:6443&quot;</span> \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/<span class="keyword">ca</span>.crt \</span><br><span class="line">  --embed-certs=true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># users 设置用户信息</span><br><span class="line">kubectl config <span class="keyword">set</span>-credentials dev \</span><br><span class="line">    --certificate-authority=/etc/kubernetes/pki/<span class="keyword">ca</span>.crt \</span><br><span class="line">    --embed-certs=true \</span><br><span class="line">    --client-key=dev.key \</span><br><span class="line">    --client-certificate=dev.crt \</span><br><span class="line">    --kubeconfig=dev.<span class="keyword">conf</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">#  根据 config 创建  contexts  </span><br><span class="line">kubectl config <span class="keyword">set</span>-context dev \</span><br><span class="line">    --cluster=kubernetes \</span><br><span class="line">    --user=dev \</span><br><span class="line">    --kubeconfig=dev.<span class="keyword">conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置当前的上下文 -- 更改用户</span><br><span class="line">kubectl config use-context dev --kubeconfig=dev.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><h2 id="创建-clusterrole-和-clusterrolebinding"><a href="#创建-clusterrole-和-clusterrolebinding" class="headerlink" title="创建 clusterrole 和 clusterrolebinding"></a>创建 clusterrole 和 clusterrolebinding</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提供基本权限</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-dev-readonly</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev-readonly</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev-readonly</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;metrics.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;pods/exec&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;delete&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;configmaps&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;endpoints&quot;</span>, <span class="string">&quot;services&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;resourcequotas/status&quot;</span>,</span><br><span class="line">        <span class="string">&quot;resourcequotas&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bindings&quot;</span>,</span><br><span class="line">        <span class="string">&quot;events&quot;</span>,</span><br><span class="line">        <span class="string">&quot;limitranges&quot;</span>,</span><br><span class="line">        <span class="string">&quot;namespaces/status&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pods/log&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pods/status&quot;</span>,</span><br><span class="line">        <span class="string">&quot;replicationcontrollers/status&quot;</span>,</span><br><span class="line">      ]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;namespaces&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apps&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;deployments&quot;</span>,</span><br><span class="line">        <span class="string">&quot;deployments/rollback&quot;</span>,</span><br><span class="line">        <span class="string">&quot;deployments/scale&quot;</span>,</span><br><span class="line">        <span class="string">&quot;deployments/rollout&quot;</span>,</span><br><span class="line">        <span class="string">&quot;statefulsets&quot;</span>,</span><br><span class="line">      ]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>,<span class="string">&quot;patch&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;autoscaling&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;horizontalpodautoscalers&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;batch&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;cronjobs&quot;</span>, <span class="string">&quot;jobs&quot;</span>, <span class="string">&quot;scheduledjobs&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;daemonsets&quot;</span>, <span class="string">&quot;deployments&quot;</span>, <span class="string">&quot;ingresses&quot;</span>, <span class="string">&quot;replicasets&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl --kubeconfig=./dev.conf get pod</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> 权限管理 </tag>
            
            <tag> RBAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用image-syncer来实现容器镜像同步</title>
      <link href="/posts/le5lzctq/"/>
      <url>/posts/le5lzctq/</url>
      
        <content type="html"><![CDATA[<p><code>image-syncer</code> 是一个 docker 镜像同步工具，可用来进行多对多的镜像仓库同步，支持目前绝大多数主流的 docker 镜像仓库服务</p><ul><li>支持多对多镜像仓库同步</li><li>支持基于 Docker Registry V2 搭建的 docker 镜像仓库服务 (如 Docker Hub、 Quay、 阿里云镜像服务 ACR、 Harbor 等)</li><li>同步只经过内存和网络，不依赖磁盘存储，同步速度快</li><li>增量同步, 通过对同步过的镜像 blob 信息落盘，不重复同步已同步的镜像</li><li>并发同步，可以通过配置文件调整并发数</li><li>自动重试失败的同步任务，可以解决大部分镜像同步中的网络抖动问题</li><li>不依赖 docker 以及其他程序</li></ul><p>image-syncer 的官方地址是：<a href="https://github.com/AliyunContainerService/image-syncer">https://github.com/AliyunContainerService/image-syncer</a>, 是 golang 开发的， 官方没有给打包成 windows 版， 所以 windows 和 mac 用户需要自己编译一下。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="安装-golang-环境"><a href="#安装-golang-环境" class="headerlink" title="安装 golang 环境"></a>安装 golang 环境</h3><p>略</p><h3 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build main.go</span><br></pre></td></tr></table></figure><p>会在当前目录下生成 main.exe, 重命名为 image-syncer.exe</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>由于我们需求是进行单镜像同步，所以用不到 image-syncer 的仓库同步功能，仓库同步配置注释在了配置文件中。</p><h3 id="账号密码配置：-auth-json"><a href="#账号密码配置：-auth-json" class="headerlink" title="账号密码配置： auth.json"></a>账号密码配置： auth.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry.cn-hangzhou.aliyuncs.com&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dk&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;insecure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;registry.k8s.io&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;insecure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>仓库名支持 “registry” 和 “registry&#x2F;namespace”（v1.0.3 之后的版本） 的形式，需要跟下面 images 中的 registry(registry&#x2F;namespace) 对应 ,images 中被匹配到的的 url 会使用对应账号密码进行镜像同步, 优先匹配 “registry&#x2F;namespace” 的形式</li><li>“username”: “xxx”, &#x2F;&#x2F; 用户名，可选，（v1.3.1 之后支持）valuse 使用 “<code>$&#123;env&#125;</code>“ 或者 “$env” 类型的字符串可以引用环境变量</li><li>“password”: “xxxxxxxxx”, &#x2F;&#x2F; 密码，可选，（v1.3.1 之后支持）valuse 使用 “${env}” 或者 “$env” 类型的字符串可以引用环境变量</li><li>“insecure”: true &#x2F;&#x2F; registry 是否是 http 服务，如果是，insecure 字段需要为 true，默认是 false，可选，支持这个选项需要 image-syncer 版本 &gt; v1.0.1</li></ul><h3 id="镜像配置-image-json"><a href="#镜像配置-image-json" class="headerlink" title="镜像配置 image.json"></a>镜像配置 image.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;registry.k8s.io/pause:3.9&quot;</span><span class="punctuation">:</span><span class="string">&quot;registry.cn-hangzhou.aliyuncs.com/iuxt/pause&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">同步镜像规则字段，其中条规则包括一个源仓库（键）和一个目标仓库（值）</span><br><span class="line">同步的最大单位是仓库（repo），不支持通过一条规则同步整个namespace以及registry</span><br><span class="line">源仓库和目标仓库的格式与docker pull/push命令使用的镜像url类似（registry/namespace/repository:tag）</span><br><span class="line">源仓库和目标仓库（如果目标仓库不为空字符串）都至少包含registry/namespace/repository</span><br><span class="line">源仓库字段不能为空，如果需要将一个源仓库同步到多个目标仓库需要配置多条规则</span><br><span class="line">目标仓库名可以和源仓库名不同（tag也可以不同），此时同步功能类似于：docker pull + docker tag + docker push</span><br><span class="line"></span><br><span class="line">&quot;quay.io/coreos/kube-rbac-proxy&quot;: &quot;quay.io/ruohe/kube-rbac-proxy&quot;,</span><br><span class="line">&quot;xxxx&quot;:&quot;xxxxx&quot;,</span><br><span class="line">&quot;xxx/xxx/xx:tag1,tag2,tag3&quot;:&quot;xxx/xxx/xx&quot;</span><br><span class="line"></span><br><span class="line">当源仓库字段中不包含tag时，表示将该仓库所有tag同步到目标仓库，此时目标仓库不能包含tag</span><br><span class="line">当源仓库字段中包含tag时，表示只同步源仓库中的一个tag到目标仓库，如果目标仓库中不包含tag，则默认使用源tag</span><br><span class="line">源仓库字段中的tag可以同时包含多个（比如&quot;a/b/c:1,2,3&quot;），tag之间通过&quot;,&quot;隔开，此时目标仓库不能包含tag，并且默认使用原来的tag</span><br><span class="line">当目标仓库为空字符串时，会将源镜像同步到默认registry的默认namespace下，并且repo以及tag与源仓库相同，默认registry和默认namespace可以通过命令行参数以及环境变量配置，参考下面的描述</span><br></pre></td></tr></table></figure><h3 id="同步命令"><a href="#同步命令" class="headerlink" title="同步命令"></a>同步命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image-syncer.exe --proc=<span class="number">6</span> --auth=auth.json --images=image.json --retries=<span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 镜像 </tag>
            
            <tag> 容器 </tag>
            
            <tag> 同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本条件判断与比较运算</title>
      <link href="/posts/le2ugemu/"/>
      <url>/posts/le2ugemu/</url>
      
        <content type="html"><![CDATA[<h2 id="if-的基本语法"><a href="#if-的基本语法" class="headerlink" title="if 的基本语法:"></a>if 的基本语法:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -f /tmp ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;是一个普通文件&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ -d /tmp ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;是一个目录&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;其他类型&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="文件-目录-判断"><a href="#文件-目录-判断" class="headerlink" title="文件&#x2F;目录 判断"></a>文件&#x2F;目录 判断</h2><p>常用的</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>测试文件是否为目录</td></tr><tr><td>-e</td><td>测试文件是否存在</td></tr><tr><td>-f</td><td>判断是否为一般文件</td></tr><tr><td>-r</td><td>测试当前用户是否有权限读取</td></tr><tr><td>-w</td><td>测试当前用户是否有权限写入</td></tr><tr><td>-x</td><td>测试当前用户是否有权限执行</td></tr><tr><td>-s</td><td>文件长度不为零</td></tr></tbody></table><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>[ -b FILE ]</td><td>如果 FILE 存在且是一个块特殊文件则为真。</td></tr><tr><td>[ -c FILE ]</td><td>如果 FILE 存在且是一个字特殊文件则为真。</td></tr><tr><td>[ -d DIR ]</td><td>如果 FILE 存在且是一个目录则为真。</td></tr><tr><td>[ -e FILE ]</td><td>如果 FILE 存在则为真。</td></tr><tr><td>[ -f FILE ]</td><td>如果 FILE 存在且是一个普通文件则为真。</td></tr><tr><td>[ -g FILE ]</td><td>如果 FILE 存在且已经设置了 SGID 则为真。</td></tr><tr><td>[ -k FILE ]</td><td>如果 FILE 存在且已经设置了粘制位则为真。</td></tr><tr><td>[ -p FILE ]</td><td>如果 FILE 存在且是一个名字管道 (F 如果 O) 则为真。</td></tr><tr><td>[ -r FILE ]</td><td>如果 FILE 存在且是可读的则为真。</td></tr><tr><td>[ -s FILE ]</td><td>如果 FILE 存在且大小不为 0 则为真。</td></tr><tr><td>[ -t FD ]</td><td>如果文件描述符 FD 打开且指向一个终端则为真。</td></tr><tr><td>[ -u FILE ]</td><td>如果 FILE 存在且设置了 SUID (set user ID) 则为真。</td></tr><tr><td>[ -w FILE ]</td><td>如果 FILE 存在且是可写的则为真。</td></tr><tr><td>[ -x FILE ]</td><td>如果 FILE 存在且是可执行的则为真。</td></tr><tr><td>[ -O FILE ]</td><td>如果 FILE 存在且属有效用户 ID 则为真。</td></tr><tr><td>[ -G FILE ]</td><td>如果 FILE 存在且属有效用户组则为真。</td></tr><tr><td>[ -L FILE ]</td><td>如果 FILE 存在且是一个符号连接则为真。</td></tr><tr><td>[ -N FILE ]</td><td>如果 FILE 存在 and has been mod 如果 ied since it was last read 则为真。</td></tr><tr><td>[ -S FILE ]</td><td>如果 FILE 存在且是一个套接字则为真。</td></tr><tr><td>[ FILE1 -nt FILE2 ]</td><td>如果 FILE1 has been changed more recently than FILE2, or 如果 FILE1 exists and FILE2 does not 则为真。</td></tr><tr><td>[ FILE1 -ot FILE2 ]</td><td>如果 FILE1 比 FILE2 要老, 或者 FILE2 存在且 FILE1 不存在则为真。</td></tr><tr><td>[ FILE1 -ef FILE2 ]</td><td>如果 FILE1 和 FILE2 指向相同的设备和节点号则为真。</td></tr></tbody></table><h2 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>[ -z str ]</td><td>如果 STRING 的长度为零则为真 ，即判断是否为空，空即是真；</td></tr><tr><td>[ -n str ]</td><td>如果 STRING 的长度非零则为真 ，即判断是否为非空，非空即是真；</td></tr><tr><td>[ str1 &#x3D; str2 ]</td><td>如果两个字符串相同则为真</td></tr><tr><td>[ str1 !&#x3D; str2 ]</td><td>如果字符串不相同则为真</td></tr><tr><td>[ str ]</td><td>如果字符串不为空则为真,与 -n 类似</td></tr></tbody></table><div class="note warning flat"><p>在 shell 脚本中，如果要判断一个变量是否为空字符串，<strong>不能</strong>这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="variable">$&#123;a&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>这样无论 a 是否为空，都会输出 1. 因为 a 为空，就变成了 <code>if [ -n ]</code> ，bash 把 -n 当作一个要判断的字符串，<code>if [ 字符串 ]</code> 恒定为真。正确写法的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$&#123;a&#125;</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></div><h2 id="数值判断"><a href="#数值判断" class="headerlink" title="数值判断"></a>数值判断</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>int1 -eq int2</td><td>int1 和 int2 两数相等为真 ,&#x3D;</td></tr><tr><td>int1 -ne int2</td><td>int1 和 int2 两数不等为真 ,&lt;&gt;</td></tr><tr><td>int1 -gt int2</td><td>int1 大于 int1 为真 ,&gt;</td></tr><tr><td>int1 -ge int2</td><td>int1 大于等于 int2 为真,&gt;&#x3D;</td></tr><tr><td>int1 -lt int2</td><td>int1 小于 int2 为真 ,&lt;</td></tr><tr><td>int1 -le int2</td><td>int1 小于等于 int2 为真,&lt;&#x3D;</td></tr></tbody></table><h2 id="其他逻辑判断"><a href="#其他逻辑判断" class="headerlink" title="其他逻辑判断"></a>其他逻辑判断</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>与</td></tr><tr><td>-o</td><td>或</td></tr><tr><td>!</td><td>非</td></tr></tbody></table><h2 id="和"><a href="#和" class="headerlink" title="|| 和 &amp;&amp;"></a>|| 和 &amp;&amp;</h2><blockquote><p>|| 前面执行不通过才执行后面的，也就是或， &amp;&amp; 是与，前面执行通过会接着执行后面的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ -d /tmp/111 ] || &#123; <span class="built_in">mkdir</span> /tmp/111; <span class="built_in">cd</span> /tmp/111; <span class="built_in">pwd</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 三元判断</span></span><br><span class="line">[ -e .env.exampl ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;文件存在&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;文件不存在&quot;</span></span><br></pre></td></tr></table></figure><h3 id="模糊判断"><a href="#模糊判断" class="headerlink" title="模糊判断"></a>模糊判断</h3><p>判断字符串是否包含指定字段。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NAMESPACE=prod-zahuifan</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAMESPACE</span> =~ prod ]] || [[ <span class="variable">$NAMESPACE</span> =~ dr ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;是生产环境或灾备环境&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;非生产环境&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Nginx的rewrite来实现自动跳转</title>
      <link href="/posts/ldsv2ssw/"/>
      <url>/posts/ldsv2ssw/</url>
      
        <content type="html"><![CDATA[<h2 id="任意链接都跳转到指定页面"><a href="#任意链接都跳转到指定页面" class="headerlink" title="任意链接都跳转到指定页面"></a>任意链接都跳转到指定页面</h2><blockquote><p>需要部署一个服务在 Kubernetes 内， 需要实现通过 ingress 可以访问到， 本来是很简单的事情， 但是由于访问来源的 location 不确定，为了避免报错 404，所以用 Nginx 的 rewrite 来实现</p></blockquote><p>Nginx 配置如下（所有 location 转发到 index.html）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80 default_server;</span><br><span class="line">        listen [::]:80 default_server;</span><br><span class="line">        server_name _;</span><br><span class="line">        root /var/www/html;</span><br><span class="line"></span><br><span class="line">        index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                rewrite ^(.*) /index.html break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自动跳转-https"><a href="#自动跳转-https" class="headerlink" title="自动跳转 https"></a>自动跳转 https</h2><p>配置文件如下：</p><h3 id="使用-return"><a href="#使用-return" class="headerlink" title="使用 return"></a>使用 return</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123; </span><br><span class="line">      listen  80;</span><br><span class="line">      server_name    example.qcloud.com;</span><br><span class="line">      return  301 https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">      listen  443 ssl;</span><br><span class="line">     server_name    example.qcloud.com;</span><br><span class="line">    [....]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-rewrite"><a href="#使用-rewrite" class="headerlink" title="使用 rewrite"></a>使用 rewrite</h3><p><code>rewrite</code> 性能消耗更大，但是支持更复杂的规则，只是跳转到 https 建议使用 <code>return 301</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ( $scheme = http )&#123;</span><br><span class="line">     rewrite ^(/.*)$ https://$host$1 permanent;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="判断-Header"><a href="#判断-Header" class="headerlink" title="判断 Header"></a>判断 Header</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ($http_user_agent !~* &quot;(Go-http-client/.*|.*Safari.*)&quot;) &#123; </span><br><span class="line">    return 404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="直接返回内容"><a href="#直接返回内容" class="headerlink" title="直接返回内容"></a>直接返回内容</h2><p>比如备案、或者各种认证， 证明网站属于自己，通常会给一个 txt 文件让放在网站根目录，其实可以使用这种方法来实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /098x6OP2Qq.txt &#123;</span><br><span class="line">    default_type text/plain;</span><br><span class="line">    return 200 &quot;123456qqqqq&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="返回请求者-IP"><a href="#返回请求者-IP" class="headerlink" title="返回请求者 IP"></a>返回请求者 IP</h2><p>实现一个获取公网 ip 的小工具，类似于 <code>curl ip.sb</code> 可以直接在终端获得公网 ip。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /ip &#123;</span><br><span class="line">    default_type text/plain;</span><br><span class="line">    return 200 $remote_addr\n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Obsidian配合Hexo写博客</title>
      <link href="/posts/ldle4xfe/"/>
      <url>/posts/ldle4xfe/</url>
      
        <content type="html"><![CDATA[<p>obsidian 是一款好用的 markdown 编辑器， 用来记笔记还是不错的。 并且支持插件系统，可以通过模板来生成博客的 frontmatter， 省去了 <code>hexo new</code> 的操作 所以准备配置一下用 obsidian 来写博客。</p><p>相关文章：<br><a href="/posts/ab21860c">静态博客生成工具hexo</a><br><a href="/posts/b4cf69c3">使用typora更好更快地写hugo博客</a><br><a href="/posts/2a39e018">使用vscode来写hugo博客并处理图片插入问题</a></p><h2 id="打开仓库"><a href="#打开仓库" class="headerlink" title="打开仓库"></a>打开仓库</h2><p>首先使用 obsidian 打开 <code>source/_posts</code> 目录， 然后会生成一些配置文件。进入 <code>_posts</code> 目录</p><p>创建.gitignore 将一些临时文件排除掉。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.obsidian/workspace.json</span><br></pre></td></tr></table></figure><h2 id="配置模板"><a href="#配置模板" class="headerlink" title="配置模板"></a>配置模板</h2><p>自带的模板插件功能太单一了， 我们关闭安全模式， 安装第三方插件 <code>Templater</code></p><p>创建 <code>Templates</code> 目录，修改配置指定 Template 的目录。修改配置项 <code>Template folder location</code> 为 <code>Templates</code></p><p>然后再此目录下创建 <code>Front-matter.md</code> 文件，此文件用作 hexo 的 frontmatter 模板。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &lt;%<span class="language-ruby"> tp.file.title </span>%&gt;</span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> &lt;%<span class="language-ruby"> tp.file.folder(relative=<span class="literal">true</span>) </span>%&gt;</span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">abbrlink:</span> &lt;%<span class="language-ruby"> tp.user.get_url() </span>%&gt;</span><br><span class="line"><span class="attr">date:</span> &lt;%<span class="language-ruby"> tp.date.now(format=<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>) </span>%&gt;</span><br><span class="line"><span class="attr">cover:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>其中：</p><table><thead><tr><th>模板</th><th>作用</th></tr></thead><tbody><tr><td>tp.file.title</td><td>获取到的就是文件名</td></tr><tr><td>tp.file.folder(relative&#x3D;true)</td><td>是获取文件所在的相对路径，就是所在目录名字</td></tr><tr><td>tp.user.get_url()</td><td>是自定义方法，脚本后面展示，用于自动生成博客的 url</td></tr><tr><td>tp.date.now(format&#x3D;”YYYY-MM-DD HH:mm:ss”)</td><td>以指定格式格式化时间</td></tr></tbody></table><p>详细的变量使用请查看 <code>Templater</code> 官方文档<a href="https://silentvoid13.github.io/Templater/">https://silentvoid13.github.io/Templater/</a></p><h3 id="自定义脚本"><a href="#自定义脚本" class="headerlink" title="自定义脚本"></a>自定义脚本</h3><p>创建目录 <code>Scripts</code>， 然后在设置里配置 <code>Script files folder location</code> 为 <code>Scripts</code></p><p>获取 GUID 脚本 <code>Scripts/get_url.js</code> 这里是取出当前时间戳，然后去掉毫秒，再按照 <code>0-9</code> + <code>a-z</code> 一共 36 个字符来表示，得到一个 6 位不重复的字符串，用作文章的链接。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">generateTimestampUrl</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="keyword">new</span> <span class="title class_">Date</span>() / <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">var</span> url = timestamp.<span class="title function_">toString</span>(<span class="number">36</span>)</span><br><span class="line">  <span class="keyword">return</span> url;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = generateTimestampUrl;</span><br></pre></td></tr></table></figure><p>然后每次创建新 markdown 文件的时候，只需要点击 templater 按钮， 然后就会自动生成我们需要的 frontmatter， 就不用 hexo new 了</p><h3 id="隐藏-Templates-和-Scripts-目录"><a href="#隐藏-Templates-和-Scripts-目录" class="headerlink" title="隐藏 Templates 和 Scripts 目录"></a>隐藏 Templates 和 Scripts 目录</h3><p>安装 Hidden Folder 插件，可以隐藏这两个目录。</p><h2 id="渲染时排除这些目录"><a href="#渲染时排除这些目录" class="headerlink" title="渲染时排除这些目录"></a>渲染时排除这些目录</h2><p>在主配置文件中 <code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> </span><br><span class="line"><span class="comment"># 这里排除的是obsidian编辑器需要的文件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;_posts/.obsidian/*&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;_posts/Scripts/*&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;_posts/Templates/*&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;**/README.md&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="使用-git-插件进行同步"><a href="#使用-git-插件进行同步" class="headerlink" title="使用 git 插件进行同步"></a>使用 git 插件进行同步</h2><p>安装 <code>Obsidian GIT</code> 插件<br>按下快捷键 <code>CTRL + P</code> 选择 commit all changes ， 然后选择 <code>push</code> 即可发布。</p><h2 id="使用-image-auto-upload-plugin-来处理图片"><a href="#使用-image-auto-upload-plugin-来处理图片" class="headerlink" title="使用 image-auto-upload-plugin 来处理图片"></a>使用 image-auto-upload-plugin 来处理图片</h2><p>默认情况下 obsidian 插入图片会插入到附件文件夹, 安装此插件会自动调用 picgo 或者 piclist 来进行文件上传并复制 markdown 语法到文件中.</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> markdown </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux安装记录</title>
      <link href="/posts/5a1b6f71/"/>
      <url>/posts/5a1b6f71/</url>
      
        <content type="html"><![CDATA[<p>官方文档 <a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">ArchWiki</a> 已经写的很好了，但是每次安装的时候都要踩坑，所以开个文章记录一下。</p><h2 id="磁盘分区与格式化"><a href="#磁盘分区与格式化" class="headerlink" title="磁盘分区与格式化"></a>磁盘分区与格式化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sda mklabel gpt mkpart ESP fat32 1M 513M <span class="built_in">set</span> 1 boot on mkpart primary ext4 513M 100% <span class="built_in">print</span></span><br><span class="line">mkfs.fat -F 32 /dev/sda1</span><br><span class="line">mkfs.ext4 /dev/sda2</span><br></pre></td></tr></table></figure><h2 id="配置中科大的源"><a href="#配置中科大的源" class="headerlink" title="配置中科大的源"></a>配置中科大的源</h2><p>配置文档： <a href="https://mirrors.ustc.edu.cn/help/archlinux.html">https://mirrors.ustc.edu.cn/help/archlinux.html</a></p><h2 id="挂载与-chroot-操作"><a href="#挂载与-chroot-操作" class="headerlink" title="挂载与 chroot 操作"></a>挂载与 chroot 操作</h2><p>chroot 后相当于进入了安装后的系统内进行操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda2 /mnt</span><br><span class="line">mount --<span class="built_in">mkdir</span> /dev/sda1 /mnt/boot</span><br><span class="line">pacstrap -K /mnt base linux linux-firmware</span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line"></span><br><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><h3 id="配置时区"><a href="#配置时区" class="headerlink" title="配置时区"></a>配置时区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="配置-locale"><a href="#配置-locale" class="headerlink" title="配置 locale"></a>配置 locale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S vim vi</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s/#en_US.UTF-8/en_US.UTF-8/&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s/#zh_CN.UTF-8/zh_CN.UTF-8/&#x27;</span> \</span><br><span class="line">    -i /etc/locale.gen</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LANG=en_US.UTF-8&quot;</span> &gt;&gt; /etc/locale.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">arch</span> &gt;&gt; /etc/hostname</span><br></pre></td></tr></table></figure><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>这里使用的是 systemd 全家桶</p><p>vim &#x2F;etc&#x2F;systemd&#x2F;network&#x2F;20-wired.network</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Match]</span><br><span class="line">Name=ens33</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">DHCP=ipv4</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> systemd-networkd systemd-resolved</span><br></pre></td></tr></table></figure><h3 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h3 id="创建普通用户"><a href="#创建普通用户" class="headerlink" title="创建普通用户"></a>创建普通用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pacman -S sudo</span><br><span class="line">groupadd sudo</span><br><span class="line">useradd -s /bin/bash -m iuxt</span><br><span class="line">usermod  -aG sudo iuxt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;iuxt ALL=(ALL:ALL) NOPASSWD: ALL&quot;</span> &gt; /etc/sudoers.d/iuxt</span><br><span class="line">passwd iuxt</span><br></pre></td></tr></table></figure><h2 id="安装-grub"><a href="#安装-grub" class="headerlink" title="安装 grub"></a>安装 grub</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S efibootmgr grub</span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S openssh</span><br><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure><h2 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br><span class="line">umount -R /mnt</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>到此为止，不带图形界面的 ArchLinux 已经安装好了。</p><h2 id="ArchInstall"><a href="#ArchInstall" class="headerlink" title="ArchInstall"></a>ArchInstall</h2><p>基本系统安装, 也可以使用 archinstall, 这个是在虚拟机环境下, 我的安装配置.</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202307300923540.png"></p><h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用i3-wm</button><button type="button" class="tab">使用KDE</button></div><div class="tab-contents"><div class="tab-item-content active"><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xorg xorg-xinit</span><br><span class="line">sudo pacman -S i3 dmenu</span><br><span class="line">sudo pacman -S ttf-droid wqy-microhei wqy-zenhei noto-fonts-emoji ttf-font-awesome</span><br><span class="line">sudo pacman -S alacritty</span><br></pre></td></tr></table></figure><p>设置 archlinux 为文本模式启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default multi-user.target</span><br></pre></td></tr></table></figure><p>在 ~&#x2F;.xinitrc 中添加以下内容运行 i3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span> dbus-launch i3</span><br></pre></td></tr></table></figure><p>配置 ~&#x2F;.bash_profile 中添加以下内容运行 startx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$DISPLAY</span>&quot;</span> ] &amp;&amp; [ -n <span class="string">&quot;<span class="variable">$XDG_VTNR</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$XDG_VTNR</span>&quot;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exec</span> startx</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pacman -S xorg-server xorg-drivers xorg-xinit</span><br><span class="line">pacman -S sddm</span><br><span class="line">systemctl <span class="built_in">enable</span> --now sddm.service</span><br><span class="line">pacman -S plasma konsole dolphin kwalletmanager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了支持kde的应用商店</span></span><br><span class="line">sudo pacman -S archlinux-appstream-data  packagekit-qt5  flatpak fwupd</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="使用-aur"><a href="#使用-aur" class="headerlink" title="使用 aur"></a>使用 aur</h2><h3 id="安装-yay"><a href="#安装-yay" class="headerlink" title="安装 yay"></a>安装 yay</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S base-devel git</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><h2 id="配置中文"><a href="#配置中文" class="headerlink" title="配置中文"></a>配置中文</h2><h3 id="中文字体"><a href="#中文字体" class="headerlink" title="中文字体"></a>中文字体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy wqy-zenhei wqy-microhei \</span><br><span class="line">    noto-fonts-emoji ttf-dejavu \</span><br><span class="line">    adobe-source-han-sans-cn-fonts \</span><br><span class="line">    adobe-source-han-sans-tw-fonts \</span><br><span class="line">    adobe-source-han-sans-jp-fonts \</span><br><span class="line">    adobe-source-han-sans-kr-fonts \</span><br><span class="line">    ttf-sarasa-gothic</span><br></pre></td></tr></table></figure><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy fcitx5-im fcitx5-qt fcitx5-gtk</span><br><span class="line"><span class="comment"># fcitx5-im是一个包组，包括fcitx5、fcitx5-configtool、fcitx5-gtk、fcitx5-qt</span></span><br><span class="line">yay fcitx5-input-support</span><br></pre></td></tr></table></figure><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pacman -S gtkmm3</span><br><span class="line">pacman -S open-vm-tools</span><br><span class="line">pacman -S xf86-video-vmware</span><br><span class="line">systemctl <span class="built_in">enable</span> --now vmtoolsd vmware-vmblock-fuse</span><br></pre></td></tr></table></figure><h2 id="配置-zsh"><a href="#配置-zsh" class="headerlink" title="配置 zsh"></a>配置 zsh</h2><p>安装 zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S zsh</span><br></pre></td></tr></table></figure><p>安装 oh my zsh 官网 <a href="https://github.com/ohmyzsh/ohmyzsh">https://github.com/ohmyzsh/ohmyzsh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装 powerlevel10k 主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br><span class="line">sed -i <span class="string">&#x27;s#^ZSH_THEME=.*#ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;#g&#x27;</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装nerd font字体</span></span><br><span class="line">yay -S ttf-meslo-nerd-font-powerlevel10k</span><br></pre></td></tr></table></figure><p>安装常用插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">zsh -ic <span class="string">&quot;omz plugin enable zsh-autosuggestions&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">zsh -ic <span class="string">&quot;omz plugin enable zsh-syntax-highlighting&quot;</span></span><br><span class="line"></span><br><span class="line">sudo pacman -S fzf</span><br><span class="line">zsh -ic <span class="string">&quot;omz plugin enable fzf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用一些自带插件</span></span><br><span class="line">zsh -ic <span class="string">&quot;omz plugin enable sudo z git&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux神奇的proc目录</title>
      <link href="/posts/sqkrxr/"/>
      <url>/posts/sqkrxr/</url>
      
        <content type="html"><![CDATA[<p>让我们看看&#x2F;proc 里面都有什么<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250116150653346.png" alt="image.png"></p><h2 id="查看进程打开的文件"><a href="#查看进程打开的文件" class="headerlink" title="查看进程打开的文件"></a>查看进程打开的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看打开了什么文件</span></span><br><span class="line"><span class="comment"># 通过进程名</span></span><br><span class="line">lsof -c more</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过PID</span></span><br><span class="line">lsof -p 30149</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以通过/proc查看</span></span><br><span class="line"><span class="built_in">ls</span> -al /proc/30149/fd</span><br></pre></td></tr></table></figure><h2 id="查看进程的环境变量"><a href="#查看进程的环境变量" class="headerlink" title="查看进程的环境变量"></a>查看进程的环境变量</h2><p>和 env 命令查看到的不同，env 查看的是系统的环境变量，可以理解为默认环境变量，但是进程的环境变量可能不一样，比如说：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=B vim a.log</span><br></pre></td></tr></table></figure><p>这种情况下 vim 进程是有 A 这个环境变量的，可以使用以下命令查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/39564/environ |  <span class="built_in">tr</span> <span class="string">&#x27;\0&#x27;</span> <span class="string">&#x27;\n&#x27;</span>  </span><br></pre></td></tr></table></figure><h2 id="内核启动参数"><a href="#内核启动参数" class="headerlink" title="内核启动参数"></a>内核启动参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cmdline | <span class="built_in">tr</span> <span class="string">&#x27;\0&#x27;</span> <span class="string">&#x27; &#x27;</span></span><br></pre></td></tr></table></figure><h2 id="可执行文件"><a href="#可执行文件" class="headerlink" title="可执行文件"></a>可执行文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exe是运行的可执行文件，和上面有一些区别。</span><br></pre></td></tr></table></figure><h2 id="limits"><a href="#limits" class="headerlink" title="limits"></a>limits</h2><p>进程所受到的限制，比如最大文件打开数等。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Fail2ban配合Docker使用解决暴力破解</title>
      <link href="/posts/7b28cbbc/"/>
      <url>/posts/7b28cbbc/</url>
      
        <content type="html"><![CDATA[<p>fail2ban 正常使用可以参考 <a href="/posts/c0880a78">使用Fail2ban抵御暴力破解和cc攻击</a>，但是对于使用了 Docker host 网络的容器来说是不生效的。原因最后说， 我们先复原一下部署情况</p><h2 id="环境现状"><a href="#环境现状" class="headerlink" title="环境现状"></a>环境现状</h2><p>服务器是我自己的服务器，使用 Nginx 做入口，反向代理到不同的后端，后端服务和 Nginx 都是运行在 Docker 里，使用 Docker 的自定义网络进行互联。其中 Nginx 容器使用的是 Host 网络</p><h2 id="配置-fail2ban"><a href="#配置-fail2ban" class="headerlink" title="配置 fail2ban"></a>配置 fail2ban</h2><h3 id="确定-Docker-版-Nginx-日志路径"><a href="#确定-Docker-版-Nginx-日志路径" class="headerlink" title="确定 Docker 版 Nginx 日志路径"></a>确定 Docker 版 Nginx 日志路径</h3><p>Linux 内一切皆文件，Docker 会将日志写入到主机的一个日志文件中。通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect nginx --format <span class="string">&quot;&#123;&#123;.LogPath&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>可以查看到容器的日志位置</p><h3 id="创建配置文件-etc-fail2ban-jail-d-nginx-cc-conf"><a href="#创建配置文件-etc-fail2ban-jail-d-nginx-cc-conf" class="headerlink" title="创建配置文件 /etc/fail2ban/jail.d/nginx-cc.conf"></a>创建配置文件 <code>/etc/fail2ban/jail.d/nginx-cc.conf</code></h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nginx-cc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">port</span> = http,https</span><br><span class="line"><span class="attr">filter</span> = nginx-cc</span><br><span class="line"><span class="attr">action</span> = %(action_)s</span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">50</span></span><br><span class="line"><span class="attr">findtime</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">86400</span></span><br><span class="line"><span class="attr">logpath</span> = /var/lib/docker/containers/<span class="number">6</span>fb54f7558d2c7f3c9cb9ce2928f746abd2ce5cd1a3f56fe4889ea3f336b08ff/<span class="number">6</span>fb54f7558d2c7f3c9cb9ce2928f746abd2ce5cd1a3f56fe4889ea3f336b08ff-json.log</span><br></pre></td></tr></table></figure><h3 id="创建配置文件-etc-fail2ban-filter-d-nginx-cc-conf"><a href="#创建配置文件-etc-fail2ban-filter-d-nginx-cc-conf" class="headerlink" title="创建配置文件 /etc/fail2ban/filter.d/nginx-cc.conf"></a>创建配置文件 <code>/etc/fail2ban/filter.d/nginx-cc.conf</code></h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Definition]</span></span><br><span class="line"><span class="attr">failregex</span> = ^\&#123;\<span class="string">&quot;log\&quot;:\&quot;&lt;HOST&gt; -.*- .*HTTP/1.* .* .*$</span></span><br><span class="line"><span class="string">ignoreregex =</span></span><br></pre></td></tr></table></figure><h2 id="复现问题"><a href="#复现问题" class="headerlink" title="复现问题"></a>复现问题</h2><p>照此配置后，多次访问后，查看 <code>fail2ban-client status nginx-cc</code>，此时 fail2ban 已经显示 ip 被 ban 了：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202301161607539.png" alt="fail2ban显示"></p><p>查看 iptables 规则：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202301161608061.png" alt="iptables"></p><p>也已经 REJECT 了，但是并没有效果。</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202301161608560.png" alt="架构图"></p><p>原因是 fail2ban 作用于 INPUT 链，而 Docker Host 走的是 Forward 链。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在 <code>/etc/fail2ban/jail.d/nginx-cc.conf</code> 里增加一行配置，指定作用于哪个链。</p><p>完整配置如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nginx-cc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">chain</span> = DOCKER-USER</span><br><span class="line"><span class="attr">port</span> = http,https</span><br><span class="line"><span class="attr">filter</span> = nginx-cc</span><br><span class="line"><span class="attr">action</span> = %(action_)s</span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">50</span></span><br><span class="line"><span class="attr">findtime</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">86400</span></span><br><span class="line"><span class="attr">logpath</span> = /var/lib/docker/containers/<span class="number">6</span>fb54f7558d2c7f3c9cb9ce2928f746abd2ce5cd1a3f56fe4889ea3f336b08ff/<span class="number">6</span>fb54f7558d2c7f3c9cb9ce2928f746abd2ce5cd1a3f56fe4889ea3f336b08ff-json.log</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client reload</span><br></pre></td></tr></table></figure><p>重新加载配置。此时发生 ban ip，再次查看 iptables 规则：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202301161632308.png" alt="更改后"></p><p>已经作用于 DOCKER-USER 链</p><h2 id="allport-封禁不生效"><a href="#allport-封禁不生效" class="headerlink" title="allport 封禁不生效"></a>allport 封禁不生效</h2><p>在 docker 环境下, 需要对通过 docker 转发的所有端口进行封禁的操作, 可以指定作用于 forward 链</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[gitea-docker]</span><br><span class="line">enabled = true</span><br><span class="line">filter = gitea</span><br><span class="line">logpath = /var/lib/gitea/log/gitea.log</span><br><span class="line">maxretry = 10</span><br><span class="line">findtime = 3600</span><br><span class="line">bantime = 900</span><br><span class="line">action = iptables-allports[chain=&quot;FORWARD&quot;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fail2ban </tag>
            
            <tag> cc攻击 </tag>
            
            <tag> iptables </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Fail2ban抵御暴力破解和cc攻击</title>
      <link href="/posts/c0880a78/"/>
      <url>/posts/c0880a78/</url>
      
        <content type="html"><![CDATA[<p>fail2ban 是一款防止暴力破解和 cc 攻击的开源工具，采用 Python 编写。</p><h2 id="常用组件"><a href="#常用组件" class="headerlink" title="常用组件"></a>常用组件</h2><table><thead><tr><th>工具</th><th>作用</th></tr></thead><tbody><tr><td>fail2ban-client</td><td>客户端工具</td></tr><tr><td>fail2ban-regex</td><td>验证正则匹配</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看启用的规则</span></span><br><span class="line">fail2ban-client status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看规则详情</span></span><br><span class="line">fail2ban-client status sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">fail2ban-client reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动解禁IP</span></span><br><span class="line">fail2ban-client <span class="built_in">set</span> sshd unbanip 192.168.1.1</span><br></pre></td></tr></table></figure><table><thead><tr><th>配置文件目录</th><th>作用</th></tr></thead><tbody><tr><td>&#x2F;etc&#x2F;fail2ban&#x2F;jail.d</td><td>ban 的规则，如多少次触发，触发后封禁多久等</td></tr><tr><td>&#x2F;etc&#x2F;fail2ban&#x2F;filter.d</td><td>过滤规则，匹配日志的正则配置</td></tr></tbody></table><h2 id="规则测试"><a href="#规则测试" class="headerlink" title="规则测试"></a>规则测试</h2><p>创建配置文件 <code>/etc/fail2ban/jail.d/nginx-cc.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nginx-cc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">port</span> = http,https</span><br><span class="line"><span class="attr">filter</span> = nginx-cc</span><br><span class="line"><span class="attr">action</span> = %(action_mwl)s</span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">20</span></span><br><span class="line"><span class="attr">findtime</span> = <span class="number">10</span>m</span><br><span class="line"><span class="attr">bantime</span> = <span class="number">2</span>h</span><br><span class="line"><span class="attr">logpath</span> = /var/log/nginx/access.log</span><br></pre></td></tr></table></figure><table><thead><tr><th>配置</th><th align="left">说明</th><th>备注</th></tr></thead><tbody><tr><td>enabled</td><td align="left">是否开启检测</td><td></td></tr><tr><td>port</td><td align="left">检查的端口</td><td>多个端口 , 分隔</td></tr><tr><td>ignoreip</td><td align="left">忽略 IP 地址（CIDR 格式）或机器名，以空格分隔。</td><td></td></tr><tr><td>bantime</td><td align="left">主机被禁止时长，默认 600 秒。</td><td>高版本 Fail2ban 支持 s （秒）, m （分）和 d （天）作为时间单位，如 10m 和 1d</td></tr><tr><td>maxretry</td><td align="left">在 findtime 时间窗口中，允许主机认证失败次数。达到最大次数，主机将被禁止。</td><td>在 findtime 时间段内，发生 maxretry 次，就会触发封禁。</td></tr><tr><td>findtime</td><td align="left">查找主机认证失败的时间间隔。 不意味着每隔 findtime 时间扫描一次日志。</td><td>高版本 Fail2ban 支持 s （秒）, m （分）和 d （天）作为时间单位，如 10m 和 1d</td></tr><tr><td>logpath</td><td align="left">扫描的日志文件</td><td>fail2ban 按行扫描此文件，根据 filter 规则匹配失败的项目并统计</td></tr><tr><td>action</td><td align="left">用什么方式来封禁, iptables 或 ufw 或 firewalld 等</td><td></td></tr><tr><td>action &#x3D; %(action_)s</td><td align="left">只封禁, 不发送邮件</td><td></td></tr><tr><td>action &#x3D; %(action_mw)s</td><td align="left">发邮件通知</td><td></td></tr><tr><td>action &#x3D; %(action_mwl)s</td><td align="left">发邮件通知并带上日志</td><td></td></tr></tbody></table><p>创建配置文件 <code>/etc/fail2ban/filter.d/nginx-cc.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Definition]</span></span><br><span class="line"><span class="attr">failregex</span> = &lt;HOST&gt; -.*- .*HTTP/<span class="number">1</span>.* .* .*$</span><br><span class="line">ignoreregex =</span><br></pre></td></tr></table></figure><h3 id="fail2ban-regex-测试"><a href="#fail2ban-regex-测试" class="headerlink" title="fail2ban-regex 测试"></a>fail2ban-regex 测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正则规则检查</span></span><br><span class="line">fail2ban-regex /var/log/nginx/access.log <span class="string">&quot;&lt;HOST&gt; -.*- .*HTTP/1.* .* .*$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据配置文件检查</span></span><br><span class="line">fail2ban-regex /var/log/nginx/access.log /etc/fail2ban/filter.d/nginx-cc.conf</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="ubuntu-启动报错"><a href="#ubuntu-启动报错" class="headerlink" title="ubuntu 启动报错"></a>ubuntu 启动报错</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR   Failed during configuration: Have not found any <span class="built_in">log</span> file <span class="keyword">for</span> sshd jail</span><br></pre></td></tr></table></figure><p>原因应该是 fail2ban 默认开启 ssh 监控，但是找不到 ssh 的日志。<br>网上搜索发现有人在 GitHub 上给出了解决方案。在 jail 设置里面加上以下内容即可顺利启动：</p><p><code>vim /etc/fail2ban/jail.d/defaults-debian.conf</code> 在最上面加上:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">backend</span> = systemd</span><br></pre></td></tr></table></figure><p>或者安装 <code>rsyslog</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y rsyslog</span><br></pre></td></tr></table></figure><h3 id="SSH-错误密钥不封禁"><a href="#SSH-错误密钥不封禁" class="headerlink" title="SSH 错误密钥不封禁"></a>SSH 错误密钥不封禁</h3><p>fail2ban 安装完成后默认就会对 ssh 进行封禁（debian 系），配置文件见 <code>/etc/fail2ban/jail.d/defaults-debian.conf</code>, 默认对密码错误、密钥登陆的用户名错误都有封禁效果，但是用户名是正确的但是 key 错了是不封禁的， 可以通过修改 <code>/etc/fail2ban/jail.d/defaults-debian.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[sshd]</span></span><br><span class="line"><span class="attr">mode</span>   = aggressive</span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置 <code>mode   = aggressive</code> 可解决此问题</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fail2ban </tag>
            
            <tag> cc攻击 </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hyper-V 自动创建虚拟机快照</title>
      <link href="/posts/sq3s3x/"/>
      <url>/posts/sq3s3x/</url>
      
        <content type="html"><![CDATA[<p>首先要允许 PowerShell 执行本地脚本文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure><p>PowerShell 脚本内容：（文件需要保存成 GB2312 编码，不然中文乱码，执行报错。）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$isAdmin</span> = ([<span class="type">Security.Principal.WindowsPrincipal</span>] [<span class="type">Security.Principal.WindowsIdentity</span>]::GetCurrent()).IsInRole([<span class="type">Security.Principal.WindowsBuiltInRole</span>]::Administrator)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不是管理员，以管理员身份重新运行脚本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="operator">-not</span> <span class="variable">$isAdmin</span>) &#123;</span><br><span class="line">    <span class="built_in">Start-Process</span> powershell <span class="literal">-ArgumentList</span> <span class="string">&quot;-NoProfile -ExecutionPolicy Bypass -File `&quot;<span class="variable">$PSCommandPath</span>`&quot;&quot;</span> <span class="literal">-Verb</span> RunAs</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此处放置你的脚本的其余部分</span></span><br><span class="line"><span class="built_in">Write-Output</span> <span class="string">&quot;脚本以管理员身份运行&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留的最大快照数量</span></span><br><span class="line"><span class="variable">$maxSnapshots</span> = <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有虚拟机的名称</span></span><br><span class="line"><span class="variable">$vms</span> = <span class="built_in">Get-VM</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$vm</span> <span class="keyword">in</span> <span class="variable">$vms</span>) &#123;</span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="string">&quot;为虚拟机 <span class="variable">$</span>(<span class="variable">$vm</span>.Name) 创建定时快照&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$datetime</span> = <span class="built_in">Get-Date</span> <span class="literal">-Format</span> <span class="string">&#x27;yyyy-MM-dd tt hh:mm:ss&#x27;</span></span><br><span class="line">    <span class="comment"># 创建快照</span></span><br><span class="line">    <span class="built_in">Checkpoint-VM</span> <span class="literal">-VM</span> <span class="variable">$vm</span> <span class="literal">-SnapshotName</span> <span class="string">&quot;定时快照 (<span class="variable">$datetime</span>)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取所有快照</span></span><br><span class="line">    <span class="variable">$snapshots</span> = <span class="built_in">Get-VMSnapshot</span> <span class="literal">-VM</span> <span class="variable">$vm</span> | <span class="built_in">Where-Object</span> &#123; <span class="variable">$_</span>.Name <span class="operator">-like</span> <span class="string">&#x27;定时快照*&#x27;</span> &#125;</span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="string">&quot;共有 <span class="variable">$</span>(<span class="variable">$snapshots</span>.Count) 个定时快照&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果快照数量超过限制，则删除较旧的快照</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$snapshots</span>.Count <span class="operator">-gt</span> <span class="variable">$maxSnapshots</span>) &#123;</span><br><span class="line">        <span class="variable">$snapshotsToDelete</span> = <span class="variable">$snapshots</span> | <span class="built_in">Sort-Object</span> CreationTime | <span class="built_in">Select-Object</span> <span class="literal">-First</span> (<span class="variable">$snapshots</span>.Count - <span class="variable">$maxSnapshots</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$snapshot</span> <span class="keyword">in</span> <span class="variable">$snapshotsToDelete</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Output</span> <span class="string">&quot;删除快照 <span class="variable">$</span>(<span class="variable">$snapshot</span>.Name)&quot;</span></span><br><span class="line">            <span class="built_in">Remove-VMSnapshot</span> <span class="literal">-VM</span> <span class="variable">$vm</span> <span class="literal">-Name</span> <span class="variable">$snapshot</span>.Name</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定时执行需要配置任务计划：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -File 脚本路径</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Hyper-V </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下运行服务的几种方式</title>
      <link href="/posts/5d4cbfad/"/>
      <url>/posts/5d4cbfad/</url>
      
        <content type="html"><![CDATA[<h2 id="原生命令-sc"><a href="#原生命令-sc" class="headerlink" title="原生命令 sc"></a>原生命令 sc</h2><p>微软官方文档： <a href="https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/sc-create">https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/sc-create</a></p><h2 id="第三方工具-winsw-2-x"><a href="#第三方工具-winsw-2-x" class="headerlink" title="第三方工具 winsw 2.x"></a>第三方工具 winsw 2.x</h2><p><a href="https://github.com/winsw/winsw/releases/tag/v2.11.0">https://github.com/winsw/winsw/releases/tag/v2.11.0</a></p><p>需要将 winsw 可执行文件和配置文件放在同一目录, 一般放在程序同级目录. 同样以 frpc 为例:</p><p>service.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Display name of the service --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>frpc Service (powered by WinSW)<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Service description --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>frpc 开源内网穿透工具<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Path to the executable, which should be started --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>%BASE%\frpc.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">serviceaccount</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">domain</span>&gt;</span>.<span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span>your windows user<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>your windows password<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">allowservicelogon</span>&gt;</span>true<span class="tag">&lt;/<span class="name">allowservicelogon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">serviceaccount</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;10 sec&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;20 sec&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;60 sec&quot;</span>/&gt;</span> </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">resetfailure</span>&gt;</span>4 hour<span class="tag">&lt;/<span class="name">resetfailure</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>--config %BASE%\frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">priority</span>&gt;</span>Normal<span class="tag">&lt;/<span class="name">priority</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoptimeout</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">stoptimeout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">stopparentprocessfirst</span>&gt;</span>true<span class="tag">&lt;/<span class="name">stopparentprocessfirst</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delayedAutoStart</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">waithint</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">waithint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sleeptime</span>&gt;</span>1 sec<span class="tag">&lt;/<span class="name">sleeptime</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">logpath</span>&gt;</span>%BASE%\logs<span class="tag">&lt;/<span class="name">logpath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">&quot;append&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;setting1/&gt;</span></span><br><span class="line"><span class="comment">    &lt;setting2/&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后将 winsw.exe 重命名成 service.exe(和 xml 文件保持一致),然后执行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service.exe install</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service.exe -h</span><br><span class="line">service.exe uninstall</span><br><span class="line">service.exe <span class="built_in">start</span></span><br><span class="line">service.exe stop</span><br><span class="line">service.exe restart</span><br></pre></td></tr></table></figure><h2 id="第三方工具-winsw-3-x-beta"><a href="#第三方工具-winsw-3-x-beta" class="headerlink" title="第三方工具 winsw 3.x beta"></a>第三方工具 winsw 3.x beta</h2><p><a href="https://github.com/winsw/winsw">https://github.com/winsw/winsw</a></p><p>注意: 2.x 版本 和 3.x 版本会有一些不同, 我用的是 3.x beta 版本, 以 frpc 这个内网穿透服务为例, 3.x 当前指定用户执行的功能有 bug</p><h3 id="安装-winsw"><a href="#安装-winsw" class="headerlink" title="安装 winsw"></a>安装 winsw</h3><p>确保可执行文件所在的目录在系统环境变量 <code>PATH</code> 中</p><h3 id="准备配置文件"><a href="#准备配置文件" class="headerlink" title="准备配置文件"></a>准备配置文件</h3><p>在可执行文件下保存一份配置文件 <code>winsw.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>frpc Service (powered by WinSW)<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>内网穿透服务<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>%BASE%\frpc.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>--config %BASE%\frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">workingdirectory</span>&gt;</span>%BASE%<span class="tag">&lt;/<span class="name">workingdirectory</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;10 sec&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;20 sec&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;1 hour&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resetfailure</span>&gt;</span>2 hour<span class="tag">&lt;/<span class="name">resetfailure</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoptimeout</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">stoptimeout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">priority</span>&gt;</span>Normal<span class="tag">&lt;/<span class="name">priority</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">delayedAutoStart</span>&gt;</span>true<span class="tag">&lt;/<span class="name">delayedAutoStart</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">logpath</span>&gt;</span>%BASE%\logs<span class="tag">&lt;/<span class="name">logpath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">&quot;append&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;setting1/&gt;</span></span><br><span class="line"><span class="comment">    &lt;setting2/&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="服务操作"><a href="#服务操作" class="headerlink" title="服务操作"></a>服务操作</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查看帮助</span><br><span class="line">winsw.exe -h</span><br><span class="line"></span><br><span class="line">安装服务</span><br><span class="line">winsw.exe install winsw.xml</span><br><span class="line"></span><br><span class="line">重启服务, 当然到系统的服务里面重启也可以</span><br><span class="line">winsw.exe restart winsw.xml</span><br><span class="line"></span><br><span class="line">修改了xml配置文件, 重新加载</span><br><span class="line">winsw.exe refresh winsw.xml</span><br><span class="line"></span><br><span class="line">卸载服务</span><br><span class="line">winsw.exe uninstall winsw.xml</span><br></pre></td></tr></table></figure><h2 id="第三方工具-nssm"><a href="#第三方工具-nssm" class="headerlink" title="第三方工具 nssm"></a>第三方工具 nssm</h2><p>官网: <a href="https://nssm.cc/download">https://nssm.cc/download</a></p><p>下载好可执行文件, 建议放在系统环境变量 PATH 中, 这样在任何地方都可以执行 <code>nssm</code> 命令</p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">安装服务, 会弹出图形界面, 完全界面操作.</span><br><span class="line">nssm install frpc</span><br><span class="line"></span><br><span class="line">修改服务</span><br><span class="line">nssm edit frpc</span><br><span class="line"></span><br><span class="line">卸载服务</span><br><span class="line">nssm remove frpc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务 </tag>
            
            <tag> service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python遍历文件或文件夹</title>
      <link href="/posts/950d73ef/"/>
      <url>/posts/950d73ef/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>root: 当前遍历到的目录, 也就是所在的目录, 字符串<br>dirs: 当前目录下的子目录列表<br>files: 当前目录下的文件列表</p><p>比如文件结构 <code>/tmp/1/</code> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">├── file1</span><br><span class="line">├── file2</span><br><span class="line">├── folder1</span><br><span class="line">└── folder2</span><br></pre></td></tr></table></figure><p>脚本内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">&quot;/tmp/1/&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;root&quot;</span>, root)</span><br><span class="line">    <span class="built_in">print</span>(dirs)</span><br><span class="line">    <span class="built_in">print</span>(files)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前的root是</span></span><br><span class="line">/tmp/1/</span><br><span class="line"></span><br><span class="line"><span class="comment"># root下的目录列表为:</span></span><br><span class="line">[<span class="string">&#x27;folder2&#x27;</span>, <span class="string">&#x27;folder1&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># root下的文件列表为</span></span><br><span class="line">[<span class="string">&#x27;file2&#x27;</span>, <span class="string">&#x27;file1&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历到的下一个root, 里面的文件和目录都为空.</span></span><br><span class="line">/tmp/1/folder2</span><br><span class="line">[]</span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历到的下一个root</span></span><br><span class="line">/tmp/1/folder1</span><br><span class="line">[]</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><h2 id="遍历所有文件夹"><a href="#遍历所有文件夹" class="headerlink" title="遍历所有文件夹"></a>遍历所有文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=<span class="string">r&quot;c:\users\iuxt\desktop\&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 获取到当前目录下的所有子目录的绝对路径</span></span><br><span class="line"><span class="string">for root,dirs,files in os.walk(path):</span></span><br><span class="line"><span class="string">    for dir in dirs:</span></span><br><span class="line"><span class="string">        print(os.path.join(root, dir))</span></span><br></pre></td></tr></table></figure><h2 id="遍历所有文件"><a href="#遍历所有文件" class="headerlink" title="遍历所有文件"></a>遍历所有文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=<span class="string">r&quot;C:\users\iuxt\desktop\&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 获取到的是此目录下和子目录下所有文件的绝对路径</span></span><br><span class="line"><span class="string">for root,dirs,files in os.walk(path):</span></span><br><span class="line"><span class="string">    for file in files:</span></span><br><span class="line"><span class="string">        print(os.path.join(root, file))</span></span><br></pre></td></tr></table></figure><h2 id="遍历到最深的文件夹"><a href="#遍历到最深的文件夹" class="headerlink" title="遍历到最深的文件夹"></a>遍历到最深的文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">path=<span class="string">r&quot;/tmp/1/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(path):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(dirs) == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(root)</span><br></pre></td></tr></table></figure><h2 id="一个例子-自动清理-MySQL-备份文件"><a href="#一个例子-自动清理-MySQL-备份文件" class="headerlink" title="一个例子, 自动清理 MySQL 备份文件"></a>一个例子, 自动清理 MySQL 备份文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">keep_file_num = <span class="number">60</span></span><br><span class="line">clean_folder = <span class="string">&quot;/data/backup/mysql/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_files</span>(<span class="params">files</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    files: 文件绝对路径列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        os.remove(file)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;clean  &quot;</span> + file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(clean_folder):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    root: 当前遍历到的目录, 也就是所在的目录, 字符串</span></span><br><span class="line"><span class="string">    dirs: 当前目录下的子目录列表</span></span><br><span class="line"><span class="string">    files: 当前目录下的文件</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(dirs) == <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 所有文件列表,绝对路径</span></span><br><span class="line">        files = glob.glob(os.path.join(root, <span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 按照时间排序, 时间早的在前</span></span><br><span class="line">        files.sort(key=os.path.getmtime)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 除去保留的, 其余的删除</span></span><br><span class="line">        clean_num = <span class="built_in">len</span>(files) - keep_file_num</span><br><span class="line">        <span class="keyword">if</span> clean_num &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            files = files[:clean_num]</span><br><span class="line">            delete_files(files)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python读写文件</title>
      <link href="/posts/fe29bf0b/"/>
      <url>/posts/fe29bf0b/</url>
      
        <content type="html"><![CDATA[<p>使用 Python 读写文件很方便，有多种方法，但是读写大文件还是需要优化的。</p><p>python open 文件的模式：</p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>r</td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>rb</td><td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>r+</td><td>打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td>rb+</td><td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td>w</td><td>打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>wb</td><td>以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>w+</td><td>打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>wb+</td><td>以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>a</td><td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td>ab</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td>a+</td><td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td>ab+</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><h2 id="读取小文件"><a href="#读取小文件" class="headerlink" title="读取小文件"></a>读取小文件</h2><blockquote><p>小文件读取可以用 <code>readlines()</code>, 返回一个列表</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(f.readlines())</span><br></pre></td></tr></table></figure><p>以上代码执行的结果 (换行符用\n 表示):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;111\n&#x27;</span>, <span class="string">&#x27;222\n&#x27;</span>, <span class="string">&#x27;333\n&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="按行读取超大文件"><a href="#按行读取超大文件" class="headerlink" title="按行读取超大文件"></a>按行读取超大文件</h2><p>文件如果比较大，就不能使用 <code>readlines()</code> 来读取了，那样会占用大量内存。可以使用遍历 <code>readline()</code> 方法来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> line:</span><br><span class="line">            <span class="built_in">print</span>(line, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>或者这种写法，更简洁。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure><h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure><h2 id="写入大文件"><a href="#写入大文件" class="headerlink" title="写入大文件"></a>写入大文件</h2><p>写入大文件一般都是追加写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f.write(<span class="string">&#x27;Hello, world!&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gpg使用记录</title>
      <link href="/posts/e0fe652d/"/>
      <url>/posts/e0fe652d/</url>
      
        <content type="html"><![CDATA[<p>要了解什么是 GPG，就要先了解 PGP。</p><p>1991 年，程序员 Phil Zimmermann 为了避开政府监视，开发了加密软件 PGP。这个软件非常好用，迅速流传开来，成了许多程序员的必备工具。但是，它是商业软件，不能自由使用。所以，自由软件基金会决定，开发一个 PGP 的替代品，取名为 GnuPG。这就是 GPG 的由来。</p><p>GPG 有许多用途，本文主要介绍文件加密。至于邮件的加密，不同的邮件客户端有不同的设置。</p><p>当前我的系统环境是 <code>Ubuntu 22.04</code> gpg 版本是 <code>gpg (GnuPG) 2.2.27</code>。</p><h2 id="Key-管理"><a href="#Key-管理" class="headerlink" title="Key 管理"></a>Key 管理</h2><p>Key ID: 该 GPG Key 的唯一标识，值为主公钥的指纹，支持多种格式 (Fingerprint, Long key ID, Short key ID)。<br>UID: 1 个或多个，每个 UID 由 name、email、comment 组成，email 和 comment 可以为空。<br>Expire: 过期时间，可以为永久。<br>主秘钥和主公钥（Primary Key）、子秘钥和子公钥（Sub Key）都是成对出现的，其用途也是一致的。<br>每一对都包含一个 key id 属性（为 public key 的指纹），其中主密钥&#x2F;主公钥的 key id 就是当前 GPG Key 的 Key ID。</p><h2 id="创建密钥对"><a href="#创建密钥对" class="headerlink" title="创建密钥对"></a>创建密钥对</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速生成密钥对</span></span><br><span class="line">gpg --gen-key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互式创建</span></span><br><span class="line">gpg --full-gen-key</span><br></pre></td></tr></table></figure><p>这里我们使用 –full-gen-key 来生成密钥对，首先选择密钥类型，选择 1 (默认) 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --full-gen-key</span><br><span class="line"></span><br><span class="line">gpg (GnuPG) 2.2.27; Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">Please <span class="keyword">select</span> what kind of key you want:</span><br><span class="line">   (1) RSA and RSA (default)</span><br><span class="line">   (2) DSA and Elgamal</span><br><span class="line">   (3) DSA (sign only)</span><br><span class="line">   (4) RSA (sign only)</span><br><span class="line">  (14) Existing key from card</span><br><span class="line">Your selection?</span><br></pre></td></tr></table></figure><p>然后选择密钥长度，没有特殊需求的话保持 3072 的默认选项即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RSA keys may be between 1024 and 4096 bits long.</span><br><span class="line">What keysize <span class="keyword">do</span> you want? (3072)</span><br></pre></td></tr></table></figure><p>然后设置密钥的有效期，因为我们需要长期使用，所以选择 0 ，密钥永不过期, 也可以输入 2y， 表示 2 年。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Please specify how long the key should be valid.</span><br><span class="line">         0 = key does not expire</span><br><span class="line">      &lt;n&gt;  = key expires <span class="keyword">in</span> n days</span><br><span class="line">      &lt;n&gt;w = key expires <span class="keyword">in</span> n weeks</span><br><span class="line">      &lt;n&gt;m = key expires <span class="keyword">in</span> n months</span><br><span class="line">      &lt;n&gt;y = key expires <span class="keyword">in</span> n years</span><br><span class="line">Key is valid <span class="keyword">for</span>? (0)</span><br></pre></td></tr></table></figure><p>确定后，依次输入姓名、电子邮件和注释 (可以不填)，然后选择 o 确定, 确定后会出现一个窗口让输入密码，自行设置一个密码。然后密钥就创建成功了， 通过命令 <code>gpg --list-keys</code> 可以查看当前的密钥</p><p>这里有一串字符。就是 key 的 id，后面的操作都需要这个。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202212271033949.png" alt="查看key"></p><h2 id="创建子密钥"><a href="#创建子密钥" class="headerlink" title="创建子密钥"></a>创建子密钥</h2><p>上面创建的是公钥，如果使用这个密钥加密， 那么如果密钥不小心泄露， 就必须吊销整个密钥。所以我们创建子密钥来使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --edit-key 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><p>进入 gpg 控制台， 输入 <code>addkey</code></p><p>输入一些选择， 过期时间建议 2y，然后输入密钥的密码后，在控制台输入 save 保存退出。</p><h2 id="导出密钥"><a href="#导出密钥" class="headerlink" title="导出密钥"></a>导出密钥</h2><p>导出密钥默认是二进制存储，如果需要纯文本，加上 <code>--armor</code> 参数</p><h3 id="导出主密钥"><a href="#导出主密钥" class="headerlink" title="导出主密钥"></a>导出主密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导出公钥和私钥</span></span><br><span class="line">gpg -o /data/gpg_key --export-secret-keys 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只导出公钥</span></span><br><span class="line">gpg -o /data/gpg_pubkey --<span class="built_in">export</span> 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><p>主密钥一定要保存好，不要泄露</p><h3 id="导出子密钥"><a href="#导出子密钥" class="headerlink" title="导出子密钥"></a>导出子密钥</h3><p>为什么会存在子密钥？理论上只需一对主密钥，就可以完成所有加密和签名的需要了。而 GPG 支持一对主密钥和若干对子密钥，主要是为了密钥本身的安全考虑。例如需要在多台设备上进行签名和加密操作，如果在每个机器上都使用主密钥，一旦丢失，则所有设备上的信息都将可以被解密。而且除了撤销整个主密钥之外，没有任何其他办法来止损。而如果将主密钥保存在安全的地方，仅在必要的时候使用，其余机器上都使用子密钥。那么如果一台机器上的子密钥丢失，只有这台机器上的信息可能被泄露。而且无需撤销整个主密钥，只需要使用主密钥撤销这个子密钥，然后重新创建一个子密钥即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg -o /data/gpg_key.sub --export-secret-subkeys 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><h2 id="查看密钥"><a href="#查看密钥" class="headerlink" title="查看密钥"></a>查看密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gpg -k                   <span class="comment"># 查看公钥</span></span><br><span class="line">gpg -K                   <span class="comment"># 查看私钥</span></span><br><span class="line">gpg --list-keys          <span class="comment"># 查看公钥</span></span><br><span class="line">gpg --list-secret-keys   <span class="comment"># 查看私钥</span></span><br><span class="line">gpg --list-keys --keyid-format long          <span class="comment"># 查看公钥，打印出指纹</span></span><br><span class="line">gpg --list-secret-keys --keyid-format long   <span class="comment"># 查看私钥，打印出指纹</span></span><br></pre></td></tr></table></figure><h3 id="密钥类型"><a href="#密钥类型" class="headerlink" title="密钥类型"></a>密钥类型</h3><p>每个密钥开头都会有这样几个字母：pub&#x2F;sec&#x2F;sub&#x2F;ssb&#x2F;，表示这个密钥的类型。</p><p>在非对称加密算法中，密钥都是成对出现的。pub 和 sec 就分别表示这一对密钥的公钥和私钥，而 sub 和 ssb 则分别表示一对子密钥的公钥和私钥。</p><table><thead><tr><th>缩写</th><th>作用</th></tr></thead><tbody><tr><td>pub</td><td>主公钥</td></tr><tr><td>sec</td><td>主私钥</td></tr><tr><td>sub</td><td>子公钥</td></tr><tr><td>ssb</td><td>子私钥</td></tr></tbody></table><h3 id="密钥用途"><a href="#密钥用途" class="headerlink" title="密钥用途"></a>密钥用途</h3><p>每个密钥旁边都会有方括号包围的一个或多个字母，可能取值有 E&#x2F;S&#x2F;C&#x2F;A，表示这个密钥的用途。每个值的含义如下：</p><table><thead><tr><th>缩写</th><th>全称</th><th>作用</th></tr></thead><tbody><tr><td>E</td><td>Encryption</td><td>加密</td></tr><tr><td>S</td><td>Signing</td><td>签名</td></tr><tr><td>C</td><td>Certification</td><td>认证其他子密钥或 uid</td></tr><tr><td>A</td><td>Authentication</td><td>身份认证，例如用于 SSH 登录</td></tr></tbody></table><h3 id="导出公钥"><a href="#导出公钥" class="headerlink" title="导出公钥"></a>导出公钥</h3><blockquote><p>公钥是需要公开的，可以将公钥发送给别人，别人用于加密</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --output /data/public-key.txt --<span class="built_in">export</span> 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><h4 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h4><blockquote><p>也可以将公钥上传到公共服务器上</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --send-keys 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><h3 id="导出吊销证书"><a href="#导出吊销证书" class="headerlink" title="导出吊销证书"></a>导出吊销证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --generate-revocation 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><p>不过实际上在生成密匙时就已经生成了一份吊销证书了，放在这个目录下面 <code>~/.gnupg/openpgp-revocs.d/</code></p><h2 id="删除密钥"><a href="#删除密钥" class="headerlink" title="删除密钥"></a>删除密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除私钥</span></span><br><span class="line">gpg --delete-secret-keys 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除公钥</span></span><br><span class="line">gpg --delete-keys 4208C2FA114EE038F9EAD2374808D00D9D910E74</span><br></pre></td></tr></table></figure><h3 id="删除子密钥"><a href="#删除子密钥" class="headerlink" title="删除子密钥"></a>删除子密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">gpg --expert --edit-key x@zahui.fan</span><br><span class="line">gpg&gt; list</span><br><span class="line"></span><br><span class="line">pub  rsa3072/1065DD1957C255D3</span><br><span class="line">     创建于：2022-12-27  有效至：永不       可用于：SC</span><br><span class="line">     信任度：未知        有效性：未知</span><br><span class="line">ssb  rsa3072/77FD7CF225B6A92B</span><br><span class="line">     创建于：2022-12-27  有效至：永不       可用于：E</span><br><span class="line">ssb  rsa3072/CEA7CACC468ACDFE</span><br><span class="line">     创建于：2022-12-27  有效至：2024-12-26  可用于：S</span><br><span class="line">ssb  rsa3072/539C73E4E4949E97</span><br><span class="line">     创建于：2022-12-27  有效至：2024-12-26  可用于：E</span><br><span class="line">[ 未知 ] (1). zhanglikun (张理坤) &lt;x@zahui.fan&gt;</span><br><span class="line"></span><br><span class="line">gpg&gt;</span><br><span class="line">gpg&gt; key 77FD7CF225B6A92B</span><br><span class="line">gpg&gt; delkey</span><br><span class="line">gpg&gt; save</span><br></pre></td></tr></table></figure><h2 id="使用密钥"><a href="#使用密钥" class="headerlink" title="使用密钥"></a>使用密钥</h2><h3 id="主密钥离线使用"><a href="#主密钥离线使用" class="headerlink" title="主密钥离线使用"></a>主密钥离线使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gpg -K</span><br><span class="line">[keyboxd]</span><br><span class="line">---------</span><br><span class="line">sec<span class="comment">#  rsa3072 2022-12-27 [SC]</span></span><br><span class="line">      3CBE03848A00F025624C14B41065DD1957C255D3</span><br><span class="line">uid             [ 未知 ] zhanglikun (张理坤) &lt;x@zahui.fan&gt;</span><br><span class="line">ssb   rsa3072 2022-12-27 [E]</span><br><span class="line">ssb   rsa3072 2022-12-27 [S] [有效至：2024-12-26]</span><br><span class="line">ssb   rsa3072 2022-12-27 [E] [有效至：2024-12-26]</span><br></pre></td></tr></table></figure><p>注意这里是 <code>sec#</code> 不是 <code>sec</code>, 说明没有主密钥。</p><h3 id="导入密钥"><a href="#导入密钥" class="headerlink" title="导入密钥"></a>导入密钥</h3><p>在<mark class="hl-label red">自己的</mark>电脑上面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --import /data/gpg_key.sub</span><br></pre></td></tr></table></figure><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg -r iuxt@qq.com -e test.txt</span><br></pre></td></tr></table></figure><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg test.txt.gpg</span><br></pre></td></tr></table></figure><h3 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h3><p>有时，我们不需要加密文件，只需要对文件签名，表示这个文件确实是我本人发出的。sign 参数用来签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --sign test.txt</span><br></pre></td></tr></table></figure><p>然后生成了一个 test.txt.gpg 文件，我们打开这个文件后，发现这也是一个二进制的数据，这并不是加密后的数据，与上边的二进制数据不一样。如果想生成 ASCII 码的签名文件，可以使用 clearsign 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --clearsign test.txt</span><br></pre></td></tr></table></figure><p>如果想生成单独的签名文件，与文件内容分开存放，可以使用 detach-sign 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --detach-sign test.txt</span><br></pre></td></tr></table></figure><p>是一个二进制的数据，如果想采用 ASCII 码形式，要加上 armor 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --detach-sign test.txt</span><br></pre></td></tr></table></figure><h3 id="签名-加密"><a href="#签名-加密" class="headerlink" title="签名 + 加密"></a>签名 + 加密</h3><p>id 也可以换成 email， 可以加多个 –recipient 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --local-user [发信者ID] --recipient [接收者ID] --armor --sign --encrypt test.txt</span><br></pre></td></tr></table></figure><p>local-user 参数指定用发信者的私钥签名，recipient 参数指定用接收者的公钥加密，armor 参数表示采用 ASCII 码形式显示，sign 参数表示需要签名，encrypt 参数表示指定源文件。</p><h3 id="验证签名"><a href="#验证签名" class="headerlink" title="验证签名"></a>验证签名</h3><p>我们收到别人签名后的文件，需要用对方的公钥验证签名是否为真。verify 参数用来验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --verify test.txt.asc test.txt</span><br></pre></td></tr></table></figure><h2 id="配合-GitHub-使用"><a href="#配合-GitHub-使用" class="headerlink" title="配合 GitHub 使用"></a>配合 GitHub 使用</h2><p>首先，需要让 Git 知道签名所用的 GPG 密钥 ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.signingkey &#123;key_id&#125;</span><br></pre></td></tr></table></figure><p>然后，在每次 commit 的时候，加上 -S 参数，表示这次提交需要用 GPG 密钥进行签名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -S -m <span class="string">&quot;...&quot;</span></span><br></pre></td></tr></table></figure><p>如果觉得每次都需要手动加上 -S 有些麻烦，可以设置 Git 为每次 commit 自动要求签名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global commit.gpgsign <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后添加变量到 <code>.bashrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GPG_TTY=$(<span class="built_in">tty</span>)</span><br></pre></td></tr></table></figure><p>commit 时皆会弹出对话框，需要输入该密钥的密码，以确保是密钥拥有者本人操作</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> gpg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PowerShell操作Windows Defender</title>
      <link href="/posts/lqkgw2cy/"/>
      <url>/posts/lqkgw2cy/</url>
      
        <content type="html"><![CDATA[<p>首先需要使用到管理员权限运行 PowerShell</p><h2 id="查看排除列表"><a href="#查看排除列表" class="headerlink" title="查看排除列表"></a>查看排除列表</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$WDAVprefs</span> = <span class="built_in">Get-MpPreference</span></span><br><span class="line"><span class="variable">$WDAVprefs</span>.ExclusionPath</span><br></pre></td></tr></table></figure><h2 id="排除指定文件夹"><a href="#排除指定文件夹" class="headerlink" title="排除指定文件夹"></a>排除指定文件夹</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两种写法，Set-MpPreference 是直接修改，会覆盖之前的规则</span></span><br><span class="line">powershell.exe <span class="literal">-Command</span> <span class="string">&#x27;Set-MpPreference -ExclusionPath &quot;C:\xxx&quot;, &quot;D:\yyy&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add-MpPreference 是追加配置。</span></span><br><span class="line"><span class="built_in">Add-MpPreference</span> <span class="literal">-ExclusionPath</span> <span class="string">&quot;C:\Program Files (x86)\WinAgent\*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看是否生效</span></span><br><span class="line">(<span class="built_in">Get-MpPreference</span>).ExclusionPath | <span class="built_in">Select-String</span> <span class="string">&quot;C:\Program Files (x86)\WinAgent\*&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Command </tag>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7更新内核版本</title>
      <link href="/posts/8a7e6530/"/>
      <url>/posts/8a7e6530/</url>
      
        <content type="html"><![CDATA[<h2 id="确认当前内核版本"><a href="#确认当前内核版本" class="headerlink" title="确认当前内核版本"></a>确认当前内核版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r</span><br></pre></td></tr></table></figure><h2 id="安装内核仓库"><a href="#安装内核仓库" class="headerlink" title="安装内核仓库"></a>安装内核仓库</h2><blockquote><p>仓库的官方地址是： <a href="http://elrepo.org/tiki/HomePage">http://elrepo.org/tiki/HomePage</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="查看可用的内核列表"><a href="#查看可用的内核列表" class="headerlink" title="查看可用的内核列表"></a>查看可用的内核列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --disablerepo=<span class="string">&quot;*&quot;</span> --enablerepo=<span class="string">&quot;elrepo-kernel&quot;</span> list available</span><br></pre></td></tr></table></figure><h2 id="安装-LTS-版内核"><a href="#安装-LTS-版内核" class="headerlink" title="安装 LTS 版内核"></a>安装 LTS 版内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install kernel-lt-devel kernel-lt kernel-lt-tools kernel-lt-tools-libs-devel -y</span><br></pre></td></tr></table></figure><h2 id="查看当前系统可用的内核"><a href="#查看当前系统可用的内核" class="headerlink" title="查看当前系统可用的内核"></a>查看当前系统可用的内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F\&#x27; <span class="string">&#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27;</span> /etc/grub2.cfg</span><br></pre></td></tr></table></figure><h2 id="修改默认内核"><a href="#修改默认内核" class="headerlink" title="修改默认内核"></a>修改默认内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure><h2 id="生成-grub-配置"><a href="#生成-grub-配置" class="headerlink" title="生成 grub 配置"></a>生成 grub 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="删除旧的内核-可选"><a href="#删除旧的内核-可选" class="headerlink" title="删除旧的内核 (可选)"></a>删除旧的内核 (可选)</h2><blockquote><mark class="hl-label red">删除内核有风险</mark>，干不干自行评估</blockquote><h3 id="查看当前安装的内核"><a href="#查看当前安装的内核" class="headerlink" title="查看当前安装的内核"></a>查看当前安装的内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep kernel</span><br></pre></td></tr></table></figure><h3 id="删除旧的内核"><a href="#删除旧的内核" class="headerlink" title="删除旧的内核"></a>删除旧的内核</h3><blockquote><p>参考上一步输出的包名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove kernel-3.10.0-327.el7.x86_64</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> centos </tag>
            
            <tag> Kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备份MySQL脚本-shell版</title>
      <link href="/posts/lqevsmdb/"/>
      <url>/posts/lqevsmdb/</url>
      
        <content type="html"><![CDATA[<p>备份数据库, 并排除系统库, 使用 mysqldump</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -euo pipefail</span><br><span class="line"></span><br><span class="line">mysql_host=10.0.0.187</span><br><span class="line">mysql_user=root</span><br><span class="line">mysql_passwd=password</span><br><span class="line">exclude_databases=information_schema|performance_schema|sys|mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始备份数据库……&quot;</span></span><br><span class="line">mysql -h<span class="string">&quot;<span class="variable">$&#123;mysql_host&#125;</span>&quot;</span> -u<span class="string">&quot;<span class="variable">$&#123;mysql_user&#125;</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$&#123;mysql_passwd&#125;</span>&quot;</span> -N -e <span class="string">&quot;show databases;&quot;</span> | grep -Ev <span class="string">&quot;<span class="variable">$&#123;exclude_databases&#125;</span>&quot;</span> | xargs mysqldump -h<span class="string">&quot;<span class="variable">$&#123;mysql_host&#125;</span>&quot;</span> -u<span class="string">&quot;<span class="variable">$&#123;mysql_user&#125;</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$&#123;mysql_passwd&#125;</span>&quot;</span> --databases &gt; $(<span class="built_in">pwd</span>)/mysql_backup.sql</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Shell </tag>
            
            <tag> 备份还原 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调整Docker容器内的时区</title>
      <link href="/posts/3c828831/"/>
      <url>/posts/3c828831/</url>
      
        <content type="html"><![CDATA[<p>容器内的时区问题会影响到服务打印的日志, 所以设置时区是很有必要的, 设置容器内时区的方法一般有:</p><ol><li>设置 TZ 环境变量</li><li>挂载主机的时区文件</li><li>直接修改镜像的 dockerfile,将时区默认配置在镜像里</li></ol><h2 id="设置-TZ-环境变量"><a href="#设置-TZ-环境变量" class="headerlink" title="设置 TZ 环境变量"></a>设置 TZ 环境变量</h2><p>docker 环境下, 增加 -e 参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name <span class="built_in">test</span> --<span class="built_in">rm</span> -ti -e TZ=Asia/Shanghai debian <span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>这种方法也可以写在 Dockerfile 里面, 增加一行:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> TZ Asia/Shanghai</span><br></pre></td></tr></table></figure><blockquote><p>经测试: Debian CentOS 镜像可以支持这种方案<br>Ubuntu Alpine 不支持这种方案</p></blockquote><h2 id="挂载主机的-timezone-和-localtime"><a href="#挂载主机的-timezone-和-localtime" class="headerlink" title="挂载主机的 timezone 和 localtime"></a>挂载主机的 timezone 和 localtime</h2><p>Docker 环境下, 增加 -v 参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name <span class="built_in">test</span> --<span class="built_in">rm</span> -ti -v /etc/timezone:/etc/timezone:ro -v /etc/localtime:/etc/localtime:ro alpine <span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>适用于大部分镜像, 特点是和主机保持一致, 缺点是依赖主机的环境</p><h2 id="通过-build-镜像修改"><a href="#通过-build-镜像修改" class="headerlink" title="通过 build 镜像修改"></a>通过 build 镜像修改</h2><h3 id="Alpine"><a href="#Alpine" class="headerlink" title="Alpine"></a>Alpine</h3><p>将以下代码添加到 Dockerfile 中：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> TZ Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk add tzdata &amp;&amp; <span class="built_in">cp</span> /usr/share/zoneinfo/<span class="variable">$&#123;TZ&#125;</span> /etc/localtime</span></span><br><span class="line">    &amp;&amp; echo $&#123;TZ&#125; &gt; /etc/timezone</span><br><span class="line">    &amp;&amp; apk del tzdata</span><br></pre></td></tr></table></figure><h3 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h3><p>Debian 基础镜像 中已经安装了 tzdata 包，我们可以将以下代码添加到 Dockerfile 中：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line">    DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -fs /usr/share/zoneinfo/<span class="variable">$&#123;TZ&#125;</span> /etc/localtime</span></span><br><span class="line">    &amp;&amp; echo $&#123;TZ&#125; &gt; /etc/timezone</span><br><span class="line">    &amp;&amp; dpkg-reconfigure --frontend noninteractive tzdata</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p>Ubuntu 基础镜像中没有安装了 tzdata 包，因此我们需要先安装 tzdata 包。<br>我们可以将以下代码添加到 Dockerfile 中。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line">    DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt update</span></span><br><span class="line">    &amp;&amp; apt install -y tzdata</span><br><span class="line">    &amp;&amp; ln -fs /usr/share/zoneinfo/$&#123;TZ&#125; /etc/localtime</span><br><span class="line">    &amp;&amp; echo $&#123;TZ&#125; &gt; /etc/timezone</span><br><span class="line">    &amp;&amp; dpkg-reconfigure --frontend noninteractive tzdata</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br></pre></td></tr></table></figure><h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><p>CentOS 基础镜像 中已经安装了 tzdata 包，我们可以将以下代码添加到 Dockerfile 中。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> TZ Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -fs /usr/share/zoneinfo/<span class="variable">$&#123;TZ&#125;</span> /etc/localtime</span></span><br><span class="line">    &amp;&amp; echo $&#123;TZ&#125; &gt; /etc/timezone</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> timezone </tag>
            
            <tag> 时区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Ubuntu的软路由搭建记录</title>
      <link href="/posts/cfedbd03/"/>
      <url>/posts/cfedbd03/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我一直使用的是斐讯 k3 这款万元路由器😂，一直用的是 openwrt，不过 openwrt 信号真心不好，刷回官方 root 系统，感觉重获了新生，然后决定路由器只做 WiFi 共享，其他功能交给软路由。<br>我的软路由是买的双网口机器，j4125 的 cpu 做软路由绰绰有余了, 东西如图:</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202212192147769.png" alt="双网口软路由|431"></p><p>系统使用的是 ubuntu22.04，以下步骤都以此系统为基础进行，网络拓扑如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202212191312730.png" alt="网络拓扑"></p><p>我自己定义的网段，网段不可以有交叉。</p><table><thead><tr><th>设备</th><th>LAN 网段</th><th>WAN 配置</th></tr></thead><tbody><tr><td>光猫</td><td>192.168.1.0&#x2F;24</td><td>拨号上网</td></tr><tr><td>软路由</td><td>192.168.3.0&#x2F;24</td><td>DHCP 自动获取地址</td></tr><tr><td>斐讯路由器</td><td>192.168.2.0&#x2F;24</td><td>固定 IP，固定网关地址</td></tr></tbody></table><h2 id="定义内外网"><a href="#定义内外网" class="headerlink" title="定义内外网"></a>定义内外网</h2><table><thead><tr><th>网卡设备名</th><th>定义</th></tr></thead><tbody><tr><td>enp1s0</td><td>外网</td></tr><tr><td>enp2s0</td><td>内网</td></tr></tbody></table><p>那么 给外网网卡设置 dhcp，从光猫自动获取 ip，也可以手动设置 ip<br>内网网卡固定个 ip，不用设置网关和 dns，配置文件如下</p><p>vim &#x2F;etc&#x2F;netplan&#x2F;00-installer-config.yaml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">enp1s0:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dhcp6:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">enp2s0:</span></span><br><span class="line">      <span class="attr">addresses:</span> [ <span class="number">192.168</span><span class="number">.3</span><span class="number">.1</span><span class="string">/24</span> ]</span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>验证：<code>ip a</code> 看下两张网卡是否都有了 ip，在软路由里执行 <code>curl baidu.com</code> 看看是否可以上网</p><h2 id="完成路由功能"><a href="#完成路由功能" class="headerlink" title="完成路由功能"></a>完成路由功能</h2><h3 id="关闭-ufw"><a href="#关闭-ufw" class="headerlink" title="关闭 ufw"></a>关闭 ufw</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now ufw</span><br></pre></td></tr></table></figure><h3 id="加载-nf-conntrack-模块"><a href="#加载-nf-conntrack-模块" class="headerlink" title="加载 nf_conntrack 模块"></a>加载 nf_conntrack 模块</h3><p>vim &#x2F;etc&#x2F;modules-load.d&#x2F;custom-modules.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Located in /etc/modules-load.d/custom-modules.conf</span><br><span class="line">nf_conntrack</span><br></pre></td></tr></table></figure><p>lsmod 查看有没有加载此模块， nf_conntrack 用于跟踪 iptables 规则。</p><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><p>vim &#x2F;etc&#x2F;sysctl.d&#x2F;99-forward.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Located in /etc/sysctl.d/99-forward.conf</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.conf.all.forwarding=1</span><br><span class="line">net.ipv4.conf.default.forwarding=1</span><br><span class="line">net.ipv4.conf.all.route_localnet=1</span><br><span class="line"></span><br><span class="line">net.ipv6.conf.all.forwarding=1</span><br><span class="line">net.ipv6.conf.default.forwarding=1</span><br></pre></td></tr></table></figure><h3 id="iptables-脚本"><a href="#iptables-脚本" class="headerlink" title="iptables 脚本"></a>iptables 脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># /data/firewall-set.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据你的WAN网卡名称对应修改！！！</span></span><br><span class="line">WAN_NAME=<span class="string">&#x27;enp1s0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv4设置</span></span><br><span class="line">iptables -t nat -N mt_rtr_4_n_rtr</span><br><span class="line">iptables -t nat -A POSTROUTING -j mt_rtr_4_n_rtr</span><br><span class="line">iptables -t nat -A mt_rtr_4_n_rtr -o <span class="variable">$&#123;WAN_NAME&#125;</span> -j MASQUERADE <span class="comment"># 添加路由到作为WAN的网卡的自动源地址转换规则</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加IPv4转发优化规则</span></span><br><span class="line">iptables -t mangle -N mt_rtr_4_m_rtr </span><br><span class="line">iptables -t mangle -A FORWARD -j mt_rtr_4_m_rtr</span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -o <span class="variable">$&#123;WAN_NAME&#125;</span> -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu <span class="comment"># 针对PPPoE链接的优化</span></span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -m state --state RELATED,ESTABLISHED -j ACCEPT <span class="comment"># 允许已建立连接的数据包直接通过</span></span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -m conntrack --ctstate INVALID -j DROP</span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j DROP</span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j DROP</span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP</span><br><span class="line">iptables -t mangle -A mt_rtr_4_m_rtr -i br_lan -o <span class="variable">$&#123;WAN_NAME&#125;</span> -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv6 NAT设置，与IPv4基本一致</span></span><br><span class="line">ip6tables -t nat -N mt_rtr_6_n_rtr</span><br><span class="line">ip6tables -t nat -A POSTROUTING -j mt_rtr_6_n_rtr</span><br><span class="line">ip6tables -t nat -A mt_rtr_6_n_rtr -o <span class="variable">$&#123;WAN_NAME&#125;</span> -j MASQUERADE <span class="comment"># 添加路由到作为WAN的网卡的自动源地址转换规则</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加IPv6转发优化规则</span></span><br><span class="line">ip6tables -t mangle -N mt_rtr_6_m_rtr</span><br><span class="line">ip6tables -t mangle -A FORWARD -j mt_rtr_6_m_rtr</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -o <span class="variable">$&#123;WAN_NAME&#125;</span> -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -m conntrack --ctstate INVALID -j DROP</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j DROP</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j DROP</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP</span><br><span class="line">ip6tables -t mangle -A mt_rtr_6_m_rtr -i br_lan -o <span class="variable">$&#123;WAN_NAME&#125;</span> -j ACCEPT</span><br></pre></td></tr></table></figure><p>以下步骤二选一：</p><ol><li>开机执行此脚本</li><li>使用 <code>iptables-persistent</code> 进行持久化配置: <code>sudo apt install iptables-persistent</code> root 身份运行脚本， 然后执行 <code>netfilter-persistent save</code></li></ol><p>验证： 连接斐讯路由器， 路由器 WAN 口 IP 配置成 <code>192.168.3.2</code>，WAN 口网关配置成 <code>192.168.3.1</code>，WAN 口 DNS 配置成 <code>114.114.114.114</code>，检查通过斐讯路由器是否可以上网</p><h2 id="部署-DHCP-服务（可选）"><a href="#部署-DHCP-服务（可选）" class="headerlink" title="部署 DHCP 服务（可选）"></a>部署 DHCP 服务（可选）</h2><p>部署 DHCP 服务可以自动分配 IP，省去手动设置 IP 的烦恼，比如上一步的斐讯路由器手动配置 WAN 口 IP，有了 DHCP 后设置 WAN 口 DHCP 获取 IP 即可。另外如果路由器设置成 AP 模式， 可以利用软路由上面的 DHCP 来给客户端分配 IP 地址。</p><h3 id="安装-DNSMASQ"><a href="#安装-DNSMASQ" class="headerlink" title="安装 DNSMASQ"></a>安装 DNSMASQ</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install dnsmasq</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>dnsmasq 的 dns 服务和 systemd-resolved.service 冲突（都占用 udp53 端口），所以需要关闭 systemd-resolved.service 或者 dnsmasq 的 dns 服务。这里关闭 dnsmasq 的 dns 服务</p><p>注意：&#x2F;etc&#x2F;dnsmasq.d 里面的其他文件不要有冲突的配置项，同一项配置注意删除只保留一个。</p><p>cat &#x2F;etc&#x2F;dnsmasq.d&#x2F;router.conf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听的网卡</span></span><br><span class="line"><span class="attr">interface</span>=enp2s0</span><br><span class="line"></span><br><span class="line"><span class="comment"># DHCP分配地址的范围、掩码、租期等</span></span><br><span class="line"><span class="attr">dhcp-range</span>=<span class="number">192.168</span>.<span class="number">3.50</span>,<span class="number">192.168</span>.<span class="number">3.150</span>,<span class="number">255.255</span>.<span class="number">255.0</span>,<span class="number">12</span>h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过MAC地址手动绑定IP</span></span><br><span class="line"><span class="attr">dhcp-host</span>=<span class="number">11</span>:<span class="number">22</span>:<span class="number">33</span>:<span class="number">44</span>:<span class="number">55</span>:<span class="number">66</span>,<span class="number">192.168</span>.<span class="number">3.60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DHCP分配DNS服务器地址配置</span></span><br><span class="line"><span class="attr">dhcp-option</span>=option:dns-server,<span class="number">192.168</span>.<span class="number">3.1</span>,<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭DNS解析服务</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="查看租期"><a href="#查看租期" class="headerlink" title="查看租期"></a>查看租期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/lib/misc/dnsmasq.leases</span><br></pre></td></tr></table></figure><h2 id="路由器使用-AP-模式-可选"><a href="#路由器使用-AP-模式-可选" class="headerlink" title="路由器使用 AP 模式 (可选)"></a>路由器使用 AP 模式 (可选)</h2><p>使用 AP 模式就是不使用任何路由器的管理功能， 仅仅当作一个发射 WIFI 的工具，DNS 和 DHCP 都由软路由来提供， 配置上面的 DNSMASQ 来实现。</p><p>路由器上如果有 AP 模式选项， 则开启后， 网线插入 LAN 口， 如果没有 AP 模式选项， 则关闭路由器的 DHCP 服务，然后网线插入 LAN 口来使用。</p><h2 id="优化-开启-TCP-BBR"><a href="#优化-开启-TCP-BBR" class="headerlink" title="优化: 开启 TCP BBR"></a>优化: 开启 TCP BBR</h2><blockquote><p>BBR 不开启也不影响使用</p></blockquote><p>内核版本大于 4.9 默认都是集成了 BBR 模块的, 直接通过修改内核参数的方式来开启即可.</p><p>vim sysctl.d&#x2F;99-bbr.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>查看, 如果结果中包含 bbr, 则说明已开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><h2 id="代理工具配置"><a href="#代理工具配置" class="headerlink" title="代理工具配置"></a>代理工具配置</h2><p>透明代理我用的是 v2ray 这个涉及服务端和客户端。</p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><h4 id="v2ray-服务端配置"><a href="#v2ray-服务端配置" class="headerlink" title="v2ray 服务端配置"></a>v2ray 服务端配置</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">2333</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这里使用uuidgen自动生成&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">64</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ws&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这里自定义一个location, 比如 /xxx &quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="nginx-反代配置"><a href="#nginx-反代配置" class="headerlink" title="nginx 反代配置"></a>nginx 反代配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">upstream v2ray &#123;</span><br><span class="line">  server v2ray:2333;        # 指向v2ray的端口</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  server_name 你的域名;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">  ssl_certificate         ssl/你的证书位置.crt;</span><br><span class="line">  ssl_certificate_key     ssl/你的私钥位置.key;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  ssl_session_cache shared:SSL:10m;</span><br><span class="line">  ssl_session_timeout 10m;</span><br><span class="line">  error_page 497  https://$host$request_uri;</span><br><span class="line"></span><br><span class="line">  if ( $scheme = http )&#123;</span><br><span class="line">      rewrite ^(/.*)$ https://$host$1 permanent;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    location /xxx &#123;                   # 和上面的path保持一致</span><br><span class="line">        proxy_pass http://v2ray;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;Upgrade&quot;;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span><span class="string">&quot;transparent&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">12345</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dokodemo-door&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tcp,udp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;followRedirect&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;http&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;tls&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;sockopt&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          # <span class="attr">&quot;tproxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;redirect&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tproxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tproxy&quot;</span><span class="punctuation">,</span> <span class="comment">// 透明代理使用 TPROXY 方式</span></span><br><span class="line">          <span class="attr">&quot;mark&quot;</span><span class="punctuation">:</span><span class="number">255</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;socks&quot;</span><span class="punctuation">,</span> <span class="comment">// 入口协议为 SOCKS 5</span></span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;http&quot;</span><span class="punctuation">,</span> <span class="string">&quot;tls&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;noauth&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;proxy&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span> <span class="comment">// 代理服务器</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vnext&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aria2.babudiu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">443</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;users&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的服务端的uuid&quot;</span><span class="punctuation">,</span>         <span class="comment">// 调整和你服务端相同的uuid</span></span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ws&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tlsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;allowInsecure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sockopt&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mark&quot;</span><span class="punctuation">:</span> <span class="number">255</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/xxx&quot;</span>          <span class="comment">// 调整和你服务端相同的路径</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;mux&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;concurrency&quot;</span><span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;domainStrategy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UseIP&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;sockopt&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mark&quot;</span><span class="punctuation">:</span> <span class="number">255</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blackhole&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns-out&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;sockopt&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mark&quot;</span><span class="punctuation">:</span> <span class="number">255</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dns&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;servers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;223.5.5.5&quot;</span><span class="punctuation">,</span> <span class="comment">//中国大陆域名使用阿里的 DNS</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;ntp.org&quot;</span><span class="punctuation">,</span>   <span class="comment">// NTP 服务器</span></span><br><span class="line">          <span class="string">&quot;a.com&quot;</span> <span class="comment">// 此处改为你 VPS 的域名</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;114.114.114.114&quot;</span><span class="punctuation">,</span> <span class="comment">//中国大陆域名使用 114 的 DNS (备用)</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;ntp.org&quot;</span><span class="punctuation">,</span>   <span class="comment">// NTP 服务器</span></span><br><span class="line">          <span class="string">&quot;a.com&quot;</span> <span class="comment">// 此处改为你 VPS 的域名</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.8.8.8&quot;</span><span class="punctuation">,</span> <span class="comment">//非中国大陆域名使用 Google 的 DNS</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:geolocation-!cn&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.1.1.1&quot;</span><span class="punctuation">,</span> <span class="comment">//非中国大陆域名使用 Cloudflare 的 DNS</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:geolocation-!cn&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;domainStrategy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IPOnDemand&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// 劫持 53 端口 UDP 流量，使用 V2Ray 的 DNS</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;transparent&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// 直连 123 端口 UDP 流量（NTP 协议）</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;transparent&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">123</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="comment">// 设置 DNS 配置中的国内 DNS 服务器地址直连，以达到 DNS 分流目的</span></span><br><span class="line">          <span class="string">&quot;223.5.5.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="comment">// 设置 DNS 配置中的国外 DNS 服务器地址走代理，以达到 DNS 分流目的</span></span><br><span class="line">          <span class="string">&quot;8.8.8.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;1.1.1.1&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;proxy&quot;</span> <span class="comment">// 改为你自己代理的出站 tag</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// 广告拦截</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:category-ads-all&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// BT 流量直连</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;bittorrent&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// 直连中国大陆主流网站 ip 和 保留 ip</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geoip:private&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;geoip:cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="comment">// 需要把服务器的IP加入直连名单</span></span><br><span class="line">          <span class="string">&quot;2.2.2.2&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span> <span class="comment">// 直连中国大陆主流网站域名</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geosite:cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="comment">// 需要把服务器的域名加入直连名单</span></span><br><span class="line">          <span class="string">&quot;v2ray_server.com&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>对应的启动 <code>systemd</code>service 内容为:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=V2Ray Service</span><br><span class="line"><span class="attr">Documentation</span>=https://www.v2fly.org/</span><br><span class="line"><span class="attr">After</span>=network.target nss-lookup.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">ExecStart</span>=/data/v2ray/v2ray run -config /data/v2ray/config.json</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"><span class="attr">RestartPreventExitStatus</span>=<span class="number">23</span></span><br><span class="line"><span class="attr">LimitNPROC</span>=<span class="number">500</span></span><br><span class="line"><span class="attr">LimitNOFILE</span>=<span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>测试： 在软路由上执行 <code>curl --socks5 localhost:1080 google.com</code> 如果可以访问，说明配置成功。接下来配置透明代理</p><h3 id="透明代理"><a href="#透明代理" class="headerlink" title="透明代理"></a>透明代理</h3><blockquote><p>参考文章: <a href="https://toutyrater.github.io/app/tproxy.html">https://toutyrater.github.io/app/tproxy.html</a></p></blockquote><h4 id="创建-tproxy-sh-脚本"><a href="#创建-tproxy-sh-脚本" class="headerlink" title="创建 tproxy.sh 脚本"></a>创建 <code>tproxy.sh</code> 脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置策略路由</span></span><br><span class="line">ip rule add fwmark 1 table 100</span><br><span class="line">ip route add <span class="built_in">local</span> 0.0.0.0/0 dev lo table 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理局域网设备</span></span><br><span class="line">iptables -t mangle -N V2RAY</span><br><span class="line">iptables -t mangle -A V2RAY -d 127.0.0.1/32 -j RETURN</span><br><span class="line">iptables -t mangle -A V2RAY -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t mangle -A V2RAY -d 255.255.255.255/32 -j RETURN</span><br><span class="line">iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p tcp -j RETURN <span class="comment"># 直连局域网，避免 V2Ray 无法启动时无法连网关的 SSH，如果你配置的是其他网段（如 10.x.x.x 等），则修改成自己的</span></span><br><span class="line">iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN <span class="comment"># 直连局域网，53 端口除外（因为要使用 V2Ray 的 DNS)</span></span><br><span class="line">iptables -t mangle -A V2RAY -j RETURN -m mark --mark 0xff    <span class="comment"># 直连 SO_MARK 为 0xff 的流量(0xff 是 16 进制数，数值上等同与上面V2Ray 配置的 255)，此规则目的是解决v2ray占用大量CPU（https://github.com/v2ray/v2ray-core/issues/2621）</span></span><br><span class="line">iptables -t mangle -A V2RAY -p udp -j TPROXY --on-ip 127.0.0.1 --on-port 12345 --tproxy-mark 1 <span class="comment"># 给 UDP 打标记 1，转发至 12345 端口</span></span><br><span class="line">iptables -t mangle -A V2RAY -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port 12345 --tproxy-mark 1 <span class="comment"># 给 TCP 打标记 1，转发至 12345 端口</span></span><br><span class="line">iptables -t mangle -A PREROUTING -j V2RAY <span class="comment"># 应用规则</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理网关本机</span></span><br><span class="line">iptables -t mangle -N V2RAY_MASK</span><br><span class="line">iptables -t mangle -A V2RAY_MASK -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t mangle -A V2RAY_MASK -d 255.255.255.255/32 -j RETURN</span><br><span class="line">iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p tcp -j RETURN <span class="comment"># 直连局域网</span></span><br><span class="line">iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p udp ! --dport 53 -j RETURN <span class="comment"># 直连局域网，53 端口除外（因为要使用 V2Ray 的 DNS）</span></span><br><span class="line">iptables -t mangle -A V2RAY_MASK -j RETURN -m mark --mark 0xff    <span class="comment"># 直连 SO_MARK 为 0xff 的流量(0xff 是 16 进制数，数值上等同与上面V2Ray 配置的 255)，此规则目的是避免代理本机(网关)流量出现回环问题</span></span><br><span class="line">iptables -t mangle -A V2RAY_MASK -p udp -j MARK --set-mark 1   <span class="comment"># 给 UDP 打标记，重路由</span></span><br><span class="line">iptables -t mangle -A V2RAY_MASK -p tcp -j MARK --set-mark 1   <span class="comment"># 给 TCP 打标记，重路由</span></span><br><span class="line">iptables -t mangle -A OUTPUT -j V2RAY_MASK <span class="comment"># 应用规则</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建 DIVERT 规则，避免已有连接的包二次通过 TPROXY，理论上有一定的性能提升</span></span><br><span class="line">iptables -t mangle -N DIVERT</span><br><span class="line">iptables -t mangle -A DIVERT -j MARK --set-mark 1</span><br><span class="line">iptables -t mangle -A DIVERT -j ACCEPT</span><br><span class="line">iptables -t mangle -I PREROUTING -p tcp -m socket -j DIVERT</span><br></pre></td></tr></table></figure><h4 id="创建清理-iptables-脚本-clean-iptables-sh"><a href="#创建清理-iptables-脚本-clean-iptables-sh" class="headerlink" title="创建清理 iptables 脚本 clean_iptables.sh"></a>创建清理 iptables 脚本 <code>clean_iptables.sh</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">iptables -t mangle -F</span><br><span class="line">iptables -t mangle -X V2RAY</span><br><span class="line">iptables -t mangle -X V2RAY_MASK</span><br></pre></td></tr></table></figure><p>执行 <code>tproxy.sh</code> 即可开启透明代理</p><h4 id="优化一下-systemd"><a href="#优化一下-systemd" class="headerlink" title="优化一下 systemd"></a>优化一下 systemd</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=V2Ray Service</span><br><span class="line"><span class="attr">Documentation</span>=https://www.v2fly.org/</span><br><span class="line"><span class="attr">After</span>=network.target nss-lookup.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">ExecStartPre</span>=/data/v2ray/tproxy.sh</span><br><span class="line"><span class="attr">ExecStart</span>=/data/v2ray/v2ray run -config /data/v2ray/config.json</span><br><span class="line"><span class="attr">ExecStopPost</span>=/data/v2ray/clean_iptables.sh</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"><span class="attr">RestartPreventExitStatus</span>=<span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis集群模式部署</title>
      <link href="/posts/5cc4b89d/"/>
      <url>/posts/5cc4b89d/</url>
      
        <content type="html"><![CDATA[<p>搭建个 6 节点的集群，包括三主三从</p><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">appendonly yes</span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">pidfile  /var/run/redis.pid</span><br></pre></td></tr></table></figure><blockquote><p>如果是同一台机器上跑 6 个实例的话，需要保证端口和 pid 文件不能重复</p></blockquote><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><p>在每台机器上面执行，启动 6 个 redis 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><p>在一台机器上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create --cluster-replicas 1 192.168.1.11:6379 192.168.1.12:6379 192.168.1.13:6379 192.168.1.14:6379 192.168.1.15:6379 192.168.1.16:6379</span><br></pre></td></tr></table></figure><p>出现提示，输入 yes</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202212161407297.png" alt="创建集群"></p><h2 id="连接集群"><a href="#连接集群" class="headerlink" title="连接集群"></a>连接集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -c -h 192.168.1.11 -p 6379</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ops_manage redis-cluster]<span class="comment"># ./redis-cli -c -h 127.0.0.1 -p 7001</span></span><br><span class="line">127.0.0.1:7001&gt; get foo</span><br><span class="line">-&gt; Redirected to slot [12182] located at 127.0.0.1:7003</span><br><span class="line"><span class="string">&quot;bar&quot;</span></span><br><span class="line">127.0.0.1:7003&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus常用PromSQL记录</title>
      <link href="/posts/11255f25/"/>
      <url>/posts/11255f25/</url>
      
        <content type="html"><![CDATA[<p>prometheus 查询语法叫 promsql，做个记录：</p><h2 id="查询条件"><a href="#查询条件" class="headerlink" title="查询条件"></a>查询条件</h2><p>Prometheus 存储的是时序数据，而它的时序是由名字和一组标签构成的，其实名字也可以写出标签的形式，例如 <code>http_requests_total</code> 等价于 <code>&#123;name=&quot;http_requests_total&quot;&#125;</code>。</p><p>一个简单的查询相当于是对各种标签的筛选，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http_requests_total&#123;code=<span class="string">&quot;200&quot;</span>&#125;     <span class="comment"># 表示查询名字为 http_requests_total，code 为 &quot;200&quot; 的数据</span></span><br><span class="line">http_requests_total&#123;code!=<span class="string">&quot;200&quot;</span>&#125;    <span class="comment"># 表示查询 code 不为 &quot;200&quot; 的数据</span></span><br><span class="line">http_requests_total&#123;code=~<span class="string">&quot;2..&quot;</span>&#125;    <span class="comment"># 表示查询 code 为 &quot;2xx&quot; 的数据</span></span><br><span class="line">http_requests_total&#123;code!~<span class="string">&quot;2..&quot;</span>&#125;    <span class="comment"># 表示查询 code 不为 &quot;2xx&quot; 的数据</span></span><br></pre></td></tr></table></figure><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><p>Prometheus 查询语句中，支持常见的各种表达式操作符，例如</p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>支持的算术运算符有 <code>+，-，*，/，%，^</code> , 例如 <code>http_requests_total * 2</code> 表示将 http_requests_total 所有数据 double 一倍。</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>支持的比较运算符有 <code>==，!=，&gt;，&lt;，&gt;=，&lt;=</code> , 例如 <code>http_requests_total &gt; 100</code> 表示 http_requests_total 结果中大于 100 的数据。</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>支持的逻辑运算符有 <code>and，or，unless</code>, 例如 <code>http_requests_total == 5 or http_requests_total == 2</code> 表示 http_requests_total 结果中等于 5 或者 2 的数据。</p><h3 id="聚合运算符"><a href="#聚合运算符" class="headerlink" title="聚合运算符"></a>聚合运算符</h3><p>支持的聚合运算符有 <code>sum，min，max，avg，stddev，stdvar，count，count_values，bottomk，topk，quantile</code> , 例如 <code>max(http_requests_total)</code> 表示 http_requests_total 结果中最大的数据。</p><p>注意，和四则运算类型，Prometheus 的运算符也有优先级，它们遵从 <code>(^)&gt; (*, /, %) &gt; (+, -) &gt; (==, !=, &lt;=, &lt;, &gt;=, &gt;) &gt; (and, unless) &gt; (or)</code> 的原则。</p><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><h3 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">floor(avg(http_requests_total&#123;code=<span class="string">&quot;200&quot;</span>&#125;))       <span class="comment"># 往小了取值</span></span><br><span class="line">ceil(avg(http_requests_total&#123;code=<span class="string">&quot;200&quot;</span>&#125;))        <span class="comment"># 往大了取值</span></span><br></pre></td></tr></table></figure><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p>查看 http_requests_total 5 分钟内，平均每秒数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rate(http_requests_total[5m])</span><br><span class="line">irate(http_requests_total[5m])</span><br></pre></td></tr></table></figure><h3 id="平均值"><a href="#平均值" class="headerlink" title="平均值"></a>平均值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">avg()       <span class="comment"># 平均值</span></span><br><span class="line">max()       <span class="comment"># 最大值</span></span><br><span class="line">min()       <span class="comment"># 最小值</span></span><br><span class="line">abs()       <span class="comment"># 绝对值</span></span><br><span class="line">increase()  <span class="comment"># 增量</span></span><br></pre></td></tr></table></figure><p>更多请查看官方文档：<a href="https://prometheus.io/docs/prometheus/latest/querying/functions/">https://prometheus.io/docs/prometheus/latest/querying/functions/</a></p><h2 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h2><h3 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h3><blockquote><p>sum 是求和， sum by (app, proc) 是把数据以 app 和 proc 聚合 分类来求和， 结果会带上这两个标签</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> by (app, proc) (</span><br><span class="line">  instance_memory_limit_bytes - instance_memory_usage_bytes</span><br><span class="line">) / 1024 / 1024</span><br></pre></td></tr></table></figure><h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><blockquote><p>类似于 <code>wc -l</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count by (app) (instance_cpu_time_ns)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备份还原Linux操作系统</title>
      <link href="/posts/a222390c/"/>
      <url>/posts/a222390c/</url>
      
        <content type="html"><![CDATA[<p>在 Linux 内, 一切皆文件, 所以可以通过直接复制文件的方式来备份 Linux 系统, 使用 Linux 自带的工具, 比如 tar rsync 都可以完成这些操作.</p><h2 id="使用-rsync-备份还原-Linux-系统"><a href="#使用-rsync-备份还原-Linux-系统" class="headerlink" title="使用 rsync 备份还原 Linux 系统"></a>使用 rsync 备份还原 Linux 系统</h2><h3 id="使用-rsync-备份"><a href="#使用-rsync-备份" class="headerlink" title="使用 rsync 备份"></a>使用 rsync 备份</h3><p>比如备份路径是 <code>/backup</code> , 同时需要排除 <code>/backup</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -aAXHv --exclude=&#123;<span class="string">&quot;/dev/*&quot;</span>,<span class="string">&quot;/proc/*&quot;</span>,<span class="string">&quot;/sys/*&quot;</span>,<span class="string">&quot;/tmp/*&quot;</span>,<span class="string">&quot;/run/*&quot;</span>,<span class="string">&quot;/mnt/*&quot;</span>,<span class="string">&quot;/media/*&quot;</span>,<span class="string">&quot;/lost+found&quot;</span>, <span class="string">&quot;/backup&quot;</span>&#125; --delete / /backup</span><br></pre></td></tr></table></figure><blockquote><p>通过使用 -aAX 选项集，文件以归档模式传输，确保符号链接、设备、权限、所有权、修改时间、ACLs 和扩展属性得以保留，前提是目标文件系统支持这一功能。选项 -H 保留了硬链接，但会使用更多的内存。<br>swap 文件也最好排除, gvfs 需要排除 <code>/home/*/.gvfs</code></p></blockquote><h3 id="使用-rsync-还原"><a href="#使用-rsync-还原" class="headerlink" title="使用 rsync 还原"></a>使用 rsync 还原</h3><p>在 Linux Livecd 下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -aAXHv --delete /backup /</span><br></pre></td></tr></table></figure><p>rsync 备份可以实现增量更新, 实时更新等, 比较方便使用, 速度也很快</p><h2 id="使用-dd-命令"><a href="#使用-dd-命令" class="headerlink" title="使用 dd 命令"></a>使用 dd 命令</h2><p>dd 是直接进行硬盘对拷, 备份是将整个硬盘给 dump 下来, 速度非常慢, 不推荐这种方式</p><h3 id="使用-dd-备份"><a href="#使用-dd-备份" class="headerlink" title="使用 dd 备份"></a>使用 dd 备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/backup/backup.dd</span><br></pre></td></tr></table></figure><h3 id="使用-dd-还原"><a href="#使用-dd-还原" class="headerlink" title="使用 dd 还原"></a>使用 dd 还原</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/backup/backup.dd of=/dev/sda</span><br></pre></td></tr></table></figure><h2 id="使用-tar-来实现"><a href="#使用-tar-来实现" class="headerlink" title="使用 tar 来实现"></a>使用 tar 来实现</h2><h3 id="使用-tar-备份"><a href="#使用-tar-备份" class="headerlink" title="使用 tar 备份"></a>使用 tar 备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">tar -cvpzf backup.tar.gz \</span><br><span class="line">--exclude=/backup.tar.gz \</span><br><span class="line">--exclude=/proc \</span><br><span class="line">--exclude=/tmp \</span><br><span class="line">--exclude=/mnt \</span><br><span class="line">--exclude=/dev \</span><br><span class="line">--exclude=/sys \</span><br><span class="line">--exclude=/run \ </span><br><span class="line">--exclude=/media \ </span><br><span class="line">--exclude=/var/log \</span><br><span class="line">--exclude=/var/cache/apt/archives \</span><br><span class="line">--exclude=/usr/src/linux-headers* \ </span><br><span class="line">--exclude=/home/*/.gvfs \</span><br><span class="line">--exclude=/home/*/.cache \ </span><br><span class="line">--exclude=/home/*/.local/share/Trash /</span><br></pre></td></tr></table></figure><h3 id="使用-tar-还原"><a href="#使用-tar-还原" class="headerlink" title="使用 tar 还原"></a>使用 tar 还原</h3><p>用 livecd 启动系统, 然后点击一下要还原的目的磁盘, 假设自动挂载到 <code>/media/mountpath</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xvpzf /path/to/backup.tar.gz -C /media/mountpath --numeric-owner</span><br><span class="line">sudo <span class="built_in">mkdir</span> proc sys mnt media</span><br></pre></td></tr></table></figure><blockquote><p>–numeric-owner 恢复文件原来的权限</p></blockquote><h3 id="修复-grub"><a href="#修复-grub" class="headerlink" title="修复 grub"></a>修复 grub</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -s</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> dev dev/pts proc ; <span class="keyword">do</span> mount --<span class="built_in">bind</span> /<span class="variable">$f</span> /media/whatever/<span class="variable">$f</span> ; <span class="keyword">done</span></span><br><span class="line"><span class="built_in">chroot</span> /media/mountpath</span><br><span class="line">dpkg-reconfigure grub-pc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 备份还原 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django配置MySQL数据库支持</title>
      <link href="/posts/28913a98/"/>
      <url>/posts/28913a98/</url>
      
        <content type="html"><![CDATA[<p>Django 支持 MySQL 主要有两种方式, 一种是使用 <code>pymysql</code> 包, 这个是个纯 python 包, 可以跨平台运行, 不过性能较差, 另一种是 <code>mysqlclient</code>, 这个需要操作系统支持, 在 linux 平台可以获得更好的性能, 在 windows 系统下安装比较麻烦。</p><h2 id="mysqlclient"><a href="#mysqlclient" class="headerlink" title="mysqlclient"></a>mysqlclient</h2><p>mysqlclient 需要依赖操作系统的库</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian安装</button><button type="button" class="tab">CentOS和Fedora安装</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-dev default-libmysqlclient-dev build-essential</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python3-devel mysql-devel</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>然后 pip 安装 mysqlclient</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><h2 id="pymysql"><a href="#pymysql" class="headerlink" title="pymysql"></a>pymysql</h2><p>直接安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><p>在 <code>__init__.py</code> 或者 <code>settings.py</code> 文件开头添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure><h2 id="settings-py-配置"><a href="#settings-py-配置" class="headerlink" title="settings.py 配置"></a>settings.py 配置</h2><p>Django 的 settings.py 需要配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单独安装MySQL client客户端</title>
      <link href="/posts/sn8a2y/"/>
      <url>/posts/sn8a2y/</url>
      
        <content type="html"><![CDATA[<h2 id="方法一、直接下载二进制文件"><a href="#方法一、直接下载二进制文件" class="headerlink" title="方法一、直接下载二进制文件"></a>方法一、直接下载二进制文件</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">CentOS</button><button type="button" class="tab">Debian/Ubuntu</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ncurses-libs <span class="comment"># 这个包centos默认自带了</span></span><br><span class="line">curl -OL https://file.babudiu.com/f/w0ty/mysql &amp;&amp; <span class="built_in">chmod</span> +x mysql</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libncurses5</span><br><span class="line">curl -OL https://file.babudiu.com/f/w0ty/mysql &amp;&amp; <span class="built_in">chmod</span> +x mysql</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="方法二、使用源安装"><a href="#方法二、使用源安装" class="headerlink" title="方法二、使用源安装"></a>方法二、使用源安装</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">CentOS</button><button type="button" class="tab">Debian/Ubuntu</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ncurses-libs mariadb-client</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@//.*debian.org@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&#x27;s@//.*ubuntu.com@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">apt update &amp;&amp; apt install -y libncurses5 mariadb-client</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux时间处理与格式化</title>
      <link href="/posts/871fdda4/"/>
      <url>/posts/871fdda4/</url>
      
        <content type="html"><![CDATA[<p>使用 shell 脚本的时候，可以按照指定格式输出时间。</p><h2 id="把-unix-时间戳转换为人类可读的时间"><a href="#把-unix-时间戳转换为人类可读的时间" class="headerlink" title="把 unix 时间戳转换为人类可读的时间"></a>把 unix 时间戳转换为人类可读的时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -d @1660396123 +<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span></span><br></pre></td></tr></table></figure><h2 id="时间转换为-unix-时间戳"><a href="#时间转换为-unix-时间戳" class="headerlink" title="时间转换为 unix 时间戳"></a>时间转换为 unix 时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -d <span class="string">&#x27;Sat May 15 23:00:27 CST 2021&#x27;</span> +%s</span><br></pre></td></tr></table></figure><h2 id="获取之前的时间"><a href="#获取之前的时间" class="headerlink" title="获取之前的时间"></a>获取之前的时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -d <span class="string">&#x27;yesterday&#x27;</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&#x27;-2 hours&#x27;</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2 days ago&quot;</span> +%Y.%m.%d</span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;1 week ago&quot;</span> +%Y.%m.%d</span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;1 year ago&quot;</span> +%Y.%m.%d</span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;1 month ago&quot;</span> +%Y.%m.%d</span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;-7 days&quot;</span> +%Y%m%d</span><br></pre></td></tr></table></figure><h2 id="指定格式输出"><a href="#指定格式输出" class="headerlink" title="指定格式输出"></a>指定格式输出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line"><span class="comment"># 2023-11-21 13:36:51</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>%Y</td><td>年</td></tr><tr><td>%m</td><td>月</td></tr><tr><td>%d</td><td>日</td></tr><tr><td>%H</td><td>时</td></tr><tr><td>%M</td><td>分</td></tr><tr><td>%S</td><td>秒</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> time </tag>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes删除节点</title>
      <link href="/posts/b1a2141c/"/>
      <url>/posts/b1a2141c/</url>
      
        <content type="html"><![CDATA[<h2 id="删除-worker-节点"><a href="#删除-worker-节点" class="headerlink" title="删除 worker 节点"></a>删除 worker 节点</h2><p>设置节点不可调度，即不会有新的 pod 在该节点上创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl cordon 172.16.21.26</span><br><span class="line">kubectl drain 172.16.21.26 --delete-local-data --ignore-daemonsets --force</span><br></pre></td></tr></table></figure><blockquote><p>–delete-local-data: 即使 pod 使用了 emptyDir 也删除<br>–ignore-daemonsets: 忽略 deamonset 控制器的 pod，如果不忽略，deamonset 控制器控制的 pod 被删除后可能马上又在此节点上启动起来,会成为死循环；<br>–force: 不加 force 参数只会删除该 NODE 上由 ReplicationController, ReplicaSet, DaemonSet,StatefulSet or Job 创建的 Pod，加了后还会删除’裸奔的 pod’(没有绑定到任何 replication controller)</p></blockquote><p>kubectl delete node 172.16.21.26</p><h2 id="删除-master-节点"><a href="#删除-master-节点" class="headerlink" title="删除 master 节点"></a>删除 master 节点</h2><p>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用base64生成kubernetes使用的secret yaml</title>
      <link href="/posts/462d0642/"/>
      <url>/posts/462d0642/</url>
      
        <content type="html"><![CDATA[<p>先申请证书, 证书申请下来后会有 证书 (一般都是 pem 后缀或者 crt 后缀) 和 私钥 (一般后缀是 key)</p><p>使用 base64 加工一下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">base64</span> ./i.com_bundle.crt -w 0</span><br></pre></td></tr></table></figure><blockquote><p>-w 0 的意思是不换行, 默认是 76 个字符换行.</p></blockquote><p>然后填到 Kubernetes 的 yaml 文件里面即可.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">tls.crt:</span> <span class="string">&lt;单行文本证书&gt;</span></span><br><span class="line">  <span class="attr">tls.key:</span> <span class="string">&lt;单行文本key&gt;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lexus-ald-i-com</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">prod-valet</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes.io/tls</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> base64 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Elasticsearch 二进制 tar 包部署并初始化三节点集群</title>
      <link href="/posts/a07ebcb/"/>
      <url>/posts/a07ebcb/</url>
      
        <content type="html"><![CDATA[<p>需要初始化配置一个 3 节点的集群，我的机器详情是：</p><table><thead><tr><th>hostname</th><th>IP 地址</th><th>系统版本</th><th>备注</th></tr></thead><tbody><tr><td>node-1</td><td>10.0.0.11</td><td>AlmaLinux 9.5</td><td>初始化 master 节点</td></tr><tr><td>node-2</td><td>10.0.0.12</td><td>AlmaLinux 9.5</td><td>初始化 master 节点</td></tr><tr><td>node-3</td><td>10.0.0.13</td><td>AlmaLinux 9.5</td><td>初始化 master 节点</td></tr><tr><td>node-4</td><td>10.0.0.14</td><td>AlmaLinux 9.5</td><td>新增节点</td></tr></tbody></table><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="主机名规范-可选"><a href="#主机名规范-可选" class="headerlink" title="主机名规范 (可选)"></a>主机名规范 (可选)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname es_1</span><br></pre></td></tr></table></figure><h3 id="内核参数修改"><a href="#内核参数修改" class="headerlink" title="内核参数修改"></a>内核参数修改</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">临时修改</button><button type="button" class="tab">永久修改</button></div><div class="tab-contents"><div class="tab-item-content active"><p>重启后配置会丢失</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p><code>vim /etc/sysctl.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>马上生效，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h3><p>redhat 系需要，Ubuntu 不用, 如果启动服务提示 <code>Permission Denied</code> ，如果权限没问题，那可能是 selinux 的问题。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">临时修改</button><button type="button" class="tab">永久修改</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo setenforce 0</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p><code>vim /etc/selinux/config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> --now ufw</span><br></pre></td></tr></table></figure><h3 id="准备-ES-安装包"><a href="#准备-ES-安装包" class="headerlink" title="准备 ES 安装包"></a>准备 ES 安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ ! -d /data/elasticsearch ] &amp;&amp; <span class="built_in">mkdir</span> -p /data/elasticsearch</span><br><span class="line"><span class="built_in">cd</span> /data/elasticsearch</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.16.2-linux-x86_64.tar.gz</span><br><span class="line">tar xf elasticsearch-7.16.2-linux-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.16.2</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd elasticsearch -m -s /usr/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="初始化集群配置"><a href="#初始化集群配置" class="headerlink" title="初始化集群配置"></a>初始化集群配置</h2><p><code>vim config/elasticsearch.yml</code></p><p>修改配置文件为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集群名字</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">es_cluster</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给节点定义个名字，每个节点不一样</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-1</span></span><br><span class="line"><span class="comment"># 节点监听的ip，本机IP</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br><span class="line"><span class="comment"># 尽量不要配置自身ip，避免自引用问题。</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;10.0.0.12:9300&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;10.0.0.13:9300&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># master节点的 node.mane 配置，初始化配置哪些节点有资格选举成主节点，初始化的时候会选举一个master节点出来。</span></span><br><span class="line"><span class="attr">cluster.initial_master_nodes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;node-1&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;node-2&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;node-3&quot;</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9300</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="attr">http.cors.allow-headers:</span> <span class="string">Authorization</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点间认证配置</span></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.verification_mode:</span> <span class="string">certificate</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.keystore.path:</span> <span class="string">elastic-certificates.p12</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.truststore.path:</span> <span class="string">elastic-certificates.p12</span></span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><blockquote><p>在一个 master 上执行即可, 所有选项全部保持默认</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-certutil ca</span><br><span class="line">./bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12</span><br></pre></td></tr></table></figure><h3 id="复制证书"><a href="#复制证书" class="headerlink" title="复制证书"></a>复制证书</h3><blockquote><p>把生成的文件放到 conf 下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> elastic-certificates.p12  elastic-stack-ca.p12 config/</span><br></pre></td></tr></table></figure><p>然后把这两个文件复制到其他的节点 config 目录下.</p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R elasticsearch:elasticsearch /data/elasticsearch</span><br></pre></td></tr></table></figure><h3 id="生成-systemd-启动脚本"><a href="#生成-systemd-启动脚本" class="headerlink" title="生成 systemd 启动脚本"></a>生成 systemd 启动脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/elasticsearch.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=elasticsearch</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">User=elasticsearch</span></span><br><span class="line"><span class="string">Group=elasticsearch</span></span><br><span class="line"><span class="string">LimitNOFILE=100000</span></span><br><span class="line"><span class="string">LimitNPROC=100000</span></span><br><span class="line"><span class="string">Restart=no</span></span><br><span class="line"><span class="string">ExecStart=/data/elasticsearch/elasticsearch-7.16.2/bin/elasticsearch</span></span><br><span class="line"><span class="string">PrivateTmp=true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><p>一个 3 节点的集群至少启动 2 个节点才能正常服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now elasticsearch</span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>初始化密码，只需要执行一次。如果不能正常设置，检查下是不是只启动了一个节点。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">自动生成所有密码</button><button type="button" class="tab">手动设置每个密码</button><button type="button" class="tab">手动设置每个密码</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-setup-passwords auto</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>设置成固定密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ELASTIC_PASSWORD=<span class="string">&quot;12345678&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;y</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;ELASTIC_PASSWORD&#125;</span>&quot;</span> | ./bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="检查集群"><a href="#检查集群" class="headerlink" title="检查集群"></a>检查集群</h2><h3 id="检查日志"><a href="#检查日志" class="headerlink" title="检查日志"></a>检查日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f /data/elasticsearch/elasticsearch-7.16.2/logs/es_cluster.log</span><br></pre></td></tr></table></figure><h3 id="检查节点状态"><a href="#检查节点状态" class="headerlink" title="检查节点状态"></a>检查节点状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 logs]<span class="comment"># curl -u elastic:6xr7pJvcNmoNlMFZNGP4 10.0.0.11:9200/_cat/nodes?v</span></span><br><span class="line">ip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name</span><br><span class="line">10.0.0.11           44          95   0    0.00    0.00     0.00 cdfhilmrstw -      node-1</span><br><span class="line">10.0.0.13           25          95   0    0.00    0.00     0.00 cdfhilmrstw -      node-3</span><br><span class="line">10.0.0.12           38          95   0    0.00    0.00     0.00 cdfhilmrstw *      node-2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="检查集群状态"><a href="#检查集群状态" class="headerlink" title="检查集群状态"></a>检查集群状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 logs]<span class="comment"># curl -u elastic:6xr7pJvcNmoNlMFZNGP4 10.0.0.11:9200/_cat/health?v</span></span><br><span class="line">epoch      timestamp cluster    status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1740216850 09:34:10  es_cluster green           4         4      8   4    0    0        0             0                  -                100.0%</span><br></pre></td></tr></table></figure><h2 id="新增节点"><a href="#新增节点" class="headerlink" title="新增节点"></a>新增节点</h2><p>新节点按照上面步骤执行一遍，不过不需要生成证书，将生成过的证书复制到新节点的对应目录，不需要设置密码，启动节点后会自动加入集群中。<br>新节点不需要配置 <code>cluster.initial_master_nodes:</code> 了，这个是初始化用到的配置。<br>新增的节点也可以配置成主节点，也可以配置成数据节点：</p><h3 id="配置成数据节点"><a href="#配置成数据节点" class="headerlink" title="配置成数据节点"></a>配置成数据节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node.master: <span class="literal">false</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="配置成主节点"><a href="#配置成主节点" class="headerlink" title="配置成主节点"></a>配置成主节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node.master: <span class="literal">true</span></span><br><span class="line">node.data: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="kibana-搭建（可选）"><a href="#kibana-搭建（可选）" class="headerlink" title="kibana 搭建（可选）"></a>kibana 搭建（可选）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-7.16.2-linux-x86_64.tar.gz</span><br><span class="line">tar xf kibana-7.16.2-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure><p>准备 kibana 的配置文件 <code>kibana.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">server.port:</span> <span class="number">5601</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">&quot;elastic&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">&quot;12345678&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [<span class="string">&quot;http://10.0.0.11:9200&quot;</span>, <span class="string">&quot;http://10.0.0.12:9200&quot;</span>, <span class="string">&quot;http://10.0.0.13:9200&quot;</span>]</span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><p>启动 kibana</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>tar 包安装的要关闭 selinux，不然提示 <code>Permission denied</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo setenforce 0</span><br></pre></td></tr></table></figure><p><code>vm.max_map_count [65530] is too low, increase to at least [262144]</code> 需要执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建 </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker多阶段构建</title>
      <link href="/posts/4161b051/"/>
      <url>/posts/4161b051/</url>
      
        <content type="html"><![CDATA[<p>构建 Docker 镜像的时候,我们可以在机器上直接构建,也可以使用容器来构建,保证环境的统一性, 通过容器来构建会有一个问题,就是构建使用到的工具并不需要带入到真正的运行环境, 比如说使用 nodejs 的前端项目, 构建的时候需要 nodejs 或者 npm, 但是运行的时候需要的是 nginx. 多阶段构建即为构建完成后直接将代码塞进运行容器, 不会带入构建环境.</p><h2 id="编写-Dockerfile"><a href="#编写-Dockerfile" class="headerlink" title="编写 Dockerfile"></a>编写 Dockerfile</h2><p>vim Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.20</span>.<span class="number">1</span>-buster AS build</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> argus-wfe /argus-wfe</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /argus-wfe</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yarn &amp;&amp; yarn run build</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">From</span> nginx</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=build /argus-wfe/dist /usr/share/nginx/html</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Build </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mRemoteNG 如何显示保存的密码</title>
      <link href="/posts/sm0nds/"/>
      <url>/posts/sm0nds/</url>
      
        <content type="html"><![CDATA[<p>mRemoteNG 是一款比较好用的 Windows 平台的连接 RDP 的管理工具，非常好用，支持选项卡，配置文件管理，账号密码管理等。虽然现在 xshell 8 也支持连接 rdp 了，但是没有这个好用。mRemoteNG 也支持连接 vnc 和 ssh，但是不好用，我只用它来连 rdp</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410272116148.png" alt="image.png"></p><p>不过添加好的配置文件，密码是加密的，导出配置文件也看不到原密码，如果我添加了配置，过了一段时间忘记了密码，可以通过这种方法来找回密码。</p><p>配置 外部工具 新增一个外部工具，配置如下：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410272122994.png" alt="image.png"></p><table><thead><tr><th>名称</th><th>配置</th></tr></thead><tbody><tr><td>显示名称</td><td>显示密码</td></tr><tr><td>文件名</td><td>cmd</td></tr><tr><td>参数</td><td>&#x2F;k echo %password%</td></tr><tr><td>选项</td><td>看上图</td></tr></tbody></table><p>使用方法：<br>在连接上面右键，选择工具 – 显示密码<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410272125763.png" alt="image.png"></p><p>在弹出的 cmd 窗口中会显示出密码明文<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202410272126009.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rdp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch升级版本</title>
      <link href="/posts/74398d89/"/>
      <url>/posts/74398d89/</url>
      
        <content type="html"><![CDATA[<p>背景：es 旧版本有 log4j 漏洞，需要进行升级处理，因为是使用 yum 安装的，升级也比较简单，这里记录一下，这里选择的版本是 7.16.2</p><p>更新日志： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.17/release-notes-7.16.2.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.17/release-notes-7.16.2.html</a></p><h2 id="首先下载安装包"><a href="#首先下载安装包" class="headerlink" title="首先下载安装包"></a>首先下载安装包</h2><p>阿里云镜像地址：<a href="https://mirrors.aliyun.com/elasticstack/7.x/yum/7.16.2/">https://mirrors.aliyun.com/elasticstack/7.x/yum/7.16.2/</a></p><p>腾讯云镜像地址：<a href="https://mirrors.cloud.tencent.com/elasticstack/7.x/yum/7.16.2/">https://mirrors.cloud.tencent.com/elasticstack/7.x/yum/7.16.2/</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh ./elasticsearch-7.16.2-x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart elasticsearch.service </span><br></pre></td></tr></table></figure><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><p>java.lang.IllegalStateException: codebase property already set: codebase.jackson-annotations -&gt; file:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;modules&#x2F;ingest-geoip&#x2F;jackson-annotations-2.12.2.jar, cannot set to file:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;modules&#x2F;ingest-geoip&#x2F;jackson-annotations-2.10.4.jar</p><blockquote><p>这种情况是由于版本相差较大造成的。已经加载了一个版本的包，不能再加载另一个版本的包。</p></blockquote><p>安装时的提示：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@l7---es-<span class="number">3</span> ~]# rpm -Uvh ./elasticsearch-<span class="number">7.16</span>.<span class="number">2</span>-x86_64.rpm </span><br><span class="line">warning: ./elasticsearch-<span class="number">7.16</span>.<span class="number">2</span>-x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID d88e42b4: NOKEY</span><br><span class="line">Preparing...                          ################################# [<span class="number">100</span>%]</span><br><span class="line">Updating / installing...</span><br><span class="line">   <span class="number">1</span>:elasticsearch-<span class="number">0</span>:<span class="number">7.16</span>.<span class="number">2</span>-<span class="number">1</span>         warning: /etc/elasticsearch/elasticsearch.yml created <span class="keyword">as</span> /etc/elasticsearch/elasticsearch.yml.rpmnew</span><br><span class="line">warning: /etc/elasticsearch/jvm.<span class="keyword">options</span> created <span class="keyword">as</span> /etc/elasticsearch/jvm.<span class="keyword">options</span>.rpmnew</span><br><span class="line">################################# [ <span class="number">50</span>%]</span><br><span class="line">Cleaning <span class="keyword">up</span> / removing...</span><br><span class="line">   <span class="number">2</span>:elasticsearch-<span class="number">0</span>:<span class="number">7.5</span>.<span class="number">0</span>-<span class="number">1</span>          warning: <span class="keyword">file</span> /usr/share/elasticsearch/modules/ingest-geoip/jackson-databind-<span class="number">2.8</span>.<span class="number">11.3</span>.jar: <span class="built_in">remove</span> failed: No such <span class="keyword">file</span> <span class="built_in">or</span> directory</span><br><span class="line">warning: <span class="keyword">file</span> /usr/share/elasticsearch/modules/ingest-geoip/jackson-annotations-<span class="number">2.8</span>.<span class="number">11</span>.jar: <span class="built_in">remove</span> failed: No such <span class="keyword">file</span> <span class="built_in">or</span> directory</span><br><span class="line">################################# [<span class="number">100</span>%]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里很明显是安装的时候安装脚本会移除旧的 jar 包，但是没有找到这个文件</p><p>解决方案：</p><p>cd &#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;modules&#x2F;ingest-geoip&#x2F;</p><p>删除旧版本的 jar 包</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows设置OEM信息</title>
      <link href="/posts/6f85bc6b/"/>
      <url>/posts/6f85bc6b/</url>
      
        <content type="html"><![CDATA[<p>OEM 信息存储于注册表中，修改注册表即可。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportURL&quot; /t REG_SZ /d &quot;https://zahui.fan&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Model&quot; /t REG_SZ /d &quot;PC&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportHours&quot; /t REG_SZ /d &quot;<span class="number">8</span>:<span class="number">00</span>-<span class="number">22</span>:<span class="number">00</span>&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;SupportPhone&quot; /t REG_SZ /d &quot;<span class="number">17621268822</span>&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Logo&quot; /t REG_SZ /d &quot;C:\Windows\Media\logo.bmp&quot;</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f /v &quot;Manufacturer&quot; /t REG_SZ /d &quot;张理坤&quot;</span><br><span class="line"><span class="built_in">copy</span> logo.bmp <span class="variable">%windir%</span>\media\logo.bmp</span><br></pre></td></tr></table></figure><p>如果需要删除 OEM 信息<br><code>reg delete &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation&quot; /f</code></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bitlocker相关使用说明</title>
      <link href="/posts/55d95f5b/"/>
      <url>/posts/55d95f5b/</url>
      
        <content type="html"><![CDATA[<h2 id="解锁-bitlocker"><a href="#解锁-bitlocker" class="headerlink" title="解锁 bitlocker"></a>解锁 bitlocker</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manage-bde –unlock E: -RecoveryPassword ******</span><br></pre></td></tr></table></figure><h2 id="保存到-Microsoft-账户的-Bitlocker-秘钥"><a href="#保存到-Microsoft-账户的-Bitlocker-秘钥" class="headerlink" title="保存到 Microsoft 账户的 Bitlocker 秘钥"></a>保存到 Microsoft 账户的 Bitlocker 秘钥</h2><p><a href="https://account.microsoft.com/devices/recoverykey">https://account.microsoft.com/devices/recoverykey</a></p><h2 id="手动锁定-Bitlocker"><a href="#手动锁定-Bitlocker" class="headerlink" title="手动锁定 Bitlocker"></a>手动锁定 Bitlocker</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">%systemdrive%</span>\Windows\System32\Manage-bde.exe –lock d:</span><br></pre></td></tr></table></figure><p>如果有打开的文件，则会提示解锁不成功，这时可以加上强制选项：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">%systemdrive%</span>\Windows\System32\Manage-bde.exe -lock -fd d:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BitLocker </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows重置组策略和安全策略</title>
      <link href="/posts/11456cf7/"/>
      <url>/posts/11456cf7/</url>
      
        <content type="html"><![CDATA[<p>还原本地安全策略</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secedit /configure /cfg <span class="variable">%windir%</span>\inf\defltbase.inf /db defltbase.sdb /verbose</span><br></pre></td></tr></table></figure><p>使用命令行重置组策略对象</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">RD</span> /S /Q &quot;<span class="variable">%WinDir%</span>\System32\GroupPolicyUsers&quot;</span><br><span class="line"><span class="built_in">RD</span> /S /Q &quot;<span class="variable">%WinDir%</span>\System32\GroupPolicy&quot;</span><br><span class="line">gpupdate /force</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组策略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作绿色版Chrome浏览器</title>
      <link href="/posts/8d9e31b7/"/>
      <url>/posts/8d9e31b7/</url>
      
        <content type="html"><![CDATA[<p>绿色版程序只需要将安装后的文件夹拷贝一份即可实现绿色化，不过浏览器生成的数据包括缓存、书签、历史记录等都是存储在操作系统默认位置的，完全随身携带，还需要将数据目录固定在程序文件夹下。</p><p>在 chrome 安装目录创建一个 bat 脚本</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> chrome.exe --user-data-<span class="built_in">dir</span>=&quot;User Data&quot;</span><br></pre></td></tr></table></figure><p>以后使用这个 bat 脚本来启动浏览器，数据文件就全部存放在当前目录下的 User Data 目录下</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
            <tag> 绿色软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows关机状态修改注册表内容</title>
      <link href="/posts/36ac7ecc/"/>
      <url>/posts/36ac7ecc/</url>
      
        <content type="html"><![CDATA[<p>注册表是 windows 平台一种特殊的数据库，主要用于存储软件和系统的配置信息</p><p>正常情况下修改是打开注册表编辑器进行修改，不过有些特殊情况，比如系统启动就蓝屏，需要修改磁盘驱动器相关的配置，或者封装系统镜像修改默认设置，比如壁纸、计算机名等</p><p>注册表类似于数据库，它也是以文件的形式存储在电脑里面</p><p>修改方法：</p><p>进入 PE，打开注册表编辑器，定位到<strong>HKEY_LOCAL_MACHINE</strong>然后点击 文件 - 加载配置单元 ，选择注册表 Hive 文件</p><p>首先列出 Hive 文件的位置</p><table><thead><tr><th>Hive 文件</th><th>注册表位置</th></tr></thead><tbody><tr><td>C:\Windows\System32\config\SOFTWARE</td><td>HKEY_LOCAL_MACHINE\SOFTWARE</td></tr><tr><td>C:\Windows\System32\config\SYSTEM</td><td>HKEY_LOCAL_MACHINE\SYSTEM</td></tr><tr><td>C:\Users&#x2F;Default&#x2F;NTUSER.DAT</td><td>默认用户配置 (新建用户时会复制一份到用户文件夹)</td></tr><tr><td>C:\Users&#x2F;用户名&#x2F;NTUSER.DAT</td><td>HKEY_CURRENT_USER</td></tr></tbody></table><p>修改完成，点击 文件 - 卸载配置单元 即可完成修改</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows家庭版打开Hyper V虚拟机</title>
      <link href="/posts/b428e1a3/"/>
      <url>/posts/b428e1a3/</url>
      
        <content type="html"><![CDATA[<p>家庭版系统不可以在系统程序和功能里面添加 Hyper-V 功能的， 不过微软并没有禁止通过 dism 增加包的方式添加 Hyper-V 功能，所以可以使用这种方式来使用 Hyper-V</p><p>操作需要使用管理员权限来执行</p><h2 id="打开-Hyper-V"><a href="#打开-Hyper-V" class="headerlink" title="打开 Hyper-V"></a>打开 Hyper-V</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pushd</span> &quot;%~dp0&quot;</span><br><span class="line"><span class="built_in">dir</span> /b <span class="variable">%SystemRoot%</span>\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> /f <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;<span class="built_in">findstr</span> /i . hyper-v.txt <span class="number">2</span>^&gt;<span class="built_in">nul</span>&#x27;) <span class="keyword">do</span> dism /online /norestart /add-Package:&quot;<span class="variable">%SystemRoot%</span>\servicing\Packages\<span class="variable">%%i</span>&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">del</span> hyper-v.txt</span><br><span class="line"></span><br><span class="line">Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="关闭-Hyper-V"><a href="#关闭-Hyper-V" class="headerlink" title="关闭 Hyper-V"></a>关闭 Hyper-V</h2><h3 id="删除-Hyper-V-组件"><a href="#删除-Hyper-V-组件" class="headerlink" title="删除 Hyper-V 组件"></a>删除 Hyper-V 组件</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pushd</span> &quot;%~dp0&quot;</span><br><span class="line"><span class="built_in">dir</span> /b <span class="variable">%SystemRoot%</span>\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> /f <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;<span class="built_in">findstr</span> /i . hyper-v.txt <span class="number">2</span>^&gt;<span class="built_in">nul</span>&#x27;) <span class="keyword">do</span> dism /online /norestart /Remove-Package:&quot;<span class="variable">%SystemRoot%</span>\servicing\Packages\<span class="variable">%%i</span>&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">del</span> hyper-v.txt</span><br><span class="line"></span><br><span class="line">Dism /online /disable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</span><br></pre></td></tr></table></figure><h3 id="关闭需要修改启动配置"><a href="#关闭需要修改启动配置" class="headerlink" title="关闭需要修改启动配置"></a>关闭需要修改启动配置</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype off</span><br><span class="line"></span><br><span class="line"># 恢复配置</span><br><span class="line"># bcdedit /<span class="built_in">set</span> hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyper-V </tag>
            
            <tag> VirtualMachine </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令之xargs</title>
      <link href="/posts/d680904b/"/>
      <url>/posts/d680904b/</url>
      
        <content type="html"><![CDATA[<p>多行输入单行输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat test</span></span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat test| xargs</span></span><br><span class="line">1 2 3 4 5 6</span><br></pre></td></tr></table></figure><p>多行输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat test | xargs -n 2</span></span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br></pre></td></tr></table></figure><p>自定义一个定界符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -d 选项可以自定义一个定界符：</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameXnameXnameXname&quot;</span> | xargs -dX</span><br><span class="line">name name name name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合 -n 选项使用：</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameXnameXnameXname&quot;</span> | xargs -dX -n2</span><br><span class="line">name name</span><br><span class="line">name name</span><br></pre></td></tr></table></figure><p>复制所有图片文件到 &#x2F;data&#x2F;images 目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> *.jpg | xargs -n1 -I &#123;&#125; <span class="built_in">cp</span> &#123;&#125; /data/images</span><br></pre></td></tr></table></figure><p>xargs 结合 find 使用<br>用 rm 删除太多的文件时候，可能得到一个错误信息：&#x2F;bin&#x2F;rm Argument list too long. 用 xargs 去避免这个问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> f -name <span class="string">&quot;*.log&quot;</span> -print0 | xargs -0 <span class="built_in">rm</span> -f</span><br><span class="line"><span class="comment"># xargs -0 将 \0 作为定界符。</span></span><br></pre></td></tr></table></figure><p>统计一个源代码目录中所有 php 文件的行数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> f -name <span class="string">&quot;*.php&quot;</span> -print0 | xargs -0 <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>查找所有的 jpg 文件，并且压缩它们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> f -name <span class="string">&quot;*.jpg&quot;</span> -<span class="built_in">print</span> | xargs tar -czvf images.tar.gz</span><br></pre></td></tr></table></figure><p>查找并替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name <span class="string">&#x27;要查找的文件名&#x27;</span> | xargs perl -pi -e <span class="string">&#x27;s|被替换的字符串|替换后的字符串|g&#x27;</span></span><br></pre></td></tr></table></figure><p>去除换行符和首尾空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   11 22&quot;</span> | xargs <span class="built_in">echo</span> -n</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux设置默认的文本编辑器</title>
      <link href="/posts/b8c29b0f/"/>
      <url>/posts/b8c29b0f/</url>
      
        <content type="html"><![CDATA[<p>在 Linux 命令行界面，比较常用的是 vim，但是部分 linux 默认的编辑器是 nano，所以整理了一下修改教程。</p><h2 id="select-editor-命令"><a href="#select-editor-命令" class="headerlink" title="select-editor 命令"></a>select-editor 命令</h2><p>使用 select-editor 可以修改部分场景下使用的默认编辑器</p><p>直接执行 select-editor（不要用 sudo）</p><p>以上操作相当于创建了一个 <code>~/.selected_editor</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.selected_editor</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generated by /usr/bin/select-editor</span></span><br><span class="line">SELECTED_EDITOR=<span class="string">&quot;/usr/bin/vim.basic&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="update-alternatives-命令"><a href="#update-alternatives-命令" class="headerlink" title="update-alternatives 命令"></a>update-alternatives 命令</h2><p>这条命令需要使用 root 权限执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config editor</span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /bin/vim.basic /etc/alternatives/editor</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建ipsec Vpn</title>
      <link href="/posts/759185f9/"/>
      <url>/posts/759185f9/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  --name ipsec-vpn-server \</span><br><span class="line">  --restart=always \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/ikev2-vpn-data:/etc/ipsec.d \</span><br><span class="line">  -p 500:500/udp \</span><br><span class="line">  -p 4500:4500/udp \</span><br><span class="line">  -d --privileged \</span><br><span class="line">  --restart=always \</span><br><span class="line">  hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure><h2 id="将-ikev2-vpn-data-文件复制到本地"><a href="#将-ikev2-vpn-data-文件复制到本地" class="headerlink" title="将 ikev2-vpn-data 文件复制到本地"></a>将 ikev2-vpn-data 文件复制到本地</h2><p>在 ikev2-vpn-data 目录中，证书或配置文件的位置：</p><table><thead><tr><th>操作系统</th><th>文件名</th><th>备注</th></tr></thead><tbody><tr><td>Windows 和 Linux</td><td>vpnclient.p12</td><td>Windows10 &amp; 11 按照下文配置 VPN</td></tr><tr><td>Android</td><td>vpnclient.sswan</td><td>安卓需要安装 strongSwan 软件</td></tr><tr><td>Apple 设备</td><td>vpnclient.mobileconfig</td><td>导入描述文件即可</td></tr></tbody></table><h2 id="windows-客户端配置"><a href="#windows-客户端配置" class="headerlink" title="windows 客户端配置"></a>windows 客户端配置</h2><h3 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -f -importpfx vpnclient.p12 NoExport</span><br></pre></td></tr></table></figure><blockquote><p>证书会导入到 <strong>受信任的根证书颁发机构</strong> <strong>IKEv2 VPN CA</strong></p></blockquote><blockquote><p>另外，你也可以手动导入 .p12 文件。在导入证书后，你必须确保将客户端证书放在 “ 个人 -&gt; 证书 “ 目录中，并且将 CA 证书放在 “ 受信任的根证书颁发机构 -&gt; 证书 “ 目录中。</p></blockquote><h3 id="创建-VPN-连接"><a href="#创建-VPN-连接" class="headerlink" title="创建 VPN 连接"></a>创建 VPN 连接</h3><p>在 Windows 计算机上添加一个新的 IKEv2 VPN 连接。对于 Windows 8.x 和 10，推荐从命令提示符运行以下命令创建 VPN 连接，以达到更佳的安全性和性能。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="literal">-command</span> <span class="string">&quot;Add-VpnConnection -ServerAddress &#x27;这里是你的VPN服务器地址&#x27; -Name &#x27;VPN1&#x27; -TunnelType IKEv2 -AuthenticationMethod MachineCertificate -EncryptionLevel Required -PassThru&quot;</span></span><br></pre></td></tr></table></figure><h3 id="设置-IPsec-参数"><a href="#设置-IPsec-参数" class="headerlink" title="设置 IPsec 参数"></a>设置 IPsec 参数</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="literal">-command</span> <span class="string">&quot;Set-VpnConnectionIPsecConfiguration -ConnectionName &#x27;VPN1&#x27; -AuthenticationTransformConstants GCMAES128 -CipherTransformConstants GCMAES128 -EncryptionMethod AES256 -IntegrityCheckMethod SHA256 -PfsGroup None -DHGroup Group14 -PassThru -Force&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows的bat脚本默认变量</title>
      <link href="/posts/5157092d/"/>
      <url>/posts/5157092d/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 当前的bat文件：&quot;%~<span class="number">0</span>&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：&quot;%~d0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：&quot;%~dp0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：&quot;%~f0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：&quot;%~sdp0&quot;</span><br><span class="line"><span class="built_in">echo</span> 当前<span class="built_in">CMD</span>默认目录：&quot;<span class="variable">%cd%</span>&quot;</span><br></pre></td></tr></table></figure><p>桌面上的脚本输出输出类似于：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">当前的bat文件：&quot;C:\Users\iuxt\Desktop\test.bat&quot;</span><br><span class="line">当前盘符：&quot;C:&quot;</span><br><span class="line">当前盘符和路径：&quot;C:\Users\iuxt\Desktop\&quot;</span><br><span class="line">当前批处理全路径：&quot;C:\Users\iuxt\Desktop\test.bat&quot;</span><br><span class="line">当前盘符和路径的短文件名格式：&quot;C:\Users\iuxt\Desktop\&quot;</span><br><span class="line">当前CMD默认目录：&quot;C:\Users\iuxt\Desktop&quot;</span><br></pre></td></tr></table></figure><p>以下是针对拖放文件：</p><p>脚本内容为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 无后缀名： %~n1</span><br><span class="line"><span class="built_in">echo</span> 有后缀名： %~nx1</span><br><span class="line"><span class="built_in">echo</span> 绝对路径： %<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> 短路径名的绝对路径： %~s1</span><br><span class="line"><span class="built_in">echo</span> 驱动器和路径： %~dp1</span><br><span class="line"><span class="built_in">echo</span> 驱动器： %~d1</span><br><span class="line"><span class="built_in">echo</span> 路径： %~p1</span><br><span class="line"><span class="built_in">echo</span> 文件属性： %~a1</span><br><span class="line"><span class="built_in">echo</span> 日期/时间： %~t1</span><br><span class="line"><span class="built_in">echo</span> 文件大小： %~z1</span><br></pre></td></tr></table></figure><p>现在将另一个文件拖到这个脚本上：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">无后缀名： 周传雄 - 男人海洋</span><br><span class="line">有后缀名： 周传雄 - 男人海洋.mp3</span><br><span class="line">绝对路径： &quot;D:\周传雄 - 男人海洋.mp3&quot;</span><br><span class="line">短路径名的绝对路径： D:\___-~704.MP3</span><br><span class="line">驱动器和路径： D:\</span><br><span class="line">驱动器： D:</span><br><span class="line">路径： \</span><br><span class="line">文件属性： --a--------</span><br><span class="line">日期/时间： 2023/04/09 22:34</span><br><span class="line">文件大小： 9695866</span><br></pre></td></tr></table></figure><table><thead><tr><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>%*</td><td>脚本的所有参数</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> bat </tag>
            
            <tag> cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>检查域名解析</title>
      <link href="/posts/ae8cd9d9/"/>
      <url>/posts/ae8cd9d9/</url>
      
        <content type="html"><![CDATA[<h2 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Ubuntu</span><br><span class="line">apt-<span class="built_in">get</span> install dnsutils</span><br><span class="line"></span><br><span class="line"># CentOS</span><br><span class="line">yum install bind-utils</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询域名，指定DNS地址</span></span><br><span class="line">dig auth.vipthink.cn @114.114.114.114</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查a记录</span></span><br><span class="line">dig a www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查cname记录</span></span><br><span class="line">dig cname www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向解析</span></span><br><span class="line">dig -x 10.0.0.2</span><br></pre></td></tr></table></figure><h2 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h2><h3 id="检查域名-A-记录"><a href="#检查域名-A-记录" class="headerlink" title="检查域名 A 记录"></a>检查域名 A 记录</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslookup baidu.com <span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span></span><br><span class="line">nslookup -<span class="built_in">type</span>=a qq.com <span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span></span><br><span class="line">nslookup baidu.com</span><br></pre></td></tr></table></figure><h3 id="检查域名-NS-记录"><a href="#检查域名-NS-记录" class="headerlink" title="检查域名 NS 记录"></a>检查域名 NS 记录</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br><span class="line">&gt; <span class="built_in">set</span> <span class="built_in">type</span>=ns</span><br><span class="line">&gt; zahui.fan <span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span></span><br></pre></td></tr></table></figure><h3 id="检查域名-CNAME-记录"><a href="#检查域名-CNAME-记录" class="headerlink" title="检查域名 CNAME 记录"></a>检查域名 CNAME 记录</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br><span class="line">&gt; <span class="built_in">set</span> <span class="built_in">type</span>=cname</span><br><span class="line">&gt; zahui.fan <span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span></span><br></pre></td></tr></table></figure><h3 id="反向解析"><a href="#反向解析" class="headerlink" title="反向解析"></a>反向解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nslookup 10.0.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定dns服务器反向解析ip：10.0.0.2</span></span><br><span class="line">nslookup 10.0.0.2 127.0.0.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash检查当前用户是不是root</title>
      <link href="/posts/78f9310c/"/>
      <url>/posts/78f9310c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">id</span> -u) != <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Error: You must be root to run this script&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx Status监控</title>
      <link href="/posts/7d58920d/"/>
      <url>/posts/7d58920d/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        access_log off;</span><br><span class="line"></span><br><span class="line">        location /nginx_status &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这个时候请求,返回</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:8080/nginx_status</span><br><span class="line"></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 7 7 6 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Binlog 常用操作记录</title>
      <link href="/posts/4d67bced/"/>
      <url>/posts/4d67bced/</url>
      
        <content type="html"><![CDATA[<p>本文记录一些日常使用 MySQL binlog 的命令记录，方便日后查询。</p><h2 id="开启-binlog-日志-在-mysqld-下修改或添加如下配置"><a href="#开启-binlog-日志-在-mysqld-下修改或添加如下配置" class="headerlink" title="开启 binlog 日志 (在 [mysqld] 下修改或添加如下配置)"></a>开启 binlog 日志 (在 [mysqld] 下修改或添加如下配置)</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server-id</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">log-bin</span>=mysql-bin</span><br><span class="line"><span class="attr">binlog_format</span>=MIXED</span><br></pre></td></tr></table></figure><h2 id="binlog-日志模式"><a href="#binlog-日志模式" class="headerlink" title="binlog 日志模式"></a>binlog 日志模式</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Mysql复制主要有三种方式：基于SQL语句的复制(statement-based replication, SBR)，基于行的复制(row-based replication, RBR)，混合模式复制(mixed-based replication, MBR)。对应的，binlog的格式也有三种：STATEMENT，ROW，MIXED。</span><br><span class="line"></span><br><span class="line">1、STATEMENT模式（SBR）</span><br><span class="line">每一条会修改数据的sql语句会记录到binlog中。优点是并不需要记录每一条sql语句和每一行的数据变化，减少了binlog日志量，节约IO，提高性能。缺点是在某些情况下会导致master-slave中的数据不一致(如sleep()函数， last_insert_id()，以及user-defined functions(udf)等会出现问题)</span><br><span class="line"></span><br><span class="line">2、ROW模式（RBR）</span><br><span class="line">不记录每条sql语句的上下文信息，仅需记录哪条数据被修改了，修改成什么样了。而且不会出现某些特定情况下的存储过程、或function、或trigger的调用和触发无法被正确复制的问题。缺点是会产生大量的日志，尤其是alter table的时候会让日志暴涨。</span><br><span class="line"></span><br><span class="line">3、MIXED模式（MBR）</span><br><span class="line">以上两种模式的混合使用，一般的复制使用STATEMENT模式保存binlog，对于STATEMENT模式无法复制的操作使用ROW模式保存binlog，MySQL会根据执行的SQL语句选择日志保存方式。</span><br></pre></td></tr></table></figure><h3 id="查看-binlog-格式"><a href="#查看-binlog-格式" class="headerlink" title="查看 binlog 格式"></a>查看 binlog 格式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;BINLOG_FORMAT&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="修改-binlog-格式"><a href="#修改-binlog-格式" class="headerlink" title="修改 binlog 格式"></a>修改 binlog 格式</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">不停服务修改</button><button type="button" class="tab">停服修改</button></div><div class="tab-contents"><div class="tab-item-content active"><p>编辑&#x2F;etc&#x2F;my.cnf 文件，加入以下设置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">binlog_format</span>=row</span><br></pre></td></tr></table></figure><p>在 MySQL 命令行执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> binlog_format<span class="operator">=</span><span class="type">ROW</span>;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>编辑&#x2F;etc&#x2F;my.cnf 文件，加入以下设置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">binlog_format</span>=row</span><br></pre></td></tr></table></figure><p>重启 MySQL 服务器</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="查看默认的日志保存天数"><a href="#查看默认的日志保存天数" class="headerlink" title="查看默认的日志保存天数"></a>查看默认的日志保存天数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%expire_logs_days%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">0</span><span class="operator">-</span>表示永不过期</span><br></pre></td></tr></table></figure><h2 id="设置为-7-天有效期-修改配置文件"><a href="#设置为-7-天有效期-修改配置文件" class="headerlink" title="设置为 7 天有效期 (修改配置文件)"></a>设置为 7 天有效期 (修改配置文件)</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">expire_logs_days</span>=<span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="binlog-使用"><a href="#binlog-使用" class="headerlink" title="binlog 使用"></a>binlog 使用</h2><h3 id="常用-sql-命令"><a href="#常用-sql-命令" class="headerlink" title="常用 sql 命令"></a>常用 sql 命令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 查看binlog是否开启 */</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查看binlog列表 */</span></span><br><span class="line"><span class="keyword">show</span> <span class="type">binary</span> logs;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查看正在写入的binlog文件 */</span></span><br><span class="line"><span class="keyword">show</span> master status \G</span><br></pre></td></tr></table></figure><h3 id="查看某个时间段的-sql-操作"><a href="#查看某个时间段的-sql-操作" class="headerlink" title="查看某个时间段的 sql 操作"></a>查看某个时间段的 sql 操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># idk_base 是库名, 需要进入到binlog文件所在的目录</span></span><br><span class="line">mysqlbinlog --base64-output=decode-rows --start-datetime=<span class="string">&#x27;2022-11-09 10:48:40&#x27;</span> --stop-datetime=<span class="string">&#x27;2022-11-09 10:49:00&#x27;</span> -v -d idk_base binlog.000009</span><br></pre></td></tr></table></figure><h2 id="关闭-binlog"><a href="#关闭-binlog" class="headerlink" title="关闭 binlog"></a>关闭 binlog</h2><p>在 my.cnf 配置文件 [mysqld] 下 增加:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable-log-bin</span><br></pre></td></tr></table></figure><p>然后重启 mysql 服务</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> binlog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysqldump备份数据库</title>
      <link href="/posts/913ca09b/"/>
      <url>/posts/913ca09b/</url>
      
        <content type="html"><![CDATA[<p>mysqldump 是 <a href="/tags/mysql">MySQL</a> 数据库自带的导出 sql 工具，可以导出原生 sql，方便后续使用。</p><h2 id="创建备份用户"><a href="#创建备份用户" class="headerlink" title="创建备份用户"></a>创建备份用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;backup&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Grant all privileges on *.* to &#x27;backup&#x27;@&#x27;%&#x27; with grant option; */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">select</span>,lock tables,<span class="keyword">show</span> <span class="keyword">view</span>,<span class="keyword">trigger</span>,event <span class="keyword">on</span> database.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;backup&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;backup&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="备份格式"><a href="#备份格式" class="headerlink" title="备份格式"></a>备份格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --databases 数据库名 &gt; 文件名.sql</span><br></pre></td></tr></table></figure><h2 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h2><p>mysql 导出的文件是字节流，可以通过管道进行压缩。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --databases 数据库名 | gzip &gt; 文件名.sql.gz</span><br></pre></td></tr></table></figure><p>解压：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip &lt; 文件名.sql.gz &gt; 文件名.sql</span><br></pre></td></tr></table></figure><p>如果 cpu 性能比较差，建议不压缩，或者备份完成后再压缩，不然备份速度非常慢</p><h2 id="备份指定库"><a href="#备份指定库" class="headerlink" title="备份指定库"></a>备份指定库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --databases 数据库名1 数据库名2 数据库名3 &gt; 文件名.sql</span><br></pre></td></tr></table></figure><h2 id="备份同个库多个表"><a href="#备份同个库多个表" class="headerlink" title="备份同个库多个表"></a>备份同个库多个表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --databases 数据库名 --tables 表1 表2 .... &gt; 文件名.sql</span><br></pre></td></tr></table></figure><h2 id="备份所有库"><a href="#备份所有库" class="headerlink" title="备份所有库"></a>备份所有库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --all-databases &gt; 文件名.sql</span><br></pre></td></tr></table></figure><h2 id="附带-drop-表或库的备份"><a href="#附带-drop-表或库的备份" class="headerlink" title="附带 drop 表或库的备份"></a>附带 drop 表或库的备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认情况下备份的 sql 也会带 drop table 的</span></span><br><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --add-drop-table --add-drop-database 数据库名 &gt; 文件名.sql</span><br></pre></td></tr></table></figure><p>这样导入的时候，如果存在对应的库或表，会被先删除再导入。</p><h2 id="备份结构，不备份数据"><a href="#备份结构，不备份数据" class="headerlink" title="备份结构，不备份数据"></a>备份结构，不备份数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -h主机名 -P端口 -u用户名 -p密码 --no-data --databases 数据库名1 数据库名2 数据库名3 &gt; 文件名.sql</span><br></pre></td></tr></table></figure><h2 id="备份不锁表，记录-binlog-位置"><a href="#备份不锁表，记录-binlog-位置" class="headerlink" title="备份不锁表，记录 binlog 位置"></a>备份不锁表，记录 binlog 位置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -ppassword -hlocalhost -P3306 --master-data=2 --single-transaction --skip-tz-utc --all-databases &gt; /tmp/db.sql</span><br></pre></td></tr></table></figure><h2 id="备份数据库，-不带-drop-语句"><a href="#备份数据库，-不带-drop-语句" class="headerlink" title="备份数据库， 不带 drop 语句"></a>备份数据库， 不带 drop 语句</h2><p>默认备份的类似于：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Table structure for table `db_sms_auth_code`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `db_sms_auth_code`;</span><br><span class="line"><span class="comment">/*!40101 SET @saved_cs_client     = @@character_set_client */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET character_set_client = utf8 */</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `db_sms_auth_code` (</span><br><span class="line">  `CID` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `TEXT` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `CODE` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `MOBILE_NO` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `CREATE_DATE` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `STATUS` <span class="type">int</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `PR_ID` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`CID`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 ROW_FORMAT<span class="operator">=</span><span class="keyword">DYNAMIC</span> COMMENT<span class="operator">=</span><span class="string">&#x27;短信校验码&#x27;</span>;</span><br><span class="line"><span class="comment">/*!40101 SET character_set_client = @saved_cs_client */</span>;</span><br></pre></td></tr></table></figure><p>考虑到安全问题，不想要 DROP 语句，可以增加 <code>--skip-add-drop-table</code> 参数</p><h2 id="拆分-insert-语句"><a href="#拆分-insert-语句" class="headerlink" title="拆分 insert 语句"></a>拆分 insert 语句</h2><p>默认 mysqldump 备份的文件会在一条 insert 语句中插入很多条数据，这样可以缩小 sql 文件的大小，还能增加导入时候的速度，但是在某些场景下，我们还是希望一条 insert 对应一条数据。那么可以增加 <code>--skip-extended-insert</code> 参数</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202402071656925.png"></p><h2 id="备份脚本"><a href="#备份脚本" class="headerlink" title="备份脚本"></a>备份脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -euo pipefail</span><br><span class="line"></span><br><span class="line">MYSQL_HOST=<span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">MYSQL_USER=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">MYSQL_PASSWORD=<span class="string">&#x27;com.012&#x27;</span></span><br><span class="line">MYSQL_PORT=<span class="string">&#x27;3306&#x27;</span></span><br><span class="line">SQL_PATH=<span class="string">&#x27;/tmp/backup.sql.gz&#x27;</span></span><br><span class="line">EXCLUDE_DATABASES=<span class="string">&#x27;information_schema|performance_schema|sys|mysql&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql -u<span class="variable">$&#123;MYSQL_USER&#125;</span> -p<span class="variable">$&#123;MYSQL_PASSWORD&#125;</span> -h<span class="variable">$&#123;MYSQL_HOST&#125;</span> -P<span class="variable">$&#123;MYSQL_PORT&#125;</span> -N -e <span class="string">&quot;show databases;&quot;</span> | grep -Ev <span class="variable">$&#123;EXCLUDE_DATABASES&#125;</span> | xargs mysqldump -u<span class="variable">$&#123;MYSQL_USER&#125;</span> -p<span class="variable">$&#123;MYSQL_PASSWORD&#125;</span> -h<span class="variable">$&#123;MYSQL_HOST&#125;</span> -P<span class="variable">$&#123;MYSQL_PORT&#125;</span> --single-transaction --master-data=2 --triggers --routines --events --hex-blob --skip-tz-utc --databases | gzip &gt; <span class="variable">$&#123;SQL_PATH&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注： gz 文件解压： <code>gzip -d backup.sql.gz</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes中使用Prometheus对集群节点做监控</title>
      <link href="/posts/61baae6f/"/>
      <url>/posts/61baae6f/</url>
      
        <content type="html"><![CDATA[<p>正常情况下使用 Prometheus 对机器做监控，比如监控 CPU、内存、磁盘等信息， 都是在机器上安装一个 node exporter， 然后将 metrics 接入到 Prometheus 中。在 k8s 环境下， 我们可以使用 k8s 来管理， 实现自动化监控。</p><p>node exporter 是针对主机节点的， 需要在每台 node 节点上安装， 那么 daemonset 控制器是最合理的选择。 网络使用 Host Network 模式， 在主机上直接暴露一个端口。</p><h2 id="部署-node-exporter"><a href="#部署-node-exporter" class="headerlink" title="部署 node exporter"></a>部署 node exporter</h2><p>使用 yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostPID:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">hostIPC:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">node-exporter</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">prom/node-exporter:v1.3.1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9100</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">0.15</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--path.procfs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/host/proc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--path.sysfs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/host/sys</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--collector.filesystem.ignored-mount-points</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;&quot;^/(sys|proc|dev|host|etc)($|/)&quot;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;--web.listen-address=:9100&#x27;</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/host/dev</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">proc</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/host/proc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/host/sys</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rootfs</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/rootfs</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">        <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">proc</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/proc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/dev</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sys</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/sys</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rootfs</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><h2 id="配置-prometheus"><a href="#配置-prometheus" class="headerlink" title="配置 prometheus"></a>配置 prometheus</h2><p>关于 Prometheus 标签处理， 可以看 <a href="/posts/prometheus_tag">这篇文章</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">web.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    basic_auth_users:</span></span><br><span class="line"><span class="string">      admin: $2y$05$UKSS18ztdsUNoEuXYScr2OE1TCMe1hWnmD6JuwUi/uPTJayHIakae</span></span><br><span class="line"><span class="string"></span>  <span class="attr">prometheus.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    global:</span></span><br><span class="line"><span class="string">      scrape_interval:     15s</span></span><br><span class="line"><span class="string">      evaluation_interval: 15s</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      # 全局标签</span></span><br><span class="line"><span class="string">      external_labels:</span></span><br><span class="line"><span class="string">        env: prod</span></span><br><span class="line"><span class="string">        dept: ops</span></span><br><span class="line"><span class="string">        project: datong</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">scrape_configs:</span></span><br><span class="line">    <span class="comment"># 此处省略掉一部分JOB</span></span><br><span class="line">      <span class="comment"># 自动发现集群的节点</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-node&#x27;</span></span><br><span class="line">        <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">relabel_configs:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">          <span class="attr">regex:</span> <span class="string">&#x27;(.*):10250&#x27;</span></span><br><span class="line">          <span class="attr">replacement:</span> <span class="string">&#x27;$&#123;1&#125;:9100&#x27;</span></span><br><span class="line">          <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">          <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br></pre></td></tr></table></figure><p>这里是利用了 Prometheus 的元数据，将 kubelet 的地址更换成了 node exporter 的地址， 端口换成了 9100 来实现自动化监控的。</p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> prometheus </tag>
            
            <tag> Prometheus </tag>
            
            <tag> node_exporter </tag>
            
            <tag> monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux内核参数</title>
      <link href="/posts/1b957a56/"/>
      <url>/posts/1b957a56/</url>
      
        <content type="html"><![CDATA[<h2 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h2><h3 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h3><h4 id="修改-proc-目录"><a href="#修改-proc-目录" class="headerlink" title="修改&#x2F;proc 目录"></a>修改&#x2F;proc 目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2048 &gt; /proc/sys/net/core/somaxconn</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;proc&#x2F;sys&#x2F; 目录是 Linux 内核启动后生成的伪目录，其目录下的 net 文件夹中存放了当前系统中生效的所有内核参数、目录树结构与参数的完整名称相关，如 <code>net.ipv4.tcp_tw_recycle</code>，它对应的文件是 &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;tcp_tw_recycle，文件的内容就是参数值。</p></blockquote><h4 id="sysctl-命令修改"><a href="#sysctl-命令修改" class="headerlink" title="sysctl 命令修改"></a>sysctl 命令修改</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.ipv4.tcp_tw_recycle=<span class="string">&quot;0&quot;</span></span><br></pre></td></tr></table></figure><h3 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">net.core.somaxconn = 2048</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2 id="查看内核参数"><a href="#查看内核参数" class="headerlink" title="查看内核参数"></a>查看内核参数</h2><h3 id="查看-proc-目录"><a href="#查看-proc-目录" class="headerlink" title="查看&#x2F;proc&#x2F;目录"></a>查看&#x2F;proc&#x2F;目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/sys/net/ipv4/tcp_tw_recycle</span><br></pre></td></tr></table></figure><h3 id="sysctl-查看"><a href="#sysctl-查看" class="headerlink" title="sysctl 查看"></a>sysctl 查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -a                            <span class="comment"># 查看所有</span></span><br><span class="line">sysctl -n net.ipv4.ip_forward        <span class="comment"># 查看单个</span></span><br></pre></td></tr></table></figure><h2 id="常用内核参数"><a href="#常用内核参数" class="headerlink" title="常用内核参数"></a>常用内核参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vm.overcommit_memory = 1</span><br><span class="line">net.ipv4.ip_forward = 1                    <span class="comment">#允许ip转发</span></span><br><span class="line">net.ipv4.icmp_echo_ignore_all=1            <span class="comment"># 不允许ping</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译安装PHP7.2</title>
      <link href="/posts/a03938f2/"/>
      <url>/posts/a03938f2/</url>
      
        <content type="html"><![CDATA[<p>本文记录一下在 Linux 下编译安装 PHP 过程，没有特殊需求的话，使用 yum 源安装更方便。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="准备源码包"><a href="#准备源码包" class="headerlink" title="准备源码包"></a>准备源码包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.php.net/distributions/php-7.2.28.tar.bz2</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/exec</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd www -s <span class="string">&#x27;/sbin/nologin&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="安装编译依赖"><a href="#安装编译依赖" class="headerlink" title="安装编译依赖"></a>安装编译依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libxml2 libxml2-dev libcurl4-openssl-dev libfreetype6-dev libjpeg-dev libicu-dev libxslt1-dev openssl</span><br><span class="line"></span><br><span class="line">yum install -y libxml2-devel libcurl-devel libjpeg libpng freetype libjpeg-devel libpng-devel freetype-devel libicu-devel libxslt-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># ldap扩展需要安装libldap-dev这个包</span></span><br></pre></td></tr></table></figure><h2 id="编译-PHP7-2"><a href="#编译-PHP7-2" class="headerlink" title="编译 PHP7.2"></a>编译 PHP7.2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/data/exec/php \</span><br><span class="line">    --with-config-file-path=/data/exec/php/etc \</span><br><span class="line">    --with-config-file-scan-dir=/data/exec/php/conf.d \</span><br><span class="line">    --enable-fpm --with-fpm-user=www --with-fpm-group=www \</span><br><span class="line">    --enable-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \</span><br><span class="line">    --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir \</span><br><span class="line">    --with-zlib --with-libxml-dir --enable-xml --disable-rpath \</span><br><span class="line">    --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization \</span><br><span class="line">    --with-curl --enable-mbregex --enable-mbstring --enable-intl --enable-ftp --with-gd \</span><br><span class="line">    --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip \</span><br><span class="line">    --enable-soap --with-gettext --enable-opcache --with-xsl</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="测试-PHP-工作"><a href="#测试-PHP-工作" class="headerlink" title="测试 PHP 工作"></a>测试 PHP 工作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&lt;?php phpinfo(); ?&gt;&quot;</span> &gt;&gt; index.php</span><br></pre></td></tr></table></figure><h2 id="其他常用操作"><a href="#其他常用操作" class="headerlink" title="其他常用操作"></a>其他常用操作</h2><h3 id="查看编译参数"><a href="#查看编译参数" class="headerlink" title="查看编译参数"></a>查看编译参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -i |grep configure</span><br></pre></td></tr></table></figure><h3 id="查看当前生效的配置文件"><a href="#查看当前生效的配置文件" class="headerlink" title="查看当前生效的配置文件"></a>查看当前生效的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php --ini</span><br></pre></td></tr></table></figure><h3 id="查看当前生效的扩展"><a href="#查看当前生效的扩展" class="headerlink" title="查看当前生效的扩展"></a>查看当前生效的扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux查看系统硬件信息</title>
      <link href="/posts/6a0f629b/"/>
      <url>/posts/6a0f629b/</url>
      
        <content type="html"><![CDATA[<h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>查看 cpu 型号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">&quot;model name&quot;</span></span><br></pre></td></tr></table></figure><p>查看 CPU 核心数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">&quot;cpu cores&quot;</span></span><br></pre></td></tr></table></figure><p>查看 cpu 支不支持 aes(结果有 aes 即为支持)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -m1 -o aes /proc/cpuinfo</span><br></pre></td></tr></table></figure><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>查看内存大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/meminfo |grep MemTotal</span><br></pre></td></tr></table></figure><p>查看内存型号，插槽</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmidecode -t memory | grep <span class="string">&quot;Size:&quot;</span></span><br></pre></td></tr></table></figure><h2 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h2><p>查看硬盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l |grep Disk</span><br></pre></td></tr></table></figure><p>查看挂载、分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsblk</span><br></pre></td></tr></table></figure><p>查看软 raid 状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/mdstat</span><br></pre></td></tr></table></figure><h2 id="PCI-设备"><a href="#PCI-设备" class="headerlink" title="PCI 设备"></a>PCI 设备</h2><p>查看 pci 设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci -tv</span><br></pre></td></tr></table></figure><h2 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h2><p>查看网卡 crc 校验错误数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ethtool -S ens1f1 | grep rx_crc_errors:</span><br></pre></td></tr></table></figure><p>如果数量一致增大，就是有问题</p><p>dmesg 可以查看网卡 down 和 up 的情况</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 硬件信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LinuxMint配置记录</title>
      <link href="/posts/sik5eq/"/>
      <url>/posts/sik5eq/</url>
      
        <content type="html"><![CDATA[<p>文章基于 LinuxMint 22 版本， 对应的 Ubuntu 版本是 24.04</p><h2 id="修改-grub-启动延迟"><a href="#修改-grub-启动延迟" class="headerlink" title="修改 grub 启动延迟"></a>修改 grub 启动延迟</h2><p>默认延迟 30s，太久了</p><p>搜索到的文章是修改 <code>/etc/default/grub</code> 里面的 <code>GRUB_TIMEOUT</code> 值，然后重新生成 grub 配置，我测试不生效。应该增加 <code>GRUB_RECORDFAIL_TIMEOUT=3</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新grub配置文件</span></span><br><span class="line">sudo update-grub</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="comment"># sudo grub-mkconfig –o /etc/grub2.cfg</span></span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><h3 id="安装常用的包"><a href="#安装常用的包" class="headerlink" title="安装常用的包"></a>安装常用的包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br><span class="line">sudo apt install -y libmysqlclient-dev build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev lrzsz</span><br></pre></td></tr></table></figure><h3 id="当前用户免-sudo-密码"><a href="#当前用户免-sudo-密码" class="headerlink" title="当前用户免 sudo 密码"></a>当前用户免 sudo 密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /etc/sudoers.d/iuxt &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">%sudo   ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br><span class="line"><span class="string">$USER   ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="git-配置"><a href="#git-配置" class="headerlink" title="git 配置"></a>git 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y git git-lfs</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> ~/.gitconfig &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[user]</span><br><span class="line">        name = zhanglikun</span><br><span class="line">        email = x@zahui.fan</span><br><span class="line">        signingkey = zhanglikun</span><br><span class="line">[credential]</span><br><span class="line">        helper = store</span><br><span class="line">[core]</span><br><span class="line">        autocrlf = <span class="literal">false</span></span><br><span class="line">        quotepath = <span class="literal">false</span></span><br><span class="line">[init]</span><br><span class="line">        defaultBranch = master</span><br><span class="line">[pull]</span><br><span class="line">        rebase = <span class="literal">false</span></span><br><span class="line">[commit]</span><br><span class="line">        gpgsign = <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="zsh-配置"><a href="#zsh-配置" class="headerlink" title="zsh 配置"></a>zsh 配置</h2><h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y zsh</span><br></pre></td></tr></table></figure><h3 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh my zsh"></a>安装 oh my zsh</h3><p><a href="https://ohmyz.sh/#install">https://ohmyz.sh/#install</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改主题配置</span></span><br><span class="line">sed -i <span class="string">&#x27;s#^ZSH_THEME=.*#ZSH_THEME=&quot;example&quot;#g&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="安装一些插件"><a href="#安装一些插件" class="headerlink" title="安装一些插件"></a>安装一些插件</h3><p><a href="https://github.com/zsh-users/zsh-autosuggestions">https://github.com/zsh-users/zsh-autosuggestions</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y fzf</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">omz plugin <span class="built_in">enable</span> z git sudo zsh-autosuggestions zsh-syntax-highlighting fzf</span><br></pre></td></tr></table></figure><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h3 id="修改默认编辑器"><a href="#修改默认编辑器" class="headerlink" title="修改默认编辑器"></a>修改默认编辑器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo update-alternatives --config editor</span></span><br><span class="line">sudo <span class="built_in">ln</span> -sf /usr/bin/vim.basic /etc/alternatives/editor</span><br><span class="line"></span><br><span class="line"><span class="comment"># select-editor</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;SELECTED_EDITOR=&quot;/usr/bin/vim.basic&quot;&#x27;</span> &gt; ~/.selected_editor</span><br></pre></td></tr></table></figure><h3 id="安装-vim-plug-插件管理工具"><a href="#安装-vim-plug-插件管理工具" class="headerlink" title="安装 vim plug 插件管理工具"></a>安装 vim plug 插件管理工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> ~/.vimrc &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; On-demand loading</span></span><br><span class="line"><span class="string">Plug &#x27;preservim/nerdtree&#x27;, &#123; &#x27;on&#x27;: &#x27;NERDTreeToggle&#x27; &#125;</span></span><br><span class="line"><span class="string">Plug &#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="string">Plug &#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">call plug#end()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set paste</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; nerdtree</span></span><br><span class="line"><span class="string">let NERDTreeWinPos=&quot;</span>left<span class="string">&quot;</span></span><br><span class="line"><span class="string">noremap &lt;F8&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span></span><br><span class="line"><span class="string">let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> airline</span><br><span class="line"><span class="built_in">set</span> laststatus=2  <span class="string">&quot;永远显示状态栏</span></span><br><span class="line"><span class="string">let g:airline_powerline_fonts = 1  &quot;</span>支持 powerline 字体</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1 &quot;显示窗口tab和buffer</span></span><br><span class="line"><span class="built_in">let</span> g:airline_theme=<span class="string">&#x27;molokai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&#x27;g:airline_symbols&#x27;</span>)</span><br><span class="line"><span class="built_in">let</span> g:airline_symbols = &#123;&#125;</span><br><span class="line">endif</span><br><span class="line"><span class="built_in">let</span> g:airline_left_sep = <span class="string">&#x27;▶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_left_alt_sep = <span class="string">&#x27;❯&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_sep = <span class="string">&#x27;◀&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_right_alt_sep = <span class="string">&#x27;❮&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.linenr = <span class="string">&#x27;¶&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:airline_symbols.branch = <span class="string">&#x27;⎇&#x27;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>进入 vim 命令界面, 输入 <code>:PlugInstall</code> 安装插件</p><h2 id="常用环境安装"><a href="#常用环境安装" class="headerlink" title="常用环境安装"></a>常用环境安装</h2><p>安装 golang python nodejs 查看 <a href="/posts/5e168f7e">快速搭建环境记录</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一些配置</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker &amp;&amp; sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span>,</span><br><span class="line">  <span class="string">&quot;iptables&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前用户执行docker命令，需要注销用户</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优雅地给正在运行的MySQL添加从库</title>
      <link href="/posts/86a9c8f5/"/>
      <url>/posts/86a9c8f5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前写过一篇 <a href="/posts/265ea5f9">MySQL主从同步配置</a> 给 MySQL 配置从库，在主库在使用的情况下，需要将主库进行禁止写入操作，然后再导出导入，如果库比较大的话， 会对业务造成一定的影响。这篇文章主要介绍如何不停机进行添加从库。</p><h2 id="主库操作"><a href="#主库操作" class="headerlink" title="主库操作"></a>主库操作</h2><h3 id="开启-binlog"><a href="#开启-binlog" class="headerlink" title="开启 binlog"></a>开启 binlog</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server-id=1</span><br></pre></td></tr></table></figure><p>这里注意 <code>server-id</code> 主从不能一样, 配置完成重启 mysql</p><h3 id="创建用于同步的用户账号"><a href="#创建用于同步的用户账号" class="headerlink" title="创建用于同步的用户账号"></a>创建用于同步的用户账号</h3><p>登陆数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -hlocalhost -uroot -ppassword</span><br></pre></td></tr></table></figure><p>创建用户并授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><p>授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> REPLICATION SLAVE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="导出数据库-sql"><a href="#导出数据库-sql" class="headerlink" title="导出数据库 sql"></a>导出数据库 sql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -ppassword -hlocalhost -P3306 --master-data=2 --single-transaction --skip-tz-utc --all-databases &gt; /tmp/db.sql</span><br></pre></td></tr></table></figure><blockquote><p>–master-data 默认值为 1，会将 <code>CHANGE MASTER TO</code> 语句写入到 sql 文件中，如果将 master-data 设置为 2，则会以注释写入到 sql 文件中。<br>–single-transaction 在 dump 过程中保证数据的一致性，这个选项对 InnoDB 的数据表很有用，且不会锁表。但是这个不能保证 MyISAM 表和 MEMORY 表的数据一致性。</p></blockquote><h2 id="从库操作"><a href="#从库操作" class="headerlink" title="从库操作"></a>从库操作</h2><h3 id="导入数据库-sql"><a href="#导入数据库-sql" class="headerlink" title="导入数据库 sql"></a>导入数据库 sql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -ppassword -hlocalhost -P3306 &lt; /tmp/db.sql</span><br></pre></td></tr></table></figure><h3 id="配置从库"><a href="#配置从库" class="headerlink" title="配置从库"></a>配置从库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">  MASTER_HOST<span class="operator">=</span><span class="string">&#x27;10.91.15.131&#x27;</span>,</span><br><span class="line">  MASTER_USER<span class="operator">=</span><span class="string">&#x27;repl&#x27;</span>,</span><br><span class="line">  MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">  MASTER_PORT<span class="operator">=</span><span class="number">3306</span>,</span><br><span class="line">  MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;binlog.000008&#x27;</span>,              <span class="comment">-- 这两个选项在 head -n 20 db.sql 就能看到</span></span><br><span class="line">  MASTER_LOG_POS<span class="operator">=</span><span class="number">22950585</span>,                      <span class="comment">-- 这两个选项在 head -n 20 db.sql 就能看到</span></span><br><span class="line">  MASTER_HEARTBEAT_PERIOD<span class="operator">=</span><span class="number">180</span>,</span><br><span class="line">  MASTER_CONNECT_RETRY<span class="operator">=</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="启动从库"><a href="#启动从库" class="headerlink" title="启动从库"></a>启动从库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> slave;</span><br><span class="line"><span class="keyword">show</span> slave status \G;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制安装MySQL5.7</title>
      <link href="/posts/3b23b5cb/"/>
      <url>/posts/3b23b5cb/</url>
      
        <content type="html"><![CDATA[<p>如有特殊需求需要编译安装 MySQL 请看 <a href="/posts/b670229a">编译安装MySQL5.7</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="卸载系统中的-MySQL-或-mariadb"><a href="#卸载系统中的-MySQL-或-mariadb" class="headerlink" title="卸载系统中的 MySQL 或 mariadb"></a>卸载系统中的 MySQL 或 mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br><span class="line">rpm -qa | grep mariadb</span><br><span class="line">yum remove xxx</span><br></pre></td></tr></table></figure><h3 id="下载二进制安装包"><a href="#下载二进制安装包" class="headerlink" title="下载二进制安装包"></a>下载二进制安装包</h3><p><a href="https://dev.mysql.com/downloads/mysql/5.7.html#downloads">MySQL官网</a></p><p>选择操作系统为 <code>Linux-Generic</code></p><p>选择下载文件名为：<code>mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz</code></p><p>当然也可以用 wget 直接下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin -r mysql</span><br></pre></td></tr></table></figure><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><p>为了避免执行 mysql 命令报错 <code>ibncurses.so.5</code> 或者 <code>libnuma.so.1</code> 找不到</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">CentOS</button><button type="button" class="tab">Ubuntu</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ncurses-devel numactl-libs</span><br></pre></td></tr></table></figure><p>注意： CentOS 9 或 RHEL 9 如果找不到这个库，可以参考：<a href="/posts/lv23gkql/">解决MySQL 5.7在Redhat 9中启动报错：libncurses.so.5和libtinfo.so.5缺失问题</a></p></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libncurses5 libnuma1 libaio1</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="设置安装路径"><a href="#设置安装路径" class="headerlink" title="设置安装路径"></a>设置安装路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> BASE_DIR=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line"><span class="built_in">export</span> DATA_DIR=<span class="string">&quot;/data/mysql&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xf mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz -C /usr/local/</span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$&#123;BASE_DIR&#125;</span>-5.7.39-linux-glibc2.12-x86_64/ <span class="variable">$&#123;BASE_DIR&#125;</span></span><br></pre></td></tr></table></figure><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><h3 id="创建数据保存目录"><a href="#创建数据保存目录" class="headerlink" title="创建数据保存目录"></a>创建数据保存目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;DATA_DIR&#125;</span>/&#123;binlog,data,logs,redolog,relaylog,tmp,undolog&#125;</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;BASE_DIR&#125;</span>/etc</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;DATA_DIR&#125;</span></span><br><span class="line"><span class="built_in">touch</span> <span class="variable">$&#123;DATA_DIR&#125;</span>/logs/error_mysqld.log</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;DATA_DIR&#125;</span>/logs/error_mysqld.log</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;BASE_DIR&#125;</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;BASE_DIR&#125;</span>-5.7.39-linux-glibc2.12-x86_64/</span><br></pre></td></tr></table></figure><h3 id="initialize"><a href="#initialize" class="headerlink" title="initialize"></a>initialize</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;BASE_DIR&#125;</span>/bin/mysqld --initialize --user=mysql --basedir=<span class="variable">$&#123;BASE_DIR&#125;</span> --datadir=<span class="variable">$&#123;DATA_DIR&#125;</span>/data</span><br><span class="line"><span class="comment"># 控制台会输出一个临时密码，需要记录一下</span></span><br></pre></td></tr></table></figure><h2 id="配置文件与服务"><a href="#配置文件与服务" class="headerlink" title="配置文件与服务"></a>配置文件与服务</h2><h3 id="创建最小化配置文件"><a href="#创建最小化配置文件" class="headerlink" title="创建最小化配置文件"></a>创建最小化配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;BASE_DIR&#125;</span>/etc/my.cnf &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">## MySQL 5.7 Configuration File</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## General</span></span><br><span class="line"><span class="string">user                                   = mysql</span></span><br><span class="line"><span class="string">bind_address                           = 0.0.0.0</span></span><br><span class="line"><span class="string">port                                   = 3306</span></span><br><span class="line"><span class="string">basedir                                = $&#123;BASE_DIR&#125;/</span></span><br><span class="line"><span class="string">datadir                                = $&#123;DATA_DIR&#125;/data</span></span><br><span class="line"><span class="string">tmpdir                                 = $&#123;DATA_DIR&#125;/tmp</span></span><br><span class="line"><span class="string">socket                                 = $&#123;DATA_DIR&#125;/logs/mysql.sock</span></span><br><span class="line"><span class="string">pid-file                               = $&#123;DATA_DIR&#125;/logs/mysqld.pid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">character_set_server                   = utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">skip-symbolic-links</span></span><br><span class="line"><span class="string">skip_name_resolve                      = ON</span></span><br><span class="line"><span class="string">skip_external_locking                  = ON</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">performance_schema                     = ON      # default ON</span></span><br><span class="line"><span class="string">performance-schema-instrument          = &#x27;memory/%=ON&#x27;</span></span><br><span class="line"><span class="string">#lower_case_table_names                 = 0      # default 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### Storage Engines</span></span><br><span class="line"><span class="string">default_storage_engine                 = InnoDB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## InnoDB</span></span><br><span class="line"><span class="string">innodb_log_group_home_dir              = $&#123;DATA_DIR&#125;/redolog/</span></span><br><span class="line"><span class="string">innodb_log_file_size                   = 256M</span></span><br><span class="line"><span class="string">innodb_log_files_in_group              = 2</span></span><br><span class="line"><span class="string">innodb_log_buffer_size                 = 16M</span></span><br><span class="line"><span class="string">innodb_rollback_segments               = 128     # defautl 128</span></span><br><span class="line"><span class="string">innodb_undo_directory                  = $&#123;DATA_DIR&#125;/undolog/</span></span><br><span class="line"><span class="string">innodb_open_files                      = 4000</span></span><br><span class="line"><span class="string">innodb_thread_concurrency              = 32</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit         = 1</span></span><br><span class="line"><span class="string">innodb_flush_log_at_timeout            = 1       # defautl 1, when innodb_flush_log_at_trx_commit = 0 or 2</span></span><br><span class="line"><span class="string">innodb_purge_threads                   = 4</span></span><br><span class="line"><span class="string">innodb_print_all_deadlocks             = ON</span></span><br><span class="line"><span class="string">innodb_max_dirty_pages_pct             = 70</span></span><br><span class="line"><span class="string">innodb_lock_wait_timeout               = 50</span></span><br><span class="line"><span class="string">innodb_flush_method                    = O_DIRECT</span></span><br><span class="line"><span class="string">innodb_old_blocks_time                 = 1000    # since 5.6.6 default 1000</span></span><br><span class="line"><span class="string">innodb_io_capacity                     = 600     # default 200</span></span><br><span class="line"><span class="string">innodb_io_capacity_max                 = 2000    # default 2000</span></span><br><span class="line"><span class="string">innodb_lru_scan_depth                  = 1024    # default 1024</span></span><br><span class="line"><span class="string">innodb_read_io_threads                 = 8</span></span><br><span class="line"><span class="string">innodb_write_io_threads                = 8</span></span><br><span class="line"><span class="string">innodb_buffer_pool_load_at_startup     = ON</span></span><br><span class="line"><span class="string">innodb_buffer_pool_dump_at_shutdown    = ON</span></span><br><span class="line"><span class="string">innodb_buffer_pool_filename            = ib_buffer_pool  # default ib_buffer_pool</span></span><br><span class="line"><span class="string">innodb_sort_buffer_size                = 64M     # default 1M , 64K - 64M , for change index</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">innodb_buffer_pool_dump_pct            = 40</span></span><br><span class="line"><span class="string">innodb_page_cleaners                   = 16</span></span><br><span class="line"><span class="string">innodb_undo_log_truncate               = ON</span></span><br><span class="line"><span class="string">innodb_max_undo_log_size               = 2G</span></span><br><span class="line"><span class="string">innodb_purge_rseg_truncate_frequency   = 128</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Gtid</span></span><br><span class="line"><span class="string">#gtid_mode                              = ON</span></span><br><span class="line"><span class="string">#enforce_gtid_consistency               = ON</span></span><br><span class="line"><span class="string">#binlog_gtid_simple_recovery            = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Replication</span></span><br><span class="line"><span class="string">server_id                              = 101</span></span><br><span class="line"><span class="string">log_bin                                = $&#123;DATA_DIR&#125;/binlog/mysql_bin</span></span><br><span class="line"><span class="string">expire_logs_days                       = 7</span></span><br><span class="line"><span class="string">binlog_format                          = ROW</span></span><br><span class="line"><span class="string">binlog_row_image                       = noblob  # default full</span></span><br><span class="line"><span class="string">#innodb_autoinc_lock_mode               = 2      # default 1</span></span><br><span class="line"><span class="string">binlog_rows_query_log_events           = 1</span></span><br><span class="line"><span class="string">max_binlog_size                        = 500M</span></span><br><span class="line"><span class="string">binlog_cache_size                      = 1M</span></span><br><span class="line"><span class="string">sync_binlog                            = 1</span></span><br><span class="line"><span class="string">master_info_repository                 = TABLE</span></span><br><span class="line"><span class="string">relay_log_info_repository              = TABLE</span></span><br><span class="line"><span class="string">skip-slave-start                       = 1</span></span><br><span class="line"><span class="string">relay_log                              = $&#123;DATA_DIR&#125;/relaylog/relay_log</span></span><br><span class="line"><span class="string">max_relay_log_size                     = 500M   # default 0, use max_binlog_size</span></span><br><span class="line"><span class="string">log_slave_updates                      = ON     # default OFF</span></span><br><span class="line"><span class="string">slave_transaction_retries              = 128</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## MTS</span></span><br><span class="line"><span class="string">relay_log_recovery                     = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Logging</span></span><br><span class="line"><span class="string">log_output                             = FILE</span></span><br><span class="line"><span class="string">slow_query_log                         = ON</span></span><br><span class="line"><span class="string">slow_query_log_file                    = $&#123;DATA_DIR&#125;/logs/slow_mysqld.log</span></span><br><span class="line"><span class="string">log_queries_not_using_indexes          = OFF     # default OFF</span></span><br><span class="line"><span class="string">log_throttle_queries_not_using_indexes = 10      # default 0</span></span><br><span class="line"><span class="string">min_examined_row_limit                 = 0       # default 0</span></span><br><span class="line"><span class="string">log_slow_admin_statements              = ON</span></span><br><span class="line"><span class="string">log_slow_slave_statements              = ON</span></span><br><span class="line"><span class="string">long_query_time                        = 1</span></span><br><span class="line"><span class="string">#log-short-format                       = 0</span></span><br><span class="line"><span class="string">log_error                              = $&#123;DATA_DIR&#125;/logs/error_mysqld.log</span></span><br><span class="line"><span class="string">general_log                            = OFF</span></span><br><span class="line"><span class="string">general_log_file                       = $&#123;DATA_DIR&#125;/logs/general_mysqld.log</span></span><br><span class="line"><span class="string">log_timestamps                         = system</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Index</span></span><br><span class="line"><span class="string">ft_min_word_len                        = 4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld_safe]</span></span><br><span class="line"><span class="string">open_files_limit                       = 65535</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">no_auto_rehash</span></span><br><span class="line"><span class="string">prompt                                 = &quot;MySQL [\\d] &gt; &quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqldump]</span></span><br><span class="line"><span class="string">quick</span></span><br><span class="line"><span class="string">max_allowed_packet                     = 256M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqlhotcopy]</span></span><br><span class="line"><span class="string">interactive_timeout</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">socket                                 = $&#123;DATA_DIR&#125;/logs/mysql.sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>做软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/my.cnf&#123;,.bak&#125;</span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$&#123;BASE_DIR&#125;</span>/etc/my.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><h3 id="生成-systemd-配置"><a href="#生成-systemd-配置" class="headerlink" title="生成 systemd 配置"></a>生成 systemd 配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/mysql.service &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=MySQL Server</span></span><br><span class="line"><span class="string">Documentation=man:mysqld(8)</span></span><br><span class="line"><span class="string">Documentation=https://dev.mysql.com/doc/refman/en/using-systemd.html</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">After=syslog.target</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">User=mysql</span></span><br><span class="line"><span class="string">Group=mysql</span></span><br><span class="line"><span class="string">ExecStart=$&#123;BASE_DIR&#125;/bin/mysqld --defaults-file=/etc/my.cnf</span></span><br><span class="line"><span class="string">LimitNOFILE = 5000</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now mysql</span><br></pre></td></tr></table></figure><h2 id="优化工作"><a href="#优化工作" class="headerlink" title="优化工作"></a>优化工作</h2><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$( grep <span class="string">&quot;<span class="variable">$&#123;BASE_DIR&#125;</span>/bin&quot;</span> /etc/profile | wc -l )</span>&quot;</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;export PATH=\$PATH:<span class="variable">$&#123;BASE_DIR&#125;</span>/bin&quot;</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;PATH变量已添加&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一次登录需要使用root@localhost登录，密码为上面生成的临时密码</span></span><br><span class="line">mysql -uroot -hlocalhost -p</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>;</span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用keepalived完成LVS高可用</title>
      <link href="/posts/675d47a9/"/>
      <url>/posts/675d47a9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有了 keepalived 可以不用执行 ipvsadm 了， 并且可以实现自动剔除节点，还可以两台 Director 做高可用。</p></blockquote><p>手动配置 LVS 请看 <a href="/posts/5fdc91d7">内核级负载均衡 LVS DR模式 部署记录</a></p><p>另见：<a href="/posts/0cebb8ae">使用Keepalived来实现Nginx高可用</a></p><p>规划：</p><table><thead><tr><th>机器</th><th>IP</th></tr></thead><tbody><tr><td>VIP</td><td>10.0.0.8</td></tr><tr><td>director</td><td>10.0.0.40</td></tr><tr><td>realserver1</td><td>10.0.0.42</td></tr><tr><td>realserver2</td><td>10.0.0.43</td></tr><tr><td>网卡 interface</td><td>eth0</td></tr></tbody></table><h2 id="单台-Director-Server"><a href="#单台-Director-Server" class="headerlink" title="单台 Director Server"></a>单台 Director Server</h2><p>keepalived 配置：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.8/24 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">virtual_server 10.0.0.8 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    real_server 10.0.0.42 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.0.0.43 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="两台-Director-Server-做主备"><a href="#两台-Director-Server-做主备" class="headerlink" title="两台 Director Server 做主备"></a>两台 Director Server 做主备</h2><table><thead><tr><th>机器</th><th>IP</th></tr></thead><tbody><tr><td>VIP</td><td>10.0.0.8</td></tr><tr><td>director 1</td><td>10.0.0.40</td></tr><tr><td>director 2</td><td>10.0.0.41</td></tr><tr><td>realserver1</td><td>10.0.0.42</td></tr><tr><td>realserver2</td><td>10.0.0.43</td></tr><tr><td>网卡 interface</td><td>eth0</td></tr></tbody></table><blockquote><p>抢占式 和 非抢占式的区别： 比如 master1 默认的权重（priority）高，vip 当前在 master1 上， master1 挂掉后 vip 会飘到 master2 上，那么如果 master1 恢复正常了，抢占式会重新将 vip 抢过来，再次绑定到 master1 上，非抢占式则保持在 master2 上，除非 master2 也出问题。</p></blockquote><h3 id="Director-Server-1"><a href="#Director-Server-1" class="headerlink" title="Director Server 1"></a>Director Server 1</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP                    # 非抢占式所有节点都需要是BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 110                    # 权重</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt                       # 配置为非抢占式</span><br><span class="line">    unicast_src_ip 10.0.0.40        # 本机的IP</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        10.0.0.41                   # 其他Keepalived机器的IP，可以写多个</span><br><span class="line">    &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.8/24 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">virtual_server 10.0.0.8 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    real_server 10.0.0.42 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.0.0.43 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Director-Server-2"><a href="#Director-Server-2" class="headerlink" title="Director Server 2"></a>Director Server 2</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    unicast_src_ip 10.0.0.41            # 本机的IP</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        10.0.0.40                       # 其他Keepalived机器的IP，可以写多个</span><br><span class="line">    &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.8/24 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">virtual_server 10.0.0.8 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    real_server 10.0.0.42 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.0.0.43 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Real-Server-需要做的配置"><a href="#Real-Server-需要做的配置" class="headerlink" title="Real Server 需要做的配置"></a>Real Server 需要做的配置</h2><p>LVS 的 DR 模式 需要对后端服务器做改造, 添加虚拟 ip， 并配置此 ip 不响应 ARP 请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> add ipvs0 <span class="built_in">type</span> dummy</span><br><span class="line">ip addr add 10.0.0.8/32 dev ipvs0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不响应ARP请求, 修改内核参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/conf/ipvs0/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /proc/sys/net/ipv4/conf/ipvs0/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Network </tag>
            
            <tag> LoadBalance </tag>
            
            <tag> keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> lvs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Containerd的管理工具</title>
      <link href="/posts/be10bdea/"/>
      <url>/posts/be10bdea/</url>
      
        <content type="html"><![CDATA[<p>如果你对 Docker 命令比较熟悉， 可以考虑使用 nerdctl 来管理 containerd，和 docker 命令类似：<a href="https://github.com/containerd/nerdctl">https://github.com/containerd/nerdctl</a></p><h2 id="命令对比"><a href="#命令对比" class="headerlink" title="命令对比"></a>命令对比</h2><table><thead><tr><th align="left">命令</th><th align="left">docker</th><th align="left">crictl（推荐）</th><th align="left">ctr</th></tr></thead><tbody><tr><td align="left">查看容器列表</td><td align="left">docker ps</td><td align="left">crictl ps</td><td align="left">ctr -n k8s.io c ls</td></tr><tr><td align="left">查看容器详情</td><td align="left">docker inspect</td><td align="left">crictl inspect</td><td align="left">ctr -n k8s.io c info</td></tr><tr><td align="left">查看容器日志</td><td align="left">docker logs</td><td align="left">crictl logs</td><td align="left">无</td></tr><tr><td align="left">容器内执行命令</td><td align="left">docker exec</td><td align="left">crictl exec</td><td align="left">无</td></tr><tr><td align="left">挂载容器</td><td align="left">docker attach</td><td align="left">crictl attach</td><td align="left">无</td></tr><tr><td align="left">容器资源使用</td><td align="left">docker stats</td><td align="left">crictl stats</td><td align="left">无</td></tr><tr><td align="left">创建容器</td><td align="left">docker create</td><td align="left">crictl create</td><td align="left">ctr -n k8s.io c create</td></tr><tr><td align="left">启动容器</td><td align="left">docker start</td><td align="left">crictl start</td><td align="left">ctr -n k8s.io run</td></tr><tr><td align="left">停止容器</td><td align="left">docker stop</td><td align="left">crictl stop</td><td align="left">无</td></tr><tr><td align="left">删除容器</td><td align="left">docker rm</td><td align="left">crictl rm</td><td align="left">ctr -n k8s.io c del</td></tr><tr><td align="left">查看镜像列表</td><td align="left">docker images</td><td align="left">crictl images</td><td align="left">ctr -n k8s.io i ls</td></tr><tr><td align="left">查看镜像详情</td><td align="left">docker inspect</td><td align="left">crictl inspecti</td><td align="left">无</td></tr><tr><td align="left">拉取镜像</td><td align="left">docker pull</td><td align="left">crictl pull</td><td align="left">ctr -n k8s.io i pull</td></tr><tr><td align="left">推送镜像</td><td align="left">docker push</td><td align="left">无</td><td align="left">ctr -n k8s.io i push</td></tr><tr><td align="left">删除镜像</td><td align="left">docker rmi</td><td align="left">crictl rmi</td><td align="left">ctr -n k8s.io i rm</td></tr><tr><td align="left">查看 Pod 列表</td><td align="left">无</td><td align="left">crictl pods</td><td align="left">无</td></tr><tr><td align="left">查看 Pod 详情</td><td align="left">无</td><td align="left">crictl inspectp</td><td align="left">无</td></tr><tr><td align="left">启动 Pod</td><td align="left">无</td><td align="left">crictl runp</td><td align="left">无</td></tr><tr><td align="left">停止 Pod</td><td align="left">无</td><td align="left">crictl stopp</td><td align="left">无</td></tr></tbody></table><h2 id="导入导出镜像"><a href="#导入导出镜像" class="headerlink" title="导入导出镜像"></a>导入导出镜像</h2><p>containerd 有 namespace 的概念，所以需要指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导出镜像</span></span><br><span class="line">ctr -n k8s.io image <span class="built_in">export</span> k8s.gcr.io/coredns/coredns:v1.8.0  coredns_v1.8.0.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入镜像</span></span><br><span class="line">ctr -n=k8s.io image import coredns_v1.8.0.tar</span><br></pre></td></tr></table></figure><h2 id="登录仓库"><a href="#登录仓库" class="headerlink" title="登录仓库"></a>登录仓库</h2><p>您可以使用 ctr login 命令登录仓库。例如，如果您要登录 registry.cn-hangzhou.aliyuncs.com，则可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctr login --username=&lt;username&gt; registry.cn-hangzhou.aliyuncs.com</span><br></pre></td></tr></table></figure><p>请注意，<username>是您的用户名.</p><h2 id="打-tag"><a href="#打-tag" class="headerlink" title="打 tag"></a>打 tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctr image tag &lt;image-name&gt; &lt;old-tag&gt; &lt;new-tag&gt;</span><br></pre></td></tr></table></figure><p>请注意，<image-name>是镜像名称，<old-tag>是旧标记，<new-tag>是新标记</p><h2 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctr image push &lt;image-name&gt;:&lt;new-tag&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cli </tag>
            
            <tag> containerd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iptables进行持久化配置，重启不丢失</title>
      <link href="/posts/d8f4121a/"/>
      <url>/posts/d8f4121a/</url>
      
        <content type="html"><![CDATA[<p>操作文档针对 ubuntu20 和 centos 系统，其他系统类似。<code>iptables-save</code> 命令其实只是把配置文件打印出来，并不会真的 save，这个有点容易让人误解。</p><h2 id="针对-ubuntu-平台"><a href="#针对-ubuntu-平台" class="headerlink" title="针对 ubuntu 平台"></a>针对 ubuntu 平台</h2><p>ubuntu20 需要安装 iptables-persistent 才能实现持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install iptables-persistent</span><br></pre></td></tr></table></figure><p>持久化的配置文件保存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 针对ipv4</span></span><br><span class="line">/etc/iptables/rules.v4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 针对ipv6</span></span><br><span class="line">/etc/iptables/rules.v6</span><br></pre></td></tr></table></figure><p>手动保存当前配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 针对ipv4</span></span><br><span class="line">sudo iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 针对ipv6</span></span><br><span class="line">sudo ip6tables-save &gt; /etc/iptables/rules.v6</span><br></pre></td></tr></table></figure><h2 id="针对-centos-平台"><a href="#针对-centos-平台" class="headerlink" title="针对 centos 平台"></a>针对 centos 平台</h2><p>安装包 <code>iptables-services</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install iptables-services</span><br></pre></td></tr></table></figure><p>配置文件位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/iptables</span><br><span class="line">/etc/sysconfig/ip6tables</span><br></pre></td></tr></table></figure><p>需要关闭 firewalld 然后启动 iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now iptables</span><br></pre></td></tr></table></figure><p>手动保存当前配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables-save &gt; /etc/sysconfig/iptables</span><br><span class="line">sudo ip6tables-save &gt; /etc/sysconfig/ip6tables</span><br></pre></td></tr></table></figure><h2 id="netfilter-persistent-命令"><a href="#netfilter-persistent-命令" class="headerlink" title="netfilter-persistent 命令"></a>netfilter-persistent 命令</h2><p>使用 <code>netfilter-persistent save</code> 可以自动保存当前规则，本质上是调用两个脚本</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables使用记录实战</title>
      <link href="/posts/5e8ed38b/"/>
      <url>/posts/5e8ed38b/</url>
      
        <content type="html"><![CDATA[<h2 id="iptables-四表五链"><a href="#iptables-四表五链" class="headerlink" title="iptables 四表五链"></a>iptables 四表五链</h2><p>四表五链：<br>链就是位置：共有五个 进路由 (PREROUTING)、进系统 (INPUT) 、转发 (FORWARD)、出系统 (OUTPUT)、出路由 (POSTROUTING)；<br>表就是存储的规则；数据包到了该链处，会去对应表中查询设置的规则，然后决定是否放行、丢弃、转发还是修改等等操作。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250113163327215.png" alt="image.png"></p><h3 id="具体的四表"><a href="#具体的四表" class="headerlink" title="具体的四表"></a>具体的四表</h3><table><thead><tr><th>表</th><th>说明</th></tr></thead><tbody><tr><td>filter</td><td>过滤数据包</td></tr><tr><td>Nat</td><td>用于网络地址转换（IP、端口）</td></tr><tr><td>Mangle</td><td>修改数据包的服务类型、TTL、并且可以配置路由实现 QOS</td></tr><tr><td>Raw</td><td>决定数据包是否被状态跟踪机制处理</td></tr></tbody></table><h3 id="具体的五链"><a href="#具体的五链" class="headerlink" title="具体的五链"></a>具体的五链</h3><table><thead><tr><th>链</th><th>说明</th></tr></thead><tbody><tr><td>INPUT</td><td>进来的数据包应用此规则链中的策略</td></tr><tr><td>OUTPUT</td><td>外出的数据包应用此规则链中的策略</td></tr><tr><td>FORWARD</td><td>转发数据包时应用此规则链中的策略</td></tr><tr><td>PREROUTING</td><td>对数据包作路由选择前应用此链中的规则（所有的数据包进来的时侯都先由这个链处理）</td></tr><tr><td>POSTROUTING</td><td>对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）</td></tr></tbody></table><h2 id="开启内核转发功能"><a href="#开启内核转发功能" class="headerlink" title="开启内核转发功能"></a>开启内核转发功能</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">临时开启</button><button type="button" class="tab">永久开启</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证是这个配置</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即生效</span></span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h2><h3 id="限制入站，不限制出站"><a href="#限制入站，不限制出站" class="headerlink" title="限制入站，不限制出站"></a>限制入站，不限制出站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认策略</span></span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许访问22端口</span></span><br><span class="line">iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅允许指定IP段访问</span></span><br><span class="line">iptables -A INPUT -i eth0 -p tcp -s 192.168.100.0/24 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="限制入站和出站"><a href="#限制入站和出站" class="headerlink" title="限制入站和出站"></a>限制入站和出站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置链的默认策略</span></span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止一个IP的所有包</span></span><br><span class="line">iptables -A INPUT -s 192.168.1.10 -j DROP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有SSH的连接请求</span></span><br><span class="line">iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅允许来自于192.168.100.0/24域的用户的ssh连接请求</span></span><br><span class="line">iptables -A INPUT -i eth0 -p tcp -s 192.168.100.0/24 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="本地端口转发到本地端口"><a href="#本地端口转发到本地端口" class="headerlink" title="本地端口转发到本地端口"></a>本地端口转发到本地端口</h3><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250110160536647.png" alt="image.png|631"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问服务器的 2222 端口，转发到服务器的 22 端口</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 2222 -j REDIRECT --to-port 22</span><br></pre></td></tr></table></figure><h3 id="转发请求到其他主机"><a href="#转发请求到其他主机" class="headerlink" title="转发请求到其他主机"></a>转发请求到其他主机</h3><p>这是通过本主机做一个跳转，比如访问 <code>10.0.0.102</code> 的 80 端口转发到 <code>10.0.0.103</code> 的 8000 端口</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20250110162930990.png" alt="image.png|740"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在10.0.0.102（Server A）上执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个是进来的数据包（不包含自身发出的数据包，如果是自身发出，使用OUTPUT链），目的地址是 10.0.0.102 且端口是80 的数据包转发到 10.0.0.103:8000</span></span><br><span class="line">iptables -t nat -A PREROUTING -4 -p tcp -d 10.0.0.102 --dport 80 -j DNAT --to-destination 10.0.0.103:8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转发出去的数据包 目的地址是 10.0.0.103 端口是 8000 的数据包进行伪装（就是把数据包来源地址换成本机的ip，这样另一台机器回包才会回给自己），也可以使用： iptables -t nat -A POSTROUTING -4 -p tcp -d 10.0.0.103 --dport 8000 -j MASQUERADE</span></span><br><span class="line">iptables -t nat -A POSTROUTING -4 -p tcp -d 10.0.0.103 --dport 8000 -j SNAT --to-source 10.0.0.102</span><br></pre></td></tr></table></figure><p>上面操作完成后，可以使用从 client 请求 <code>10.0.0.102:80</code> , 但是 <code>Server A</code> 这台机器请求 <code>10.0.0.102:80</code> 不通，如果要实现 <code>Server A</code> 也可以访问 <code>10.0.0.102:80</code> 需要额外执行一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在10.0.0.102（Server A）上执行</span></span><br><span class="line">iptables -t nat -A OUTPUT -4 -p tcp -d 10.0.0.102 --dport 80 -j DNAT --to-destination 10.0.0.103:8000</span><br></pre></td></tr></table></figure><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>查看 nat 表</td><td>sudo iptables -t nat -L</td></tr><tr><td>清空 nat 表配置</td><td>sudo iptables -t nat -F<br></td></tr><tr><td>查看 filter 表</td><td>sudo iptables -L</td></tr><tr><td>清空 filter 表</td><td>sudo iptables -F</td></tr></tbody></table><h3 id="iptables-持久化"><a href="#iptables-持久化" class="headerlink" title="iptables 持久化"></a>iptables 持久化</h3><p>请看 <a href="/posts/d8f4121a">iptables进行持久化配置，重启不丢失</a></p><h3 id="SNAT-和-MASQUERADE-的区别"><a href="#SNAT-和-MASQUERADE-的区别" class="headerlink" title="SNAT 和 MASQUERADE 的区别"></a>SNAT 和 MASQUERADE 的区别</h3><p>MASQUERADE 是一种特殊的 SNAT 主要是不用特殊指定修改的源地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNAT 示例，假设 203.0.113.1 是公网IP</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j SNAT --to-source 203.0.113.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># MASQUERADE 示例</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客添加自定义html页面</title>
      <link href="/posts/sgba64/"/>
      <url>/posts/sgba64/</url>
      
        <content type="html"><![CDATA[<p>比如我想增加一个文件夹，文件夹里面有 img、css、js 等文件夹，还有 index.html 文件，想要在 hexo 博客里可以正常显示</p><p>将 文件夹 放到 hexo 的 source 文件夹下。</p><p>然后需要配置跳过 hexo 的渲染，因为 hexo 会改变 html 文件的结构。</p><p>修改 <code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> </span><br><span class="line"><span class="comment"># 这里排除的是 source 目录下不需要渲染的文件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;**/README.md&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;html/*&#x27;</span></span><br></pre></td></tr></table></figure><p>后续可以通过访问 <code>http://xxx.com/html/</code> 来打开页面</p><p>需要注意 js css html 等文件调用的地址有可能需要更换。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建 </tag>
            
            <tag> 记录 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译安装MySQL5.7</title>
      <link href="/posts/b670229a/"/>
      <url>/posts/b670229a/</url>
      
        <content type="html"><![CDATA[<p>编译需要耗时，且对系统的依赖更为复杂，更容易出错， 如果没有必要，可以参考使用 <a href="/posts/3b23b5cb">二进制安装MySQL5.7</a></p><h2 id="安装编译依赖"><a href="#安装编译依赖" class="headerlink" title="安装编译依赖"></a>安装编译依赖</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y build-essential cmake libaio-dev libncurses5-dev pkg-config</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install zlib-devel openssl-devel libaio-devel ncurses-devel cmake gcc-c++</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="设置安装路径"><a href="#设置安装路径" class="headerlink" title="设置安装路径"></a>设置安装路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> BASE_DIR=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line"><span class="built_in">export</span> DATA_DIR=<span class="string">&quot;/data/mysql&quot;</span></span><br></pre></td></tr></table></figure><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-boost-5.7.38.tar.gz</span><br><span class="line">tar xf mysql-boost-5.7.38.tar.gz &amp;&amp; <span class="built_in">cd</span> mysql-5.7.38</span><br><span class="line">[[ -d build ]] &amp;&amp; <span class="built_in">rm</span> -r build</span><br><span class="line"><span class="built_in">mkdir</span> -p build &amp;&amp; <span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure><h3 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cmake .. \</span><br><span class="line">    -DBUILD_CONFIG=mysql_release \</span><br><span class="line">    -DFEATURE_SET=<span class="string">&quot;community&quot;</span> \</span><br><span class="line">    -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$&#123;BASE_DIR&#125;</span>&quot;</span> \</span><br><span class="line">    -DWITH_EMBEDDED_SERVER=off \</span><br><span class="line">    -DINSTALL_SBINDIR=bin \</span><br><span class="line">    -DINSTALL_SCRIPTDIR=bin \</span><br><span class="line">    -DINSTALL_LIBDIR=lib/mysql \</span><br><span class="line">    -DINSTALL_PLUGINDIR=lib/plugin \</span><br><span class="line">    -DINSTALL_INCLUDEDIR=include \</span><br><span class="line">    -DINSTALL_INFODIR=share/info \</span><br><span class="line">    -DINSTALL_MANDIR=share/man \</span><br><span class="line">    -DINSTALL_MYSQLSHAREDIR=share/mysql \</span><br><span class="line">    -DINSTALL_SUPPORTFILESDIR=share/mysql \</span><br><span class="line">    -DINSTALL_MYSQLTESTDIR=mysql-test \</span><br><span class="line">    -DDEFAULT_CHARSET=utf8 \</span><br><span class="line">    -DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">    -DEXTRA_CHARSETS=all \</span><br><span class="line">    -DENABLED_LOCAL_INFILE=ON \</span><br><span class="line">    -DWITH_LIBEVENT=bundled \</span><br><span class="line">    -DWITH_SSL=bundled \</span><br><span class="line">    -DWITH_ZLIB=bundled \</span><br><span class="line">    -DWITH_INNODB_MEMCACHED=on \</span><br><span class="line">    -DWITH_BOOST=../boost \</span><br><span class="line">    -DWITH_UNIT_TESTS=on \</span><br><span class="line">    -DWITH_DEBUG=off</span><br><span class="line"></span><br><span class="line">make -j4 &amp;&amp; make install</span><br><span class="line"><span class="comment"># 根据cpu核心数设置，直接make也行</span></span><br></pre></td></tr></table></figure><h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><h3 id="创建目录和用户"><a href="#创建目录和用户" class="headerlink" title="创建目录和用户"></a>创建目录和用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;DATA_DIR&#125;</span>/&#123;binlog,data,logs,redolog,relaylog,tmp,undolog&#125;</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;BASE_DIR&#125;</span>/etc</span><br><span class="line">groupadd -g 27 -o -r mysql</span><br><span class="line">useradd -M -g mysql -o -r -d /dev/null -s /sbin/nologin -u 27 mysql </span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;DATA_DIR&#125;</span></span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;BASE_DIR&#125;</span>/etc/my.cnf &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">## MySQL 5.7 Configuration File</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## General</span></span><br><span class="line"><span class="string">user                                   = mysql</span></span><br><span class="line"><span class="string">bind_address                           = 0.0.0.0</span></span><br><span class="line"><span class="string">port                                   = 3306</span></span><br><span class="line"><span class="string">basedir                                = $&#123;BASE_DIR&#125;/</span></span><br><span class="line"><span class="string">datadir                                = $&#123;DATA_DIR&#125;/data</span></span><br><span class="line"><span class="string">tmpdir                                 = $&#123;DATA_DIR&#125;/tmp</span></span><br><span class="line"><span class="string">socket                                 = $&#123;DATA_DIR&#125;/logs/mysql.sock</span></span><br><span class="line"><span class="string">pid-file                               = $&#123;DATA_DIR&#125;/logs/mysqld.pid</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">character_set_server                   = utf8</span></span><br><span class="line"><span class="string">sql_mode                               = NO_ENGINE_SUBSTITUTION  # default &quot;STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION</span></span><br><span class="line"><span class="string">transaction_isolation                  = READ-COMMITTED    # default REPEATABLE-READ</span></span><br><span class="line"><span class="string">explicit_defaults_for_timestamp        = ON     # default OFF</span></span><br><span class="line"><span class="string">secure_file_priv                       =</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">skip-symbolic-links</span></span><br><span class="line"><span class="string">skip_name_resolve                      = ON</span></span><br><span class="line"><span class="string">skip_external_locking                  = ON</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">performance_schema                     = ON      # default ON</span></span><br><span class="line"><span class="string">performance-schema-instrument          = &#x27;memory/%=ON&#x27;</span></span><br><span class="line"><span class="string">autocommit                             = ON      # default ON</span></span><br><span class="line"><span class="string">#event_scheduler                        = ON     # default OFF</span></span><br><span class="line"><span class="string">#lower_case_table_names                 = 0      # default 0</span></span><br><span class="line"><span class="string">show_compatibility_56                  = ON      # &gt;= 5.7.8 default OFF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## ssl</span></span><br><span class="line"><span class="string">#ssl_ca                                 = $&#123;DATA_DIR&#125;/ssl/ca.pem</span></span><br><span class="line"><span class="string">#ssl_cert                               = $&#123;DATA_DIR&#125;/ssl/server-cert.pem</span></span><br><span class="line"><span class="string">#ssl_key                                = $&#123;DATA_DIR&#125;/ssl/server-key.pem</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Networking</span></span><br><span class="line"><span class="string">back_log                               = 1000</span></span><br><span class="line"><span class="string">max_connections                        = 1100</span></span><br><span class="line"><span class="string">max_user_connections                   = 1000</span></span><br><span class="line"><span class="string">max_connect_errors                     = 1000000</span></span><br><span class="line"><span class="string">interactive_timeout                    = 300</span></span><br><span class="line"><span class="string">wait_timeout                           = 300</span></span><br><span class="line"><span class="string">connect_timeout                        = 10</span></span><br><span class="line"><span class="string">net_buffer_length                      = 1M</span></span><br><span class="line"><span class="string">max_allowed_packet                     = 256M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Cache</span></span><br><span class="line"><span class="string">thread_cache_size                      = 192     # since 5.6.8 default -1, autosized ( max_connections / 100 ) + 8</span></span><br><span class="line"><span class="string">table_open_cache                       = 4096</span></span><br><span class="line"><span class="string">table_definition_cache                 = 4096</span></span><br><span class="line"><span class="string">table_open_cache_instances             = 8</span></span><br><span class="line"><span class="string">query_cache_type                       = 0</span></span><br><span class="line"><span class="string">query_cache_size                       = 0</span></span><br><span class="line"><span class="string">#query_cache_size                       = 32M</span></span><br><span class="line"><span class="string">#query_cache_limit                      = 1M</span></span><br><span class="line"><span class="string">#query_cache_min_res_unit               = 2K</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Per_thread Buffers</span></span><br><span class="line"><span class="string">sort_buffer_size                       = 32M     # default 256K</span></span><br><span class="line"><span class="string">read_buffer_size                       = 16M     # default 256K</span></span><br><span class="line"><span class="string">read_rnd_buffer_size                   = 32M     # default 256K</span></span><br><span class="line"><span class="string">join_buffer_size                       = 128M    # default 256K</span></span><br><span class="line"><span class="string">bulk_insert_buffer_size                = 64M</span></span><br><span class="line"><span class="string">thread_stack                           = 256K    # default 192K</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Temp Tables</span></span><br><span class="line"><span class="string">tmp_table_size                         = 512M</span></span><br><span class="line"><span class="string">max_heap_table_size                    = 512M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Sort</span></span><br><span class="line"><span class="string">max_length_for_sort_data               = 2048    # default 1024</span></span><br><span class="line"><span class="string">eq_range_index_dive_limit              = 200     # default 10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### Storage Engines</span></span><br><span class="line"><span class="string">default_storage_engine                 = InnoDB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## InnoDB</span></span><br><span class="line"><span class="string">innodb_file_per_table                  = ON</span></span><br><span class="line"><span class="string">innodb_file_format_check               = ON</span></span><br><span class="line"><span class="string">innodb_checksum_algorithm              = crc32</span></span><br><span class="line"><span class="string">innodb_page_size                       = 16k     # default 16k</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size                = 2G      # default 1G, = innodb_buffer_pool_instances * innodb_buffer_pool_chunk_size * n</span></span><br><span class="line"><span class="string">innodb_buffer_pool_instances           = 8       # since 5.6.6 if innodb_buffer_pool_size &lt; 1G default 1 else 8</span></span><br><span class="line"><span class="string">innodb_buffer_pool_chunk_size          = 128M    # defautl 128M</span></span><br><span class="line"><span class="string">innodb_data_file_path                  = ibdata1:100M:autoextend</span></span><br><span class="line"><span class="string">innodb_temp_data_file_path             = ../tmp/ibtmp1:12M:autoextend</span></span><br><span class="line"><span class="string">innodb_log_group_home_dir              = $&#123;DATA_DIR&#125;/redolog/</span></span><br><span class="line"><span class="string">innodb_log_file_size                   = 256M</span></span><br><span class="line"><span class="string">innodb_log_files_in_group              = 2</span></span><br><span class="line"><span class="string">innodb_log_buffer_size                 = 16M</span></span><br><span class="line"><span class="string">innodb_rollback_segments               = 128     # defautl 128</span></span><br><span class="line"><span class="string">innodb_undo_directory                  = $&#123;DATA_DIR&#125;/undolog/</span></span><br><span class="line"><span class="string">innodb_undo_tablespaces                = 4       # from 5.7.21 deprecated</span></span><br><span class="line"><span class="string">innodb_open_files                      = 4000</span></span><br><span class="line"><span class="string">innodb_thread_concurrency              = 32</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit         = 1</span></span><br><span class="line"><span class="string">innodb_flush_log_at_timeout            = 1       # defautl 1, when innodb_flush_log_at_trx_commit = 0 or 2</span></span><br><span class="line"><span class="string">innodb_purge_threads                   = 4</span></span><br><span class="line"><span class="string">innodb_print_all_deadlocks             = ON</span></span><br><span class="line"><span class="string">innodb_max_dirty_pages_pct             = 70</span></span><br><span class="line"><span class="string">innodb_lock_wait_timeout               = 50</span></span><br><span class="line"><span class="string">innodb_flush_method                    = O_DIRECT</span></span><br><span class="line"><span class="string">innodb_old_blocks_time                 = 1000    # since 5.6.6 default 1000</span></span><br><span class="line"><span class="string">innodb_io_capacity                     = 600     # default 200</span></span><br><span class="line"><span class="string">innodb_io_capacity_max                 = 2000    # default 2000</span></span><br><span class="line"><span class="string">innodb_lru_scan_depth                  = 1024    # default 1024</span></span><br><span class="line"><span class="string">innodb_read_io_threads                 = 8</span></span><br><span class="line"><span class="string">innodb_write_io_threads                = 8</span></span><br><span class="line"><span class="string">innodb_buffer_pool_load_at_startup     = ON</span></span><br><span class="line"><span class="string">innodb_buffer_pool_dump_at_shutdown    = ON</span></span><br><span class="line"><span class="string">innodb_buffer_pool_filename            = ib_buffer_pool  # default ib_buffer_pool</span></span><br><span class="line"><span class="string">innodb_sort_buffer_size                = 64M     # default 1M , 64K - 64M , for change index</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">innodb_buffer_pool_dump_pct            = 40</span></span><br><span class="line"><span class="string">innodb_page_cleaners                   = 16</span></span><br><span class="line"><span class="string">innodb_undo_log_truncate               = ON</span></span><br><span class="line"><span class="string">innodb_max_undo_log_size               = 2G</span></span><br><span class="line"><span class="string">innodb_purge_rseg_truncate_frequency   = 128</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Gtid</span></span><br><span class="line"><span class="string">#gtid_mode                              = ON</span></span><br><span class="line"><span class="string">#enforce_gtid_consistency               = ON</span></span><br><span class="line"><span class="string">#binlog_gtid_simple_recovery            = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Replication</span></span><br><span class="line"><span class="string">server_id                              = 101</span></span><br><span class="line"><span class="string">log_bin                                = $&#123;DATA_DIR&#125;/binlog/mysql_bin</span></span><br><span class="line"><span class="string">expire_logs_days                       = 7</span></span><br><span class="line"><span class="string">binlog_format                          = ROW</span></span><br><span class="line"><span class="string">binlog_row_image                       = noblob  # default full</span></span><br><span class="line"><span class="string">#innodb_autoinc_lock_mode               = 2      # default 1</span></span><br><span class="line"><span class="string">binlog_rows_query_log_events           = 1</span></span><br><span class="line"><span class="string">max_binlog_size                        = 500M</span></span><br><span class="line"><span class="string">binlog_cache_size                      = 1M</span></span><br><span class="line"><span class="string">sync_binlog                            = 1</span></span><br><span class="line"><span class="string">master_info_repository                 = TABLE</span></span><br><span class="line"><span class="string">relay_log_info_repository              = TABLE</span></span><br><span class="line"><span class="string">skip-slave-start                       = 1</span></span><br><span class="line"><span class="string">relay_log                              = $&#123;DATA_DIR&#125;/relaylog/relay_log</span></span><br><span class="line"><span class="string">max_relay_log_size                     = 500M   # default 0, use max_binlog_size</span></span><br><span class="line"><span class="string">log_slave_updates                      = ON     # default OFF</span></span><br><span class="line"><span class="string">#read_only                              = ON</span></span><br><span class="line"><span class="string">#super_read_only                        = ON</span></span><br><span class="line"><span class="string">#relay_log_purge                        = 1</span></span><br><span class="line"><span class="string">#slave_net_timeout                      = 60</span></span><br><span class="line"><span class="string">#replicate_wild_do_table                = mysql.%</span></span><br><span class="line"><span class="string">#replicate_wild_ignore_table            = test.%</span></span><br><span class="line"><span class="string">#auto_increment_offset                  = 1</span></span><br><span class="line"><span class="string">#auto_increment_increment               = 2</span></span><br><span class="line"><span class="string">#plugin_dir                             = $&#123;DATA_DIR&#125;/lib/plugin</span></span><br><span class="line"><span class="string">#plugin_load                            = &quot;rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so&quot;</span></span><br><span class="line"><span class="string">#rpl_semi_sync_master_enabled           = ON</span></span><br><span class="line"><span class="string">#rpl_semi_sync_slave_enabled            = ON</span></span><br><span class="line"><span class="string">#rpl_semi_sync_master_timeout           = 1000</span></span><br><span class="line"><span class="string">slave_transaction_retries              = 128</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## MTS</span></span><br><span class="line"><span class="string">relay_log_recovery                     = 1</span></span><br><span class="line"><span class="string">#slave_parallel_type                    = LOGICAL_CLOCK</span></span><br><span class="line"><span class="string">#slave_parallel_workers                 = 16</span></span><br><span class="line"><span class="string">#slave_preserve_commit_order            = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Logging</span></span><br><span class="line"><span class="string">log_output                             = FILE</span></span><br><span class="line"><span class="string">slow_query_log                         = ON</span></span><br><span class="line"><span class="string">slow_query_log_file                    = $&#123;DATA_DIR&#125;/logs/slow_mysqld.log</span></span><br><span class="line"><span class="string">log_queries_not_using_indexes          = OFF     # default OFF</span></span><br><span class="line"><span class="string">log_throttle_queries_not_using_indexes = 10      # default 0</span></span><br><span class="line"><span class="string">min_examined_row_limit                 = 0       # default 0</span></span><br><span class="line"><span class="string">log_slow_admin_statements              = ON</span></span><br><span class="line"><span class="string">log_slow_slave_statements              = ON</span></span><br><span class="line"><span class="string">long_query_time                        = 1</span></span><br><span class="line"><span class="string">#log-short-format                       = 0</span></span><br><span class="line"><span class="string">log_error                              = $&#123;DATA_DIR&#125;/logs/error_mysqld.log</span></span><br><span class="line"><span class="string">general_log                            = OFF</span></span><br><span class="line"><span class="string">general_log_file                       = $&#123;DATA_DIR&#125;/logs/general_mysqld.log</span></span><br><span class="line"><span class="string">log_timestamps                         = system</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Index</span></span><br><span class="line"><span class="string">ft_min_word_len                        = 4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld_safe]</span></span><br><span class="line"><span class="string">open_files_limit                       = 65535</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">no_auto_rehash</span></span><br><span class="line"><span class="string">prompt                                 = &quot;MySQL [\\d] &gt; &quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqldump]</span></span><br><span class="line"><span class="string">quick</span></span><br><span class="line"><span class="string">max_allowed_packet                     = 256M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqlhotcopy]</span></span><br><span class="line"><span class="string">interactive_timeout</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">socket                                 = $&#123;DATA_DIR&#125;/logs/mysql.sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><p>my.cnf 文件客户端和服务端都需要使用的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s <span class="variable">$&#123;BASE_DIR&#125;</span>/etc/my.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><h3 id="创建-service-文件"><a href="#创建-service-文件" class="headerlink" title="创建 service 文件"></a>创建 service 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> <span class="variable">$&#123;BASE_DIR&#125;</span>/share/mysql.service /etc/init.d/</span><br><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;BASE_DIR&#125;</span>/bin/mysqld --initialize-insecure      <span class="comment"># 空密码, 可以通过mysql命令登录</span></span><br><span class="line"><span class="variable">$&#123;BASE_DIR&#125;</span>/bin/mysqld --initialize               <span class="comment"># 或者使用随机密码，error_log日志会打印临时密码</span></span><br></pre></td></tr></table></figure><h2 id="优化工作"><a href="#优化工作" class="headerlink" title="优化工作"></a>优化工作</h2><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$( grep <span class="string">&quot;<span class="variable">$&#123;BASE_DIR&#125;</span>/bin&quot;</span> /etc/profile | wc -l )</span>&quot;</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;export PATH=\$PATH:<span class="variable">$&#123;BASE_DIR&#125;</span>/bin&quot;</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;PATH变量已添加&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Vb6CAEJqqtcmKndiAkEl&#x27;</span>;</span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><h3 id="查看编译参数"><a href="#查看编译参数" class="headerlink" title="查看编译参数"></a>查看编译参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /user/local/mysql/bin/mysqlbug |grep configure</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus手动打标签</title>
      <link href="/posts/ac395656/"/>
      <url>/posts/ac395656/</url>
      
        <content type="html"><![CDATA[<p>有时候需要给 Prometheus 打标签，比如说联邦集群接入，需要知道是哪个集群，remote write 写入的时候也需要做个标记。</p><h2 id="直接在集群打标签"><a href="#直接在集群打标签" class="headerlink" title="直接在集群打标签"></a>直接在集群打标签</h2><p>vim prometheus.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">external_labels:</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">uat</span></span><br><span class="line">    <span class="attr">dept:</span> <span class="string">ops</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">xxx</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>这样就可以给集群内的所有 metrics 打上这三个标签。</p><h2 id="通过联邦集群打标签"><a href="#通过联邦集群打标签" class="headerlink" title="通过联邦集群打标签"></a>通过联邦集群打标签</h2><p>如果集群不好进行操作，可以通过联邦集群接入，在联邦主节点进行配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">10s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;federate-https&#x27;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">    <span class="attr">scrape_timeout:</span> <span class="string">15s</span></span><br><span class="line">    <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">&#x27;/federate&#x27;</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="string">&#x27;match[]&#x27;</span><span class="string">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;&#123;job=~&quot;.+&quot;&#125;&#x27;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;10.0.0.11:9090&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;10.0.0.12:9090&#x27;</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">env:</span> <span class="string">uat</span></span><br><span class="line">          <span class="attr">dept:</span> <span class="string">ops</span></span><br><span class="line">          <span class="attr">project:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><h2 id="给接入的-target-打标签"><a href="#给接入的-target-打标签" class="headerlink" title="给接入的 target 打标签"></a>给接入的 target 打标签</h2><blockquote><p>这种只是给当前这个 target 打标签，不是全局生效</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">node_exporter</span></span><br><span class="line">  <span class="attr">honor_timestamps:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">5s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">follow_redirects:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.17</span><span class="string">:9100</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.18</span><span class="string">:9100</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.19</span><span class="string">:9100</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">env:</span> <span class="string">uat</span></span><br><span class="line">      <span class="attr">dept:</span> <span class="string">ops</span></span><br><span class="line">      <span class="attr">project:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> Prometheus </tag>
            
            <tag> monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于VictoriaMetrics的大规模监控实战</title>
      <link href="/posts/e59d8e32/"/>
      <url>/posts/e59d8e32/</url>
      
        <content type="html"><![CDATA[<p>victoriametrics 原生支持水平扩展，并且大部分兼容 Prometheus 语法，官方文档地址：<a href="https://docs.victoriametrics.com/">https://docs.victoriametrics.com/</a></p><p>这个是 victoriametrics 官方的集群架构</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20220617162704.png" alt="victoriametrics集群架构"></p><p>我公司用到的集群架构</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202206182239511.png" alt="我公司用到的集群"></p><p>目前用到 3 台机器</p><table><thead><tr><th>IP</th><th>部署的服务</th></tr></thead><tbody><tr><td>10.0.0.21</td><td>vmauth、vmselect、vminsert、vmstorage、vmalert</td></tr><tr><td>10.0.0.22</td><td>vmselect、vminsert、vmstorage</td></tr><tr><td>10.0.0.23</td><td>vmselect、vminsert、vmstorage</td></tr></tbody></table><h2 id="vmstorage"><a href="#vmstorage" class="headerlink" title="vmstorage"></a>vmstorage</h2><p>首先需要把存储部署上，多个存储之间数据是不同步的，也就是说所有的 storege 组件之间是感知不到彼此的。通过 vmselect 和 vminsert 采用一致性 hash 算法来确定读取&#x2F;写入哪台节点。</p><p>vmstorage 启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./vmstorage-prod -httpListenAddr <span class="string">&quot;0.0.0.0:8482&quot;</span> \   <span class="comment"># vmstorage监听端口</span></span><br><span class="line">    -storageDataPath ./data \                       <span class="comment"># 数据存储位置</span></span><br><span class="line">    -retentionPeriod 60d \                          <span class="comment"># 数据保留多久</span></span><br><span class="line">    -vminsertAddr <span class="string">&quot;0.0.0.0:8400&quot;</span> \                  <span class="comment"># insert服务连接的端口</span></span><br><span class="line">    -vmselectAddr <span class="string">&quot;0.0.0.0:8401&quot;</span> \                  <span class="comment"># select服务连接的端口</span></span><br><span class="line">    -dedup.minScrapeInterval=30s \                  <span class="comment"># 和vmselect保持一致</span></span><br><span class="line">    -loggerTimezone <span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">    -loggerLevel INFO</span><br></pre></td></tr></table></figure><h2 id="vminsert"><a href="#vminsert" class="headerlink" title="vminsert"></a>vminsert</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./vminsert-prod -httpListenAddr <span class="string">&quot;0.0.0.0:8480&quot;</span> \</span><br><span class="line">    -storageNode 10.0.0.21:8400,10.0.0.22:8400,10.0.0.23:8400 \       <span class="comment"># 指定所有storege节点</span></span><br><span class="line">    -replicationFactor 2 \                                                  <span class="comment"># 副本数2</span></span><br><span class="line">    -loggerTimezone<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">    -loggerLevel INFO</span><br></pre></td></tr></table></figure><h2 id="vmselect"><a href="#vmselect" class="headerlink" title="vmselect"></a>vmselect</h2><p>vmselect 启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./vmselect-prod -httpListenAddr <span class="string">&quot;0.0.0.0:8481&quot;</span> \</span><br><span class="line">    -selectNode 10.0.0.21:8481,10.0.0.22:8481,10.0.0.23:8481 \    <span class="comment"># select的所有节点</span></span><br><span class="line">    -storageNode 10.0.0.21:8401,10.0.0.22:8401,10.0.0.23:8401 \   <span class="comment"># 指定所有storage节点</span></span><br><span class="line">    -dedup.minScrapeInterval=30s \                                      <span class="comment"># 重复数据删除，如果是从Prometheus写入的话，必须和Prometheus的scrape_interval保持一致。</span></span><br><span class="line">    -loggerTimezone <span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">    -loggerLevel INFO</span><br></pre></td></tr></table></figure><h2 id="vmalert"><a href="#vmalert" class="headerlink" title="vmalert"></a>vmalert</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">./vmalert-prod -rule=./rules/* \                            <span class="comment"># 告警规则目录</span></span><br><span class="line">    -datasource.url=http://10.0.0.21:8427 \               <span class="comment"># vmselect的url,一般都是负载均衡地址</span></span><br><span class="line">    -datasource.basicAuth.username admin \                  <span class="comment"># vmselect的url认证用户名</span></span><br><span class="line">    -datasource.basicAuth.password 123456 \                <span class="comment"># vmselect的url认证密码</span></span><br><span class="line">    -notifier.url=http://10.0.0.11:9093 \                 <span class="comment"># alertmanager地址</span></span><br><span class="line">    -remoteWrite.url=http://10.0.0.21:8427 \              <span class="comment"># vminsert的url,一般都是负载均衡地址</span></span><br><span class="line">    -remoteWrite.basicAuth.username admin \                 <span class="comment"># vminsert的url认证用户名</span></span><br><span class="line">    -remoteWrite.basicAuth.password 123456 \               <span class="comment"># vminsert的url认证密码</span></span><br><span class="line">    -evaluationInterval=15s \</span><br><span class="line">    -httpListenAddr=0.0.0.0:8080</span><br></pre></td></tr></table></figure><h2 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h2><h3 id="vmauth-负载均衡配置"><a href="#vmauth-负载均衡配置" class="headerlink" title="vmauth 负载均衡配置"></a>vmauth 负载均衡配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vmauth-prod -auth.config=./vmauth.yml</span><br></pre></td></tr></table></figure><p>其中 vmauth.yml 的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">username:</span> <span class="string">&quot;admin&quot;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">  <span class="attr">url_map:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">src_paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;/api/v1/query&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;/api/v1/query_range&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;/api/v1/label/[^/]+/values&quot;</span></span><br><span class="line">    <span class="attr">url_prefix:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.21:8481/select/0/prometheus&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.22:8481/select/0/prometheus&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.23:8481/select/0/prometheus&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">src_paths:</span> [<span class="string">&quot;/api/v1/write&quot;</span>]</span><br><span class="line">    <span class="attr">url_prefix:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.21:8480/insert/0/prometheus&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.22:8480/insert/0/prometheus&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;http://10.0.0.23:8480/insert/0/prometheus&quot;</span></span><br><span class="line"><span class="comment">#    headers:</span></span><br><span class="line"><span class="comment">#    - &quot;X-Scope-OrgID: abc&quot;</span></span><br></pre></td></tr></table></figure><h3 id="nginx-负载均衡配置"><a href="#nginx-负载均衡配置" class="headerlink" title="nginx 负载均衡配置"></a>nginx 负载均衡配置</h3><p>如果你不想用 vmauth，nginx 功能可以完全覆盖 vmauth</p><p>nginx 配置示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">upstream  vmselect &#123;</span><br><span class="line">    server  10.0.0.21:8481 weight=5 ;</span><br><span class="line">    server  10.0.0.22:8481 weight=5 ;</span><br><span class="line">    server  10.0.0.23:8481 weight=5 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8000;</span><br><span class="line">    server_name _;</span><br><span class="line">    auth_basic &quot;authentication&quot;;                # 开启基本认证</span><br><span class="line">    auth_basic_user_file conf.d/.htpasswd;      # 密码文件</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://vmselect/select/0/prometheus/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream vminsert &#123;</span><br><span class="line">    server  10.0.0.21:8480 weight=5 ;</span><br><span class="line">    server  10.0.0.22:8480 weight=5 ;</span><br><span class="line">    server  10.0.0.23:8480 weight=5 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8001;</span><br><span class="line">    server_name _;</span><br><span class="line">    auth_basic &quot;authentication&quot;;                # 开启基本认证</span><br><span class="line">    auth_basic_user_file conf.d/.htpasswd;      # 密码文件</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://vminsert/insert/0/prometheus/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>.htpasswd 文件格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin:$1$QYnl4A1Q$I8Q712.eKtG9m7sAb9oeM1</span><br></pre></td></tr></table></figure><blockquote><p>admin 是用户名, : 后面的是密码， 密码可以使用 <code>openssl passwd -1 123456</code> 来生成（假设原始密码是 123456）</p></blockquote><h2 id="常用的配置"><a href="#常用的配置" class="headerlink" title="常用的配置"></a>常用的配置</h2><h3 id="Prometheus-通过-remote-write-写入-vm-集群"><a href="#Prometheus-通过-remote-write-写入-vm-集群" class="headerlink" title="Prometheus 通过 remote_write 写入 vm 集群"></a>Prometheus 通过 remote_write 写入 vm 集群</h3><blockquote><p>官方文档：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write">https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write</a></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;http://10.0.0.21:8001/api/v1/write&quot;</span>                           <span class="comment"># 通过负载均衡地址</span></span><br><span class="line"><span class="comment"># - url: &quot;http://10.0.0.21:8480/insert/0/prometheus/api/v1/write&quot;     # 直接连接vminsert组件</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">remote_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">queue_config:</span></span><br><span class="line">    <span class="attr">capacity:</span> <span class="number">2500</span></span><br><span class="line">    <span class="attr">max_shards:</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">min_shards:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">max_samples_per_send:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">batch_send_deadline:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">min_backoff:</span> <span class="string">30ms</span></span><br><span class="line">    <span class="attr">max_backoff:</span> <span class="string">5s</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><blockquote><p>官方地址：<a href="https://prometheus.io/docs/practices/remote_write/">https://prometheus.io/docs/practices/remote_write/</a></p></blockquote><ul><li><p>capacity</p><p>  定义：每个内存队列（shard：分片）的容量。</p><p>  一旦 WAL 被阻塞，就无法将样本附加到任何分片，并且所有吞吐量都将停止。所以在大多数情况下，单个队列容量应足够打以避免阻塞其他分片，但是太大的容量可能会导致过多的内存消耗，并导致重新分片期间清除队列的时间更长。</p><p>  容量建议：将容量设置为 3-10 倍 <code>max_samples_per_send</code></p></li><li><p>max_shards</p><p>  顾名思义，最大的分片数（即队列数），也可以理解为远程写的并行度。peometheus 远程写的时候会使用所有的分片，只有在写队列落后于远程写的速度，使用的队列数会达到 max_shards,目的在于提高远程写的吞吐量。</p><p>  PS：在操作过程中，Prometheus 将根据传入的采样率，未发送的未处理样本数以及发送每个样本所花费的时间，连续计算要使用的最佳分片数。（实际的分片数是动态调整的）</p></li><li><p>min_shards</p><p>  最小分片配置 Prometheus 使用的最小分片数量，并且是远程写入开始时使用的分片数量。如果远程写入落后，Prometheus 将自动扩大分片的数量，因此大多数用户不必调整此参数。但是，增加最小分片数将使 Prometheus 在计算所需分片数时避免在一开始就落后。</p></li><li><p>max_samples_per_send</p><p>  定义：每次远程写发送的最大指标数量，即批处理；</p><p>  这个值依赖于远程存储系统，对于一些系统而言，在没有显著增加延迟的情况下发送更多指标数据而运行良好，然而，对于另外一些系统而言，每次请求中发送大量指标数据可能导致其出现故障，使用的默认值是适用于绝大多数系统的。</p></li><li><p>batch_send_deadline</p><p>  定义：单一分片批量发送指标数据的最大等待时间；</p><p>  即使排队的分片尚未达到 max_samples_per_send，也会发送请求。 对于对延迟不敏感的小批量系统，可以增加批量发送的截止时间，以提高请求效率。</p></li><li><p>min_backoff</p><p>  定义：远程写失败的最小等待时间；</p><p>  min_backoff 是第一次的重试等待时间，第二次等待时间是其 2 倍，以此类推，直到 max_backoff 的值；</p></li><li><p>max_backoff</p><p>  定义：远程写失败的最大等待时间；</p></li></ul><h3 id="Grafana-直接查询-VM-集群"><a href="#Grafana-直接查询-VM-集群" class="headerlink" title="Grafana 直接查询 VM 集群"></a>Grafana 直接查询 VM 集群</h3><p>Grafana 配置地址：</p><table><thead><tr><th>说明</th><th>地址</th></tr></thead><tbody><tr><td>负载均衡地址</td><td><code>http://10.0.0.21:8000</code></td></tr><tr><td>vmselect 地址</td><td><code>http://10.0.0.21:8481/select/0/prometheus</code></td></tr></tbody></table><h3 id="其他-API-地址"><a href="#其他-API-地址" class="headerlink" title="其他 API 地址"></a>其他 API 地址</h3><p>目录：<a href="http://10.0.0.21:8481/select/0/">http://10.0.0.21:8481/select/0/</a></p><p>vmui：<a href="http://10.0.0.21:8481/select/0/vmui/">http://10.0.0.21:8481/select/0/vmui/</a></p><p>每个组件都有 <code>/metrics</code>，可以接入监控</p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> prometheus </tag>
            
            <tag> monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Keepalived来实现Nginx高可用</title>
      <link href="/posts/0cebb8ae/"/>
      <url>/posts/0cebb8ae/</url>
      
        <content type="html"><![CDATA[<p>公有云不会考虑这些，不过自建机房，使用 nginx 做入口，keepalived 是唯一的选择。</p><table><thead><tr><th>节点</th><th>IP</th></tr></thead><tbody><tr><td>keepalived 主</td><td>10.0.0.45</td></tr><tr><td>keepalived 备</td><td>10.0.0.44</td></tr><tr><td>vip</td><td>10.0.0.46</td></tr></tbody></table><h2 id="组播模式"><a href="#组播模式" class="headerlink" title="组播模式"></a>组播模式</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">keepalived1</button><button type="button" class="tab">keepalived2</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root            # 脚本执行者</span><br><span class="line">    enable_script_security      # 标记脚本安全</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_script &#123;</span><br><span class="line">    script &quot;killall -0 nginx&quot;          # 脚本路径, 返回值为0则正常，不为0认为不正常</span><br><span class="line">    # 可替代的命令:</span><br><span class="line">    # /usr/sbin/pidof nginx             这个命令不推荐, 多个进程pid会出问题</span><br><span class="line">    # pgrep nginx                       类似于pidof nginx 返回的是pid</span><br><span class="line">    interval 2                              # 脚本执行间隔，单位s</span><br><span class="line">    weight -20                              # -254-254之间，检测失败权重减少</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;                        # 实例名</span><br><span class="line">    state MASTER                            # 当前keepalived状态</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251                   # 组播ID主备需一致，单播无所谓</span><br><span class="line">    priority 100                            # 默认权重</span><br><span class="line">    advert_int 1                            # 发送VRRP通告间隔，单位s</span><br><span class="line">    # nopreempt                             # 设置非抢占模式，原本高优先级的MASER恢复之后，不会去抢现在是低优先级BACKUP, 这项配置只有在两台都配置为state backup才有用。</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS                      # 主备验证信息，需一致</span><br><span class="line">        auth_pass 123456 </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_script                        # 调用脚本,若脚本最后的执行结果是非0的，则判断端口down掉，此时vip会漂移到keepalived-BACKUP上</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.46                       # vip</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_script &#123;</span><br><span class="line">    script &quot;killall -0 nginx&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    weight -20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 99</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_script</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.46</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="单播模式"><a href="#单播模式" class="headerlink" title="单播模式"></a>单播模式</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">keepalived1</button><button type="button" class="tab">keepalived2</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root            # 脚本执行者</span><br><span class="line">    enable_script_security      # 标记脚本安全</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_script &#123;</span><br><span class="line">    script &quot;killall -0 nginx&quot;          # 脚本路径, 返回值为0则正常，不为0认为不正常</span><br><span class="line">    interval 2                              # 脚本执行间隔，单位s</span><br><span class="line">    weight -20                              # -254-254之间，检测失败权重减少, 要大于集群  最大 priority - 最小 priority</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;                        # 实例名</span><br><span class="line">    state MASTER                            # 当前keepalived状态</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251                   # 组播ID主备需一致，单播无所谓</span><br><span class="line">    priority 100                            # 默认权重</span><br><span class="line">    advert_int 1                            # 发送VRRP通告间隔，单位s</span><br><span class="line">    # nopreempt                             # 设置非抢占模式，原本高优先级的MASER恢复之后，不会去抢现在是低优先级BACKUP, 这项配置只有在两台都配置为state backup才有用。</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS                      # 主备验证信息，需一致</span><br><span class="line">        auth_pass 123456 </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_script                        # 调用脚本,若脚本最后的执行结果是非0的，则判断端口down掉，此时vip会漂移到keepalived-BACKUP上</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.45            # 配置源地址的IP地址</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.44                         # 配置从节点的目标IP地址</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.46                       # vip</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_script &#123;</span><br><span class="line">    script &quot;killall -0 nginx&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    weight -20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 99</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_script</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.44</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.45</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.46</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="非抢占式说明"><a href="#非抢占式说明" class="headerlink" title="非抢占式说明"></a>非抢占式说明</h2><blockquote><p>抢占式 和 非抢占式的区别： 比如 master1 默认的权重（priority）高，vip 当前在 master1 上， master1 挂掉后 vip 会飘到 master2 上，那么如果 master1 恢复正常了，抢占式会重新将 vip 抢过来，再次绑定到 master1 上，非抢占式则保持在 master2 上，除非 master2 也出问题。</p></blockquote><ul><li>必须都为 BACKUP 模式，如果有 MASTER，那么 MASTER 会抢占</li><li>必须都配置 nopreempt</li><li>去掉 weight -20 配置， 因为非抢占式这种配置， 高优先级的不会去抢占低优先级的 VIP， 所以检测失败降低权重是没有效果的。</li><li>配置 <code>rise 1</code> 和 <code>fall 1</code> 含义是检测失败状态变成 fault</li></ul><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">keepalived1</button><button type="button" class="tab">keepalived2</button><button type="button" class="tab">keepalived3</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;pgrep nginx&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    rise 1</span><br><span class="line">    fall 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state  BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 100</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.11</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.12</span><br><span class="line">       10.0.0.13</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;pgrep nginx&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    rise 1</span><br><span class="line">    fall 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state  BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 99</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.12</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.11</span><br><span class="line">       10.0.0.13</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check &#123;</span><br><span class="line">    script &quot;pgrep nginx&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    rise 1</span><br><span class="line">    fall 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state  BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 98</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.13</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.11</span><br><span class="line">       10.0.0.12</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="两台-Nginx-同步配置文件"><a href="#两台-Nginx-同步配置文件" class="headerlink" title="两台 Nginx 同步配置文件"></a>两台 Nginx 同步配置文件</h2><p>使用 crontab 定时每 5 分钟执行脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -ueo pipefail</span><br><span class="line"></span><br><span class="line">NGINX_CONF_LOCATION=<span class="string">&quot;/usr/local/nginx/conf/&quot;</span></span><br><span class="line">BACKUP_SERVER=<span class="string">&quot;root@10.0.0.44&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里是执行rsync同步配置文件，然后打印结果中的第二行（如果有更新的文件，第二行不为空）</span></span><br><span class="line">rsync_result=$(rsync -av --delete <span class="variable">$&#123;NGINX_CONF_LOCATION&#125;</span> <span class="variable">$&#123;BACKUP_SERVER&#125;</span>:<span class="variable">$&#123;NGINX_CONF_LOCATION&#125;</span> | sed -n <span class="string">&quot;2p&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$&#123;rsync_result&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;the configuration file has not changed&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;changed nginx config, reload Backup Nginx&quot;</span></span><br><span class="line">  ssh <span class="variable">$&#123;BACKUP_SERVER&#125;</span> <span class="string">&quot;sudo /usr/local/nginx/sbin/nginx -s reload&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> keepalived </tag>
            
            <tag> nginx </tag>
            
            <tag> HA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus通过remote_write写入数据到另一台Prometheus</title>
      <link href="/posts/666e547f/"/>
      <url>/posts/666e547f/</url>
      
        <content type="html"><![CDATA[<p>假设 <code>Prometheus1</code> 是一个集群内的 <code>Prometheus</code>，需要远程写入数据到 <code>Prometheus_Core</code></p><h2 id="Prometheus-Core-开启-remote-write-receiver"><a href="#Prometheus-Core-开启-remote-write-receiver" class="headerlink" title="Prometheus_Core 开启 remote_write_receiver"></a>Prometheus_Core 开启 remote_write_receiver</h2><p><code>Prometheus_Core</code> 需要打开接收远程写入的功能，通过增加启动参数 <code>--web.enable-remote-write-receiver</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./prometheus --web.enable-remote-write-receiver --web.config.file=web.yml --web.listen-address=0.0.0.0:9090</span><br></pre></td></tr></table></figure><blockquote><p>远程写的接口地址 <code>/api/v1/write</code></p></blockquote><h2 id="Prometheus-Core-开启认证"><a href="#Prometheus-Core-开启认证" class="headerlink" title="Prometheus_Core 开启认证"></a>Prometheus_Core 开启认证</h2><p>参考 <a href="/posts/165a0cd3/">Prometheus开启basic_auth认证</a></p><h2 id="Prometheus1-配置-remote-write"><a href="#Prometheus1-配置-remote-write" class="headerlink" title="Prometheus1 配置 remote_write"></a>Prometheus1 配置 remote_write</h2><p><code>Prometheus1</code> 需要将 <code>remote_write</code> 写入到 <code>Prometheus_Core</code> 的远程接口</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;http://127.0.0.1:9090/api/v1/write&quot;</span></span><br><span class="line">  <span class="attr">basic_auth:</span>                   <span class="comment"># 开启认证后需要配置</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span>             <span class="comment"># 开启认证后需要配置</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxxx</span>            <span class="comment"># 开启认证后需要配置</span></span><br><span class="line">  <span class="attr">remote_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">queue_config:</span></span><br><span class="line">    <span class="attr">capacity:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">max_shards:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">min_shards:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">max_samples_per_send:</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">batch_send_deadline:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">min_backoff:</span> <span class="string">30ms</span></span><br><span class="line">    <span class="attr">max_backoff:</span> <span class="string">100ms</span></span><br></pre></td></tr></table></figure><h2 id="远程写如何判断监控是否离线"><a href="#远程写如何判断监控是否离线" class="headerlink" title="远程写如何判断监控是否离线"></a>远程写如何判断监控是否离线</h2><p>远程写不像联邦集群，联邦是事先配置好的，远程写的方式，被写入的 Prometheus 是无法预知是谁在向我发送数据的。可以通过 absent 函数来实现。</p><h3 id="收集-Prometheus-自身的监控指标"><a href="#收集-Prometheus-自身的监控指标" class="headerlink" title="收集 Prometheus 自身的监控指标"></a>收集 Prometheus 自身的监控指标</h3><p>想要监控 <code>Prometheus</code> 的状态，则需要收集自身的监控指标（比如 <code>up</code> 指标），确保 <code>Prometheus1</code> 中有如下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;localhost:9090&#x27;</span>]</span><br></pre></td></tr></table></figure><p>在 <code>Prometheus_Core</code> 的告警配置中做如下配置，其中 <code>absent</code> 在查询不到数据的情况下返回 <code>1</code>，由于 <code>absent</code> 返回的数据不带标签，所以独立写成一条告警规则。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Prometheus1推送告警</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">&quot;Prometheus1推送离线&quot;</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">absent(up&#123;job=~&quot;prometheus&quot;,project=~&quot;prometheus1&quot;&#125;)</span> <span class="string">==</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">3m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&#x27;远程写 Prometheus1 无数据&#x27;</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;远程写 Prometheus1 无数据&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus </tag>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus开启basic_auth认证</title>
      <link href="/posts/165a0cd3/"/>
      <url>/posts/165a0cd3/</url>
      
        <content type="html"><![CDATA[<p>考虑将公司的联邦集群（pull）换成 remote_write（push）这种形式， 所以需要将 Prometheus 开放到公网，看了看认证相关的配置</p><p>也可以使用 Nginx 来反向代理，可以参考 <a href="/posts/5855bc56">Nginx开启基本http认证</a>， 不过 Prometheus 原生带了 basic auth 和 ssl 认证, 官网的说明<a href="https://prometheus.io/docs/guides/basic-auth/">https://prometheus.io/docs/guides/basic-auth/</a></p><h2 id="开启-web-配置文件"><a href="#开启-web-配置文件" class="headerlink" title="开启 web 配置文件"></a>开启 web 配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./prometheus --web.config.file=<span class="string">&quot;web.yml&quot;</span>  --web.listen-address=<span class="string">&quot;0.0.0.0:9001&quot;</span></span><br></pre></td></tr></table></figure><h2 id="生成密码"><a href="#生成密码" class="headerlink" title="生成密码"></a>生成密码</h2><p>密码需要 bcrypt 加密，这里使用 <code>htpasswd</code> 工具生成</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian安装</button><button type="button" class="tab">CentOS和Fedora安装</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install apache2-utils</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd-tools</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -nB <span class="string">&#x27;admin&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="web-配置文件"><a href="#web-配置文件" class="headerlink" title="web 配置文件"></a>web 配置文件</h2><p>vim web.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">basic_auth_users:</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">$2y$05$UKSS18ztdsUNoEuXYScr2OE1TCMe1hWnmD6JuwUi/uPTJayHIakae</span></span><br></pre></td></tr></table></figure><h3 id="验证一下配置"><a href="#验证一下配置" class="headerlink" title="验证一下配置"></a>验证一下配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">promtool check web-config web.yml</span><br></pre></td></tr></table></figure><h2 id="remote-write-访问"><a href="#remote-write-访问" class="headerlink" title="remote write 访问"></a>remote write 访问</h2><p>后面访问控制台页面或者调用接口都需要指定账号密码了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:xxxxx http://localhost:9090</span><br></pre></td></tr></table></figure><p>其他 Prometheus 如果需要往这台写入， 需要在其他的 Prometheus remote_write 配置认证</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;http://127.0.0.1:9090/api/v1/write&quot;</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxx</span></span><br><span class="line">  <span class="attr">remote_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">tls_config:</span></span><br><span class="line">    <span class="attr">insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">queue_config:</span></span><br><span class="line">    <span class="attr">capacity:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">max_shards:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">min_shards:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">max_samples_per_send:</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">batch_send_deadline:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">min_backoff:</span> <span class="string">30ms</span></span><br><span class="line">    <span class="attr">max_backoff:</span> <span class="string">100ms</span></span><br></pre></td></tr></table></figure><h2 id="联邦配置"><a href="#联邦配置" class="headerlink" title="联邦配置"></a>联邦配置</h2><p>如果此 Prometheus 需要通过联邦机制接入到其他 Prometheus， 需要在对方的配置里面增加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;federate-http&#x27;</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">&#x27;/federate&#x27;</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;xxxxx&#x27;</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">&#x27;match[]&#x27;</span><span class="string">:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;&#123;job=~&quot;.+&quot;&#125;&#x27;</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/data/prometheus/conf.d/federate_http.yml</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">30s</span></span><br></pre></td></tr></table></figure><h2 id="启用了-Basic-Auth-怎么健康检查"><a href="#启用了-Basic-Auth-怎么健康检查" class="headerlink" title="启用了 Basic Auth 怎么健康检查"></a>启用了 Basic Auth 怎么健康检查</h2><p>在 Kubernetes 环境下，配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成base64的账号密码编码</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;user:pass&quot;</span> |<span class="built_in">base64</span> -w0</span><br></pre></td></tr></table></figure><p>在 Liveness 和 Readness 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">httpGet:</span> </span><br><span class="line">  <span class="attr">httpHeaders:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Authorization</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">Basic</span> <span class="string">dXNlcjpwYXNz</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Auth </tag>
            
            <tag> prometheus </tag>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ingress Nginx 的灰度方案</title>
      <link href="/posts/c86b58e3/"/>
      <url>/posts/c86b58e3/</url>
      
        <content type="html"><![CDATA[<p>在 k8s 环境下进行灰度，ingress-nginx 自带了灰度注解， 这篇文章挺详细的<a href="https://v2-1.docs.kubesphere.io/docs/zh-CN/quick-start/ingress-canary/">https://v2-1.docs.kubesphere.io/docs/zh-CN/quick-start/ingress-canary/</a></p><h2 id="再此之前"><a href="#再此之前" class="headerlink" title="再此之前"></a>再此之前</h2><p>有个需求， 根据请求 header 有没有特定的值，来判断是否进入灰度环境。当时的做法是在集群内用 nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 如果有个header叫gray</span><br><span class="line">if ($http_gray = &quot;true&quot;) &#123;</span><br><span class="line">    proxy_pass http://nginx.test1:80;</span><br><span class="line">    break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方式可以实现需求， 不过不灵活， 也不优雅， 搜了一下， 发现 ingress nginx 原生提供了灰度的方案</p><h2 id="ingress-自带-canary-部署"><a href="#ingress-自带-canary-部署" class="headerlink" title="ingress 自带 canary 部署"></a>ingress 自带 canary 部署</h2><p>简单来说就是部署了两套环境， 这两套一模一样， 只是在不同的 namespace（同一个 namespace 需要取不同的名字），service 和 ingress 域名都配置成一样的， 然后在 canary 环境的 ingress 上添加注解即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">canary</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test1</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="comment"># 优先顺序 canary-by-header - &gt; canary-by-cookie - &gt; canary-weight</span></span><br><span class="line">    <span class="comment"># 这里必须加这条，表示当前ingress是灰度的ingress</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/canary:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="comment"># 这里的值可以改成任意值, 和后面的请求header对应</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/canary-by-header:</span> <span class="string">gray</span></span><br><span class="line">    <span class="comment"># 该规则允许用户自定义 Request Header 的值, 不加的话，默认就是always和never两个值, 表示始终进灰度或不进入灰度。</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/canary-by-header-value: &quot;true&quot;</span></span><br><span class="line">    <span class="comment"># 只加权重可以实现 权重控制流量</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/canary-weight:</span> <span class="string">&quot;50&quot;</span></span><br></pre></td></tr></table></figure><h2 id="如何测试效果"><a href="#如何测试效果" class="headerlink" title="如何测试效果"></a>如何测试效果</h2><p>可以使用 echo server 来做测试容器， 请求它可以输出一些基本信息， 我们就知道访问到哪个 pod 了</p><p><a href="/posts/635c073a">测试过程</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ingress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx四层反向代理后端记录真实IP</title>
      <link href="/posts/ee4a87b3/"/>
      <url>/posts/ee4a87b3/</url>
      
        <content type="html"><![CDATA[<p>使用 k8s 的 ingress 暴露服务，会有使用负载均衡反向代理 ingress 的情况，那么我们的 ingress 获取到的 ip 都是 4 层负载的 ip，比如常用架构图<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20220608100711.png" alt="常用架构"></p><p>4 层 Proxy Protocol 透传 tcp 工作在网络第 4 层,Proxy Protocol 就是在 tcp 中增加一个小的报头，用来存储额外的信息</p><p>代理协议即 Proxy Protocol,是 haproxy 的作者 Willy Tarreau 于 2010 年开发和设计的一个 Internet 协议，通过为 tcp 添加一个很小的头信息，来方便的传递客户端信息（协议栈、源 IP、目的 IP、源端口、目的端口等)，在网络情况复杂又需要获取客户 IP 时非常有用。<br>其本质是在三次握手结束后由代理在连接中插入了一个携带了原始连接四元组信息的数据包。</p><p>目前 proxy protocol 有两个版本，v1 仅支持 human-readable 报头格式（ASCIII 码），v2 需同时支持 human-readable 和二进制格式，即需要兼容 v1 格式<br>proxy protocol 的接收端必须在接收到完整有效的 proxy protocol 头部后才能开始处理连接数据。因此对于服务器的同一个监听端口，不存在兼容带 proxy protocol 包的连接和不带 proxy protocol 包的连接。如果服务器接收到的第一个数据包不符合 proxy protocol 的格式，那么服务器会直接终止连接。</p><p>Proxy protocol 是比较新的协议，但目前已经有很多软件支持，如 haproxy、nginx、apache、squid、mysql 等等，要使用 proxy protocol 需要两个角色 sender 和 receiver,sender 在与 receiver 之间建立连接后，会先发送一个带有客户信息的 tcp header,因为更改了 tcp 协议头，需 receiver 也支持 proxy protocol，否则不能识别 tcp 包头，导致无法成功建立连接。<br>nginx 是从 1.5.12 起开始支持的</p><h2 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h2><p>通常我们获取真实 ip 是通过负载均衡获取到远程的地址， 然后生成一个 header 发送给后端， 这样就可以获取到真实 ip 了，但是在 4 层负载里面， 没有 header 这个概念， ingress 又没办法获取到访问 4 层的地址， 最多只能拿到 4 层负载的地址， 所以需要在 4 层上面把远程的 ip 记录下来， 然后传送到后端也就是 ingress</p><p>TCP proxy_protocol 的定义其实就是在数据报文最前面加上对应的 IP 信息。然后最后一个 server 解开这个 data 前面的 IP 信息。</p><p>官方文档：<a href="https://nginx.org/en/docs/stream/ngx_stream_realip_module.html">https://nginx.org/en/docs/stream/ngx_stream_realip_module.html</a></p><h2 id="4-层负载修改"><a href="#4-层负载修改" class="headerlink" title="4 层负载修改"></a>4 层负载修改</h2><p>先用 <code>nginx -V</code> 看下 nginx 有没有 <code>--with-stream_realip_module</code> 编译参数， 没有的话， 需要记下当前的编译参数，添加 <code>--with-stream_realip_module</code> 后重新编译，替换现有的 nginx 二进制文件</p><p>然后修改配置文件，增加参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">upstream k8s-http &#123;</span><br><span class="line">     server 10.0.0.30:80;</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;</span><br><span class="line">     listen 80;</span><br><span class="line">     proxy_connect_timeout 1s;</span><br><span class="line">     # proxy_timeout 10s;        # 后端连接超时时间</span><br><span class="line">     proxy_protocol on ;         # 增加这个</span><br><span class="line">     proxy_pass k8s-http;</span><br><span class="line"> &#125;</span><br><span class="line">upstream k8s-https &#123;</span><br><span class="line">     server 10.0.0.30:443;</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;</span><br><span class="line">     listen 443;</span><br><span class="line">     proxy_connect_timeout 1s;</span><br><span class="line">     # proxy_timeout 10s;        # 后端连接超时时间</span><br><span class="line">     proxy_protocol on ;         # 增加这个</span><br><span class="line">     proxy_pass k8s-https;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="修改-ingress（最后一个负载均衡）"><a href="#修改-ingress（最后一个负载均衡）" class="headerlink" title="修改 ingress（最后一个负载均衡）"></a>修改 ingress（最后一个负载均衡）</h2><p>这样改了之后， 由于包被修改了，导致后面的 ingress 无法解析这个包了， 会报错 <code>400 Bad Request</code></p><p>需要修改 ingress nginx 的 configmap 配置， 如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">use-proxy-protocol:</span> <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure><p>然后 ingress 就可以获取到真实的 ip 了。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在CentOS7上安装新版本Git(2.x)</title>
      <link href="/posts/5a398dc9/"/>
      <url>/posts/5a398dc9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>centos7 的默认源里面的 git 版本是 1.8.3, 比较老了, 对于有些操作会提示 git 版本太低, 可以使用第三方源的方式来安装新版本的 git</p></blockquote><h2 id="使用-Wandisco-源"><a href="#使用-Wandisco-源" class="headerlink" title="使用 Wandisco 源"></a>使用 Wandisco 源</h2><p>创建仓库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/wandisco-git.repo &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[wandisco-git]</span><br><span class="line">name=Wandisco GIT Repository</span><br><span class="line">baseurl=http://opensource.wandisco.com/centos/7/git/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://opensource.wandisco.com/RPM-GPG-KEY-WANdisco</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git</span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br></pre></td></tr></table></figure><h2 id="离线安装-手动安装-rpm"><a href="#离线安装-手动安装-rpm" class="headerlink" title="离线安装 (手动安装 rpm)"></a>离线安装 (手动安装 rpm)</h2><p>下载两个文件到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://file.babudiu.com/f/yXCL/perl-Git-2.41.0-1.WANdiscoRP.noarch.rpm</span><br><span class="line">wget https://file.babudiu.com/f/znF4/git-2.41.0-1.WANdiscoRP.x86_64.rpm</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ./*.rpm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置双向认证</title>
      <link href="/posts/b78a00fa/"/>
      <url>/posts/b78a00fa/</url>
      
        <content type="html"><![CDATA[<p>单项认证只需要服务器提供证书即可, 不验证客户端证书, 而双向认证需要验证服务器证书,也需要验证客户端证书, 不满足要求的客户端可以不允许其访问, 并且可以通过后期吊销证书的方式禁止其访问.</p><p>证书签名可以参考:</p><p><a href="/posts/28c679c3">使用certbot自动申请ssl证书</a></p><p><a href="/posts/1e777b9e">使用acme.sh来自动更新https证书</a></p><p><a href="/posts/097e5b7c">制作和使用自签名证书</a></p><p>本文提到的 <code>client.crt</code> <code>server.crt</code> 都是通过 ca 签发的</p><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><p>Nginx 配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        ssl_certificate ssl/server.crt;             # 配置证书位置</span><br><span class="line">        ssl_certificate_key ssl/server.key;         # 配置私钥位置</span><br><span class="line">        ssl_client_certificate ssl/ca.crt;          # 客户端证书</span><br><span class="line">        ssl_verify_client on;                       # 打开客户端ssl验证</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        root html;</span><br><span class="line">        index index.html;</span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h2><p>比如服务器是开启了双向认证的, 我想用一台 Nginx 做代理, 证书都绑定到这台代理机器上面, 平常访问就访问这台代理 Nginx 就行了, 客户端不用再配置证书了.</p><p>Nginx 配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       0.0.0.0:9999;</span><br><span class="line">    access_log  off;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_ssl_certificate        client.crt;</span><br><span class="line">        proxy_ssl_certificate_key    client.key;</span><br><span class="line">        proxy_ssl_server_name on;</span><br><span class="line">        proxy_pass   https://10.0.0.134;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你遇到访问 nginx 报错 502 的，恰好你的系统又是 RedHat 系， 可以尝试关闭 Selinux</p><h2 id="使用-curl-测试"><a href="#使用-curl-测试" class="headerlink" title="使用 curl 测试"></a>使用 curl 测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --cacert ca.crt --cert client.crt --key client.key --tlsv1.2 https://10.0.0.134</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> SSL </tag>
            
            <tag> Nginx </tag>
            
            <tag> Auth </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作和使用自签名证书</title>
      <link href="/posts/097e5b7c/"/>
      <url>/posts/097e5b7c/</url>
      
        <content type="html"><![CDATA[<p>在很多使用到证书的场景, 比如 HTTPS, 可以选择去申请一个免费的证书, 也可以尝试自签名证书, 申请免费证书请看:<a href="/posts/28c679c3">使用certbot自动申请ssl证书</a> 或者 <a href="/posts/1e777b9e">使用acme.sh来自动更新https证书</a>, 本文介绍自签名证书.</p><p>可以直接使用我制作好的工具，一键生成证书：<a href="https://github.com/iuxt/my_cert">https://github.com/iuxt/my_cert</a></p><h2 id="SSL-协议加密方式"><a href="#SSL-协议加密方式" class="headerlink" title="SSL 协议加密方式"></a>SSL 协议加密方式</h2><p>SSL 协议即用到了对称加密也用到了非对称加密 (公钥加密)，在建立传输链路时，SSL 首先对对称加密的密钥使用公钥进行非对称加密，链路建立好之后，SSL 对传输内容使用对称加密。</p><ul><li><p>对称加密<br>  速度高，可加密内容较大，用来加密会话过程中的消息。</p></li><li><p>公钥加密<br>  加密速度较慢，但能提供更好的身份认证技术，用来加密对称加密的密钥。</p></li></ul><h2 id="CA-证书"><a href="#CA-证书" class="headerlink" title="CA 证书"></a>CA 证书</h2><h3 id="生成-CA-私钥"><a href="#生成-CA-私钥" class="headerlink" title="生成 CA 私钥"></a>生成 CA 私钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ca.key 4096</span><br></pre></td></tr></table></figure><p>生成一个 <code>ca.key</code> 文件</p><h3 id="生成-CA-证书"><a href="#生成-CA-证书" class="headerlink" title="生成 CA 证书"></a>生成 CA 证书</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">非交互式创建</button><button type="button" class="tab">交互式创建</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -utf8 -new -x509 -days 3650 -key ca.key -out ca.crt -subj <span class="string">&#x27;/C=CN/ST=Shanghai/L=Pudong/O=iuxt/OU=张理坤/CN=www.i.com/emailAddress=iuxt@qq.com&#x27;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -utf8 -new -x509 -days 3650 -key ca.key -out ca.crt</span><br></pre></td></tr></table></figure><p>需要交互式输入:</p><table><thead><tr><th>提示</th><th>含义</th><th>输入内容</th></tr></thead><tbody><tr><td>Country Name</td><td>国家</td><td>CN</td></tr><tr><td>State or Province Name</td><td>省</td><td>Shanghai</td></tr><tr><td>Locality Name</td><td>市</td><td>留空</td></tr><tr><td>Organization Name</td><td>组织名,公司名</td><td>iuxt</td></tr><tr><td>Organizational Unit Name</td><td>团体名</td><td>留空</td></tr><tr><td>Common Name</td><td>你的名字或域名</td><td>zhanglikun</td></tr><tr><td>Email Address</td><td>电子邮箱</td><td><a href="mailto:&#105;&#117;&#120;&#116;&#x40;&#113;&#113;&#x2e;&#99;&#111;&#109;">&#105;&#117;&#120;&#116;&#x40;&#113;&#113;&#x2e;&#99;&#111;&#109;</a></td></tr></tbody></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>就可以生成 <code>ca.crt</code> 文件, 这个文件需要加入到客户端的 <code>受信任的根证书颁发机构</code></p><h2 id="Server-证书"><a href="#Server-证书" class="headerlink" title="Server 证书"></a>Server 证书</h2><h3 id="生成-server-端的私钥"><a href="#生成-server-端的私钥" class="headerlink" title="生成 server 端的私钥"></a>生成 server 端的私钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out server.key 4096</span><br></pre></td></tr></table></figure><h3 id="生成-server-端数字证书请求"><a href="#生成-server-端数字证书请求" class="headerlink" title="生成 server 端数字证书请求"></a>生成 server 端数字证书请求</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">非交互式创建</button><button type="button" class="tab">交互式创建</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -utf8 -new -key server.key -out server.csr -subj <span class="string">&#x27;/C=CN/ST=Shanghai/L=Pudong/O=iuxt/OU=张理坤/CN=*.i.com/emailAddress=iuxt@qq.com&#x27;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -utf8 -new -key server.key -out server.csr</span><br></pre></td></tr></table></figure><p>需要交互式输入:</p><table><thead><tr><th>提示</th><th>含义</th><th>输入内容</th></tr></thead><tbody><tr><td>Country Name</td><td>国家</td><td>CN</td></tr><tr><td>State or Province Name</td><td>省</td><td>Shanghai</td></tr><tr><td>Locality Name</td><td>市</td><td>留空</td></tr><tr><td>Organization Name</td><td>组织名,公司名</td><td>iuxt</td></tr><tr><td>Organizational Unit Name</td><td>团体名</td><td>留空</td></tr><tr><td>Common Name</td><td>你的名字或域名</td><td>这里必须写域名或者 ip</td></tr><tr><td>Email Address</td><td>电子邮箱</td><td><a href="mailto:&#105;&#x75;&#120;&#116;&#64;&#113;&#113;&#x2e;&#x63;&#111;&#109;">&#105;&#x75;&#120;&#116;&#64;&#113;&#113;&#x2e;&#x63;&#111;&#109;</a></td></tr></tbody></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="用-CA-私钥签发-server-的数字证书"><a href="#用-CA-私钥签发-server-的数字证书" class="headerlink" title="用 CA 私钥签发 server 的数字证书"></a>用 CA 私钥签发 server 的数字证书</h3><blockquote><p>解决 chrome 不受信任的问题</p></blockquote><p><code>vim server.ext</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth, clientAuth</span><br><span class="line">subjectAltName=@SubjectAlternativeName</span><br><span class="line"></span><br><span class="line">[ SubjectAlternativeName ]</span><br><span class="line">DNS.1=i.com</span><br><span class="line">DNS.2=*.i.com</span><br><span class="line">IP.1=192.168.1.1</span><br><span class="line">IP.2=192.168.1.2</span><br></pre></td></tr></table></figure><p>在里面填写证书绑定的 IP 和域名, 支持通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -<span class="keyword">in</span> server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 3650 -sha256 -extfile server.ext</span><br></pre></td></tr></table></figure><p>生成 <code>server.crt</code> 证书文件</p><h2 id="将-server-证书配置到-nginx"><a href="#将-server-证书配置到-nginx" class="headerlink" title="将 server 证书配置到 nginx"></a>将 server 证书配置到 nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  ssl_certificate   ssl/i.com.crt;              # server 证书</span><br><span class="line">  ssl_certificate_key ssl/i.com.key;            # server 私钥</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  server_name i.com;</span><br><span class="line"></span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">          default_type text/plain;</span><br><span class="line">          return 200 &quot;hello&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置客户端信任-CA-证书"><a href="#配置客户端信任-CA-证书" class="headerlink" title="配置客户端信任 CA 证书"></a>配置客户端信任 CA 证书</h2><p>使用自签名的证书的域名，客户端是不信任的， 除非客户端信任对应的自签名 CA 证书。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">windows信任CA</button><button type="button" class="tab">Debian系信任CA</button><button type="button" class="tab">Redhat系信任CA</button></div><div class="tab-contents"><div class="tab-item-content active"><p>右键 cacert.crt 选择安装证书， 放进受信任的根证书颁发机构。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202305251008396.png" alt="windows安装CA证书"></p></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> cacert.crt /usr/local/share/ca-certificates/</span><br><span class="line">sudo update-ca-certificates</span><br></pre></td></tr></table></figure><p>然后使用 curl 等工具就受信任了。</p></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> cacert.crt /etc/pki/ca-trust/source/anchors/</span><br><span class="line">sudo update-ca-trust</span><br></pre></td></tr></table></figure><p>然后使用 curl 等工具就受信任了。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>如果只是需要 https 证书，到这里就可以了，下面的步骤是双向认证以及吊销证书需要的。</p></blockquote><hr><h2 id="吊销证书"><a href="#吊销证书" class="headerlink" title="吊销证书"></a>吊销证书</h2><p>我是在 <code>Ubuntu 24.04</code> 系统下操作。不同系统可能会有差别。</p><h3 id="生成证书吊销列表"><a href="#生成证书吊销列表" class="headerlink" title="生成证书吊销列表"></a>生成证书吊销列表</h3><p>准备一份 <code>openssl.cnf</code> 配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[ ca ]</span><br><span class="line">default_ca = CA_default</span><br><span class="line"></span><br><span class="line">[ CA_default ]</span><br><span class="line"># 根目录设置为自定义路径</span><br><span class="line">dir = ./ca</span><br><span class="line"></span><br><span class="line"># 默认算法</span><br><span class="line">default_md = sha256</span><br><span class="line"></span><br><span class="line"># CA 的数据库文件</span><br><span class="line">database = $dir/index.txt</span><br><span class="line"># 证书的序列号文件</span><br><span class="line">serial = $dir/serial</span><br><span class="line"># 新证书的默认有效期</span><br><span class="line">default_days = 365</span><br><span class="line"># 吊销证书的理由</span><br><span class="line">crl_reason = unspecified</span><br><span class="line"># 默认的证书颁发策略</span><br><span class="line">policy = policy_anything</span><br><span class="line"></span><br><span class="line"># CRL 选项</span><br><span class="line">crlnumber = $dir/crlnumber</span><br><span class="line">default_crl_days = 30</span><br><span class="line">crl_extensions = crl_ext</span><br><span class="line"></span><br><span class="line">[ policy_anything ]</span><br><span class="line"># 配置任何策略</span><br><span class="line">countryName = optional</span><br><span class="line">stateOrProvinceName = optional</span><br><span class="line">organizationName = optional</span><br><span class="line">organizationalUnitName = optional</span><br><span class="line">commonName = supplied</span><br><span class="line">emailAddress = optional</span><br><span class="line"></span><br><span class="line">[ crl_ext ]</span><br><span class="line"># CRL 的扩展配置</span><br><span class="line">authorityKeyIdentifier = keyid:always</span><br></pre></td></tr></table></figure><h3 id="吊销指定证书"><a href="#吊销指定证书" class="headerlink" title="吊销指定证书"></a>吊销指定证书</h3><p>其他的证书都是 ca 签发的, 不管是 nginx 用的 server 证书,还是双向认证用到的 client 证书, 吊销证书后需要重新生成 crl 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ca/index.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># crlnumber初始化，第一次给个初始值即可，后面不需要修改，每次重新生成crl的时候会自增。</span></span><br><span class="line">[ ! -f ca/crlnumber ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;01&quot;</span> &gt; ca/crlnumber</span><br><span class="line"></span><br><span class="line"><span class="comment"># 吊销指定证书</span></span><br><span class="line">openssl ca  -config openssl.cnf -cert ca/ca.crt  -keyfile  ca/ca.key  -revoke ssl/i.com.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 吊销完成后，重新生成吊销列表，建议定期重新生成 CRL 文件，并在 Nginx 上 reload 配置</span></span><br><span class="line">openssl ca -config openssl.cnf  -cert ca/ca.crt  -keyfile  ca/ca.key  -gencrl -out ca/crl.pem</span><br></pre></td></tr></table></figure><h3 id="服务端-nginx-配置"><a href="#服务端-nginx-配置" class="headerlink" title="服务端 nginx 配置"></a>服务端 nginx 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  ssl_certificate   ssl/i.com.crt;</span><br><span class="line">  ssl_certificate_key ssl/i.com.key;</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  server_name i.com;</span><br><span class="line"></span><br><span class="line">  ssl_client_certificate ssl/ca.crt;       # 配置 CA 证书，用于验证客户端证书的签发者</span><br><span class="line">  ssl_verify_client on;                    # 启用客户端证书验证</span><br><span class="line">  ssl_crl ssl/crl.pem;                     # 配置 CRL 文件路径，用于检查吊销的证书</span><br><span class="line"></span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">          default_type text/plain;</span><br><span class="line">          return 200 &quot;hello&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置客户端-client-证书"><a href="#配置客户端-client-证书" class="headerlink" title="配置客户端 client 证书"></a>配置客户端 client 证书</h2><p>证书生成方式和上面一样，p12 格式包含私钥和证书，所以生成完成后需要转换成 P12 格式（Windows 系统），然后导入到 Windows 系统中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -<span class="keyword">in</span> zhangsan.crt -inkey zhangsan.key -out zhangsan.p12</span><br></pre></td></tr></table></figure><p>双击导入，存储位置选择个人<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411071859189.png" alt="image.png"></p><p>访问对应网站的时候浏览器会提示让选择证书<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411071900128.png" alt="image.png|845"></p><p>这是证书被吊销的样子：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202411071900403.png" alt="image.png|843"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="查看证书有效期"><a href="#查看证书有效期" class="headerlink" title="查看证书有效期"></a>查看证书有效期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> cacert.crt -noout -dates</span><br></pre></td></tr></table></figure><h3 id="Windows-删除证书"><a href="#Windows-删除证书" class="headerlink" title="Windows 删除证书"></a>Windows 删除证书</h3><p>win + r 运行，输入 <code>certmgr.msc</code> 进入证书管理器。或者在开始菜单搜索 <code>管理用户证书</code> 进入。找到证书，右键删除即可。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
            <tag> Auth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx设置图片防盗链</title>
      <link href="/posts/9e870c50/"/>
      <url>/posts/9e870c50/</url>
      
        <content type="html"><![CDATA[<p>常见的使用 Nginx 进行防盗链配置是利用了 referer, 也就是来源地址来判断, 只要不是白名单中的地址, 就禁止访问, referer 是比较有效的方式, 但是可以轻松绕过, 目的是为了防止页面被别人复制粘贴我们的文章, 图片等资源依然使用我们的连接, 占用带宽或流量造成费用.</p><h2 id="白名单模式"><a href="#白名单模式" class="headerlink" title="白名单模式"></a>白名单模式</h2><p>这种模式就是在白名单之外的所有域名都不能请求我们的图片等资源</p><p>配置示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 资源防盗链（指定目录or指定文件类型）</span><br><span class="line">  location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">  # location /upload/ &#123;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    # none：表示没有 referer 的可以访问</span><br><span class="line">    # blocked：表示 referer 没有值的可以访问</span><br><span class="line">    # server_names：表示 Nginx 的 server_name 可以访问</span><br><span class="line">    # ~.*google\.：google 前后都是正则匹配, ~表示后面的是正则匹配</span><br><span class="line"></span><br><span class="line">    valid_referers none blocked server_names</span><br><span class="line">      127.0.0.1</span><br><span class="line">      ~.*google\.</span><br><span class="line">      ~.*baidu\.</span><br><span class="line">      ~.*bing\.</span><br><span class="line">      ~.*sogou\.</span><br><span class="line">      ~.*360\.</span><br><span class="line">      ~.*zahui.fan;</span><br><span class="line">    if ($invalid_referer) &#123;</span><br><span class="line">      # 这里也可以 return 一个403 等</span><br><span class="line">      rewrite ^/ https://static.zahui.fan/images/babudiu_block.jpg;</span><br><span class="line">    &#125;</span><br><span class="line">    proxy_pass http://halo;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="黑名单模式"><a href="#黑名单模式" class="headerlink" title="黑名单模式"></a>黑名单模式</h2><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes回滚应用之kubectl rollout</title>
      <link href="/posts/8d88b8c4/"/>
      <url>/posts/8d88b8c4/</url>
      
        <content type="html"><![CDATA[<p>kubernetes 每次更新资源会记录资源的历史版本， 方便我们进行回滚操作。真的 k8s 解决了很多运维的痛点问题, 想起来以前没有用 k8s 的时候,用 jenkins 和 ansible 来做的发布和回滚…</p><h2 id="查看历史版本"><a href="#查看历史版本" class="headerlink" title="查看历史版本"></a>查看历史版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout <span class="built_in">history</span> deployment nfs-client-provisioner</span><br><span class="line"></span><br><span class="line">deployment.apps/nfs-client-provisioner</span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">1         &lt;none&gt;</span><br><span class="line">2         &lt;none&gt;</span><br><span class="line">4         &lt;none&gt;</span><br><span class="line">5         &lt;none&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这里列出的就是版本， 为什么没有 3， 因为从版本 4 回滚到了版本 3， 则版本 3 就变成了版本 5</p></blockquote><h2 id="查看指定版本详情"><a href="#查看指定版本详情" class="headerlink" title="查看指定版本详情"></a>查看指定版本详情</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout <span class="built_in">history</span> deployment nfs-client-provisioner --revision=4</span><br></pre></td></tr></table></figure><h2 id="回滚到指定版本"><a href="#回滚到指定版本" class="headerlink" title="回滚到指定版本"></a>回滚到指定版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout undo deployment nfs-client-provisioner --to-revision=4</span><br></pre></td></tr></table></figure><blockquote><p>回滚到上一个版本可以不用增加 <code>--to-revision=4</code> 参数, 默认就是回滚上一个版本</p></blockquote><h2 id="记录版本变化"><a href="#记录版本变化" class="headerlink" title="记录版本变化"></a>记录版本变化</h2><h3 id="执行命令记录变化"><a href="#执行命令记录变化" class="headerlink" title="执行命令记录变化"></a>执行命令记录变化</h3><p>在第一步查看历史版本, CHANGE-CAUSE 显示的是 none, 如果需要记录 kubectl 执行的命令,则执行命令的时候需要添加参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">set</span> image deployment/nginx-deployment nginx=nginx:1.16.1 --record=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这样就会把当前的命令记录到版本的 CHANGE-CAUSE 这一栏</p><h3 id="设置历史版本数量"><a href="#设置历史版本数量" class="headerlink" title="设置历史版本数量"></a>设置历史版本数量</h3><p>在 yml 文件里面可以设置历史版本的数量, 比如:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="查看历史版本-1"><a href="#查看历史版本-1" class="headerlink" title="查看历史版本"></a>查看历史版本</h2><p>如果只是更新了镜像，可以通过命令查看历史的镜像版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 检查参数是否正确</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ] || [ <span class="variable">$#</span> -gt 2 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: <span class="variable">$0</span> &lt;deployment名称&gt; [命名空间]&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">DEPLOYMENT_NAME=<span class="variable">$1</span></span><br><span class="line">NAMESPACE=<span class="variable">$&#123;2:-default&#125;</span>  <span class="comment"># 如果未指定命名空间则使用 default</span></span><br><span class="line"></span><br><span class="line">VER=$(kubectl rollout <span class="built_in">history</span> deployment -n <span class="variable">$NAMESPACE</span> <span class="variable">$DEPLOYMENT_NAME</span> | awk <span class="string">&#x27;NR &gt; 2 &#123;print $1&#125;&#x27;</span> | <span class="built_in">sort</span> -nr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$VER</span>;<span class="keyword">do</span></span><br><span class="line">    kubectl rollout <span class="built_in">history</span> deployment -n <span class="variable">$NAMESPACE</span> <span class="variable">$DEPLOYMENT_NAME</span> --revision=<span class="variable">$i</span> | grep Image:</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubectl </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubeadm之单节点master升级高可用master</title>
      <link href="/posts/34d8fad0/"/>
      <url>/posts/34d8fad0/</url>
      
        <content type="html"><![CDATA[<p>单节点升级 master 总体来说就是两步， 先修改 apiserver 地址为负载均衡地址，然后添加新的 master 节点。</p><p>搭建集群的时候我们注意一下就可以减少后期维护的烦恼，比如：</p><ol><li>使用 hostname 而不是 ip 来作为 kube-apiserver 地址</li><li>单节点也把负载均衡安排上</li></ol><p>假设已经有一个没有负载均衡的单节点 master，现在想将它切换为高可用集群，记录以下步骤：</p><h2 id="部署负载均衡"><a href="#部署负载均衡" class="headerlink" title="部署负载均衡"></a>部署负载均衡</h2><p>参考 <a href="/posts/10cef768/">Kubernetes之master高可用方案</a></p><h2 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h2><blockquote><p>因为我们部署了负载均衡，所以需要通过负载均衡的地址来访问 apiserver，因为证书是针对域名或者 ip 做的签名，如果 ip 变了证书就失效了，这也是为什么建议使用 hostname 来代替 ip</p></blockquote><p>如果你是用 kubeadm init 来创建的集群，那么你需要导出一个 kubeadm 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system get configmap kubeadm-config -o jsonpath=<span class="string">&#x27;&#123;.data.ClusterConfiguration&#125;&#x27;</span> &gt; kubeadm.yaml</span><br></pre></td></tr></table></figure><h3 id="添加证书-SANs-信息"><a href="#添加证书-SANs-信息" class="headerlink" title="添加证书 SANs 信息"></a>添加证书 SANs 信息</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">certSANs:</span></span><br><span class="line">  <span class="comment"># 这里需要包含负载均衡、所有master节点的hostname和ip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">m1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">m2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">m3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span></span><br><span class="line">  <span class="attr">extraArgs:</span></span><br><span class="line">    <span class="attr">authorization-mode:</span> <span class="string">Node,RBAC</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">kube-apiserver:6443</span>  <span class="comment"># 修改成负载均衡的地址</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">k8s.gcr.io</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.21.10</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="生成新的证书"><a href="#生成新的证书" class="headerlink" title="生成新的证书"></a>生成新的证书</h3><p>备份旧证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/kubernetes/pki/apiserver.&#123;crt,key&#125; .</span><br></pre></td></tr></table></figure><p>生成新的证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init phase certs apiserver --config kubeadm.yaml</span><br></pre></td></tr></table></figure><p>验证证书，确定包含新添加的 SAN 列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> /etc/kubernetes/pki/apiserver.crt -text</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">DNS:apiserver-endpoint, DNS:kubernetes, DNS:kubernetes.default, DNS:kubernetes.default.svc, DNS:kubernetes.default.svc.cluster.local, DNS:m1, DNS:m2, DNS:m3, IP Address:10.96.0.1, IP Address:10.0.0.11, IP Address:10.0.0.3, IP Address:10.0.0.12, IP Address:10.0.0.13</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>重启 apiserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod kube-controller-manager-m1 kube-controller-manager-m2</span><br></pre></td></tr></table></figure><h3 id="保存新的配置"><a href="#保存新的配置" class="headerlink" title="保存新的配置"></a>保存新的配置</h3><p>这步操作其实是把 kubeadm 的配置给保存在集群中， 以后添加新的节点就会读取这个配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init phase upload-config kubeadm --config kubeadm.yaml</span><br></pre></td></tr></table></figure><p>当然你也可以手动编辑 configmap</p><h2 id="更新配置"><a href="#更新配置" class="headerlink" title="更新配置"></a>更新配置</h2><p>证书更新完成了，负载均衡也部署好了，接下来就需要把所有用到旧地址的组件配置修改成负载均衡的地址。</p><h3 id="kubelet-conf"><a href="#kubelet-conf" class="headerlink" title="kubelet.conf"></a>kubelet.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/kubelet.conf</span><br><span class="line">...</span><br><span class="line">    server: https://kube-apiserver:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure><h3 id="controller-manager-conf"><a href="#controller-manager-conf" class="headerlink" title="controller-manager.conf"></a>controller-manager.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/controller-manager.conf</span><br><span class="line">...</span><br><span class="line">    server: https://kube-apiserver:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>重启 kube-controller-manager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kube-system kube-controller-manager-m1 kube-controller-manager-m2</span><br></pre></td></tr></table></figure><h3 id="scheduler-conf"><a href="#scheduler-conf" class="headerlink" title="scheduler.conf"></a>scheduler.conf</h3><p>vim &#x2F;etc&#x2F;kubernetes&#x2F;scheduler.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    server: https://kube-apiserver:6443</span><br><span class="line">  name: kubernetes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>重启 kube-scheduler</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kube-system kube-scheduler-m1 kube-scheduler-m2</span><br></pre></td></tr></table></figure><h3 id="kube-proxy"><a href="#kube-proxy" class="headerlink" title="kube-proxy"></a>kube-proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit configmap kube-proxy -n kube-system</span><br><span class="line">...</span><br><span class="line">  kubeconfig.conf: |-</span><br><span class="line">    apiVersion: v1</span><br><span class="line">    kind: Config</span><br><span class="line">    clusters:</span><br><span class="line">    - cluster:</span><br><span class="line">        certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">        server: https://kube-apiserver:6443</span><br><span class="line">      name: default</span><br><span class="line">    contexts:</span><br><span class="line">    - context:</span><br><span class="line">        cluster: default</span><br><span class="line">        namespace: default</span><br><span class="line">        user: default</span><br><span class="line">      name: default</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>重启 kube-proxy</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout restart daemonset kube-proxy -n kube-system</span><br></pre></td></tr></table></figure><p>kubeconfig 上面的地址也需要改，比如 <code>~/.kube/config</code> 和 <code>/etc/kubernetes/admin.conf</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://kube-apiserver:6443</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="添加控制平面"><a href="#添加控制平面" class="headerlink" title="添加控制平面"></a>添加控制平面</h2><p>添加控制平面 (master) 请查看：<a href="/posts/b86d9e9f/#%E8%8E%B7%E5%8F%96join%E5%91%BD%E4%BB%A4-%E5%A2%9E%E5%8A%A0%E6%96%B0%E7%9A%84%E8%8A%82%E7%82%B9">kubeadm添加master节点</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeasz搭建一套高可用的Kubernetes集群</title>
      <link href="/posts/6f59afe4/"/>
      <url>/posts/6f59afe4/</url>
      
        <content type="html"><![CDATA[<p>kubeasz 是基于 ansible 和 shell 制作的工具，可以快速搭建一个高可用的 k8s 集群（二进制部署），不需要额外的负载均衡。项目地址：<a href="https://github.com/easzlab/kubeasz">https://github.com/easzlab/kubeasz</a>, kubeasz 每个版本对应了支持的 k8s 版本, 可以到项目主页查看, 这里使用 kubeasz 版本 3.6.3, 部署 <code>k8s 1.29.0</code></p><blockquote><p>另见 kubeadm 部署<br><a href="/posts/b86d9e9f/">在centos使用kubeadm部署k8s</a><br><a href="/posts/526ffc9a/">在ubuntu使用kubeadm部署k8s</a></p></blockquote><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p>准备机器如下：</p><table><thead><tr><th>机器</th><th>IP</th></tr></thead><tbody><tr><td>kubeasz 操作机</td><td>10.0.0.7</td></tr><tr><td>master1</td><td>10.0.0.31</td></tr><tr><td>master2</td><td>10.0.0.32</td></tr><tr><td>master3</td><td>10.0.0.33</td></tr><tr><td>worker1</td><td>10.0.0.41</td></tr></tbody></table><p>首先确保操作机可以通过 ssh 连接到其他所有机器，最好密钥打通（这是使用 ansible 的必要条件）</p><h2 id="安装-kubeasz"><a href="#安装-kubeasz" class="headerlink" title="安装 kubeasz"></a>安装 kubeasz</h2><h3 id="下载-ezdown-部署工具"><a href="#下载-ezdown-部署工具" class="headerlink" title="下载 ezdown 部署工具"></a>下载 ezdown 部署工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> release=3.6.3                     <span class="comment"># 设置kubeasz版本</span></span><br><span class="line">wget https://github.com/easzlab/kubeasz/releases/download/<span class="variable">$&#123;release&#125;</span>/ezdown</span><br><span class="line"><span class="built_in">chmod</span> +x ./ezdown</span><br></pre></td></tr></table></figure><h3 id="下载-kubeasz-离线包等"><a href="#下载-kubeasz-离线包等" class="headerlink" title="下载 kubeasz 离线包等"></a>下载 kubeasz 离线包等</h3><p>下载的文件位于 <code>/etc/kubeasz/</code> 目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载默认版本</span></span><br><span class="line">./ezdown -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用-k参数指定需要下载的k8s版本</span></span><br><span class="line"><span class="comment"># ./ezdown -D -k v1.29.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Docker容器版ezctl</span></span><br><span class="line">./ezdown -S</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载flannel组件</span></span><br><span class="line">./ezdown -X flannel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载离线deb/rpm包</span></span><br><span class="line"><span class="comment"># ./ezdown -P</span></span><br></pre></td></tr></table></figure><h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/kubeasz/</span><br><span class="line">dk ezctl new k8s-cluster</span><br></pre></td></tr></table></figure><p>根据需求修改配置文件</p><p>ansible 主机清单（定义主机 IP）<code>/etc/kubeasz/clusters/k8s-cluster/hosts</code><br>集群配置文件 <code>/etc/kubeasz/clusters/k8s-cluster/config.yml</code></p><p>开始部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dk ezctl setup k8s-cluster all</span><br></pre></td></tr></table></figure><h2 id="检查部署结果"><a href="#检查部署结果" class="headerlink" title="检查部署结果"></a>检查部署结果</h2><p>查看 kubernetes 集群的组件状态（基本都是通过 systemd 管理的）</p><h3 id="在-master-节点上查看"><a href="#在-master-节点上查看" class="headerlink" title="在 master 节点上查看"></a>在 master 节点上查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status etcd</span><br><span class="line">systemctl status kube-apiserver</span><br><span class="line">systemctl status kube-scheduler</span><br><span class="line">systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure><h3 id="在-master-和-node-节点上查看"><a href="#在-master-和-node-节点上查看" class="headerlink" title="在 master 和 node 节点上查看"></a>在 master 和 node 节点上查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status kubelet </span><br><span class="line">systemctl status kube-proxy </span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h2 id="清理集群"><a href="#清理集群" class="headerlink" title="清理集群"></a>清理集群</h2><p>如果需要执行清理操作:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dk ezctl destroy k8s-cluster</span><br></pre></td></tr></table></figure><h2 id="节点管理"><a href="#节点管理" class="headerlink" title="节点管理"></a>节点管理</h2><p>操作机建议保留， 后期进行扩容等会非常方便。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新增master节点</span></span><br><span class="line">dk ezctl add-master k8s-cluster 10.0.0.34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增etcd节点</span></span><br><span class="line">dk ezctl add-etcd k8s-cluster 10.0.0.34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增worker节点</span></span><br><span class="line">dk ezctl add-node k8s-cluster 10.0.0.41</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除etcd节点</span></span><br><span class="line">dk ezctl del-etcd k8s-cluster 10.0.0.34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除master节点</span></span><br><span class="line">dk ezctl del-master k8s-cluster 10.0.0.34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除worker节点</span></span><br><span class="line">dk ezctl del-node k8s-cluster 10.0.0.41</span><br></pre></td></tr></table></figure><h3 id="master-允许调度"><a href="#master-允许调度" class="headerlink" title="master 允许调度"></a>master 允许调度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl uncordon master-01</span><br><span class="line">kubectl uncordon master-02</span><br><span class="line">kubectl uncordon master-03</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm部署一套高可用k8s集群 for CentOS</title>
      <link href="/posts/b86d9e9f/"/>
      <url>/posts/b86d9e9f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 centos 使用 kubeadm 搭建集群， <a href="/posts/526ffc9a/">ubuntu部署文档</a>, 有疑问的地方可以看 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/">官方文档</a></p></blockquote><h2 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h2><blockquote><p>我的机器详情如下, 配置至少为 4C4G</p></blockquote><table><thead><tr><th>hostname</th><th>IP</th><th>作用</th></tr></thead><tbody><tr><td>public</td><td>10.0.0.3</td><td>ingress 和 apiserver 的负载均衡，nfs 存储</td></tr><tr><td>master1</td><td>10.0.0.11</td><td>k8s master 节点</td></tr><tr><td>master2</td><td>10.0.0.12</td><td>k8s master 节点</td></tr><tr><td>master3</td><td>10.0.0.13</td><td>k8s master 节点</td></tr><tr><td>worker1</td><td>10.0.0.21</td><td>k8s worker 节点</td></tr><tr><td>worker2</td><td>10.0.0.22</td><td>k8s worker 节点</td></tr></tbody></table><p>每台机器都做域名解析，或者绑定 hosts(可选但建议)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.0.3  public kube-apiserver</span><br><span class="line">10.0.0.11 master1</span><br><span class="line">10.0.0.12 master2</span><br><span class="line">10.0.0.13 master3</span><br></pre></td></tr></table></figure><p>每台机器都关闭防火墙和 SELinux</p><blockquote><p>负载均衡机器必须要关闭,因为 6443 不是 nginx 的标准端口,会被 selinux 拦截, 防火墙也需要放行 6443 端口, 可以考虑直接关闭</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><blockquote><p>基础环境是不管 master 还是 worker 都需要的环境</p></blockquote><ol><li>禁用 swap</li><li>确保每个节点上 MAC 地址和 product_uuid 的唯一性 <code>sudo cat /sys/class/dmi/id/product_uuid</code></li><li>修改 hostname</li><li>允许 iptables 检查桥接流量</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h3 id="安装-runtime"><a href="#安装-runtime" class="headerlink" title="安装 runtime"></a>安装 runtime</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Containerd</button><button type="button" class="tab">Docker</button></div><div class="tab-contents"><div class="tab-item-content active"><h4 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置必需的 sysctl 参数，这些参数在重新启动后仍然存在。</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用 sysctl 参数而无需重新启动</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧版本Docker</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">        docker-client \</span><br><span class="line">        docker-client-latest \</span><br><span class="line">        docker-common \</span><br><span class="line">        docker-latest \</span><br><span class="line">        docker-latest-logrotate \</span><br><span class="line">        docker-logrotate \</span><br><span class="line">        docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker仓库</span></span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装containerd</span></span><br><span class="line">sudo yum install containerd.io -y</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>生成默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/containerd</span><br><span class="line">containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><p>结合 runc 使用 systemd cgroup 驱动，在 <code>/etc/containerd/config.toml</code> 中设置</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc]</span></span><br><span class="line">...</span><br><span class="line"><span class="section">[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc.options]</span></span><br><span class="line">   <span class="attr">SystemdCgroup</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> containerd</span><br><span class="line">sudo systemctl restart containerd</span><br></pre></td></tr></table></figure><h4 id="crictl-配置"><a href="#crictl-配置" class="headerlink" title="crictl 配置"></a>crictl 配置</h4><p>之前使用 docker 的时候，docker 给我们做了很多好用的工具，现在用了 containerd，管理容器我们用 cri 管理工具 crictl，创建配置文件</p><p>vim &#x2F;etc&#x2F;crictl.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtime-endpoint:</span> <span class="string">unix:///run/containerd/containerd.sock</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br></pre></td></tr></table></figure><h4 id="配置-Doker"><a href="#配置-Doker" class="headerlink" title="配置 Doker"></a>配置 Doker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /etc/docker</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now docker</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用官方仓库</button><button type="button" class="tab">使用阿里云镜像仓库</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">exclude=kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo yum install -y kubelet-1.21.10-0 kubeadm-1.21.10-0 kubectl-1.21.10-0 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now kubelet</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建仓库文件</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本的kubeadm</span></span><br><span class="line">yum install -y --nogpgcheck kubelet-1.21.10-0 kubeadm-1.21.10-0 kubectl-1.21.10-0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动kubelet</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="准备高可用方案"><a href="#准备高可用方案" class="headerlink" title="准备高可用方案"></a>准备高可用方案</h2><p><a href="/posts/10cef768/">Kubernetes之master高可用方案</a></p><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><h3 id="kubeadm-init"><a href="#kubeadm-init" class="headerlink" title="kubeadm init"></a>kubeadm init</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">官方镜像源</button><button type="button" class="tab">国内阿里云镜像源</button></div><div class="tab-contents"><div class="tab-item-content active"><p>在 init 之前先将镜像拉取到本地（可选步骤）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version 1.21.10</span><br></pre></td></tr></table></figure><p>在 k8s-master0 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--kubernetes-version 1.21.10 \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;kube-apiserver:6443&quot;</span> \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在 init 之前先将镜像拉取到本地（可选步骤）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version 1.21.10 --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><p>在 k8s-master0 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--kubernetes-version 1.21.10 \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;kube-apiserver:6443&quot;</span> \</span><br><span class="line">--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>也可以用 <code>kubeadm config print init-defaults &gt; init.yaml</code> 生成 kubeadm 的配置，并用<br><code>kubeadm init --config=init.yaml</code> 来创建集群。</p></blockquote><h3 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">安装flannel插件</button><button type="button" class="tab">安装calico插件</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待补充</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><a href="/posts/sepu3k/">kubeadm 部署的集群 常见问题汇总</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置树莓派关机时正常停转移动硬盘</title>
      <link href="/posts/8e3fdb74/"/>
      <url>/posts/8e3fdb74/</url>
      
        <content type="html"><![CDATA[<p>将闲置的树莓派做个共享服务器，在家里面存一些文件用。将树莓派和移动硬盘盒都已经改装好了，固定在了一起，用一块 12864 来显示一些信息，比如磁盘空间占用等。</p><p>树莓派 3B+ 的千兆网口和 usb 接口相当于是一个 usb2.0 hub 分出来的， 速度根本达不到千兆，还抢占 usb 的带宽。实测速度 20M&#x2F;s 左右（硬盘速度能跑到 100M&#x2F;s）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/raspberrypi-3b+.jpg" alt="树莓派3B+"></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>每次关机或者重启的时候，都会遇到硬盘吱~的一声，这种情况是操作系统关机的时候没有通知硬盘磁头归位直接断电， 这样硬盘会自己将磁头归位，就会有声音。时间久了对机械硬盘是一种损伤。</p><p>参考<a href="http://www.linux-ata.org/shutdown.html">http://www.linux-ata.org/shutdown.html</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="查找硬盘启停配置"><a href="#查找硬盘启停配置" class="headerlink" title="查找硬盘启停配置"></a>查找硬盘启停配置</h3><p>在 linux 系统里面，一切皆文件，硬盘的各种信息也不列外。我们可以到 <code>/sys/class/scsi_disk/</code> 找自己的硬盘，可以通过查看硬盘的型号来确定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /sys/class/scsi_disk/0:0:0:0/device/model</span><br></pre></td></tr></table></figure><p>文件 <code>manage_start_stop</code> 就是配置磁头归位的，只需要将此文件内容设置成 1 即可。需要每次开机后都执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c <span class="string">&quot;echo 1 &gt; /sys/class/scsi_disk/0\:0\:0\:0/manage_start_stop&quot;</span></span><br></pre></td></tr></table></figure><h3 id="也可以批量对所有硬盘执行这个操作"><a href="#也可以批量对所有硬盘执行这个操作" class="headerlink" title="也可以批量对所有硬盘执行这个操作"></a>也可以批量对所有硬盘执行这个操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> /sys/class/scsi_disk/*/manage_start_stop;<span class="keyword">do</span> <span class="built_in">echo</span> 1 &gt; <span class="variable">$i</span>;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h3><p>个人喜欢使用 systemd 来进行开机自启动</p><p><code>vim /etc/systemd/system/custom.service</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span> = Custom Startup Service</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span> = simple</span><br><span class="line"><span class="attr">ExecStart</span> = /opt/scripts/custom.sh</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span> = multi-user.target</span><br></pre></td></tr></table></figure><p>将需要开机自定的命令写到 <code>/opt/scripts/custom.sh</code> 里面</p><p><code>sudo systemctl enable custom.service</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Disk </tag>
            
            <tag> 开发版 </tag>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群调度之节点亲和性、Pod亲和性、污点与容忍</title>
      <link href="/posts/aec8a52c/"/>
      <url>/posts/aec8a52c/</url>
      
        <content type="html"><![CDATA[<h2 id="调度器"><a href="#调度器" class="headerlink" title="调度器"></a>调度器</h2><p>Scheduler 是 Kubernetes 的调度器，主要的任务是把定义的 pod 分配到集群的节点上。听起来非常简单，但有很多要考虑的问题：</p><ul><li>公平：如何保证每个节点都能被分配资源</li><li>资源高效利用：集群所有资源最大化被使用</li><li>效率：调度的性能要好，能够尽快地对大批量的 pod 完成调度工作</li><li>灵活：允许用户根据自己的需求控制调度的逻辑 k</li></ul><p>Scheduler 是作为单独的程序运行的，启动之后会一直监听 API Server，获取 PodSpec.NodeName 为空的 pod，对每个 pod 都会创建一个 binding（必须遵守的），表明该 pod 应该放到哪个节点上</p><h3 id="调度过程"><a href="#调度过程" class="headerlink" title="调度过程"></a>调度过程</h3><p>调度分为几个步骤：</p><ol><li>首先是过滤掉不满足条件的节点，这个过程称为 predicate（预选）；</li><li>然后对通过的节点按照优先级排序，这个是 priority（优选）；</li><li>最后从中选择优先级最高的节点。</li></ol><p>Predicate（预选）有一系列的算法可以使用：</p><table><thead><tr><th>算法</th><th>说明</th></tr></thead><tbody><tr><td>PodFitsResources</td><td>节点上剩余的资源是否大于 pod 请求的资源</td></tr><tr><td>PodFitsHost</td><td>如果 pod 指定了 NodeName，检查节点名称是否和 NodeName 匹配</td></tr><tr><td>PodFitsHostPorts</td><td>节点上已经使用的 port 是否和 pod 申请的 port 冲突</td></tr><tr><td>PodSelectorMatches</td><td>过滤掉和 pod 指定的 label 不匹配的节点</td></tr><tr><td>NoDiskConflict</td><td>已经 mount 的 volume 和 pod 指定的 volume 不冲突，除非它们都是只读</td></tr></tbody></table><p>如果在 predicate 过程中没有合适的节点，pod 会一直在 pending 状态，不断重试调度，直到有节点满足条件。经过这个步骤，如果有多个节点满足条件，就继续 priorities 过程：按照优先级大小对节点排序</p><p><strong>优先级由一系列键值对组成，键是该优先级项的名称，值是它的权重（该项的重要性）。这些优先级选项包括：</strong></p><table><thead><tr><th>算法</th><th>说明</th></tr></thead><tbody><tr><td>LeastRequestedPriority</td><td>通过计算 CPU 和 Memory 的使用率来决定权重，使用率越低权重越高。换句话说，这个优先级指标倾向于资源使用比例更低的节点</td></tr><tr><td>BalancedResourceAllocation</td><td>节点上 CPU 和 Memory 使用率越接近，权重越高。这个应该和上面的一起使用，不应该单独使用</td></tr><tr><td>ImageLocalityPriority</td><td>倾向于已经有要使用镜像的节点，镜像总大小值越大，权重越高</td></tr></tbody></table><p>通过算法对所有的优先级项目和权重进行计算，得出最终的结果</p><h2 id="节点亲和性"><a href="#节点亲和性" class="headerlink" title="节点亲和性"></a>节点亲和性</h2><p>pod.spec.nodeAffinity</p><ul><li>preferredDuringSchedulingIgnoredDuringExecution（优先执行计划）：软策略</li><li>requiredDuringSchedulingIgnoredDuringExecution（要求执行计划）：硬策略</li></ul><p>键值运算关系</p><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>In</td><td>label 的值在某个列表中</td></tr><tr><td>NotIn</td><td>label 的值不在某个列表中</td></tr><tr><td>Gt</td><td>label 的值大于某个值</td></tr><tr><td>Lt</td><td>label 的值小于某个值</td></tr><tr><td>Exists</td><td>某个 label 存在</td></tr><tr><td>DoesNotExist</td><td>某个 label 不存在</td></tr></tbody></table><p>标签操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看label</span></span><br><span class="line">kubectl get node --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加label</span></span><br><span class="line">kubectl label nodes 192.168.15.182 nodetype=hci</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除label</span></span><br><span class="line">kubectl label nodes 192.168.15.182 nodetype-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改label</span></span><br><span class="line">kubectl label nodes 192.168.15.182 nodetype=vmware --overwrite</span><br></pre></td></tr></table></figure><h3 id="硬策略：requiredDuringSchedulingIgnoredDuringExecution"><a href="#硬策略：requiredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="硬策略：requiredDuringSchedulingIgnoredDuringExecution"></a>硬策略：requiredDuringSchedulingIgnoredDuringExecution</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#节点硬策略。排除node02，只能在node01上运行</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: affinity</span><br><span class="line">  labels:</span><br><span class="line">    app: node-affinity-pod</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: with-node-affinity</span><br><span class="line">    image: hub.atguigu.com/library/myapp:v1</span><br><span class="line">  affinity:            <span class="comment">#亲和性</span></span><br><span class="line">    nodeAffinity:        <span class="comment">#node亲和性</span></span><br><span class="line">      <span class="comment"># 硬亲和性限制</span></span><br><span class="line">      requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">        nodeSelectorTerms:</span><br><span class="line">        - matchExpressions:</span><br><span class="line">          - key: kubernetes.io/hostname <span class="comment"># 标签键名</span></span><br><span class="line">            operator: NotIn      <span class="comment">#键值运算关系 ，NotIn:label的值不在某个列表中。 表示不是node02节点就可运行</span></span><br><span class="line">            values:</span><br><span class="line">            - k8s-node02 <span class="comment"># 标签键值</span></span><br></pre></td></tr></table></figure><h3 id="软策略：preferredDuringSchedulingIgnoredDuringExecution"><a href="#软策略：preferredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="软策略：preferredDuringSchedulingIgnoredDuringExecution"></a>软策略：preferredDuringSchedulingIgnoredDuringExecution</h3><p>如果有的话就在上面运行，没有的话就算了</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#软策略</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">affinity2</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">node-affinity-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">with-node-affinity</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="attr">nodeAffinity:</span></span><br><span class="line">      <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span>   <span class="comment">#权重，权重越大越亲和(多个软策略的情况)</span></span><br><span class="line">        <span class="attr">preference:</span> </span><br><span class="line">          <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">k8s-node03</span>  <span class="comment"># 期望是node03</span></span><br></pre></td></tr></table></figure><h3 id="软硬策略（先满足硬策略再满足软策略）"><a href="#软硬策略（先满足硬策略再满足软策略）" class="headerlink" title="软硬策略（先满足硬策略再满足软策略）"></a>软硬策略（先满足硬策略再满足软策略）</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#软硬合体</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">affinity2</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">node-affinity-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">with-node-affinity</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="attr">nodeAffinity:</span>        <span class="comment">#node亲和性</span></span><br><span class="line">      <span class="comment"># 硬亲和性限制</span></span><br><span class="line">      <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">        <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span> <span class="comment"># 标签键名</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">NotIn</span>      <span class="comment">#键值运算关系 ，NotIn:label的值不在某个列表中。 表示不是node02节点就可运行</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">k8s-node02</span> <span class="comment"># 标签键值</span></span><br><span class="line">      <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span>   <span class="comment">#权重，权重越大越亲和(多个软策略的情况)</span></span><br><span class="line">        <span class="attr">preference:</span> </span><br><span class="line">          <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">            <span class="attr">values:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">k8s-node03</span>  <span class="comment"># 期望是node03</span></span><br></pre></td></tr></table></figure><h2 id="Pod-亲和性（pod-与-pod-之间的亲和性）"><a href="#Pod-亲和性（pod-与-pod-之间的亲和性）" class="headerlink" title="Pod 亲和性（pod 与 pod 之间的亲和性）"></a>Pod 亲和性（pod 与 pod 之间的亲和性）</h2><p>pod.spec.affinity.podAffinity&#x2F;podAntiAffinity</p><ul><li>preferredDuringSchedulingIgnoredDuringExecution：软策略</li><li>requiredDuringSchedulingIgnoredDuringExecution：硬策略</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-3</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pod-3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-3</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="comment">#想让两个pod运行在同一个node上</span></span><br><span class="line">    <span class="attr">podAffinity:</span></span><br><span class="line">      <span class="comment">#硬策略</span></span><br><span class="line">      <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">labelSelector:</span>  <span class="comment">#标签选择</span></span><br><span class="line">          <span class="attr">matchExpressions:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span> <span class="comment">#当app存在node-affinity-pod时就选择</span></span><br><span class="line">            <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">            <span class="attr">values:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="string">node-affinity-pod</span></span><br><span class="line">        <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span> </span><br><span class="line">        <span class="comment">#hostname判断是否在同一个pod，唯一</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-4</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pod-4</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pod-4</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">  <span class="attr">affinity:</span></span><br><span class="line">    <span class="comment">#不想让两个pod运行在同一个node上</span></span><br><span class="line">    <span class="comment">#匹配标签如果app=pod-2，那么则不运行在这个节点</span></span><br><span class="line">    <span class="attr">podAntiAffinity:</span></span><br><span class="line">      <span class="comment">#软策略</span></span><br><span class="line">      <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">podAffinityTerm:</span></span><br><span class="line">          <span class="attr">labelSelector:</span></span><br><span class="line">            <span class="attr">matchExpressions:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span> <span class="comment">#匹配app=node-affinity-pod</span></span><br><span class="line">              <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">              <span class="attr">values:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">node-affinity-pod</span></span><br><span class="line">          <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br></pre></td></tr></table></figure><h2 id="Taint-和-Toleration"><a href="#Taint-和-Toleration" class="headerlink" title="Taint 和 Toleration"></a>Taint 和 Toleration</h2><p>节点亲和性，是 pod 的一种属性（偏好或硬性要求），它使 pod 被吸引到一类特定的节点。Taint 则相反，它使节点能够排斥一类特定的 pod</p><p>Taint 和 toleration 相互配合，可以用来避免 pod 被分配到不合适的节点上。每个节点上都可以应用一个或多个 taint ，这表示对于那些不能容忍这些 taint 的 pod，是不会被该节点接受的。如果将 toleration 应用于 pod 上，则表示这些 pod 可以（但不要求）被调度到具有匹配 taint 的节点上</p><h3 id="污点-Taint"><a href="#污点-Taint" class="headerlink" title="污点 (Taint)"></a>污点 (Taint)</h3><h4 id="1、污点-Taint-的组成"><a href="#1、污点-Taint-的组成" class="headerlink" title="1、污点 ( Taint ) 的组成"></a>1、污点 ( Taint ) 的组成</h4><p>使用 kubectl taint 命令可以给某个 Node 节点设置污点，Node 被设置上污点之后就和 Pod 之间存在了一种相斥的关系，可以让 Node 拒绝 Pod 的调度执行，甚至将 Node 已经存在的 Pod 驱逐出去每个污点的组成如下：</p><p><code>key=value:effect</code></p><p>每个污点有一个 key 和 value 作为污点的标签，其中 value 可以为空，effect 描述污点的作用。当前 taint effect 支持如下三个选项：</p><table><thead><tr><th>污点类型</th><th>含义</th></tr></thead><tbody><tr><td>NoSchedule</td><td>新的不能容忍的 pod 不能再调度过来，但是老的运行在 node 上不受影响</td></tr><tr><td>PreferNoSchedule</td><td>同时会将 Node 上已经存在的 Pod 驱逐出去, pod 会尝试将 pod 分配到该节点</td></tr><tr><td>NoExecute</td><td>新的不能容忍的 pod 不能调度过来，老的 pod 也会被驱逐</td></tr></tbody></table><h4 id="2、污点的设置、查看和去除"><a href="#2、污点的设置、查看和去除" class="headerlink" title="2、污点的设置、查看和去除"></a>2、污点的设置、查看和去除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看节点污点</span></span><br><span class="line">kubectl describe node k8s-node01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置污点</span></span><br><span class="line">kubectl taint nodes node1 key1=value1:NoSchedule</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点说明中，查找 Taints 字段</span></span><br><span class="line">kubectl describe node k8s-node01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除污点</span></span><br><span class="line">kubectl taint nodes node1 key1:NoSchedule-</span><br></pre></td></tr></table></figure><h3 id="容忍-Tolerations"><a href="#容忍-Tolerations" class="headerlink" title="容忍 (Tolerations)"></a>容忍 (Tolerations)</h3><p>设置了污点的 Node 将根据 taint 的 effect：NoSchedule、PreferNoSchedule、NoExecute 和 Pod 之间产生互斥的关系，Pod 将在一定程度上不会被调度到 Node 上。但我们可以在 Pod 上设置容忍 ( Toleration ) ，意思是设置了容忍的 Pod 将可以容忍污点的存在，可以被调度到存在污点的 Node 上</p><p>pod.spec.tolerations</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span>                <span class="comment"># containers同级</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;disk_type&quot;</span>          <span class="comment"># 能容忍的污点key</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Equal&quot;</span>         <span class="comment"># Equal 表示key=value ， Exists 只要存在key即可</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">&quot;SSD&quot;</span>              <span class="comment"># 值</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="string">&quot;NoExecute&quot;</span>       <span class="comment"># effect策略</span></span><br><span class="line">  <span class="attr">tolerationSeconds:</span> <span class="number">3600</span>   <span class="comment"># 原始的pod多久驱逐,单位是秒，注意只有effect: &quot;NoExecute&quot;才能设置，不然报错</span></span><br></pre></td></tr></table></figure><blockquote><p>其中 key, vaule, effect 要与 Node 上设置的 taint 保持一致<br>operator 的值为 Exists 将会忽略 value 值</p></blockquote><h4 id="1、当不指定-key-值时，表示容忍所有的污点-key"><a href="#1、当不指定-key-值时，表示容忍所有的污点-key" class="headerlink" title="1、当不指定 key 值时，表示容忍所有的污点 key"></a>1、当不指定 key 值时，表示容忍所有的污点 key</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2、当不指定-effect-值时，表示容忍所有的污点作用"><a href="#2、当不指定-effect-值时，表示容忍所有的污点作用" class="headerlink" title="2、当不指定 effect 值时，表示容忍所有的污点作用"></a>2、当不指定 effect 值时，表示容忍所有的污点作用</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line">  <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br></pre></td></tr></table></figure><h2 id="指定调度节点"><a href="#指定调度节点" class="headerlink" title="指定调度节点"></a>指定调度节点</h2><p>亲和性和污点，容忍都比较含蓄。<br>指定调度节点是绝对指定目标，就要这个</p><h3 id="Pod-spec-nodeName"><a href="#Pod-spec-nodeName" class="headerlink" title="Pod.spec.nodeName"></a>Pod.spec.nodeName</h3><p>将 Pod 直接调度到指定的 Node 节点上，会跳过 Scheduler 的调度策略，该匹配规则是强制匹配</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">k8s-node01</span>          <span class="comment"># 指定全在k8s-node01</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h3 id="Pod-spec-nodeSelector"><a href="#Pod-spec-nodeSelector" class="headerlink" title="Pod.spec.nodeSelector"></a>Pod.spec.nodeSelector</h3><p>通过 kubernetes 的 label-selector 机制选择节点，由调度器调度策略匹配 label，而后调度 Pod 到目标节点，该匹配规则属于强制约束</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb66</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb66</span></span><br><span class="line">  <span class="attr">spec:</span></span><br><span class="line">    <span class="attr">nodeSelector:</span></span><br><span class="line">      <span class="attr">disk:</span> <span class="string">ssd</span>                 <span class="comment"># 硬盘必须是ssd类型才运行</span></span><br><span class="line">      <span class="comment"># type: backEndNode1      # 标签名，标签值</span></span><br><span class="line">    <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myweb66</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scheduler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用acme.sh来自动更新https证书</title>
      <link href="/posts/1e777b9e/"/>
      <url>/posts/1e777b9e/</url>
      
        <content type="html"><![CDATA[<p>使用 acme.sh 可以自动申请 let’s encrypt 证书，并且可以自动配置到 nginx，整个过程可以全自动。<br>也可以使用 certbot，certbot 基于 acme.sh<a href="/posts/28c679c3">使用certbot自动申请ssl证书</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>推荐安装 socat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install socat</span><br></pre></td></tr></table></figure><p>安装 acme.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><p>退出终端，重新登陆后，执行 acme.sh 有输出，说明安装成功了。</p><h2 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱"></a>配置邮箱</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --register-account -m <span class="string">&quot;iuxt@qq.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="配置默认-CA"><a href="#配置默认-CA" class="headerlink" title="配置默认 CA"></a>配置默认 CA</h2><p>新版默认 zerossl，也可以手动切换为 let’s encrypt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># acme.sh --set-default-ca --server letsencrypt</span></span><br><span class="line"><span class="comment"># acme.sh --set-default-ca --server zerossl</span></span><br></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>acme.sh 实现了 acme 协议支持的所有验证协议.<br>一般有两种方式验证: http 和 dns 验证.</p><h3 id="使用-dns-api-自动申请"><a href="#使用-dns-api-自动申请" class="headerlink" title="使用 dns api 自动申请"></a>使用 dns api 自动申请</h3><p>官方说明: <a href="https://github.com/acmesh-official/acme.sh/wiki/dnsapi">https://github.com/acmesh-official/acme.sh/wiki/dnsapi</a></p><h4 id="DNSpod"><a href="#DNSpod" class="headerlink" title="DNSpod"></a>DNSpod</h4><p>这里以 dnspod 为例，申请一个 dnspod 的 api key<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20220428083952.png" alt="申请dnspod api|861"></p><p>将 id 和 key 记录下来，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DP_Id=<span class="string">&quot;310134&quot;</span></span><br><span class="line"><span class="built_in">export</span> DP_Key=<span class="string">&quot;你的api key&quot;</span></span><br><span class="line"></span><br><span class="line">acme.sh --issue --dns dns_dp -d babudiu.com -d www.babudiu.com</span><br></pre></td></tr></table></figure><p>执行一次就会把 id 和 key 记录在 <code>~/.acme.sh/account.conf</code>，下次再执行就不用再提供 id 和 key 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遇到问题可以查看debug日志</span></span><br><span class="line">acme.sh --issue --dns dns_dp -d jenkins.babudiu.com --debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 申请泛域名证书, 泛域名不包括一级域名, 所以也要把一级域名加上</span></span><br><span class="line">acme.sh --issue --dns dns_dp -d babudiu.com -d *.babudiu.com</span><br></pre></td></tr></table></figure><p>如果找不到 acme.sh， 可以使用绝对路径 <code>~/.acme.sh/acme.sh</code></p><h4 id="cloudflare-dns"><a href="#cloudflare-dns" class="headerlink" title="cloudflare dns"></a>cloudflare dns</h4><p>获取 API 令牌<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312091611899.png" alt="image.png|879"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">&quot;你的api key&quot;</span></span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">&quot;iuxt@qq.com&quot;</span></span><br><span class="line">acme.sh --issue --dns dns_cf --dnssleep 600 -d babudiu.com -d *.babudiu.com</span><br></pre></td></tr></table></figure><h3 id="使用-HTTP-认证"><a href="#使用-HTTP-认证" class="headerlink" title="使用 HTTP 认证"></a>使用 HTTP 认证</h3><p>http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权, 完成验证. 然后就可以生成证书了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/</span><br></pre></td></tr></table></figure><p>只需要指定域名, 并指定域名所在的网站根目录. acme.sh 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.</p><p>如果你用的 apache 服务器, acme.sh 还可以智能的从 apache 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d mydomain.com --apache</span><br></pre></td></tr></table></figure><p>如果你用的 nginx 服务器, 或者反代, acme.sh 还可以智能的从 nginx 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d mydomain.com --nginx</span><br></pre></td></tr></table></figure><p>注意, 无论是 apache 还是 nginx 模式, acme.sh 在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置.</p><p>如果你还没有运行任何 web 服务, 80 端口是空闲的, 那么 acme.sh 还能假装自己是一个 webserver, 临时听在 80 端口, 完成验证:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d mydomain.com --standalone</span><br></pre></td></tr></table></figure><p>更高级的用法请参考: <a href="https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert">https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert</a></p><h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><p>默认生成的证书都放在 <code>~/.acme.sh/</code>, 可以使用 <code>--install-cert</code> 命令, 将证书复制到指定的位置。</p><p>只有通过这种方式来复制证书，以后才能自动更新，手动复制的证书不能自动更新。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Apache</button><button type="button" class="tab">Nginx</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DOMAIN=babudiu.com</span><br><span class="line">acme.sh --install-cert -d <span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span> \</span><br><span class="line">    --cert-file      /path/to/certfile/in/apache/<span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span>.crt  \</span><br><span class="line">    --key-file       /path/to/keyfile/in/apache/<span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span>.key  \</span><br><span class="line">    --fullchain-file /path/to/fullchain/certfile/apache/<span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span>-fullchain.pem \</span><br><span class="line">    --reloadcmd     <span class="string">&quot;systemctl reload httpd&quot;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DOMAIN=babudiu.com</span><br><span class="line">acme.sh --install-cert -d <span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span> \</span><br><span class="line">    --key-file       /etc/nginx/ssl/<span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span>.key  \</span><br><span class="line">    --fullchain-file /etc/nginx/ssl/<span class="string">&quot;<span class="variable">$&#123;DOMAIN&#125;</span>&quot;</span>.crt \</span><br><span class="line">    --reloadcmd     <span class="string">&quot;nginx -s reload&quot;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="升级-acme-sh"><a href="#升级-acme-sh" class="headerlink" title="升级 acme.sh"></a>升级 acme.sh</h2><p>手动升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade</span><br></pre></td></tr></table></figure><p>也可以设置自动升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --upgrade  --auto-upgrade</span><br></pre></td></tr></table></figure><p>关闭自动更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade  --auto-upgrade  0</span><br></pre></td></tr></table></figure><p>Nginx 证书配置的解释</p><table><thead><tr><th>文件名</th><th>内容</th></tr></thead><tbody><tr><td>cert.pem</td><td>服务端证书</td></tr><tr><td>chain.pem</td><td>浏览器需要的所有证书但不包括服务端证书，比如根证书和中间证书</td></tr><tr><td>fullchain.pem</td><td>包括了 cert.pem 和 chain.pem 的内容</td></tr><tr><td>privkey.pem</td><td>证书的私钥</td></tr></tbody></table><h2 id="错误排查"><a href="#错误排查" class="headerlink" title="错误排查"></a>错误排查</h2><p>添加 <code>--debug</code> 参数，看看输出结果，都会很详细的说明问题原因。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从同步配置</title>
      <link href="/posts/265ea5f9/"/>
      <url>/posts/265ea5f9/</url>
      
        <content type="html"><![CDATA[<p>主从同步可以相当于实时备份，读写分离还能提高数据库的性能，记录一下主从同步的配置</p><p>不停机增加从库可以查看 <a href="/posts/86a9c8f5">优雅地给正在运行的MySQL添加从库</a></p><h2 id="一-准备"><a href="#一-准备" class="headerlink" title="一.准备"></a>一.准备</h2><ul><li>主从数据库版本最好一致</li><li>保证数据库的 uuid 不一致</li></ul><table><thead><tr><th>服务器</th><th>ip 地址</th></tr></thead><tbody><tr><td>MySQL Master</td><td>192.168.21.53</td></tr><tr><td>MySQL Slave</td><td>192.168.21.54</td></tr></tbody></table><h2 id="二-操作"><a href="#二-操作" class="headerlink" title="二.操作"></a>二.操作</h2><h3 id="主数据库操作"><a href="#主数据库操作" class="headerlink" title="主数据库操作"></a>主数据库操作</h3><h4 id="开启-binlog"><a href="#开启-binlog" class="headerlink" title="开启 binlog"></a>开启 binlog</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log_bin=mysql-bin</span><br><span class="line">server-id=1</span><br></pre></td></tr></table></figure><p>这里注意 <code>server-id</code> 主从不能一样, 配置完成重启 mysql</p><h4 id="创建用于同步的用户账号"><a href="#创建用于同步的用户账号" class="headerlink" title="创建用于同步的用户账号"></a>创建用于同步的用户账号</h4><p>登陆数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -hlocalhost -uroot -ppassword</span><br></pre></td></tr></table></figure><p>创建用户并授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;A4MyDNdzpHvg5M02KRtm&#x27;</span>;</span><br></pre></td></tr></table></figure><p>授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> REPLICATION SLAVE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;repl&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">未使用的主库</button><button type="button" class="tab">主库正在使用（有写入操作）</button></div><div class="tab-contents"><div class="tab-item-content active"><p>新开一个窗口查看 master 状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> MASTER STATUS;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000010</span> <span class="operator">|</span> <span class="number">747</span>      <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+ </span></span><br></pre></td></tr></table></figure><p>记录二进制文件名 (mysql-bin.000010) 和位置 (747)</p></div><div class="tab-item-content"><p>锁表，禁止写入，当前窗口不能退出，这时候开启另一个终端继续操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush <span class="keyword">table</span> <span class="keyword">with</span> read lock;</span><br></pre></td></tr></table></figure><p>新开一个窗口查看 master 状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> MASTER STATUS;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000010</span> <span class="operator">|</span> <span class="number">747</span>      <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+ </span></span><br></pre></td></tr></table></figure><p>记录二进制文件名 (mysql-bin.000010) 和位置 (747)</p><p>将当前数据导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --all-databases &gt; /root/backup.sql</span><br></pre></td></tr></table></figure><p>取消锁表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlock <span class="keyword">table</span>;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="从服务器操作"><a href="#从服务器操作" class="headerlink" title="从服务器操作"></a>从服务器操作</h3><p>导入数据（如果需要的话）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p &lt; backup.sql</span><br></pre></td></tr></table></figure><p>修改配置文件</p><p><code>vim /etc/my.cnf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=2 </span><br></pre></td></tr></table></figure><p><code>server-id</code> 必须和主数据库不一致，修改完成后重启 mysql</p><p>配置从数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.21.53&#x27;</span>, MASTER_USER<span class="operator">=</span><span class="string">&#x27;repl&#x27;</span>, MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;A4MyDNdzpHvg5M02KRtm&#x27;</span>, MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000010&#x27;</span>, MASTER_LOG_POS<span class="operator">=</span><span class="number">747</span>;</span><br><span class="line"><span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure><p>查看 slave 状态：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> slave status\G;</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.21.53</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000010</span><br><span class="line">          Read_Master_Log_Pos: 1055                                           # 表示当前同步到了什么位置</span><br><span class="line">               Relay_Log_File: prod_cukin_mysql_slave-relay-bin.000003</span><br><span class="line">                Relay_Log_Pos: 628</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000010</span><br><span class="line">             Slave_IO_Running: Yes                                            # 是Yes表示配置成功</span><br><span class="line">            Slave_SQL_Running: Yes                                            # 是Yes表示配置成功</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="uuid-一致问题"><a href="#uuid-一致问题" class="headerlink" title="uuid 一致问题"></a>uuid 一致问题</h3><p>很多时候我们是直接克隆的机器做从库，这个时候两台 mysql 机器的 uuid 就是一样的没办法做主从同步，会报错</p><p><code>The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work</code></p><p>uuid 可以通过以下 sql 来查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%server_uuid%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这个时候需要修改 uuid，规范一点可以使用 <code>uuidgen</code> 来生成一个新的 uuid，配置在 mysql 的数据目录 auto.cnf 文件内</p><h3 id="重新同步"><a href="#重新同步" class="headerlink" title="重新同步"></a>重新同步</h3><p>如果需要停止同步，比如更换了同步所用到的密码，则需要：</p><p>停止 slave 进程, 在 slave 上执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop slave;</span><br></pre></td></tr></table></figure><p>记录当前的 Read_Master_Log_Pos, 在 slave 上执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> slave status \G</span><br></pre></td></tr></table></figure><p>重新配置同步，在 slave 上执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span> </span><br><span class="line">MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.21.53&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;repl&#x27;</span>, </span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;A4MyDNdzpHvg5M02KRtm&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000010&#x27;</span>, </span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">747</span>;</span><br></pre></td></tr></table></figure><p>开始同步</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure><h2 id="禁止从库更新数据"><a href="#禁止从库更新数据" class="headerlink" title="禁止从库更新数据"></a>禁止从库更新数据</h2><p>super_read_only 和 read_only 的区别</p><ol><li>read_only 参数和 super_read_only 参数默认都是关闭的，read_only 参数设置为 on 的情况下，会组织客户端的更新，但是如果一个账号拥有 super 权限，那么还是可以进行更新的。而 super_read_only 会阻止所有的客户端更新，即使客户端拥有 super 权限也不可以。</li><li>设置 super_read_only 参数为 on 会默认联动的设置 read_only 为 on</li><li>设置 read_only 参数为 off，会默认联动设置 super_read_only 为 off</li></ol><h3 id="查看现有的配置"><a href="#查看现有的配置" class="headerlink" title="查看现有的配置"></a>查看现有的配置</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%read_only%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="设置-readonly"><a href="#设置-readonly" class="headerlink" title="设置 readonly"></a>设置 readonly</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> super_read_only<span class="operator">=</span><span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><h3 id="修改配置文件，永久生效"><a href="#修改配置文件，永久生效" class="headerlink" title="修改配置文件，永久生效"></a>修改配置文件，永久生效</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line">read-only</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker容器间优雅的互联</title>
      <link href="/posts/d083ba2e/"/>
      <url>/posts/d083ba2e/</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍如何优雅的让 Docker 容器和 Docker 容器之间相互通信，以及 Docker 容器如何和宿主机进行网络通信。</p><h2 id="容器间网络通信"><a href="#容器间网络通信" class="headerlink" title="容器间网络通信"></a>容器间网络通信</h2><p>docker 容器间通信常见的方式是使用 –link 进行连接，但是 Docker 已经弃用这种方式，并且容器数量一旦一多，–link 会显得很乱。官方推荐使用自定义网络来进行互联。</p><h3 id="创建自定义网络"><a href="#创建自定义网络" class="headerlink" title="创建自定义网络"></a>创建自定义网络</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create my-network</span><br></pre></td></tr></table></figure><h3 id="创建容器使用自定义-network"><a href="#创建容器使用自定义-network" class="headerlink" title="创建容器使用自定义 network"></a>创建容器使用自定义 network</h3><p>比如一个 nginx 容器需要访问 php 容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 --network my-network nginx</span><br><span class="line">docker run --name php --network my-network php</span><br></pre></td></tr></table></figure><p>这个时候 nginx 可以直接通过 <code>php</code> 来访问 php 容器，打开&#x2F;etc&#x2F;hosts 可以发现是 docker 自动帮你添加了解析</p><h2 id="容器访问主机服务"><a href="#容器访问主机服务" class="headerlink" title="容器访问主机服务"></a>容器访问主机服务</h2><p>可以使用容器的网关 IP 来访问（nat 网络），不过使用 ip 不优雅，旧版本的 Docker 可以使用 <code>host.docker.internal</code> 来访问主机，新版本的无法直接访问，可以通过 <code>docker run</code> 增加启动参数来兼容这种方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run --name nginx \</span><br><span class="line">  -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/www:/usr/share/nginx/html:ro \</span><br><span class="line">  -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">  -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/conf/conf.d:/etc/nginx/conf.d \</span><br><span class="line">  -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/conf/ssl:/etc/nginx/ssl \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">  -p 443:443 \</span><br><span class="line">  --add-host=host.docker.internal:host-gateway \</span><br><span class="line">  --network iuxt \</span><br><span class="line">  --restart always \</span><br><span class="line">  -d nginx</span><br></pre></td></tr></table></figure><p>之后就可以在容器内通过 <code>host.docker.internal</code> 来访问主机了。</p><h2 id="使用固定的-ip-进行通信"><a href="#使用固定的-ip-进行通信" class="headerlink" title="使用固定的 ip 进行通信"></a>使用固定的 ip 进行通信</h2><p>如果想固定每个容器的 IP，比如想部署一个 ElasticSearch 集群，需要每个节点 IP 都配置到配置文件里面。可以使用这种方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个Docker网络</span></span><br><span class="line">docker network create --subnet=172.16.0.0/24 elasticsearch-br0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个容器手动指定使用这个Docker网络，并分配固定的IP</span></span><br><span class="line">docker run -d --name elasticsearch1 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/elasticsearch1.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro \</span><br><span class="line">    -v es-data1:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs1:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.11 \</span><br><span class="line">    -p 9201:9200 -p 9301:9300 \</span><br><span class="line">    elasticsearch:7.16.2</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch2 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/elasticsearch2.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro \</span><br><span class="line">    -v es-data2:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs2:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.12 \</span><br><span class="line">    -p 9202:9200 -p 9302:9300 \</span><br><span class="line">    elasticsearch:7.16.2</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch3 \</span><br><span class="line">    -e <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/elasticsearch3.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro \</span><br><span class="line">    -v es-data3:/usr/share/elasticsearch/data:rw \</span><br><span class="line">    -v es-logs3:/usr/share/elasticsearch/logs:rw \</span><br><span class="line">    --network elasticsearch-br0 \</span><br><span class="line">    --ip 172.16.0.13 \</span><br><span class="line">    -p 9203:9200 -p 9303:9300 \</span><br><span class="line">    elasticsearch:7.16.2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch常用API操作</title>
      <link href="/posts/ee708f6b/"/>
      <url>/posts/ee708f6b/</url>
      
        <content type="html"><![CDATA[<p>如果有 Kibana 的话，以下所有操作都可以在 Kibana 的 DevTools 页面进行调试，可以免去认证操作。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20220425224238.png" alt="Kibana调试查看索引接口"></p><table><thead><tr><th>接口</th><th>功能</th></tr></thead><tbody><tr><td>&#x2F;_cat&#x2F;health?v</td><td>集群健康状态</td></tr><tr><td>&#x2F;_cat&#x2F;shards</td><td>分片信息</td></tr><tr><td>&#x2F;_cat&#x2F;nodes</td><td>节点信息</td></tr><tr><td>&#x2F;_cat&#x2F;indices</td><td>索引信息</td></tr><tr><td>&#x2F;_cat&#x2F;allocation?v</td><td>磁盘占用</td></tr><tr><td>&#x2F;索引名字&#x2F;_mapping?pretty</td><td>查看 mapping（索引字段类型等）</td></tr></tbody></table><p><code>?v</code> 是详细信息输出</p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看有哪些索引</span></span><br><span class="line">curl -u elastic:password localhost:9200/_cat/indices</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建索引</span></span><br><span class="line">curl -u elastic:password -X PUT <span class="string">&quot;localhost:9200/索引名字?pretty&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除索引</span></span><br><span class="line">curl -u elastic:password -s -XDELETE 10.0.0.127:9200/索引名字</span><br></pre></td></tr></table></figure><blockquote><p>索引名字可以通过查看索引接口查看</p></blockquote><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">&quot;Content-Type:application/json&quot;</span> -XPOST -u elastic:password <span class="string">&#x27;http://127.0.0.1:9200/_xpack/security/user/elastic/_password&#x27;</span> -d <span class="string">&#x27;&#123; &quot;password&quot; : &quot;123456&quot; &#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="添加角色"><a href="#添加角色" class="headerlink" title="添加角色"></a>添加角色</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST -H <span class="string">&#x27;Content-type: application/json&#x27;</span> -u elastic:password <span class="string">&#x27;http://1.1.1.1:9600/_xpack/security/role/admin?pretty&#x27;</span> -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">&quot;run_as&quot;:[&quot;elastic&quot;],</span></span><br><span class="line"><span class="string">&quot;cluster&quot;:[&quot;all&quot;],</span></span><br><span class="line"><span class="string">&quot;indices&quot;:[</span></span><br><span class="line"><span class="string"> &#123;</span></span><br><span class="line"><span class="string">  &quot;names&quot;:[&quot;*&quot;],</span></span><br><span class="line"><span class="string">  &quot;privileges&quot;:[&quot;all&quot;]</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="查看角色"><a href="#查看角色" class="headerlink" title="查看角色"></a>查看角色</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET -H <span class="string">&#x27;Content-type: application/json&#x27;</span> -u elastic:password <span class="string">&#x27;http://1.1.1.1:9600/_xpack/security/role/admin?pretty&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="允许自动创建索引"><a href="#允许自动创建索引" class="headerlink" title="允许自动创建索引"></a>允许自动创建索引</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT -H <span class="string">&quot;Content-Type:application/json&quot;</span> -u <span class="string">&quot;admin:password&quot;</span> https://1.1.1.1:9200/_cluster/settings -d <span class="string">&#x27;&#123;&quot;persistent&quot;:&#123;&quot;action.auto_create_index&quot;:&quot;true&quot;&#125;&#125;&#x27;</span> -k</span><br></pre></td></tr></table></figure><h2 id="查看设置"><a href="#查看设置" class="headerlink" title="查看设置"></a>查看设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET -u <span class="string">&quot;admin:password&quot;</span> https://1.1.1.1:9200/_cluster/settings -k</span><br></pre></td></tr></table></figure><h2 id="修改设置"><a href="#修改设置" class="headerlink" title="修改设置"></a>修改设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">curl -u elastic:password 1.1.1.1:9200/_cluster/settings -X PUT -H <span class="string">&quot;Content-Type: application/json&quot;</span> -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;persistent&quot; : &#123;</span></span><br><span class="line"><span class="string">    &quot;cluster&quot; : &#123;</span></span><br><span class="line"><span class="string">      &quot;max_shards_per_node&quot; : &quot;900000&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;indices&quot; : &#123;</span></span><br><span class="line"><span class="string">      &quot;breaker&quot; : &#123;</span></span><br><span class="line"><span class="string">        &quot;total&quot; : &#123;</span></span><br><span class="line"><span class="string">          &quot;limit&quot; : &quot;95%&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;xpack&quot; : &#123;</span></span><br><span class="line"><span class="string">      &quot;monitoring&quot; : &#123;</span></span><br><span class="line"><span class="string">        &quot;collection&quot; : &#123;</span></span><br><span class="line"><span class="string">          &quot;enabled&quot; : &quot;true&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="修改单个-node-最大分片数"><a href="#修改单个-node-最大分片数" class="headerlink" title="修改单个 node 最大分片数"></a>修改单个 node 最大分片数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># es 支持永久修改配置与临时修改配置, 如果想要临时修改:  &quot;transient&quot; : &#123;&quot;cluster&quot; : &#123;&quot;max_shards_per_node&quot; : &quot;900000&quot;&#125;&#125;</span></span><br><span class="line">curl -X PUT localhost:9200/_cluster/settings -H <span class="string">&quot;Content-Type: application/json&quot;</span> -d <span class="string">&#x27;&#123; &quot;persistent&quot;: &#123; &quot;cluster.max_shards_per_node&quot;: &quot;3000&quot; &#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看未分配的分片数</span></span><br><span class="line">curl -XGET http://localhost:9200/_cluster/health\?pretty | grep unassigned_shards</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用操作记录</title>
      <link href="/posts/fa013442/"/>
      <url>/posts/fa013442/</url>
      
        <content type="html"><![CDATA[<p>记录一下日常工作中常用到的 MySQL 语句和一些配置等，方便日后查询</p><h2 id="用户授权相关"><a href="#用户授权相关" class="headerlink" title="用户授权相关"></a>用户授权相关</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- CREATE USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><h3 id="授权的同时修改密码"><a href="#授权的同时修改密码" class="headerlink" title="授权的同时修改密码"></a>授权的同时修改密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><h3 id="创建只读账号"><a href="#创建只读账号" class="headerlink" title="创建只读账号"></a>创建只读账号</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SElECT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;read_only&#x27;</span>@<span class="string">&#x27;ip&#x27;</span> IDENTIFIED <span class="keyword">BY</span> &quot;password&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">CREATE USER &#x27;read_only&#x27;@&#x27;ip&#x27; IDENTIFIED BY &#x27;password&#x27;;</span></span><br><span class="line"><span class="comment">GRANT SELECT ON *.* TO &#x27;read_only&#x27;@&#x27;ip&#x27; WITH GRANT OPTION;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除权限 */</span></span><br><span class="line"><span class="comment">/* REVOKE all privileges ON *.* FROM &#x27;read_only_user&#x27;@&#x27;ip&#x27;; */</span></span><br></pre></td></tr></table></figure><h3 id="创建业务账号"><a href="#创建业务账号" class="headerlink" title="创建业务账号"></a>创建业务账号</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">Alter</span>, <span class="keyword">Create</span>, <span class="keyword">Create</span> <span class="keyword">View</span>, <span class="keyword">Delete</span>, Index, <span class="keyword">Insert</span>, Lock Tables, <span class="keyword">Select</span>, <span class="keyword">Show</span> Databases, <span class="keyword">Show</span> <span class="keyword">View</span>, <span class="keyword">Update</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `username`@`<span class="operator">%</span>`;</span><br></pre></td></tr></table></figure><h2 id="库相关"><a href="#库相关" class="headerlink" title="库相关"></a>库相关</h2><h3 id="建库"><a href="#建库" class="headerlink" title="建库"></a>建库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `idp_app` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8_general_ci&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `idp_sdk` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8mb4_general_ci&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="配置文件相关"><a href="#配置文件相关" class="headerlink" title="配置文件相关"></a>配置文件相关</h2><p>apt 安装的 mysql 配置文件在 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p><h3 id="初始化密码"><a href="#初始化密码" class="headerlink" title="初始化密码"></a>初始化密码</h3><blockquote><p>ubuntu 系统通过 apt 安装的 mysql，需要切换到 root，然后执行 mysql 命令就可以登录（不用密码），对应的用户是 <code>root@localhost</code><br>当然也可以 <code>cat /etc/mysql/debian.cnf</code> 查看密码。</p></blockquote><h3 id="表名强制转换为小写"><a href="#表名强制转换为小写" class="headerlink" title="表名强制转换为小写"></a>表名强制转换为小写</h3><p>仅适用于 MySQL 5.7 及以下版本，到了 8.0，只支持初始化时指定该参数，初始化之后，如果修改了该参数，启动就会报错。</p><p>配置文件在 [mysqld] 下面新增一行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">lower_case_table_names</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>可以通过执行 sql 查看是否设置成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;lower_case_table_names&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="查看建库建表语句"><a href="#查看建库建表语句" class="headerlink" title="查看建库建表语句"></a>查看建库建表语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database django;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> django.auth_user;</span><br></pre></td></tr></table></figure><h2 id="binlog"><a href="#binlog" class="headerlink" title="binlog"></a>binlog</h2><p>查看 binlog 状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)] <span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_bin%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                   <span class="operator">|</span> <span class="keyword">Value</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_bin                         <span class="operator">|</span> <span class="keyword">ON</span>                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_basename                <span class="operator">|</span> <span class="operator">/</span>data<span class="operator">/</span>mysql<span class="operator">/</span>binlog<span class="operator">/</span>mysql_bin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_index                   <span class="operator">|</span> <span class="operator">/</span>data<span class="operator">/</span>mysql<span class="operator">/</span>binlog<span class="operator">/</span>mysql_bin.index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_trust_function_creators <span class="operator">|</span> OFF                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_use_v1_row_events       <span class="operator">|</span> OFF                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+------------------------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看 binlog 模式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)] <span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> binlog_format <span class="operator">|</span> <span class="type">ROW</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>binlog 配置文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">server_id</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">log_bin</span> = /var/log/mysql/mysql-bin.log</span><br><span class="line"><span class="attr">max_binlog_size</span> = <span class="number">1</span>G</span><br><span class="line"><span class="attr">binlog_format</span> = row</span><br><span class="line"><span class="attr">binlog_row_image</span> = full</span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">ASC</span>;  # 升序</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">DESC</span>;   # 降序</span><br></pre></td></tr></table></figure><h2 id="批量-kill-慢查询"><a href="#批量-kill-慢查询" class="headerlink" title="批量 kill 慢查询"></a>批量 kill 慢查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询哪些查询时间大于20秒</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>  <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span> COMMAND<span class="operator">=</span><span class="string">&#x27;Query&#x27;</span> <span class="keyword">AND</span> <span class="type">time</span> <span class="operator">&gt;</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 生成kill慢查询的语句（不执行kill）</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;KILL &#x27;</span>,id,<span class="string">&#x27;;&#x27;</span>) <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span> COMMAND<span class="operator">=</span><span class="string">&#x27;Query&#x27;</span> <span class="keyword">AND</span> <span class="type">time</span> <span class="operator">&gt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>自动 kill 慢 SQL 脚本，并记录日志到文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">MYSQL_CMD=<span class="string">&quot;mysql -uroot -pxxxxx -h 192.168.10.10&quot;</span></span><br><span class="line">NOW=$(<span class="built_in">date</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">SLOWLOG=$(<span class="variable">$&#123;MYSQL_CMD&#125;</span> -e <span class="string">&quot;select * from information_schema.processlist where COMMAND=&#x27;Query&#x27; AND time &gt; 10;&quot;</span> 2&gt;/dev/null | sed <span class="string">&#x27;1d&#x27;</span> )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$&#123;SLOWLOG&#125;</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;NOW&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;SLOWLOG&#125;</span></span><br><span class="line">    <span class="variable">$&#123;MYSQL_CMD&#125;</span> -e <span class="string">&quot;select id from information_schema.processlist where COMMAND=&#x27;Query&#x27; AND time &gt; 10;&quot;</span> 2&gt;/dev/null | sed <span class="string">&#x27;1d&#x27;</span> | xargs -I &#123;&#125; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;MYSQL_CMD&#125;</span> -e &#x27;kill &#123;&#125;;&#x27;&quot;</span> | bash 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>crontab 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * bash /root/slowlog.sh &gt;&gt; /root/slowlog.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><h3 id="查看变量的方式"><a href="#查看变量的方式" class="headerlink" title="查看变量的方式"></a>查看变量的方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%version%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="mysql-命令行执行命令的方式"><a href="#mysql-命令行执行命令的方式" class="headerlink" title="mysql 命令行执行命令的方式"></a>mysql 命令行执行命令的方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">status</span><br></pre></td></tr></table></figure><h3 id="使用-MySQL-函数方式："><a href="#使用-MySQL-函数方式：" class="headerlink" title="使用 MySQL 函数方式："></a>使用 MySQL 函数方式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> version();</span><br></pre></td></tr></table></figure><h2 id="查看哪些库使用的是-MyISAM-引擎"><a href="#查看哪些库使用的是-MyISAM-引擎" class="headerlink" title="查看哪些库使用的是 MyISAM 引擎"></a>查看哪些库使用的是 MyISAM 引擎</h2><p>查询哪些表引擎是 MyISAM</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TABLE_SCHEMA <span class="keyword">as</span> DbName ,TABLE_NAME <span class="keyword">as</span> TableName ,ENGINE <span class="keyword">as</span> Engine <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> ENGINE<span class="operator">=</span><span class="string">&#x27;MyISAM&#x27;</span> <span class="keyword">AND</span> TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="string">&#x27;mysql&#x27;</span>,<span class="string">&#x27;information_schema&#x27;</span>,<span class="string">&#x27;performance_schema&#x27;</span>);</span><br></pre></td></tr></table></figure><p>生成 <code>ALTER</code> 语句来转换到 <code>InnoDB</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;ALTER TABLE &#x27;</span>, TABLE_SCHEMA,<span class="string">&#x27;.&#x27;</span>,TABLE_NAME, <span class="string">&#x27; ENGINE = InnoDB;&#x27;</span>) <span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> ENGINE<span class="operator">=</span><span class="string">&#x27;MyISAM&#x27;</span> <span class="keyword">AND</span> TABLE_SCHEMA <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="string">&#x27;mysql&#x27;</span>,<span class="string">&#x27;information_schema&#x27;</span>,<span class="string">&#x27;performance_schema&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="查看语句使用的索引"><a href="#查看语句使用的索引" class="headerlink" title="查看语句使用的索引"></a>查看语句使用的索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- EXPLAIN select 语句;</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> e_name<span class="operator">=</span><span class="string">&#x27;Mark&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: emp</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_ename</span><br><span class="line">          key: idx_ename</span><br><span class="line">      key_len: <span class="number">81</span></span><br><span class="line">          <span class="keyword">ref</span>: const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）  id：SELECT 识别符</span><br><span class="line">（<span class="number">2</span>）  select_type：SELECT 查询的类型</span><br><span class="line">（<span class="number">3</span>）  table：数据表的名字</span><br><span class="line">（<span class="number">4</span>）  partitions：匹配的分区</span><br><span class="line">（<span class="number">5</span>）  <span class="built_in">type</span>：访问表的方式</span><br><span class="line">（<span class="number">6</span>）  possible_keys：查询时可能使用的索引</span><br><span class="line">（<span class="number">7</span>）  key：实际使用的索引</span><br><span class="line">（<span class="number">8</span>）  key_len：索引字段的长度</span><br><span class="line">（<span class="number">9</span>）  ref：连接查询时，用于显示关联的字段</span><br><span class="line">（<span class="number">10</span>） rows：需要扫描的行数(估算的行数)</span><br><span class="line">（<span class="number">11</span>） filtered：按条件过滤后查询到的记录的百分比</span><br><span class="line">（<span class="number">12</span>） Extra：执行情况的描述和说明</span><br></pre></td></tr></table></figure><h2 id="只读模式"><a href="#只读模式" class="headerlink" title="只读模式"></a>只读模式</h2><h3 id="设置为只读模式"><a href="#设置为只读模式" class="headerlink" title="设置为只读模式"></a>设置为只读模式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flush tables <span class="keyword">with</span> read lock;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> read_only<span class="operator">=</span><span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><h3 id="设置为可读写模式"><a href="#设置为可读写模式" class="headerlink" title="设置为可读写模式"></a>设置为可读写模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> global read_only=off;</span><br><span class="line">unlock tables;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes使用ingress反向代理外部IP</title>
      <link href="/posts/0ad6df1b/"/>
      <url>/posts/0ad6df1b/</url>
      
        <content type="html"><![CDATA[<p>我们平常使用 k8s 的 service 都是自动发现增加 endpoint 的，但是有的时候集群外的服务我们又想用 k8s 的 ingress 来统一做入口，就会涉及到自定义 endpoint</p><h2 id="创建-service"><a href="#创建-service" class="headerlink" title="创建 service"></a>创建 service</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="创建-endpoint"><a href="#创建-endpoint" class="headerlink" title="创建 endpoint"></a>创建 endpoint</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">addresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ip:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5601</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h2 id="创建-Ingress"><a href="#创建-Ingress" class="headerlink" title="创建 Ingress"></a>创建 Ingress</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/proxy-body-size:</span> <span class="string">300M</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/server-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      if ($http_user_agent ~* (Scrapy|Go-http-client/1.1|HttpClient|curl/7.64.1)) &#123;</span></span><br><span class="line"><span class="string">        return 403;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">kibana.i.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">kibana</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> Service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka常用操作记录</title>
      <link href="/posts/12ab226e/"/>
      <url>/posts/12ab226e/</url>
      
        <content type="html"><![CDATA[<p>经常用到的 Kafka 命令记录以下，方便查找。kafka 的搭建可以参考这篇文章 <a href="/posts/60a9e345">Kafka和zookeeper搭建</a></p><div class="note warning simple"><p>注意: –bootstrap-server 参数配置的 kafka 地址需要根据 kafka 监听地址来判断, 如果监听的是自己的 ip 而不是 0.0.0.0, 那就不要配置 localhost, 改用 ip 地址.</p></div><h2 id="Topic-操作"><a href="#Topic-操作" class="headerlink" title="Topic 操作"></a>Topic 操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建topic</span></span><br><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --replication-factor 1 --partitions 3 --topic test_topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看topic具体信息</span></span><br><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092  --describe --topic test_topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有的topic列表</span></span><br><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除topic</span></span><br><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic test_topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改topic分区数</span></span><br><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --alter --partitions 8 --topic test_topic</span><br></pre></td></tr></table></figure><p>kafka 删除 topic 有可能提示 <code>marked for deletion</code> 这种情况下, 需要停止所有的生产者和消费者</p><h2 id="消费组操作"><a href="#消费组操作" class="headerlink" title="消费组操作"></a>消费组操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示所有消费组</span></span><br><span class="line">bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --all-groups --list</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有消费组详情</span></span><br><span class="line">bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --all-groups --describe</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看单独组的详细信息</span></span><br><span class="line">bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --describe</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动创建消费组</span></span><br><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic idkNfcKey1 --consumer-property group.id=idpTsp1</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除消费组（前提是没有在消费的）</span></span><br><span class="line">bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group  --delete</span><br></pre></td></tr></table></figure><h2 id="控制台生产消费"><a href="#控制台生产消费" class="headerlink" title="控制台生产消费"></a>控制台生产消费</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产者发送消息, 然后控制台输入内容，回车即可</span></span><br><span class="line">bin/kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test_topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 消费者消费消息, --from-beginning  是指从头进行消费，可能会打印大量东西在控制台上。</span></span><br><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test_topic --from-beginning</span><br></pre></td></tr></table></figure><h3 id="控制台查看最新消息"><a href="#控制台查看最新消息" class="headerlink" title="控制台查看最新消息"></a>控制台查看最新消息</h3><h4 id="查看一个-topic-的每个-partition-的-offset"><a href="#查看一个-topic-的每个-partition-的-offset" class="headerlink" title="查看一个 topic 的每个 partition 的 offset"></a>查看一个 topic 的每个 partition 的 offset</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list alikafka-pre-cn-uax3b5ny1002-1-vpc.alikafka.aliyuncs.com:9092,alikafka-pre-cn-uax3b5ny1002-2-vpc.alikafka.aliyuncs.com:9092,alikafka-pre-cn-uax3b5ny1002-3-vpc.alikafka.aliyuncs.com:9092 --topic nova_event_topic --time -1</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312051049856.png" alt="image.png"></p><h4 id="根据每个-partition-的-offset-来消费最新消息"><a href="#根据每个-partition-的-offset-来消费最新消息" class="headerlink" title="根据每个 partition 的 offset 来消费最新消息"></a>根据每个 partition 的 offset 来消费最新消息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server alikafka-pre-cn-uax3b5ny1002-1-vpc.alikafka.aliyuncs.com:9092,alikafka-pre-cn-uax3b5ny1002-2-vpc.alikafka.aliyuncs.com:9092,alikafka-pre-cn-uax3b5ny1002-3-vpc.alikafka.aliyuncs.com:9092 --topic nova_event_topic --partition 0 --offset 12080</span><br></pre></td></tr></table></figure><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202312051050803.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Kafka </tag>
            
            <tag> MQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译安装Nginx记录</title>
      <link href="/posts/d90d2aa0/"/>
      <url>/posts/d90d2aa0/</url>
      
        <content type="html"><![CDATA[<p>通常来说编译不通过都是因为系统环境不满足条件，如缺少包等，本文以 CentOS 7 系统为例，其中有些包如 xxx-devel 在 ubuntu 下一般都是叫做 xxx-dev 的，实在找不到可以使用 apt-file 查找文件属于哪个包。</p><p>需要准备好这些包（不用监控可以不用准备 nginx-module-vts）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.22.0.tar.gz</span><br><span class="line">wget https://github.com/vozlt/nginx-module-vts/archive/refs/tags/v0.2.2.tar.gz</span><br><span class="line">wget https://ftp.openssl.org/source/openssl-1.1.1p.tar.gz</span><br><span class="line">wget https://ftp.exim.org/pub/pcre/pcre-8.45.tar.gz</span><br></pre></td></tr></table></figure><p>全部解压，然后进入 <code>nginx-1.22.0</code> 目录操作</p><h2 id="首先运行一遍-configure-命令"><a href="#首先运行一遍-configure-命令" class="headerlink" title="首先运行一遍 configure 命令"></a>首先运行一遍 configure 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx \</span><br><span class="line">            --user=www --group=www \</span><br><span class="line">            --with-stream \</span><br><span class="line">            --with-http_stub_status_module \</span><br><span class="line">            --with-http_sub_module \</span><br><span class="line">            --with-http_v2_module \</span><br><span class="line">            --with-http_ssl_module \</span><br><span class="line">            --with-http_gzip_static_module \</span><br><span class="line">            --with-http_realip_module \</span><br><span class="line">            --with-http_flv_module \</span><br><span class="line">            --with-http_mp4_module \</span><br><span class="line">            --with-openssl=../openssl-1.1.1p \</span><br><span class="line">            --with-pcre=../pcre-8.45 \</span><br><span class="line">            --with-pcre-jit \</span><br><span class="line">            --with-ld-opt=-ljemalloc \</span><br><span class="line">            --add-module=../nginx-module-vts-0.1.18</span><br></pre></td></tr></table></figure><blockquote><p>nginx-module-vts 是监控模块，如果不用监控，可以将这一行删除<br>user group prefix 这些参数只是个默认值，是可以被配置文件的配置覆盖的</p></blockquote><h3 id="常见报错解决"><a href="#常见报错解决" class="headerlink" title="常见报错解决"></a>常见报错解决</h3><ul><li><p><code>./configure: error: C compiler cc is not found</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++</span><br></pre></td></tr></table></figure></li><li><p><code>checking for --with-ld-opt=&quot;-ljemalloc&quot; ... not found</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y jemalloc-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">sudo apt install -y libjemalloc-dev</span><br></pre></td></tr></table></figure></li><li><p><code>checking for zlib library ... not found</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib-devel</span><br></pre></td></tr></table></figure></li><li><p><code>You need Perl 5.</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-devel</span><br></pre></td></tr></table></figure></li></ul><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">单核心编译</button><button type="button" class="tab">多核心编译</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j 4</span><br></pre></td></tr></table></figure><blockquote><p>4 表示用 4 个核心来编译</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="创建用户组和用户"><a href="#创建用户组和用户" class="headerlink" title="创建用户组和用户"></a>创建用户组和用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd www</span><br><span class="line">useradd -g www -M -s /sbin/nologin www</span><br></pre></td></tr></table></figure><h3 id="安装可执行文件"><a href="#安装可执行文件" class="headerlink" title="安装可执行文件"></a>安装可执行文件</h3><p>可以用 <code>make install</code> 来快速安装，也可以自己进入 objs 目录把 nginx 复制到其他地方，配置文件放在&#x2F;usr&#x2F;loca&#x2F;nginx 下</p><h2 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h2><h3 id="生成-systemd-文件"><a href="#生成-systemd-文件" class="headerlink" title="生成 systemd 文件"></a>生成 systemd 文件</h3><p>vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=nginx - high performance web server</span><br><span class="line"><span class="attr">Documentation</span>=http://nginx.org/en/docs/</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">PIDFile</span>=/usr/local/nginx/logs/nginx.pid</span><br><span class="line"><span class="attr">ExecStartPost</span>=/bin/sleep <span class="number">0.1</span></span><br><span class="line"><span class="attr">ExecStartPre</span>=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="attr">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">ExecStop</span>=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">TimeoutStartSec</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">LimitNOFILE</span>=<span class="number">1000000</span></span><br><span class="line"><span class="attr">LimitNPROC</span>=<span class="number">1000000</span></span><br><span class="line"><span class="attr">LimitCORE</span>=<span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>然后就可以愉快的使用 Nginx 了。</p><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><p>添加后就可以直接使用 nginx 命令了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br></pre></td></tr></table></figure><p>配置文件软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/local/nginx/conf/ /etc/nginx</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><p>监控的使用方法可以查看 <a href="/posts/c6a32841">Nginx使用module_vts模块来做监控</a></p><h3 id="查看编译参数"><a href="#查看编译参数" class="headerlink" title="查看编译参数"></a>查看编译参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Nginx </tag>
            
            <tag> build </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 绑定Hosts的正确姿势</title>
      <link href="/posts/23f11af0/"/>
      <url>/posts/23f11af0/</url>
      
        <content type="html"><![CDATA[<p>有的时候我们需要在容器里面绑定 hosts，比如我们用 logstash 需要消费 kafka 消息，但是 kafka 监听的地址是 hostname，这个时候就需要绑定 hosts（规范一点是做解析）<br>在容器里面绑定 hosts 常见的方法一种是挂载主机的 hosts 文件，一种是修改容器的启动 CMD，每次启动修改 hosts，这两种方法都有个缺点，就是不受 kubelet 管理了，默认的 hosts 内容也会被覆盖掉<br>在 k8s 环境下有更好的解决方案：那就是让 k8s 自己来管理</p><h2 id="使用-hostAliases-来绑定-hosts"><a href="#使用-hostAliases-来绑定-hosts" class="headerlink" title="使用 hostAliases 来绑定 hosts"></a>使用 hostAliases 来绑定 hosts</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logstash-k8s</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">logstash-k8s</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">logstash-k8s</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostAliases:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">ip:</span> <span class="string">&quot;10.0.0.17&quot;</span></span><br><span class="line">        <span class="attr">hostnames:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;elk1&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">ip:</span> <span class="string">&quot;10.0.0.18&quot;</span></span><br><span class="line">        <span class="attr">hostnames:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;elk2&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">ip:</span> <span class="string">&quot;10.0.0.19&quot;</span></span><br><span class="line">        <span class="attr">hostnames:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;elk3&quot;</span></span><br></pre></td></tr></table></figure><h2 id="进入容器查看-hosts-文件"><a href="#进入容器查看-hosts-文件" class="headerlink" title="进入容器查看 hosts 文件"></a>进入容器查看 hosts 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -n ops logstash-k8s-68d6bf4dff-sxnst -- <span class="built_in">cat</span> /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Kubernetes-managed hosts file.</span><br><span class="line">127.0.0.1    localhost</span><br><span class="line">::1    localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0    ip6-localnet</span><br><span class="line">fe00::0    ip6-mcastprefix</span><br><span class="line">fe00::1    ip6-allnodes</span><br><span class="line">fe00::2    ip6-allrouters</span><br><span class="line">172.20.16.108    logstash-k8s-68d6bf4dff-sxnst</span><br><span class="line"></span><br><span class="line"># Entries added by HostAliases.</span><br><span class="line">10.0.0.17    elk1</span><br><span class="line">10.0.0.18    elk2</span><br><span class="line">10.0.0.19    elk3</span><br></pre></td></tr></table></figure><p>这个 hosts 包括两个部分，一部分是容器自带的 hosts，另一部分是我们自己添加的</p><h2 id="在-docker-下绑定-hosts"><a href="#在-docker-下绑定-hosts" class="headerlink" title="在 docker 下绑定 hosts"></a>在 docker 下绑定 hosts</h2><h3 id="运行时候修改"><a href="#运行时候修改" class="headerlink" title="运行时候修改"></a>运行时候修改</h3><p>docker 可以通过 –add-host 参数来添加 hosts 信息到容器的&#x2F;etc&#x2F;hosts 文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> --add-host=example.com:192.168.1.2 ubuntu <span class="built_in">cat</span> /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1    localhost</span><br><span class="line">::1    localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0    ip6-localnet</span><br><span class="line">ff00::0    ip6-mcastprefix</span><br><span class="line">ff02::1    ip6-allnodes</span><br><span class="line">ff02::2    ip6-allrouters</span><br><span class="line">192.168.1.2    example.com</span><br><span class="line">172.17.0.2    eece89ee8fc7</span><br></pre></td></tr></table></figure><h3 id="构建时修改"><a href="#构建时修改" class="headerlink" title="构建时修改"></a>构建时修改</h3><p>Dockerfile 中，可以在 CMD 命令下进行修改，在 RUN 里面修改会提示文件只读无法修改。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;111&quot;</span> &gt;&gt; /etc/hosts &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;Hosts: &quot;</span> &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cat</span> /etc/hosts</span></span><br></pre></td></tr></table></figure><h2 id="在-docker-compose-环境下绑定-hosts"><a href="#在-docker-compose-环境下绑定-hosts" class="headerlink" title="在 docker-compose 环境下绑定 hosts"></a>在 docker-compose 环境下绑定 hosts</h2><p>在 yml 文件里</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extra_hosts:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;test.com:192.168.1.1&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;example.com:192.168.1.2&quot;</span></span><br></pre></td></tr></table></figure><p>显示出来的效果&#x2F;etc&#x2F;hosts</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.1  test.com</span><br><span class="line">192.168.1.2  example.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx Ingress 定义多种日志格式</title>
      <link href="/posts/dcab3f5f/"/>
      <url>/posts/dcab3f5f/</url>
      
        <content type="html"><![CDATA[<p>生产环境有个项目需要打开 nginx 日志的 request_body 日志记录，但是如果把默认的日志格式改掉的话，日志量就太大了，所以查了一下针对某个域名进行搜集不同的日志。</p><p>k8s 的 ingress 其实就是 nginx 封装了一层，所以 nginx 可以做的，ingress 也都可以做，nginx 我们知道可以定义不同的日志格式，然后不同的虚拟主机来引用就好了。先查看文档，发现了 nginx-ingress 有一个叫 http-snippet 的参数，意思就是在 http 块下面增加一段原生的 Nginx 配置</p><h2 id="在-configmap-里面增加一个新的日志格式配置"><a href="#在-configmap-里面增加一个新的日志格式配置" class="headerlink" title="在 configmap 里面增加一个新的日志格式配置"></a>在 configmap 里面增加一个新的日志格式配置</h2><p>我们可以在 ingress-nginx 的 configmap 里面添加一个新的日志格式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">enable-underscores-in-headers:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">allow-snippet-annotations:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">use-gzip:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">gzip-level:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">proxy-body-size:</span> <span class="string">100M</span> <span class="comment"># 对应nginx client_max_body_size</span></span><br><span class="line">  <span class="attr">client-body-buffer-size:</span> <span class="string">&quot;8M&quot;</span></span><br><span class="line">  <span class="attr">client-header-buffer-size:</span> <span class="string">&quot;2M&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">proxy-connect-timeout:</span> <span class="string">&quot;300&quot;</span></span><br><span class="line">  <span class="attr">proxy-read-timeout:</span> <span class="string">&quot;300&quot;</span></span><br><span class="line">  <span class="attr">proxy-send-timeout:</span> <span class="string">&quot;300&quot;</span></span><br><span class="line">  <span class="attr">proxy-buffer-size:</span> <span class="string">&quot;32k&quot;</span></span><br><span class="line">  <span class="attr">connection-proxy-header:</span> <span class="string">&quot;keep-alive&quot;</span></span><br><span class="line">  <span class="comment"># 默认的日志格式</span></span><br><span class="line">  <span class="attr">log-format-upstream:</span> <span class="string">&#x27;&#123;&quot;@timestamp&quot;: &quot;$time_iso8601&quot;,&quot;server_addr&quot;:&quot;$server_addr&quot;,&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&quot;scheme&quot;:&quot;$scheme&quot;,&quot;request_method&quot;:&quot;$request_method&quot;,&quot;request_uri&quot;: &quot;$request_uri&quot;,&quot;request_length&quot;: &quot;$request_length&quot;,&quot;uri&quot;: &quot;$uri&quot;,&quot;request_time&quot;:$request_time,&quot;body_bytes_sent&quot;:$body_bytes_sent,&quot;bytes_sent&quot;:$bytes_sent,&quot;status&quot;:&quot;$status&quot;,&quot;upstream_host&quot;:&quot;$upstream_addr&quot;,&quot;domain&quot;:&quot;$host&quot;,&quot;http_referer&quot;:&quot;$http_referer&quot;,&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&quot;http_app_id&quot;:&quot;$http_app_id&quot;,&quot;x_forwarded&quot;:&quot;$http_x_forwarded_for&quot;,&quot;up_r_time&quot;:&quot;$upstream_response_time&quot;,&quot;up_status&quot;:&quot;$upstream_status&quot;,&quot;os_plant&quot;:&quot;$http_os_plant&quot;,&quot;os_version&quot;:&quot;$http_os_version&quot;,&quot;app_version&quot;:&quot;$http_app_version&quot;,&quot;app_build&quot;:&quot;$http_app_build&quot;,&quot;guid&quot;:&quot;$http_guid&quot;,&quot;resolution_ratio&quot;:&quot;$http_resolution_ratio&quot;,&quot;ip&quot;:&quot;$http_ip&quot;,&quot;imsi&quot;:&quot;$http_imsi&quot;,&quot;listen_port&quot;:&quot;$server_port&quot;&#125;&#x27;</span></span><br><span class="line">  <span class="comment"># 定义了一个新的日志格式</span></span><br><span class="line">  <span class="attr">http-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    log_format  with_body escape=json  &#x27;&#123;&quot;@timestamp&quot;: &quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;server_addr&quot;:&quot;$server_addr&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;scheme&quot;:&quot;$scheme&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;request_method&quot;:&quot;$request_method&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;request_uri&quot;: &quot;$request_uri&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;request_length&quot;: &quot;$request_length&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;uri&quot;: &quot;$uri&quot;, &#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;request_time&quot;:$request_time,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;body_bytes_sent&quot;:$body_bytes_sent,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;bytes_sent&quot;:$bytes_sent,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;dm&quot;:&quot;$request_body&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;status&quot;:&quot;$status&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;upstream_host&quot;:&quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;http_referer&quot;:&quot;$http_referer&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;http_host&quot;:&quot;$http_host&quot;,&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&quot;http_app_id&quot;:&quot;$http_app_id&quot;&#x27;</span></span><br><span class="line"><span class="string">      &#x27;&#125;&#x27;;</span></span><br></pre></td></tr></table></figure><h2 id="然后修改对应的-ingress-资源"><a href="#然后修改对应的-ingress-资源" class="headerlink" title="然后修改对应的 ingress 资源"></a>然后修改对应的 ingress 资源</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">    <span class="comment"># 指定日志格式为with_body</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/configuration-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            access_log /dev/stdout with_body;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test.i.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">i-com</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">test.i.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">test</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">test</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/sys</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ingress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Systemd Timesyncd服务来同步Linux时间</title>
      <link href="/posts/c4366641/"/>
      <url>/posts/c4366641/</url>
      
        <content type="html"><![CDATA[<p>现代 Linux 发行版都采用 systemd 管理系统，systemd 体系也提供了基础的 <code>timesyncd</code> 服务来实现 SNTP 客户端，可以替代传统的 <code>ntpd</code> 来实现主机 NTP 同步 (客户端)。虽然不能作为 NTP 服务器，但是精简的 <code>systemd-timesyncd</code> 可以实现非常轻量级的时钟同步功能。</p><p><code>systemd-timesyncd</code> 是通过网络提供系统时钟同步的服务，实现了 SNTP client。和 NTP 实现 chrony ntp 服务不同， <code>systemd-timesyncd</code> 只实现客户端功能，而不是实现完整的 NTP，聚焦于从远程服务器查询时间并同步到本地时钟。除非你需要需要为网络中其他 NTP 客户端提供服务或者需要连接本地硬件时钟，否则一个简单的 NTP 客户端，例如 <code>systemd-timesyncd</code> ，往往是最好的解决方案。这个时钟同步客户端运行只需要最小的权限。每次新的 NTP 同步请求发起，<code>timesyncd</code> 服务就把当前时钟保存到磁盘，并使用它来矫正启动时的系统时钟，这样就适合用于缺少 RTC 的设备，例如 <code>Raspberry Pi</code> 或者嵌入设备，可以确保这些系统时钟正确。需要注意，在安装 <code>Systemd进程管理器</code> 时候需要确保创建一个名为 <code>systemd-timesync</code> 的用户和组。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>安装:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install systemd-timesyncd</span><br></pre></td></tr></table></figure></li><li><p>激活:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> systemd-timesyncd.service</span><br><span class="line">systemctl start systemd-timesyncd.service</span><br></pre></td></tr></table></figure></li></ul><p>当 <code>systemd-timesyncd</code> 启动时会读取 <code>/etc/systemd/timesyncd.conf</code> 配置，所以如果要修订配置，例如更改时钟服务器，则类似:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Time]</span><br><span class="line">NTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org</span><br><span class="line">FallbackNTP=0.pool.ntp.org 1.pool.ntp.org 0.fr.pool.ntp.org</span><br></pre></td></tr></table></figure><ul><li><p>要验证配置，执行:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl show-timesync --all</span><br></pre></td></tr></table></figure></li></ul><p>显示类似:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LinkNTPServers=</span><br><span class="line">SystemNTPServers=</span><br><span class="line">FallbackNTPServers=0.rhel.pool.ntp.org 1.rhel.pool.ntp.org 2.rhel.pool.ntp.org 3.rhel.pool.ntp.org</span><br><span class="line">ServerName=0.rhel.pool.ntp.org</span><br><span class="line">ServerAddress=124.108.20.1</span><br><span class="line">RootDistanceMaxUSec=5s</span><br><span class="line">PollIntervalMinUSec=32s</span><br><span class="line">PollIntervalMaxUSec=34min 8s</span><br><span class="line">PollIntervalUSec=32s</span><br><span class="line">NTPMessage=&#123; Leap=0, Version=4, Mode=4, Stratum=2, Precision=-25, RootDelay=19.866ms, RootDispersion=1.800ms, Reference=D8DAC0CA, OriginateTimestamp=Fri 2021-05-28 16:23:26 CST, ReceiveTimestamp=Fri 2021-05-28 16:23:34 CST, TransmitTimestamp=Fri 2021-05-28 16:23:34 CST, DestinationTimestamp=Fri 2021-05-28 16:23:26 CST, Ignored=no PacketCount=1, Jitter=0  &#125;</span><br><span class="line">Frequency=0</span><br></pre></td></tr></table></figure><h2 id="timedatectl-和-timesyncd"><a href="#timedatectl-和-timesyncd" class="headerlink" title="timedatectl 和 timesyncd"></a>timedatectl 和 timesyncd</h2><ul><li><p>使用 <code>timedatectl status</code> 可以检查时钟状况:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl status</span><br></pre></td></tr></table></figure></li></ul><p>输出显示:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    Local time: Tue 2018-05-01 21:54:24 CST</span><br><span class="line">Universal time: Tue 2018-05-01 13:54:24 UTC</span><br><span class="line">      RTC time: Tue 2018-05-01 13:54:24</span><br><span class="line">     Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">Network time on: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line">RTC in local TZ: no</span><br></pre></td></tr></table></figure><p>如果上述显示输出中:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">               Local time: Fri 2021-05-28 16:24:59 CST</span><br><span class="line">           Universal time: Fri 2021-05-28 08:24:59 UTC</span><br><span class="line">                 RTC time: Fri 2021-05-28 16:24:57</span><br><span class="line">                Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">System clock synchronized: yes</span><br><span class="line">              NTP service: inactive</span><br><span class="line">          RTC in local TZ: yes</span><br><span class="line"></span><br><span class="line">Warning: The system is configured to read the RTC time in the local time zone.</span><br><span class="line">         This mode cannot be fully supported. It will create various problems</span><br><span class="line">         with time zone changes and daylight saving time adjustments. The RTC</span><br><span class="line">         time is never updated, it relies on external facilities to maintain it.</span><br><span class="line">         If at all possible, use RTC in UTC by calling</span><br><span class="line">         &#x27;timedatectl set-local-rtc 0&#x27;.</span><br></pre></td></tr></table></figure><p>可以看到:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NTP service: inactive</span><br></pre></td></tr></table></figure><p>实际上没有激活，所以我们通过以下命令激活:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后再次检查 <code>timedatectl status</code> 可以看到:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">              NTP service: active</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>此外，按照提示，关闭从本地时区读取 RTC 时间:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-local-rtc 0</span><br></pre></td></tr></table></figure><p>完成后再次检查 <code>timedatectl status</code> 可以看到:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">               Local time: Fri 2021-05-28 16:29:18 CST</span><br><span class="line">           Universal time: Fri 2021-05-28 08:29:18 UTC</span><br><span class="line">                 RTC time: Fri 2021-05-28 08:29:18</span><br><span class="line">                Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">System clock synchronized: yes</span><br><span class="line">              NTP service: active</span><br><span class="line">          RTC in local TZ: no</span><br></pre></td></tr></table></figure><ul><li><p>检查服务详细信息:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl timesync-status</span><br></pre></td></tr></table></figure></li></ul><p>可以看到类似输出:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">       Server: 124.108.20.1 (0.rhel.pool.ntp.org)</span><br><span class="line">Poll interval: 1min 4s (min: 32s; max 34min 8s)</span><br><span class="line">         Leap: normal</span><br><span class="line">      Version: 4</span><br><span class="line">      Stratum: 2</span><br><span class="line">    Reference: D8DAC0CA</span><br><span class="line">    Precision: 1us (-25)</span><br><span class="line">Root distance: 11.275ms (max: 5s)</span><br><span class="line">       Offset: -14.956ms</span><br><span class="line">        Delay: 186.719ms</span><br><span class="line">       Jitter: 0</span><br><span class="line"> Packet count: 1</span><br><span class="line">    Frequency: +28.703ppm</span><br></pre></td></tr></table></figure><ul><li><p>检查时钟同步情况:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status systemd-timesyncd</span><br></pre></td></tr></table></figure></li></ul><p>显示输出:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">● systemd-timesyncd.service - Network Time Synchronization</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/systemd-timesyncd.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /lib/systemd/system/systemd-timesyncd.service.d</span><br><span class="line">           └─disable-with-time-daemon.conf</span><br><span class="line">   Active: active (running) since Mon 2018-04-16 10:33:42 CST; 2 weeks 1 days ago</span><br><span class="line">     Docs: man:systemd-timesyncd.service(8)</span><br><span class="line"> Main PID: 910 (systemd-timesyn)</span><br><span class="line">   Status: &quot;Synchronized to time server 91.189.91.157:123 (ntp.ubuntu.com).&quot;</span><br><span class="line">    Tasks: 2</span><br><span class="line">   Memory: 2.2M</span><br><span class="line">      CPU: 2.710s</span><br><span class="line">   CGroup: /system.slice/systemd-timesyncd.service</span><br><span class="line">           └─910 /lib/systemd/systemd-timesyncd</span><br><span class="line"></span><br><span class="line">Apr 29 07:30:24 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.91.157:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 07:30:24 devstack systemd-timesyncd[910]: Synchronized to time server 91.189.94.4:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 09:14:36 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.94.4:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 09:14:46 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.89.198:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 09:14:56 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.89.199:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 09:49:06 devstack systemd-timesyncd[910]: Synchronized to time server 91.189.89.199:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 13:52:01 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.89.199:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 13:52:11 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.89.198:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 13:52:21 devstack systemd-timesyncd[910]: Timed out waiting for reply from 91.189.94.4:123 (ntp.ubuntu.com).</span><br><span class="line">Apr 29 13:52:22 devstack systemd-timesyncd[910]: Synchronized to time server 91.189.91.157:123 (ntp.ubuntu.com).</span><br></pre></td></tr></table></figure><ul><li><p>在 <code>/etc/systemd/timesyncd.conf</code> 设置 <code>timedatectl</code> 和 <code>timesyncd</code> 获取时钟值的服务器，并且详细配置可以在 <code>/etc/systemd/timesyncd.conf.d/</code> 目录下找到</p></li><li><p>在 <code>/etc/systemd/timesyncd.conf</code> 中配置了 <code>timedatectl</code> 访问的服务器，这里配置局域网中自建的 <a href="https://cloud-atlas.readthedocs.io/zh_CN/latest/infra_service/ntp/deploy_ntp.html#deploy-ntp">部署NTP服务(集群)</a></p>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Time]</span></span><br><span class="line"><span class="attr">NTP</span>=<span class="number">192.168</span>.<span class="number">6.11</span></span><br></pre></td></tr></table></figure></li><li><p>重启 <code>systemd-timesyncd</code> 服务:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart systemd-timesyncd</span><br></pre></td></tr></table></figure></li><li><p>检查和指定 NTP 服务器同步时间:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status systemd-timesyncd</span><br></pre></td></tr></table></figure></li></ul><p>可以看到同步过程:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">May 01 22:38:36 pi1 systemd[1]: Starting Network Time Synchronization...</span><br><span class="line">May 01 22:38:37 pi1 systemd[1]: Started Network Time Synchronization.</span><br><span class="line">May 01 22:38:37 pi1 systemd-timesyncd[23922]: Synchronized to time server 192.168.6.11:123 (192.168.6.11).</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.archlinux.org/title/systemd-timesyncd">systemd-timesyncd</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> time </tag>
            
            <tag> Systemd </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写安全健壮的shell脚本</title>
      <link href="/posts/b82d63c2/"/>
      <url>/posts/b82d63c2/</url>
      
        <content type="html"><![CDATA[<p>编写 shell 脚本容易出现的问题：比如变量为空的时候，管道报错等，容易引起一系列问题甚至灾难性的结果。<br>可以借助工具<a href="https://www.shellcheck.net/">https://www.shellcheck.net/</a>来检查脚本里面可以改进的地方。</p><h2 id="脚本里使用-set"><a href="#脚本里使用-set" class="headerlink" title="脚本里使用 set"></a>脚本里使用 set</h2><p>建议使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -euo pipefail</span><br></pre></td></tr></table></figure><h3 id="set-o"><a href="#set-o" class="headerlink" title="set -o"></a>set -o</h3><p><code>set -o</code> 可以查看 shell 的选项开关，比如常用的 <code>pipefail</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -o | pipefail</span><br></pre></td></tr></table></figure><p>pipefail 是指在一个管道命令中，任意一个命令执行失败就认为命令报错（但是可以继续执行，想让它报错退出需要再加上 set -e）</p><p>可以在 shell 脚本开头加上 <code>set -o pipefail</code>，我们来看一个例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -o pipefail</span><br><span class="line"><span class="built_in">cat</span> test.txt | <span class="built_in">tee</span> test2.txt</span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设test.txt不存在，这个时候输出的是1</span></span><br><span class="line"><span class="comment"># 如果去掉 set -o pipefail，这个时候输出的是0</span></span><br></pre></td></tr></table></figure><h3 id="set-e"><a href="#set-e" class="headerlink" title="set -e"></a>set -e</h3><p>set -e 是指任意一条命令返回值不是 0，脚本就退出不继续执行了。</p><p>如果有些程序想要人为的忽略报错，可以在命令开始前加上 set +e，命令结束的时候再 set -e，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">...</span><br><span class="line"><span class="built_in">set</span> +e</span><br><span class="line">cmd</span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="set-u"><a href="#set-u" class="headerlink" title="set -u"></a>set -u</h3><p>将未设置的参数或者变量视为错误并退出脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -u</span><br><span class="line"><span class="built_in">echo</span> 111</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;123&#125;</span></span><br><span class="line"><span class="built_in">echo</span> 222</span><br></pre></td></tr></table></figure><p>这个时候只会执行 echo 111，因为 ${123}不存在，脚本就报错退出了。</p><h3 id="set-x"><a href="#set-x" class="headerlink" title="set -x"></a>set -x</h3><p>调试模式，会把每一个 shell 命令执行的结果都打印出来，效果等同于 <code>bash -x test.sh</code></p><h3 id="set-f"><a href="#set-f" class="headerlink" title="set -f"></a>set -f</h3><p>禁用文件名通配符，比如脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -f</span><br><span class="line"><span class="built_in">rm</span> -rf *.md</span><br></pre></td></tr></table></figure><p>这个时候只会删除文件名为 <code>*.md</code> 的文件，并不会把所有.md 的文件都删除。</p><h2 id="编写脚本注意事项"><a href="#编写脚本注意事项" class="headerlink" title="编写脚本注意事项"></a>编写脚本注意事项</h2><table><thead><tr><th>错误示范</th><th>正确示范</th></tr></thead><tbody><tr><td>a&#x3D;`pwd`</td><td>a&#x3D;$(pwd)</td></tr><tr><td>echo $a</td><td>echo “${a}”</td></tr></tbody></table><h2 id="trap-捕获错误"><a href="#trap-捕获错误" class="headerlink" title="trap 捕获错误"></a>trap 捕获错误</h2><p>trap 是捕获信号的命令，常用的信号有：</p><table><thead><tr><th><strong>编号</strong></th><th><strong>信号名称</strong></th><th><strong>缺省动作</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>1</td><td>SIGHUP</td><td>终止</td><td>终止进程，挂起</td></tr><tr><td>2</td><td>SIGINT</td><td>终止</td><td>键盘输入中断命令，一般是 CTRL+C</td></tr><tr><td>3</td><td>SIGQUIT</td><td>CoreDump</td><td>键盘输入退出命令，一般是 CTRL+\</td></tr><tr><td>4</td><td>SIGILL</td><td>CoreDump</td><td>非法指令</td></tr><tr><td>5</td><td>SIGTRAP</td><td>CoreDump</td><td>trap 指令发出，一般调试用</td></tr><tr><td>6</td><td>SIGABRT</td><td>CoreDump</td><td>abort(3) 发出的终止信号</td></tr><tr><td>7</td><td>SIGBUS</td><td>CoreDump</td><td>非法地址</td></tr><tr><td>8</td><td>SIGFPE</td><td>CoreDump</td><td>浮点数异常</td></tr><tr><td>9</td><td>SIGKILL</td><td>终止</td><td>立即停止进程，不能捕获，不能忽略</td></tr><tr><td>10</td><td>SIGUSR1</td><td>终止</td><td>用户自定义信号 1，像 Nginx 就支持 USR1 信号，用于重载配置，重新打开日志</td></tr><tr><td>11</td><td>SIGSEGV</td><td>CoreDump</td><td>无效内存引用</td></tr><tr><td>12</td><td>SIGUSR2</td><td>终止</td><td>用户自定义信号 2</td></tr><tr><td>13</td><td>SIGPIPE</td><td>终止</td><td>管道不能访问</td></tr><tr><td>14</td><td>SIGALRM</td><td>终止</td><td>时钟信号，alrm(2) 发出的终止信号</td></tr><tr><td>15</td><td>SIGTERM</td><td>终止</td><td>终止信号，进程会先关闭正在运行的任务或打开的文件再终止，有时间进程在有运行的任务而忽略此信号。不能捕捉</td></tr><tr><td>16</td><td>SIGSTKFLT</td><td>终止</td><td>处理器栈错误</td></tr><tr><td>17</td><td>SIGCHLD</td><td>可忽略</td><td>子进程结束时，父进程收到的信号</td></tr><tr><td>18</td><td>SIGCONT</td><td>可忽略</td><td>让终止的进程继续执行</td></tr><tr><td>19</td><td>SIGSTOP</td><td>停止</td><td>停止进程，不能忽略，不能捕获</td></tr><tr><td>20</td><td>SIGSTP</td><td>停止</td><td>停止进程，一般是 CTRL+Z</td></tr><tr><td>21</td><td>SIGTTIN</td><td>停止</td><td>后台进程从终端读数据</td></tr><tr><td>22</td><td>SIGTTOU</td><td>停止</td><td>后台进程从终端写数据</td></tr><tr><td>23</td><td>SIGURG</td><td>可忽略</td><td>紧急数组是否到达 socket</td></tr><tr><td>24</td><td>SIGXCPU</td><td>CoreDump</td><td>超出 CPU 占用资源限制</td></tr><tr><td>25</td><td>SIGXFSZ</td><td>CoreDump</td><td>超出文件大小资源限制</td></tr><tr><td>26</td><td>SIGVTALRM</td><td>终止</td><td>虚拟时钟信号，类似于 SIGALRM，但计算的是进程占用的时间</td></tr><tr><td>27</td><td>SIGPROF</td><td>终止</td><td>类似与 SIGALRM，但计算的是进程占用 CPU 的时间</td></tr><tr><td>28</td><td>SIGWINCH</td><td>可忽略</td><td>窗口大小改变发出的信号</td></tr><tr><td>29</td><td>SIGIO</td><td>终止</td><td>文件描述符准备就绪，可以输入&#x2F;输出操作了</td></tr><tr><td>30</td><td>SIGPWR</td><td>终止</td><td>电源失败</td></tr><tr><td>31</td><td>SIGSYS</td><td>CoreDump</td><td>非法系统调用</td></tr></tbody></table><h3 id="程序退出后删除临时文件"><a href="#程序退出后删除临时文件" class="headerlink" title="程序退出后删除临时文件"></a>程序退出后删除临时文件</h3><p>有时候我们的脚本会生成一些临时文件，虽然可以在脚本最后删除这些临时文件，但是有些例外情况比如脚本报错，这样临时文件就不能及时地清理掉，这个时候我们可以利用 trap 捕获 EXIT 信号来执行我们想要的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">some_cmd</span><br><span class="line"><span class="function"><span class="title">clean_up</span></span>() &#123;</span><br><span class="line">    <span class="built_in">rm</span> -rf /tmp/*</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;cleaned up ...&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;clean_up&#x27;</span> EXIT</span><br></pre></td></tr></table></figure><h3 id="程序意外退出删除临时文件"><a href="#程序意外退出删除临时文件" class="headerlink" title="程序意外退出删除临时文件"></a>程序意外退出删除临时文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">some_cmd</span><br><span class="line"><span class="function"><span class="title">clean_up</span></span>() &#123;</span><br><span class="line">    <span class="built_in">rm</span> -rf /tmp/*</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;cleaned up ...&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;clean_up&#x27;</span> SIGHUP SIGINT SIGTERM</span><br></pre></td></tr></table></figure><h2 id="生成临时文件"><a href="#生成临时文件" class="headerlink" title="生成临时文件"></a>生成临时文件</h2><p>可以使用 mktemp 命令生成 tmp 文件，mktemp -d 生成临时目录，避免临时目录重复使用的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">tmp_file=<span class="string">&quot;<span class="subst">$(mktemp)</span>&quot;</span></span><br><span class="line">tmp_folder=<span class="string">&quot;<span class="subst">$(mktemp -d)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$tmp_file</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$tmp_folder</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> shell </tag>
            
            <tag> script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx之server_name匹配和listen匹配</title>
      <link href="/posts/09a38e37/"/>
      <url>/posts/09a38e37/</url>
      
        <content type="html"><![CDATA[<p>nginx 可以通过 listen 的 ip 和端口来匹配请求应该由哪个配置文件来处理，也可以通过 server_name 来匹配，抽空理了理这个匹配的规则和优先级，参考文档：</p><h2 id="基于域名的虚拟主机"><a href="#基于域名的虚拟主机" class="headerlink" title="基于域名的虚拟主机"></a>基于域名的虚拟主机</h2><p>默认是先匹配 listen 的 ip 和端口，匹配到了再检查 server_name，如果没有匹配的 server_name，则由第一个来处理，除非添加 default_server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name example.net;</span><br><span class="line">    default_type application/json;</span><br><span class="line">    return 200 &#x27;&#123;&quot;server_name&quot;:&quot;$server_name&quot;, &quot;host&quot;: &quot;$host&quot;, &quot;server_addr&quot;:&quot;$server_addr&quot;&#125;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name example.com;</span><br><span class="line">    default_type application/json;</span><br><span class="line">    return 200 &#x27;&#123;&quot;server_name&quot;:&quot;$server_name&quot;, &quot;host&quot;: &quot;$host&quot;, &quot;server_addr&quot;:&quot;$server_addr&quot;&#125;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; curl 10.0.0.100 -H <span class="string">&quot;host:example.com&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.com&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;10.0.0.100&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;10.0.0.100&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&gt; curl localhost</span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.net&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>在这个配置中，nginx 仅仅检查请求的“Host”头以决定该请求应由哪个虚拟主机来处理。如果 Host 头没有匹配任意一个虚拟主机，或者请求中根本没有包含 Host 头，那 nginx 会将请求分发到定义在此端口上的默认虚拟主机。在以上配置中，第一个被列出的虚拟主机即 nginx 的默认虚拟主机——这是 nginx 的默认行为。而且，可以显式地设置某个主机为默认虚拟主机，即在 “listen” 指令中设置 “default_server” 参数：</p><p>如果同样的 listen 配置了两个 default_server 则会报错 <code>nginx: [emerg] a duplicate default server for 10.0.0.100:80 in /etc/nginx/conf.d/test.conf:9</code></p><h2 id="基于域名和-IP-混合的虚拟主机"><a href="#基于域名和-IP-混合的虚拟主机" class="headerlink" title="基于域名和 IP 混合的虚拟主机"></a>基于域名和 IP 混合的虚拟主机</h2><p>Nginx 首先选定由哪一个虚拟主机来处理请求。让我们从一个简单的配置（其中全部 2 个虚拟主机都在端口 <code>*：80</code> 上监听）开始：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      localhost:80;</span><br><span class="line">    server_name example.org;</span><br><span class="line">    default_type application/json;</span><br><span class="line">    return 200 &#x27;&#123;&quot;server_name&quot;:&quot;$server_name&quot;, &quot;host&quot;: &quot;$host&quot;, &quot;server_addr&quot;:&quot;$server_addr&quot;&#125;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      10.0.0.100:80;</span><br><span class="line">    server_name example.net;</span><br><span class="line">    default_type application/json;</span><br><span class="line">    return 200 &#x27;&#123;&quot;server_name&quot;:&quot;$server_name&quot;, &quot;host&quot;: &quot;$host&quot;, &quot;server_addr&quot;:&quot;$server_addr&quot;&#125;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      10.0.0.100:80;</span><br><span class="line">    server_name example.com;</span><br><span class="line">    default_type application/json;</span><br><span class="line">    return 200 &#x27;&#123;&quot;server_name&quot;:&quot;$server_name&quot;, &quot;host&quot;: &quot;$host&quot;, &quot;server_addr&quot;:&quot;$server_addr&quot;&#125;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个配置中，nginx 首先测试请求的 IP 地址和端口是否匹配某个 server 配置块中的 listen 指令配置。接着 nginx 继续测试请求的 Host 头是否匹配这个 server 块中的某个 server_name 的值。如果主机名没有找到，nginx 将把这个请求交给默认虚拟主机处理。</p><p>例如，一个从 10.0.0.100:80 端口收到的访问 a.example.com 的请求将被监听 10.0.0.100:80 端口的默认虚拟主机处理，本例中就是第二个服务器，因为这个端口上没有定义名为 a.example.com 的虚拟主机。</p><p>我们可以测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; curl localhost</span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.org&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&gt; curl 10.0.0.100</span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.net&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;10.0.0.100&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;10.0.0.100&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&gt; curl 10.0.0.100 -H <span class="string">&quot;host:example.com&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.com&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;example.com&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;10.0.0.100&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&gt; curl 10.0.0.100 -H <span class="string">&quot;host:a.example.com&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;server_name&quot;</span>:<span class="string">&quot;example.net&quot;</span>, <span class="string">&quot;host&quot;</span>: <span class="string">&quot;a.example.com&quot;</span>, <span class="string">&quot;server_addr&quot;</span>:<span class="string">&quot;10.0.0.100&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="server-name-为空"><a href="#server-name-为空" class="headerlink" title="server_name 为空"></a>server_name 为空</h2><p>看一个例子，如果不允许请求中缺少“Host”头，可以定义如下主机，丢弃这些请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  &quot;&quot;;</span><br><span class="line">    return       444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 配置文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vscode来写hugo博客并处理图片插入问题</title>
      <link href="/posts/2a39e018/"/>
      <url>/posts/2a39e018/</url>
      
        <content type="html"><![CDATA[<p>如果对 typora 情有独钟的同学可以参考<a href="https://zahui.fan/posts/b4cf69c3/">https://zahui.fan/posts/b4cf69c3/</a>，不过我用来用去还是发现 vscode 好，哪怕不写代码，仅仅写文章也挺不错的。不过直接用的话有很多问题，我们还需要借助 vscode 强大的插件系统。</p><h2 id="插入到-static-目录"><a href="#插入到-static-目录" class="headerlink" title="插入到 static 目录"></a>插入到 static 目录</h2><h3 id="插入图片问题"><a href="#插入图片问题" class="headerlink" title="插入图片问题"></a>插入图片问题</h3><p>我们在写博客的时候，有时会有一些插入图片的需求，之前的做法是 – 截图保存到 <code>static/images</code> 目录，然后文章里面添加 <code>![图片说明](https://static.zahui.fan/images/xxx.png)</code>，操作很繁琐，或者也可以使用图床，不过也挺麻烦的。我们可以用一款叫 <code>paste image</code> 的插件来简化我们的插入图片的操作。</p><p>假设你的博客图片放在仓库根目录的 static&#x2F;images 目录下，博客文章在其他地方，需要修改</p><ul><li><p>图片存放的位置：</p><p>  <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-00-46-15.png" alt="图片存放的位置"></p></li><li><p>图片的基础路径：</p><p>  即在 markdown 文件里面不显示 static 了，只从 images 开始显示</p><p>  <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-00-48-30.png" alt="图片的基础路径"></p></li><li><p>路径的前缀：</p><p>  如果不加的话，路径是类似于 <code>![图片说明](images/xxx.png)</code>，我们想要的是 <code>![图片说明](https://static.zahui.fan/images/xxx.png)</code></p><p>  <img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-00-55-40.png" alt="路径前缀"></p></li></ul><p>以上修改完成后，就可以使用 <code>ctrl+alt+v</code> 键直接从电脑剪贴板粘贴了。</p><p>以上配置文件的修改也可以通过直接编辑 json 文件来进行</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pasteImage.basePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;projectRoot&#125;/static&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pasteImage.path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;projectRoot&#125;/static/images&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pasteImage.prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="避免-blog-仓库过大"><a href="#避免-blog-仓库过大" class="headerlink" title="避免 blog 仓库过大"></a>避免 blog 仓库过大</h3><p>blog 仓库只保留文本文件，每次提交 commit 也是有意义的，但是像图片等就没必要这样了，所以 static 目录我是用了一个 git submodule，当然还有一种方法是使用图床，放在 github 仓库里，使用 jsdeliver 进行 CDN 加速</p><h2 id="使用图床"><a href="#使用图床" class="headerlink" title="使用图床"></a>使用图床</h2><p>图床说白了就是个存图片的地方，可以通过 http 直链来访问，可以简化 md 编写和移动，可以使用 <a href="https://picgo.github.io/PicGo-Doc/">PicGo</a> 来简化操作</p><p>我用的是 github 做图床，通过 jsdelivr 来进行 CDN 加速，我的配置文件如下（其中 token 需要在 github 后台生成）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;github&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;github&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;smms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;github&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;branch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;master&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/iuxt/static&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iuxt/static&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxx&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;shortKey&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;picgo:upload&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CommandOrControl+Shift+P&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;upload&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;快捷上传&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">36677</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;privacyEnsure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;showUpdateTip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PICGO_ENV&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GUI&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;needReload&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>按下快捷键 ctrl + shift + p 会自动上传剪切板上的图片，然后将连接写入剪切板</p><h2 id="hugo-命令"><a href="#hugo-命令" class="headerlink" title="hugo 命令"></a>hugo 命令</h2><p>只需要将 hugo.exe 扔到 path 里就好了，我个人比较喜欢的做法是在家目录创建一个 bin 目录，然后把这个 bin 目录添加到 path 环境变量中，具体操作如下：</p><p>下载 hugo.exe 放到 <code>%userprofile%\bin</code> 中，然后</p><p>系统设置</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-01-01-09.png" alt="系统设置"></p><p>高级系统设置</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-01-02-08.png" alt="高级设置"></p><p>环境变量</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/2022-03-30-01-02-16.png" alt="环境变量"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hugo </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> markdown </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理</title>
      <link href="/posts/stmd3s/"/>
      <url>/posts/stmd3s/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出块设备、挂载点等，一般查看磁盘信息</span></span><br><span class="line">lsblk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /es-data2 /es-data1 /es-logs</span><br><span class="line"><span class="built_in">chown</span> -R elasticsearch:elasticsearch /es-data2 /es-data1 /es-logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置磁盘为gpt分区表</span></span><br><span class="line">sudo parted /dev/vdb --script mklabel gpt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分区，标识为ext4(不会真正格式化)</span></span><br><span class="line">sudo parted /dev/vdb mkpart primary ext4 0% 100%</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分区表</span></span><br><span class="line">sudo parted /dev/vdb <span class="built_in">print</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化分区为ext4文件系统</span></span><br><span class="line">sudo mkfs.ext4 /dev/vdb1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动挂载到指定的路径</span></span><br><span class="line">sudo mount /dev/vdb1 /es-data2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看挂载点、磁盘占用大小等。</span></span><br><span class="line"><span class="built_in">df</span> -hT</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置自动挂载"><a href="#配置自动挂载" class="headerlink" title="配置自动挂载"></a>配置自动挂载</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用UUID挂载(推荐)</button><button type="button" class="tab">使用设备路径挂载</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看块设备的UUID</span></span><br><span class="line">sudo blkid /dev/vdb1</span><br></pre></td></tr></table></figure><p><code>vim /etc/fstab</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式：UUID=&lt;UUID&gt; &lt;挂载点&gt; &lt;文件系统类型&gt; &lt;挂载选项&gt; &lt;dump&gt; &lt;fsck&gt;</span></span><br><span class="line">UUID=c35edad4-2d9b-4adc-b107-aeecbcae416e /es-data2 ext4    defaults,nofail 0 0</span><br></pre></td></tr></table></figure><p>参数解释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">UUID:          分区的唯一标识符（比设备名更稳定）。</span><br><span class="line">挂载点:        新磁盘挂载的目标目录（如 /mnt/data）。</span><br><span class="line">文件系统类型:  分区的格式（如 ext4、xfs、ntfs 等）。</span><br><span class="line"></span><br><span class="line">挂载选项:</span><br><span class="line">defaults:      包含读写、执行等基本权限。</span><br><span class="line">nofail:        启动时如果磁盘不存在，忽略错误（防止系统无法启动）。</span><br><span class="line">dump:          备份工具 dump 的标记（通常设为 0）。</span><br><span class="line">fsck:          文件系统检查顺序（0 表示不检查，根分区设为 1，其他数据盘设为 0 或 2）。</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p><code>vim /etc/fstab</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/vdb1 /es-data2 ext4 defaults,nofail 0 0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="测试自动挂载"><a href="#测试自动挂载" class="headerlink" title="测试自动挂载"></a>测试自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扩容 </tag>
            
            <tag> 分区 </tag>
            
            <tag> 挂载 </tag>
            
            <tag> 格式化 </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka + Zookeeper集群搭建</title>
      <link href="/posts/60a9e345/"/>
      <url>/posts/60a9e345/</url>
      
        <content type="html"><![CDATA[<p>新版本的 kafka 可以不依赖 zookeeper，不过目前处于测试阶段，且不支持 zookeeper 迁移到新本，所以在生产环境还是建议等一等。本文使用的是 <a href="https://archive.apache.org/dist/kafka/2.8.1/kafka_2.13-2.8.1.tgz">kafka_2.13-2.8.1.tgz</a></p><p>zookeeper 相关的文档可以参考<a href="https://zookeeper.apache.org/doc/r3.8.0/zookeeperStarted.html">https://zookeeper.apache.org/doc/r3.8.0/zookeeperStarted.html</a></p><h2 id="安装规划"><a href="#安装规划" class="headerlink" title="安装规划"></a>安装规划</h2><table><thead><tr><th>说明</th><th>目录</th></tr></thead><tbody><tr><td>kafka 程序目录</td><td>&#x2F;data&#x2F;src&#x2F;kafka_2.13-2.8.1</td></tr><tr><td>kafka 数据目录</td><td>&#x2F;data&#x2F;kafka-logs</td></tr><tr><td>zookeeper 数据目录</td><td>&#x2F;data&#x2F;zookeeper_data</td></tr></tbody></table><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="首先需要安装-java-环境"><a href="#首先需要安装-java-环境" class="headerlink" title="首先需要安装 java 环境"></a>首先需要安装 java 环境</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y openjdk-8-jdk-headless</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y java-1.8.0-openjdk</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/kafka-logs -p</span><br><span class="line"><span class="built_in">mkdir</span> /data/zookeeper_data -p</span><br><span class="line"><span class="built_in">ln</span> -s /data/src/kafka_2.13-2.8.1 /data/src/kafka</span><br></pre></td></tr></table></figure><h2 id="配置-zookeeper"><a href="#配置-zookeeper" class="headerlink" title="配置 zookeeper"></a>配置 zookeeper</h2><h3 id="修改-zookeeper-配置"><a href="#修改-zookeeper-配置" class="headerlink" title="修改 zookeeper 配置"></a>修改 zookeeper 配置</h3><p>vim config&#x2F;zookeeper.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/data/zookeeper_data</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort=2181</span><br><span class="line"># disable the per-ip limit on the number of connections since this is a non-production config</span><br><span class="line">maxClientCnxns=0</span><br><span class="line"># Disable the adminserver by default to avoid port conflicts.</span><br><span class="line"># Set the port to something non-conflicting if choosing to enable this</span><br><span class="line">admin.enableServer=false</span><br><span class="line"># admin.serverPort=8080</span><br><span class="line"></span><br><span class="line">tickTime=2000</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=10.0.0.31:2888:3888</span><br><span class="line">server.2=10.0.0.32:2888:3888</span><br><span class="line">server.3=10.0.0.33:2888:3888</span><br></pre></td></tr></table></figure><h3 id="创建数据目录和集群-ID"><a href="#创建数据目录和集群-ID" class="headerlink" title="创建数据目录和集群 ID"></a>创建数据目录和集群 ID</h3><blockquote><p>myid 集群内不能重复的，每台机器设置成不一样的。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /data/zookeeper_data/myid</span><br></pre></td></tr></table></figure><h3 id="启动-zookeeper"><a href="#启动-zookeeper" class="headerlink" title="启动 zookeeper"></a>启动 zookeeper</h3><p>创建 systemd 文件 (可选)</p><p>vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;zookeeper.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Zookeeper service</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">Group</span>=root</span><br><span class="line"><span class="attr">ExecStart</span>=/data/src/kafka/bin/zookeeper-server-start.sh /data/src/kafka/config/zookeeper.properties</span><br><span class="line"><span class="attr">ExecStop</span>=/data/src/kafka/bin/zookeeper-server-stop.sh</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="配置-kafka"><a href="#配置-kafka" class="headerlink" title="配置 kafka"></a>配置 kafka</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>vim config&#x2F;server.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">broker.id=1                            # 每个节点需要不一样</span><br><span class="line">listeners=PLAINTEXT://10.0.0.31:9092   # IP和你的节点IP保持一致</span><br><span class="line">zookeeper.connect=10.0.0.31:2181,10.0.0.32:2181,10.0.0.33:2181</span><br></pre></td></tr></table></figure><h3 id="启动-kafka"><a href="#启动-kafka" class="headerlink" title="启动 kafka"></a>启动 kafka</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-start.sh config/server.properties</span><br></pre></td></tr></table></figure><blockquote><p>如果报错：<br>kafka.common.InconsistentClusterIdException: The Cluster ID C4wRULTzSGqNoEAInvubIw doesn’t match stored clusterId Some(eA5rD8rZSUm3EXr2glib2w) in meta.properties. The broker is trying tojoin the wrong cluster. Configured zookeeper.connect may be wrong.</p><p>这个时候需要删除 kafka 的 log 目录，让程序重新生成</p></blockquote><p>创建 systemd 配置文件</p><p>vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kafka.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Apache Kafka server (broker)</span><br><span class="line"><span class="attr">After</span>=network.target zookeeper.service</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=simple</span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">Group</span>=root</span><br><span class="line"><span class="attr">ExecStart</span>=/data/src/kafka/bin/kafka-server-start.sh /data/src/kafka/config/server.properties</span><br><span class="line"><span class="attr">ExecStop</span>=/data/src/kafka/bin/kafka-server-stop.sh</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="测试和使用"><a href="#测试和使用" class="headerlink" title="测试和使用"></a>测试和使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/src/kafka</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建topic</span></span><br><span class="line">bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic testtopic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看topic list</span></span><br><span class="line">bin/kafka-topics.sh --zookeeper localhost:2181 --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台生产消息</span></span><br><span class="line">bin/kafka-console-producer.sh --bootstrap-server kafka2:9092 --topic testtopic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台消费消息</span></span><br><span class="line">bin/kafka-console-consumer.sh --bootstrap-server kafka3:9092 --topic testtopic --from-beginning</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Kafka </tag>
            
            <tag> 有状态服务 </tag>
            
            <tag> MQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Filebeat输出日志格式处理</title>
      <link href="/posts/1a418f5e/"/>
      <url>/posts/1a418f5e/</url>
      
        <content type="html"><![CDATA[<p>使用 filebeat 可以在收集过程中进行一些简单的处理，如丢弃日志等，给后面的 kafka 等减少压力</p><h2 id="普通文本日志格式"><a href="#普通文本日志格式" class="headerlink" title="普通文本日志格式"></a>普通文本日志格式</h2><p>原始日志格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2022-03-15 14:53:48.972 [http-nio-8080-exec-10] o.s.c.c.c.ConfigServicePropertySourceLocator-[227]-[INFO]-Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available\n&quot;,&quot;stream&quot;:&quot;stdout&quot;,&quot;time&quot;:&quot;2022-03-15T06:53:48.972854745Z&quot;&#125;</span><br></pre></td></tr></table></figure><p>这里的原始日志是指要收集的日志文件的格式，上面的这个日志是被 Kubernetes 处理过的，真正程序输出的日志应该是 log 字段。</p><p>对应的 filebeat 配置文件如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">    <span class="attr">symlinks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">json.keys_under_root:</span> <span class="literal">false</span>     <span class="comment"># keys_under_root可以让字段位于根节点,默认为false</span></span><br><span class="line">    <span class="attr">json.overwrite_keys:</span> <span class="literal">false</span>      <span class="comment"># 对于同名的key,覆盖原有key值</span></span><br><span class="line">    <span class="attr">json.add_error_key:</span> <span class="literal">true</span>        <span class="comment"># 将解析错误的消息记录储存在error.message字段中</span></span><br><span class="line">    <span class="attr">tail_files:</span> <span class="literal">true</span>                <span class="comment"># 如果此选项设置为true,Filebeat开始在每个文件的末尾读取新文件,默认设置是false。</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/containers/*_dev_*.log</span></span><br><span class="line">    <span class="comment"># exclude_files:                    # 排除的文件路径</span></span><br><span class="line">    <span class="comment">#   - &#x27;ingress-nginx-controller\.*&#x27;</span></span><br><span class="line">    <span class="comment">#   - &#x27;\.*_dev_\.*</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">processors:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">drop_event:</span></span><br><span class="line">        <span class="attr">when:</span></span><br><span class="line">            <span class="attr">or:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                <span class="attr">json.log:</span> <span class="string">&#x27;定时任务task&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                <span class="attr">json.log:</span> <span class="string">&#x27;定时任务执行成功&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">log_topic:</span> <span class="string">k8s-pod-logs</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;kube-logs&quot;</span></span><br><span class="line">    <span class="comment"># multiline.negate: true</span></span><br><span class="line">    <span class="comment"># multiline.match: after</span></span><br></pre></td></tr></table></figure><p>经过 filebeat 处理后输出的内容：<br>所以回过头来看上面的配置文件，<code>drop_event</code> <code>regexp</code> 下面 针对 <code>json.log</code> 做正则匹配，包含指定字符就丢弃。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-03-15T07:04:44.917Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span> <span class="string">&quot;k8s-pod-logs&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">6799764</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/log/containers/xxxx.log&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;json&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[2022-03-15 15:04:37.637] http-nio-8080-exec-8 com.i.aa.aa.b-[-1]-[DEBUG]-[TID:null NAME:APPNAME ENV:dev INS:172.20.37.197] CORSFilter is work~~~\n&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stdout&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-03-15T07:04:37.638273461Z&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kube-logs&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;log_topic&quot;</span><span class="punctuation">:</span> <span class="string">&quot;k8s-pod-logs&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ecs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;localhost.localdomain&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;architecture&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x86_64&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;os&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;centos&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7 (Core)&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;family&quot;</span><span class="punctuation">:</span> <span class="string">&quot;redhat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CentOS Linux&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kernel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5.4.113-1.el7.elrepo.x86_64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;codename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Core&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;containerized&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;localhost.localdomain&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;agent&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ephemeral_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;localhost.localdomain&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="针对-json-格式日志处理"><a href="#针对-json-格式日志处理" class="headerlink" title="针对 json 格式日志处理"></a>针对 json 格式日志处理</h2><p>原始日志：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-03-15T14:15:14+08:00&quot;</span><span class="punctuation">,</span><span class="attr">&quot;server_addr&quot;</span><span class="punctuation">:</span><span class="string">&quot;1.1.1.1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;remote_addr&quot;</span><span class="punctuation">:</span><span class="string">&quot;1.1.1.1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scheme&quot;</span><span class="punctuation">:</span><span class="string">&quot;https&quot;</span><span class="punctuation">,</span><span class="attr">&quot;request_method&quot;</span><span class="punctuation">:</span><span class="string">&quot;POST&quot;</span><span class="punctuation">,</span><span class="attr">&quot;request_uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span><span class="attr">&quot;request_length&quot;</span><span class="punctuation">:</span> <span class="string">&quot;25545&quot;</span><span class="punctuation">,</span><span class="attr">&quot;uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span><span class="attr">&quot;request_time&quot;</span><span class="punctuation">:</span><span class="number">0.004</span><span class="punctuation">,</span><span class="attr">&quot;body_bytes_sent&quot;</span><span class="punctuation">:</span><span class="number">833</span><span class="punctuation">,</span><span class="attr">&quot;bytes_sent&quot;</span><span class="punctuation">:</span><span class="number">1072</span><span class="punctuation">,</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="string">&quot;200&quot;</span><span class="punctuation">,</span><span class="attr">&quot;upstream_host&quot;</span><span class="punctuation">:</span><span class="string">&quot;1.1.1.1:8084&quot;</span><span class="punctuation">,</span><span class="attr">&quot;domain&quot;</span><span class="punctuation">:</span><span class="string">&quot;a.i.com&quot;</span><span class="punctuation">,</span><span class="attr">&quot;http_referer&quot;</span><span class="punctuation">:</span><span class="string">&quot;-&quot;</span><span class="punctuation">,</span><span class="attr">&quot;http_user_agent&quot;</span><span class="punctuation">:</span><span class="string">&quot;-&quot;</span><span class="punctuation">,</span><span class="attr">&quot;http_app_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;xxxxxxx&quot;</span><span class="punctuation">,</span><span class="attr">&quot;x_forwarded&quot;</span><span class="punctuation">:</span><span class="string">&quot;-&quot;</span><span class="punctuation">,</span><span class="attr">&quot;up_r_time&quot;</span><span class="punctuation">:</span><span class="string">&quot;0.003&quot;</span><span class="punctuation">,</span><span class="attr">&quot;up_status&quot;</span><span class="punctuation">:</span><span class="string">&quot;200&quot;</span><span class="punctuation">,</span><span class="attr">&quot;os_plant&quot;</span><span class="punctuation">:</span><span class="string">&quot;android&quot;</span><span class="punctuation">,</span><span class="attr">&quot;os_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;11&quot;</span><span class="punctuation">,</span><span class="attr">&quot;app_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;4.0.4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;app_build&quot;</span><span class="punctuation">:</span><span class="string">&quot;97&quot;</span><span class="punctuation">,</span><span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span><span class="string">&quot;xxxxxccb&quot;</span><span class="punctuation">,</span><span class="attr">&quot;resolution_ratio&quot;</span><span class="punctuation">:</span><span class="string">&quot;1080*2193&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span><span class="string">&quot;xx::xx:xx:xx:xx%dummy0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;imsi&quot;</span><span class="punctuation">:</span><span class="string">&quot;xxxxx-xxxxxx&quot;</span><span class="punctuation">,</span><span class="attr">&quot;listen_port&quot;</span><span class="punctuation">:</span><span class="string">&quot;443&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="某一行包含-xx-就丢弃"><a href="#某一行包含-xx-就丢弃" class="headerlink" title="某一行包含 xx 就丢弃"></a>某一行包含 xx 就丢弃</h3><p>比如我想丢弃所有 <code>request_uri</code> 为 <code>/actuator/info</code> 或 <code>http_user_agent</code> 为 <code>Go-http-client/2.0</code> 的日志</p><p>filebeat.yml 配置文件如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">    <span class="attr">symlinks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">json.keys_under_root:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">json.overwrite_keys:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">json.add_error_key:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tail_files:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/containers/ingress-nginx-controller*.log</span></span><br><span class="line">    <span class="attr">processors:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">decode_json_fields:</span>           <span class="comment"># 解析二级json</span></span><br><span class="line">        <span class="attr">fields:</span> [<span class="string">&#x27;log&#x27;</span>]             <span class="comment"># 一级json的log键</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attr">overwrite_keys:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">process_array:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">max_depth:</span> <span class="number">1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">drop_event:</span></span><br><span class="line">        <span class="attr">when:</span></span><br><span class="line">            <span class="attr">or:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                <span class="attr">http_user_agent:</span> <span class="string">&#x27;Go-http-client/2.0&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regexp:</span></span><br><span class="line">                <span class="attr">request_uri:</span> <span class="string">&#x27;/actuator/info&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">drop_fields:</span></span><br><span class="line">        <span class="comment"># when: 可以设置去除的条件</span></span><br><span class="line">        <span class="comment">#   condition</span></span><br><span class="line">        <span class="attr">fields:</span> [<span class="string">&quot;log&quot;</span>,<span class="string">&quot;host&quot;</span>]     <span class="comment"># 要去除的字段</span></span><br><span class="line">        <span class="attr">ignore_missing:</span> <span class="literal">false</span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">log_topic:</span> <span class="string">&quot;ingress-k8s&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;ingress&quot;</span></span><br></pre></td></tr></table></figure><p>因为日志本身就是个 json，经过 filebeat 后又会包装一个 json，所以我们需要对日志做二级解析。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> filebeat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes之master高可用方案</title>
      <link href="/posts/10cef768/"/>
      <url>/posts/10cef768/</url>
      
        <content type="html"><![CDATA[<p>之前一直用使用的负载方案是搭建一台负载均衡器，可以是 haproxy 或 nginx 或 lvs，来将多个 master 节点的 6443 端口做个负载均衡，但是考虑到负载均衡也需要高可用，所以会引入类似 keepalived 的方案来解决问题。偶然看到了 kubeasz 这个开源项目，宣称解决了 master 高可用问题，部署了一遍发现并没有额外搭建负载均衡器，研究了一下，发现了另一种思路。</p><h2 id="使用额外的负载均衡来做高可用"><a href="#使用额外的负载均衡来做高可用" class="headerlink" title="使用额外的负载均衡来做高可用"></a>使用额外的负载均衡来做高可用</h2><p>这种就是比较容易想到的一种方案，比如 3 个 master 节点，前面有一台负载均衡（nginx、haproxy、lvs）等，但是负载均衡本身就是一个单点故障，所以一般来说还需要另一台负载均衡，通过 keepalived 来实现 VIP 的切换<br><a href="/posts/0cebb8ae">使用Keepalived来实现Nginx高可用</a></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/lb_keepalived.png" alt="针对master节点做负载均衡"></p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用Nginx做负载均衡</button><button type="button" class="tab">使用HAproxy做负载均衡</button><button type="button" class="tab">使用LVS做负载均衡</button></div><div class="tab-contents"><div class="tab-item-content active"><p><code>vim nginx.conf</code> 在文件最后添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">    include stream.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后 <code>vim /etc/nginx/stream.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">upstream k8s-apiserver &#123;</span><br><span class="line">    server master1:6443;</span><br><span class="line">    server master2:6443;</span><br><span class="line">    server master3:6443;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 6443;</span><br><span class="line">    proxy_connect_timeout 1s;</span><br><span class="line">    proxy_pass k8s-apiserver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream ingress-http &#123;</span><br><span class="line">    server 10.0.0.21:30080;   # 这里需要更改成ingress的NodePort</span><br><span class="line">    server 10.0.0.22:30080;   # 这里需要更改成ingress的NodePort</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    proxy_connect_timeout 1s;</span><br><span class="line">    proxy_pass ingress-http;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream ingress-https &#123;</span><br><span class="line">    server 10.0.0.21:30443;   # 这里需要更改成ingress的NodePort</span><br><span class="line">    server 10.0.0.22:30443;   # 这里需要更改成ingress的NodePort</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    proxy_connect_timeout 1s;</span><br><span class="line">    proxy_pass ingress-https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为我们用 nginx 四层负载 ingress，需要监听 80 端口，与 nginx 默认的端口监听冲突，所以需要删除默认的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y haproxy</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># /etc/haproxy/haproxy.cfg</span><br><span class="line"># https://github.com/kubernetes/kubeadm/blob/main/docs/ha-considerations.md#options-for-software-load-balancing</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># Global settings</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">global</span><br><span class="line">    log /dev/log local0</span><br><span class="line">    log /dev/log local1 notice</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># common defaults that all the &#x27;listen&#x27; and &#x27;backend&#x27; sections will</span><br><span class="line"># use if not designated in their block</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">defaults</span><br><span class="line">    mode                    http</span><br><span class="line">    log                     global</span><br><span class="line">    option                  httplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option forwardfor       except 127.0.0.0/8</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 1</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           20s</span><br><span class="line">    timeout connect         5s</span><br><span class="line">    timeout client          20s</span><br><span class="line">    timeout server          20s</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># apiserver frontend which proxys to the control plane nodes</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">frontend apiserver</span><br><span class="line">    bind *:6443</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    default_backend apiserverbackend</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># round robin balancing for apiserver</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">backend apiserverbackend</span><br><span class="line">    option httpchk GET /healthz</span><br><span class="line">    http-check expect status 200</span><br><span class="line">    mode tcp</span><br><span class="line">    option ssl-hello-chk</span><br><span class="line">    balance     roundrobin</span><br><span class="line">        server master1 10.0.0.11:6443 check</span><br><span class="line">        server master2 10.0.0.12:6443 check</span><br><span class="line">        server master3 10.0.0.13:6443 check</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">frontend http_ingress_traffic_fe</span><br><span class="line">    bind :80</span><br><span class="line">    default_backend http_ingress_traffic_be</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">backend http_ingress_traffic_be</span><br><span class="line">    balance source</span><br><span class="line">    mode tcp</span><br><span class="line">    server      worker1 10.0.0.21:30080 check   # 这里需要更改成ingress的NodePort</span><br><span class="line">    server      worker2 10.0.0.22:30080 check   # 这里需要更改成ingress的NodePort</span><br><span class="line"></span><br><span class="line">frontend https_ingress_traffic_fe</span><br><span class="line">    bind *:443</span><br><span class="line">    default_backend https_ingress_traffic_be</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">backend https_ingress_traffic_be</span><br><span class="line">    balance source</span><br><span class="line">    mode tcp</span><br><span class="line">    server      worker1 10.0.0.21:30443 check   # 这里需要更改成ingress的NodePort</span><br><span class="line">    server      worker2 10.0.0.22:30443 check   # 这里需要更改成ingress的NodePort</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p><a href="/posts/675d47a9/">使用keepalived完成LVS高可用</a></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="在-master-上使用-vip"><a href="#在-master-上使用-vip" class="headerlink" title="在 master 上使用 vip"></a>在 master 上使用 vip</h2><p>架构图如图所示， 使用 keepalived 维护 vip，每台 master 节点上都运行着一个负载均衡</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202207050032858.jpg" alt="在master上使用vip"></p><p>可以参考：<a href="/posts/0cebb8ae/">使用Keepalived来实现Nginx高可用</a></p><h3 id="haproxy"><a href="#haproxy" class="headerlink" title="haproxy"></a>haproxy</h3><p>每台 master 都部署 haproxy</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># https://github.com/kubernetes/kubeadm/blob/main/docs/ha-considerations.md#options-for-software-load-balancing</span><br><span class="line">global</span><br><span class="line">    log /dev/log local0</span><br><span class="line">    log /dev/log local1 notice</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># common defaults that all the &#x27;listen&#x27; and &#x27;backend&#x27; sections will</span><br><span class="line"># use if not designated in their block</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">defaults</span><br><span class="line">    mode                    http</span><br><span class="line">    log                     global</span><br><span class="line">    option                  httplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option forwardfor       except 127.0.0.0/8</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 1</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           20s</span><br><span class="line">    timeout connect         5s</span><br><span class="line">    timeout client          20s</span><br><span class="line">    timeout server          20s</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># apiserver frontend which proxys to the control plane nodes</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">frontend apiserver</span><br><span class="line">    bind *:8443</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    default_backend apiserverbackend</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># round robin balancing for apiserver</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">backend apiserverbackend</span><br><span class="line">    option httpchk GET /healthz</span><br><span class="line">    http-check expect status 200</span><br><span class="line">    mode tcp</span><br><span class="line">    option ssl-hello-chk</span><br><span class="line">    balance     roundrobin</span><br><span class="line">        server master1 10.0.0.11:6443 check</span><br><span class="line">        server master2 10.0.0.12:6443 check</span><br><span class="line">        server master3 10.0.0.13:6443 check</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="master1"><a href="#master1" class="headerlink" title="master1"></a>master1</h3><p>keepalived 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root            # 脚本执行者</span><br><span class="line">    enable_script_security      # 标记脚本安全</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_apiserver &#123;</span><br><span class="line">    script &quot;/usr/bin/curl -k https://localhost:8443/healthz&quot;      # 脚本路径</span><br><span class="line">    interval 3                                                    # 脚本执行间隔</span><br><span class="line">    fall 2                                                        # 失败几次认为有问题</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;                        # 实例名</span><br><span class="line">    state  BACKUP                           # 这个是初始的状态， MASTER 或者 BACKUP， 非抢占模式必须为 BACKUP</span><br><span class="line">    interface eth0               # 网卡</span><br><span class="line">    virtual_router_id 251                   # ID主备需一致</span><br><span class="line">    priority 100                            # 默认权重，3个节点保持不一致，并且MASTER最大，priority之间的差值要小于weight</span><br><span class="line">    nopreempt                               # 设置非抢占模式，state必须设置为BACKUP才能生效</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS                      # 主备验证信息，需一致</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_apiserver                     # 调用脚本,若脚本最后的执行结果是非0的，则判断端口down掉，此时vip会漂移到keepalived-BACKUP上</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.11              # 配置源地址的IP地址，自己的ip</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.12</span><br><span class="line">       10.0.0.13                          # 配置其他keepalived节点</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0         # vip 和 网卡</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="master2"><a href="#master2" class="headerlink" title="master2"></a>master2</h3><p>keepalived 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_apiserver &#123;</span><br><span class="line">    script &quot;/usr/bin/curl -k https://localhost:8443/healthz&quot;</span><br><span class="line">    interval 3</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state  BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 99</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.12</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.11</span><br><span class="line">       10.0.0.13</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="master3"><a href="#master3" class="headerlink" title="master3"></a>master3</h3><p>keepalived 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_apiserver &#123;</span><br><span class="line">    script &quot;/usr/bin/curl -k https://localhost:8443/healthz&quot;</span><br><span class="line">    interval 3</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state  BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 251</span><br><span class="line">    priority 98</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.0.0.13</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">       10.0.0.11</span><br><span class="line">       10.0.0.12</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.10 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在每个节点上部署负载均衡"><a href="#在每个节点上部署负载均衡" class="headerlink" title="在每个节点上部署负载均衡"></a>在每个节点上部署负载均衡</h2><p>是看到了有些开源项目不用额外的负载均衡器也可以完成 master 高可用<br>方案就是所有节点上安装负载均衡，架构图如下, 监听的是 <code>127.0.0.1:6443</code>，所有的服务都连接 <code>127.0.0.1:6443</code> 端口，然后负载到 3 台 master，这样不用担心负载均衡挂掉，挂掉也只会影响自己，缺点就是每台机器都需要额外部署服务，master 节点发生变化后, 每台机器都需要更新负载均衡的配置。<strong>负载均衡在所有机器上都要安装（包括 worker 节点）</strong></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/worker_lb.jpg" alt="在worker节点搭建负载均衡"></p><h3 id="安装集群的时候"><a href="#安装集群的时候" class="headerlink" title="安装集群的时候"></a>安装集群的时候</h3><p>安装集群的时候,指定 <code>apiserver</code> 为 <code>127.0.0.1:8443</code>，然后每台机器上都部署一个负载均衡，监听 8443 端口， 转发到每个 master 节点的 6443</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;127.0.0.1:8443&quot;</span> \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><h3 id="配置负载均衡"><a href="#配置负载均衡" class="headerlink" title="配置负载均衡"></a>配置负载均衡</h3><p><code>Nginx</code> 和 <code>HAproxy</code> 选择一个就行, 所有 master 和 worker 节点都需要部署.</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用HAproxy</button><button type="button" class="tab">使用Nginx</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">        log /dev/log    local1 warning</span><br><span class="line">        chroot /var/lib/haproxy</span><br><span class="line">        user haproxy</span><br><span class="line">        group haproxy</span><br><span class="line">        daemon</span><br><span class="line">        nbproc 1</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">        log     global</span><br><span class="line">        timeout connect 5s</span><br><span class="line">        timeout client  10m</span><br><span class="line">        timeout server  10m</span><br><span class="line"></span><br><span class="line">listen kube_master</span><br><span class="line">        bind 127.0.0.1:8443</span><br><span class="line">        mode tcp</span><br><span class="line">        option tcplog</span><br><span class="line">        option dontlognull</span><br><span class="line">        option dontlog-normal</span><br><span class="line">        balance roundrobin</span><br><span class="line">        server 10.0.0.11 10.0.0.11:6443 check inter 10s fall 2 rise 2 weight 1</span><br><span class="line">        server 10.0.0.12 10.0.0.12:6443 check inter 10s fall 2 rise 2 weight 1</span><br><span class="line">        server 10.0.0.13 10.0.0.13:6443 check inter 10s fall 2 rise 2 weight 1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">user root;</span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"># 加载模块</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  3000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        server 10.0.0.11:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.12:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">        server 10.0.0.13:6443    max_fails=2 fail_timeout=3s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 127.0.0.1:8443;</span><br><span class="line">        proxy_connect_timeout 1s;</span><br><span class="line">        proxy_pass backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="如果需要用-6443-端口"><a href="#如果需要用-6443-端口" class="headerlink" title="如果需要用 6443 端口"></a>如果需要用 6443 端口</h3><p>master 上也需要安装负载均衡， apiserver 默认监听的地址是 <code>*:6443</code> ，如果需要使用 6443 端口，需要将 apiserver 监听地址修改成 <code>&lt;主机IP&gt;:6443</code> 这样 Nginx 才能监听 <code>127.0.0.1:6443</code>, 修改方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/manifests/kube-apiserver.yaml</span><br></pre></td></tr></table></figure><p>启动参数增加 <code>--bind-address=10.0.0.11</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--advertise-address=10.0.0.11</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--bind-address=10.0.0.11</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.k8s.io/kube-apiserver:v1.28.4</span></span><br></pre></td></tr></table></figure><p>查看监听端口, 此时可以正常启动 负载均衡了.</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202311171817270.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes使用NFS作为存储</title>
      <link href="/posts/179eb842/"/>
      <url>/posts/179eb842/</url>
      
        <content type="html"><![CDATA[<p>我们玩单机的容器，如果需要持久化的话，需要将容器目录映射到主机，但是在 K8S 环境下容器是可能会被调度到任意节点的，所以需要使用远程服务存储数据。在云平台上都会提供自己的云盘存储，但是自己搭建的 Kubernetes 没有办法使用云盘做存储，所以需要用自己搭建的存储，NFS 是比较常见的一种，其他还有 glusterfs、ceph 等。</p><blockquote><p>关于 NFS 搭建教程，可以查看<a href="https://zahui.fan/posts/4b677f68/">https://zahui.fan/posts/4b677f68/</a><br>容器镜像开源地址<a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner">https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner</a></p></blockquote><h2 id="安装-NFS-client-工具"><a href="#安装-NFS-client-工具" class="headerlink" title="安装 NFS client 工具"></a>安装 NFS client 工具</h2><p>所有的 worker 节点上都需要安装 NFS client</p><ul><li><p>Ubuntu</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common -y</span><br></pre></td></tr></table></figure></li><li><p>CentOS</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nfs-utils -y</span><br></pre></td></tr></table></figure></li></ul><h2 id="rbac-授权"><a href="#rbac-授权" class="headerlink" title="rbac 授权"></a>rbac 授权</h2><p>rbac.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">run-nfs-client-provisioner</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f rbac.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get sa</span><br><span class="line">NAME                     SECRETS   AGE</span><br><span class="line">default                  1         2d</span><br><span class="line">nfs-client-provisioner   1         5s</span><br></pre></td></tr></table></figure><h2 id="部署插件"><a href="#部署插件" class="headerlink" title="部署插件"></a>部署插件</h2><p>deployment.yaml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/iuxt/nfs-subdir-external-provisioner:v4.0.2</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/persistentvolumes</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROVISIONER_NAME</span></span><br><span class="line">              <span class="comment"># 必须与class.yaml中的provisioner的名称一致</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">iuxt/nfs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_SERVER</span></span><br><span class="line">              <span class="comment"># NFS服务器的ip地址</span></span><br><span class="line">              <span class="attr">value:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_PATH</span></span><br><span class="line">              <span class="comment"># 修改为实际创建的共享挂载目录</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">/nfs</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">          <span class="attr">nfs:</span></span><br><span class="line">            <span class="comment"># NFS服务器的ip地址</span></span><br><span class="line">            <span class="attr">server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">            <span class="comment"># 修改为实际创建的共享挂载目录</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/nfs</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deployment.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get deploy</span><br><span class="line">NAME                                   READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nfs-client-provisioner                 1/1     1            1           10s</span><br></pre></td></tr></table></figure><h2 id="创建-storageclass"><a href="#创建-storageclass" class="headerlink" title="创建 storageclass"></a>创建 storageclass</h2><p>storageclass.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">managed-nfs-storage</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">storageclass.kubernetes.io/is-default-class:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="comment"># 必须与deployment.yaml中的PROVISIONER_NAME一致</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">iuxt/nfs</span></span><br><span class="line"><span class="attr">mountOptions:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">vers=4.1</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">archiveOnDelete:</span> <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f storageclass.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get sc</span><br><span class="line">NAME                  PROVISIONER         RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">managed-nfs-storage   iuxt/nfs            Delete          Immediate           <span class="literal">false</span>                  15s</span><br></pre></td></tr></table></figure><h2 id="测试-NFS"><a href="#测试-NFS" class="headerlink" title="测试 NFS"></a>测试 NFS</h2><p>nginx.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">test-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">nfs</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">nfs</span></span><br><span class="line"> <span class="attr">annotations:</span></span><br><span class="line">   <span class="attr">volume.beta.kubernetes.io/storage-class:</span> <span class="string">&quot;managed-nfs-storage&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"> <span class="attr">accessModes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line"> <span class="attr">resources:</span></span><br><span class="line">   <span class="attr">requests:</span></span><br><span class="line">     <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">test-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">test-nginx</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx.yml</span><br></pre></td></tr></table></figure><p>然后在 NFS 服务器上可以看到对应的目录，进去创建一个 index.html 文件，然后再请求对应的容器，发现已经可以正常返回了。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="PVC-一直处于-Pending-状态"><a href="#PVC-一直处于-Pending-状态" class="headerlink" title="PVC 一直处于 Pending 状态"></a>PVC 一直处于 Pending 状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pvc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现报错</span></span><br><span class="line">  Normal  ExternalProvisioning  8s (x2 over 13s)  persistentvolume-controller  waiting <span class="keyword">for</span> a volume to be created, either by external provisioner <span class="string">&quot;qgg-nfs-storage&quot;</span> or manually created by system administrator</span><br></pre></td></tr></table></figure><blockquote><p>如果你是使用的这个镜像 <code>image: quay.io/external_storage/nfs-client-provisioner:latest</code> 这个镜像是老镜像了，1.20 及以上版本的 K8S 会报错，这是因为 Kubernetes v1.20 开始，默认删除了 &gt; <code>metadata.selfLink</code> 字段，然而，部分应用仍然依赖于这个字段，例如 <code>nfs-client-provisioner</code>。如果仍然要继续使用这些应用，您将需要重新启用该字段。<br>通过配置 apiserver 启动参数中的 <code>--feature-gates</code> 中的 <code>RemoveSelfLink=false</code>，可以重新启用 <code>metadata.selfLink</code> 字段。<br>具体来说，如果您使用 kubeadm 安装 Kubernetes，请修改 <code>/etc/kubernetes/manifests/kube-apiserver.yaml</code> 文件，并在其启动参数中增加一行 <code>- --feature-gates=RemoveSelfLink=false</code></p></blockquote><p>在所有的 Master 节点上修改配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.11</span><span class="string">:6443</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-apiserver</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--advertise-address=10.0.0.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--allow-privileged=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--authorization-mode=Node,RBAC</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--client-ca-file=/etc/kubernetes/pki/ca.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--enable-admission-plugins=NodeRestriction</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--enable-bootstrap-token-auth=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--etcd-servers=https://127.0.0.1:2379</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--insecure-port=0</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-allowed-names=front-proxy-client</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-extra-headers-prefix=X-Remote-Extra-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-group-headers=X-Remote-Group</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-username-headers=X-Remote-User</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--secure-port=6443</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-account-issuer=https://kubernetes.default.svc.cluster.local</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-account-key-file=/etc/kubernetes/pki/sa.pub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-account-signing-key-file=/etc/kubernetes/pki/sa.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-cluster-ip-range=10.96.0.0/12</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--feature-gates=RemoveSelfLink=false</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">k8s.gcr.io/kube-apiserver:v1.21.10</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><p>或者更换镜像为 <code>k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2</code>，国内加速镜像为：<code>registry.cn-hangzhou.aliyuncs.com/iuxt/nfs-subdir-external-provisioner:v4.0.2</code></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
            <tag> 存储 </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes之ingress-nginx安装配置</title>
      <link href="/posts/30bdb1c5/"/>
      <url>/posts/30bdb1c5/</url>
      
        <content type="html"><![CDATA[<h2 id="部署-ingress-nginx"><a href="#部署-ingress-nginx" class="headerlink" title="部署 ingress-nginx"></a>部署 ingress-nginx</h2><blockquote><p>ingress-nginx 官方文档 <a href="https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters">https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters</a><br>自建的 Kubernetes 可以参数 <code>bare-metal</code> 安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.2/deploy/static/provider/baremetal/deploy.yaml</span><br></pre></td></tr></table></figure><p>部署成功后修改 NodePort,把里面 30xxx 的端口换成你想要的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit service ingress-nginx-controller -n ingress-nginx</span><br></pre></td></tr></table></figure><blockquote><p>也可以 <code>wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.2/deploy/static/provider/baremetal/deploy.yaml</code> 再编辑</p></blockquote><p>在</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: ingress-nginx/templates/controller-service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">helm.sh/chart:</span> <span class="string">ingress-nginx-4.0.7</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">1.0</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ipFamilyPolicy:</span> <span class="string">SingleStack</span></span><br><span class="line">  <span class="attr">ipFamilies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">IPv4</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30080</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">appProtocol:</span> <span class="string">http</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30443</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">appProtocol:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>当然也可以不做以上修改，不修改的话会自动在 30000~32767 自动生成一个，需要把自动生成的端口配置到负载均衡器上。</p></blockquote><h2 id="通过-daemonset-方式安装"><a href="#通过-daemonset-方式安装" class="headerlink" title="通过 daemonset 方式安装"></a>通过 daemonset 方式安装</h2><p>通过 daemonset 安装一般来说都是以 hostnetwork 方式来，直接监听 node 节点上的 80、443 端口<br>将上述 yaml 中 deployment 的部分换成 daemonset 部署</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">helm.sh/chart:</span> <span class="string">ingress-nginx-3.39.0</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">0.49</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/managed-by:</span> <span class="string">Helm</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">minReadySeconds:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">k8s.gcr.io/ingress-nginx/controller:v0.49.3@sha256:35fe394c82164efa8f47f3ed0be981b3f23da77175bbb8268a9ae438851c8324</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--election-id=ingress-controller-leader</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ingress-class=nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook=:8443</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook-certificate=/usr/local/certificates/cert</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--validating-webhook-key=/usr/local/certificates/key</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--default-backend-service=$(POD_NAMESPACE)/ingress-nginx-default-backend</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">101</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LD_PRELOAD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">/usr/local/lib/libmimalloc.so</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">10254</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">webhook</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">timezone</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span>                           <span class="comment"># 挂载到容器的目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">webhook-cert</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/usr/local/certificates/</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">90Mi</span></span><br><span class="line">      <span class="comment"># 这里修改为hostNetwork</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirstWithHostNet</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;apptype&quot;</span></span><br><span class="line">        <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ingress</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">timezone</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai</span>            <span class="comment"># 宿主机的目录</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">webhook-cert</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="ingress-nginx-常见问题"><a href="#ingress-nginx-常见问题" class="headerlink" title="ingress-nginx 常见问题"></a>ingress-nginx 常见问题</h2><ol><li><p>配置了 ingress，但是打开 404 报错：<br>查看 deployment 里面的 ingress-nginx 日志，发现报错：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Ignoring ingress because of error while validating ingress class&quot; ingress=&quot;cattle-system/rancher&quot; error=&quot;ingress does not contain a valid IngressClass&quot; </span><br></pre></td></tr></table></figure><p> 这种情况是 ingress 没有指定 ingress controller, 添加 ingress 注解：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ingress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hugo博客批量更换url结构</title>
      <link href="/posts/b75ec1fe/"/>
      <url>/posts/b75ec1fe/</url>
      
        <content type="html"><![CDATA[<p>之前修改过 hugo 的 url 结构，config.toml 内容如下：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Permalinks]</span></span><br><span class="line">  <span class="attr">posts</span> = <span class="string">&quot;:slug&quot;</span></span><br></pre></td></tr></table></figure><p>生成的 URL 类似于：<a href="https://zahui.fan/a7c8660c/">https://zahui.fan/a7c8660c/</a> 不过这样随着文件越来越多，发布用的仓库根目录文件夹也越来越多，不好看，再加上域名后加上光秃秃的无意义的字符串也不优雅，所以决定改成<a href="https://zahui.fan/posts/a7c8660c/">https://zahui.fan/posts/a7c8660c/</a>这样的域名结构。</p><h2 id="修改-config-toml"><a href="#修改-config-toml" class="headerlink" title="修改 config.toml"></a>修改 config.toml</h2><p>我们需要修改 config.toml，改变默认的 url 结构</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Permalinks]</span></span><br><span class="line">  <span class="attr">posts</span> = <span class="string">&quot;/posts/:slug&quot;</span></span><br></pre></td></tr></table></figure><p>这样重新生成博客，url 路径就会变成新的了</p><h2 id="配置自动跳转"><a href="#配置自动跳转" class="headerlink" title="配置自动跳转"></a>配置自动跳转</h2><p>这样配置的话，之前的 url 连接就会全部 404 了，对于做了 SEO 的同学来说就是个灾难，所以我们需要做个跳转</p><p>在 frontmatter 添加 aliases：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;安装和配置samba共享&quot;</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-02-11T11:18:21+08:00</span></span><br><span class="line"><span class="attr">abbrlink:</span> <span class="string">a7c8660c</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aliases:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/a7c8660c/</span></span><br><span class="line"><span class="attr">typora-root-url:</span> <span class="string">../../static</span></span><br><span class="line"><span class="attr">typora-copy-images-to:</span> <span class="string">../../static/img</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">&quot;Operations&quot;</span>]</span><br><span class="line"><span class="attr">tags:</span> [<span class="string">&quot;samba&quot;</span>, <span class="string">&quot;配置记录&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>这样每次访问<a href="https://zahui.fan/a7c8660c/">https://zahui.fan/a7c8660c/</a>就会自动跳转到<a href="https://zahui.fan/posts/a7c8660c/">https://zahui.fan/posts/a7c8660c/</a></p><h2 id="自动替换脚本"><a href="#自动替换脚本" class="headerlink" title="自动替换脚本"></a>自动替换脚本</h2><p>写了个脚本可以批量给 md 文件添加 aliases:，脚本和 md 文件放在一起</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">ls</span> *.md):</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  slug=$(grep <span class="string">&quot;^slug:&quot;</span> <span class="variable">$i</span> | <span class="built_in">head</span> -1 | sed <span class="string">&quot;s/slug://g&quot;</span> | sed <span class="string">&quot;s/ //g&quot;</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$slug</span></span><br><span class="line">  sed -i <span class="string">&quot;5a aliases:\n  - /<span class="variable">$slug</span>/&quot;</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hugo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell 自动补全</title>
      <link href="/posts/7ce4e1fc/"/>
      <url>/posts/7ce4e1fc/</url>
      
        <content type="html"><![CDATA[<p>一直使用 kubectl 操作 k8s 集群，每次都需要查看 pod 名字、查看 service 名字等，比较麻烦，看了 kubectl 官方就支持 bash 自动补全，所以记录一下。</p><p>官方文档地址：<a href="https://kubernetes.io/zh/docs/tasks/tools/included/optional-kubectl-configs-bash-linux/">https://kubernetes.io/zh/docs/tasks/tools/included/optional-kubectl-configs-bash-linux/</a></p><p>本文以 Ubuntu20.04 下的 kubectl 为例</p><h2 id="Bash-自动补全"><a href="#Bash-自动补全" class="headerlink" title="Bash 自动补全"></a>Bash 自动补全</h2><p>kubectl 的 Bash 补全脚本可以用命令 kubectl completion bash 生成。 在 shell 中导入（Sourcing）补全脚本，将启用 kubectl 自动补全功能。</p><p>然而，补全脚本依赖于工具 <code>bash-completion</code>， 所以要先安装它（可以用命令 <code>type _init_completion</code> 检查 <code>bash-completion</code> 是否已安装）。</p><h3 id="安装-bash-completion"><a href="#安装-bash-completion" class="headerlink" title="安装 bash-completion"></a>安装 bash-completion</h3><p>很多包管理工具均支持 bash-completion。 可以通过 <code>apt-get install bash-completion</code> 或 <code>yum install bash-completion</code> 等命令来安装它。</p><p>上述命令将创建文件 <code>/usr/share/bash-completion/bash_completion</code>，它是 bash-completion 的主脚本。 依据包管理工具的实际情况，你需要在 ~&#x2F;.bashrc 文件中手工导入此文件。</p><blockquote><p>用户级和系统级二选一，用户级表示系统内所有用户都生效，用户级只对当前用户生效</p></blockquote><h3 id="用户级别开启-bash-completion"><a href="#用户级别开启-bash-completion" class="headerlink" title="用户级别开启 bash_completion"></a>用户级别开启 bash_completion</h3><p>在 <code>~/.bashrc</code> 最后面添加两行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure><h3 id="系统层级开启-bash-completion"><a href="#系统层级开启-bash-completion" class="headerlink" title="系统层级开启 bash_completion"></a>系统层级开启 bash_completion</h3><p>把 <code>/etc/bash.bashrc</code> 如下几行的注释取消</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable bash completion in interactive shells</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">shopt</span> -oq posix; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ -f /usr/share/bash-completion/bash_completion ]; <span class="keyword">then</span></span><br><span class="line">    . /usr/share/bash-completion/bash_completion</span><br><span class="line">  <span class="keyword">elif</span> [ -f /etc/bash_completion ]; <span class="keyword">then</span></span><br><span class="line">    . /etc/bash_completion</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>bash-completion 负责导入 <code>/etc/bash_completion.d</code> 目录中的所有补全脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl completion bash | sudo <span class="built_in">tee</span> /etc/bash_completion.d/kubectl &gt; /dev/null</span><br></pre></td></tr></table></figure><h3 id="关联-kubectl-别名"><a href="#关联-kubectl-别名" class="headerlink" title="关联 kubectl 别名"></a>关联 kubectl 别名</h3><p>如果 kubectl 有关联的别名，你可以扩展 shell 补全来适配此别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;alias k=kubectl&#x27;</span> &gt;&gt;~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;complete -F __start_kubectl k&#x27;</span> &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure><h2 id="ZSH-自动补全"><a href="#ZSH-自动补全" class="headerlink" title="ZSH 自动补全"></a>ZSH 自动补全</h2><p>kubectl 通过命令 kubectl completion zsh 生成 Zsh 自动补全脚本。 在 shell 中导入（Sourcing）该自动补全脚本，将启动 kubectl 自动补全功能。</p><p>为了在所有的 shell 会话中实现此功能，请将下面内容加入到文件 <code>~/.zshrc</code> 中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> &lt;(kubectl completion zsh)</span><br></pre></td></tr></table></figure><p>如果你为 kubectl 定义了别名，可以扩展脚本补全，以兼容该别名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;alias k=kubectl&#x27;</span> &gt;&gt;~/.zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;compdef __start_kubectl k&#x27;</span> &gt;&gt;~/.zshrc</span><br></pre></td></tr></table></figure><p>重新加载 shell 后，kubectl 自动补全功能将立即生效。</p><p>如果你收到 <code>complete:13: command not found: compdef</code> 这样的错误提示，那请将下面内容添加到 <code>~/.zshrc</code> 文件的开头：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">autoload</span> -Uz compinit</span><br><span class="line">compinit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubectl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx使用module_vts模块来做监控</title>
      <link href="/posts/c6a32841/"/>
      <url>/posts/c6a32841/</url>
      
        <content type="html"><![CDATA[<p>最近我们想要用 Prometheus 来监控 Nginx 的状态，所以看了一下有个 module 可以支持。项目地址在：<a href="https://github.com/vozlt/nginx-module-vts.git">https://github.com/vozlt/nginx-module-vts.git</a></p><h2 id="重新编译-Nginx"><a href="#重新编译-Nginx" class="headerlink" title="重新编译 Nginx"></a>重新编译 Nginx</h2><p>首先执行 nginx -V 查看编译参数，记录一下, 比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--prefix=/usr/local/nginx --user=www --group=www --with-stream --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module --with-http_flv_module --with-http_mp4_module --with-openssl=../openssl-1.1.1k --with-pcre=../pcre-8.45 --with-pcre-jit --with-ld-opt=-ljemalloc</span><br></pre></td></tr></table></figure><p>然后需要 Nginx 源码包和当前安装的 Nginx 版本相同</p><p>下载 nginx_module_vts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/vozlt/nginx-module-vts.git</span><br></pre></td></tr></table></figure><p>进入 nginx 源码目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.20.2</span><br></pre></td></tr></table></figure><p>开始编译，编译时增加一条参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--add-module=../nginx-module-vts</span><br></pre></td></tr></table></figure><p>结合上面记录的编译参数，完整的编译参数是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --user=www --group=www --with-stream --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module --with-http_flv_module --with-http_mp4_module --with-openssl=../openssl-1.1.1k --with-pcre=../pcre-8.45 --with-pcre-jit --with-ld-opt=-ljemalloc --add-module=../nginx-module-vts</span><br></pre></td></tr></table></figure><p>开始编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>然后将编译好的二进制文件替换现有的 nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /data/server/nginx-1.20.2/objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>注：nginx-module-vts 模块从 0.1.17+ 版本之后原生支持 prometheus 数据格式，可跳过 nginx-vts-exporter 的安装。</p><blockquote><p>之前没安装过 nginx 的可以直接 <code>make &amp;&amp; make install</code></p></blockquote><h2 id="开启监控"><a href="#开启监控" class="headerlink" title="开启监控"></a>开启监控</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 在 http 和 server 块中加入如下信息</span><br><span class="line">http &#123;</span><br><span class="line">    vhost_traffic_status_zone;</span><br><span class="line">    ...</span><br><span class="line">    server &#123;</span><br><span class="line">        ...</span><br><span class="line">        location /metrics &#123;</span><br><span class="line">            vhost_traffic_status_display;</span><br><span class="line">            vhost_traffic_status_display_format prometheus;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监控接口为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">支持的输出格式有json html和 Prometheus</span><br><span class="line"></span><br><span class="line">localhost/metrics</span><br><span class="line">localhost/metrics/format/json</span><br><span class="line">localhost/metrics/format/prometheus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式入门</title>
      <link href="/posts/13612574/"/>
      <url>/posts/13612574/</url>
      
        <content type="html"><![CDATA[<p>在线测试正则表达式: <a href="https://c.runoob.com/front-end/854/">https://c.runoob.com/front-end/854/</a></p><h2 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a>字符匹配</h2><p>普通字符：普通字符按照字面意义进行匹配，例如匹配字母 “a” 将匹配到文本中的 “a” 字符。</p><p>元字符：元字符具有特殊的含义，例如 \d 匹配任意数字字符，\w 匹配任意字母数字字符，. 匹配任意字符（除了换行符）等。</p><h2 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*：匹配前面的模式零次或多次。</span><br><span class="line">+：匹配前面的模式一次或多次。</span><br><span class="line">?：匹配前面的模式零次或一次。</span><br><span class="line">&#123;n&#125;：匹配前面的模式恰好 n 次。</span><br><span class="line">&#123;n,&#125;：匹配前面的模式至少 n 次。</span><br><span class="line">&#123;n,m&#125;：匹配前面的模式至少 n 次且不超过 m 次。</span><br></pre></td></tr></table></figure><h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ ]：匹配括号内的任意一个字符。例如，[abc] 匹配字符 <span class="string">&quot;a&quot;</span>、<span class="string">&quot;b&quot;</span> 或 <span class="string">&quot;c&quot;</span>。</span><br><span class="line">[^ ]：匹配除了括号内的字符以外的任意一个字符。例如，[^abc] 匹配除了字符 <span class="string">&quot;a&quot;</span>、<span class="string">&quot;b&quot;</span> 或 <span class="string">&quot;c&quot;</span> 以外的任意字符。</span><br></pre></td></tr></table></figure><h2 id="边界匹配"><a href="#边界匹配" class="headerlink" title="边界匹配"></a>边界匹配</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^：匹配字符串的开头。</span><br><span class="line">$：匹配字符串的结尾。</span><br><span class="line">\b：匹配单词边界。</span><br><span class="line">\B：匹配非单词边界。</span><br></pre></td></tr></table></figure><h2 id="分组和捕获"><a href="#分组和捕获" class="headerlink" title="分组和捕获"></a>分组和捕获</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( )：用于分组和捕获子表达式。</span><br><span class="line">(?: )：用于分组但不捕获子表达式。</span><br></pre></td></tr></table></figure><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\：转义字符，用于匹配特殊字符本身。</span><br><span class="line">.：匹配任意字符（除了换行符）。</span><br><span class="line">|：用于指定多个模式的选择。</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>比如做用户名验证:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[0-9a-z_-]&#123;3,15&#125;$</span><br></pre></td></tr></table></figure><p>字母 a-z 数字 0-9 下划线 中划线 结尾</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> regexp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible系列之条件判断</title>
      <link href="/posts/a361f259/"/>
      <url>/posts/a361f259/</url>
      
        <content type="html"><![CDATA[<p>在 ansible 中，使用 when 关键字来做条件判断，when 关键字即为当条件成功就执行此条任务。在 when 判断中不需要加 <code>&#123;&#123;&#125;&#125;</code></p><h2 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h2><table><thead><tr><th>判断符</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>判断字符串是否相同，相同为真，不同为假</td></tr><tr><td>lower</td><td>是否全是小写，是为真，不是为假</td></tr><tr><td>upper</td><td>是否是纯大写，是为真，不是为假</td></tr><tr><td>in</td><td>判断字符串是否在另一个字符串中，是为真，不是为假</td></tr></tbody></table><h3 id="判断系统-不支持的系统直接报错退出"><a href="#判断系统-不支持的系统直接报错退出" class="headerlink" title="判断系统,不支持的系统直接报错退出"></a>判断系统,不支持的系统直接报错退出</h3><blockquote><p>ansible_distribution 是 ansible 自带变量，查看变量可以用 <code>ansible localhost -m setup</code> 命令。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">fail:</span> <span class="string">msg=&quot;this</span> <span class="string">playbook</span> <span class="string">don&#x27;t</span> <span class="string">support</span> <span class="string">CentOS&quot;</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;CentOS&quot;</span></span><br></pre></td></tr></table></figure><h3 id="判断字符串大小写"><a href="#判断字符串大小写" class="headerlink" title="判断字符串大小写"></a>判断字符串大小写</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">str1:</span> <span class="string">&quot;abc&quot;</span></span><br><span class="line">    <span class="attr">str2:</span> <span class="string">&quot;ABC&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;This string is all lowercase&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">str1</span> <span class="string">is</span> <span class="string">lower</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;This string is all uppercase&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">str2</span> <span class="string">is</span> <span class="string">upper</span></span><br></pre></td></tr></table></figure><h3 id="判断字符串的包含关系"><a href="#判断字符串的包含关系" class="headerlink" title="判断字符串的包含关系"></a>判断字符串的包含关系</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">check</span> <span class="string">wsl</span></span><br><span class="line">    <span class="attr">fail:</span> <span class="string">msg=&quot;this</span> <span class="string">playbook</span> <span class="string">don&#x27;t</span> <span class="string">support</span> <span class="string">wsl&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">&#x27;WSL&#x27;</span> <span class="string">in</span> <span class="string">ansible_kernel</span></span><br></pre></td></tr></table></figure><h2 id="运算符判断"><a href="#运算符判断" class="headerlink" title="运算符判断"></a>运算符判断</h2><p>在 ansible 中，我们可以使用如下比较运算符：</p><table><thead><tr><th>比较运算符</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>比较两个对象是否相等，相等为真</td></tr><tr><td>!&#x3D;</td><td>比较两个对象是否不等，不等为真</td></tr><tr><td>&gt;</td><td>比较两个值的大小，如果左边的值大于右边的值，则为真</td></tr><tr><td>&lt;</td><td>比较两个值的大小，如果左边的值小于右边的值，则为真</td></tr><tr><td>&gt;&#x3D;</td><td>比较两个值的大小，如果左边的值大于右边的值或左右相等，则为真</td></tr><tr><td>&lt;&#x3D;</td><td>比较两个值的大小，如果左边的值小于右边的值或左右相等，则为真</td></tr></tbody></table><p>我们总结的这些运算符其实都是 jinja2 的运算符，ansible 使用 jinja2 模板引擎，在 ansible 中也可以直接使用 jinja2 的这些运算符。</p><p>说完了比较运算符，再来说说逻辑运算符，可用的逻辑运算符如下</p><table><thead><tr><th>逻辑运算符</th><th>说明</th></tr></thead><tbody><tr><td>and</td><td>逻辑与，当左边与右边同时为真，则返回真</td></tr><tr><td>or</td><td>逻辑或，当左边与右边有任意一个为真，则返回真</td></tr><tr><td>not</td><td>取反，对一个操作体取反</td></tr><tr><td>( )</td><td>组合，将一组操作体包装在一起，形成一个较大的操作体</td></tr></tbody></table><p>例 1：输出大于 2 的数字。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">var:</span> <span class="string">item</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">item</span> <span class="string">&gt;</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">with_items:</span> [ <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> ]</span><br></pre></td></tr></table></figure><p>例 2：判断客户机系统是否是 CentOS 7。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;System release is centos7&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;CentOS&quot;</span> <span class="string">and</span> <span class="string">ansible_distribution_major_version</span> <span class="string">==</span> <span class="string">&quot;7&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的 when 条件也可写为如下：</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">when:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;CentOS&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">ansible_distribution_major_version</span> <span class="string">==</span> <span class="string">&quot;7&quot;</span></span><br></pre></td></tr></table></figure><p>其含义为列表中每一项结果都为 true 时才执行。</p></blockquote><p>例 3：判断任务是否成功执行。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">check</span> <span class="string">folder</span> <span class="string">exists</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">&quot;ls /test_folder&quot;</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">check_test_folder</span></span><br><span class="line">    <span class="attr">ignore_errors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;Command execution successful&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">check_test_folder.rc</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;Command execution failed&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">check_test_folder.rc</span> <span class="type">!=</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>例 4：判断系统是 Ubuntu 或 LinuxMint 且不是虚拟机</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">gui</span> <span class="string">tools</span> <span class="string">on</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="attr">apt:</span> </span><br><span class="line">    <span class="attr">name:</span> [<span class="string">&quot;copyq&quot;</span>, <span class="string">&quot;flameshot&quot;</span>]</span><br><span class="line">    <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line">    <span class="attr">update_cache:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">when:</span></span><br><span class="line">    <span class="string">(</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;Ubuntu&quot;</span> <span class="string">or</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;Linux Mint&quot;</span> <span class="string">)</span></span><br><span class="line">    <span class="string">and</span></span><br><span class="line">    <span class="string">(</span> <span class="string">ansible_virtualization_role</span> <span class="type">!=</span> <span class="string">&quot;guest&quot;</span> <span class="string">)</span></span><br></pre></td></tr></table></figure><h2 id="文件判断"><a href="#文件判断" class="headerlink" title="文件判断"></a>文件判断</h2><h3 id="判断-Ansible-控制主机的文件"><a href="#判断-Ansible-控制主机的文件" class="headerlink" title="判断 Ansible 控制主机的文件"></a>判断 Ansible 控制主机的文件</h3><p>ansible 可通过如下关键字对文件状态进行判断：</p><table><thead><tr><th>判断操作</th><th>说明</th></tr></thead><tbody><tr><td>file</td><td>判断路径是否是一个文件，如果路径是一个文件则返回真；</td></tr><tr><td>directory</td><td>判断路径是否是一个目录，如果路径是一个目录则返回真；</td></tr><tr><td>link</td><td>判断路径是否是一个软链接，如果路径是一个软链接则返回真；</td></tr><tr><td>mount</td><td>判断路径是否是一个挂载点，如果路径是一个挂载点则返回真；</td></tr><tr><td>exists</td><td>判断路径是否存在，如果路径存在则返回真；</td></tr></tbody></table><p>例：判断 &#x2F;test_folder 是否存在。</p><blockquote><p>这里判断的路径是 ansible 控制主机的路径</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">testpath:</span> <span class="string">/test_folder</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;file exists&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">testpath</span> <span class="string">is</span> <span class="string">exists</span></span><br><span class="line">  <span class="comment"># 下面判断表示 testpath 路径是否不存在</span></span><br><span class="line">  <span class="comment"># when: testpath is not exists</span></span><br></pre></td></tr></table></figure><h3 id="判断被控机器的文件状态"><a href="#判断被控机器的文件状态" class="headerlink" title="判断被控机器的文件状态"></a>判断被控机器的文件状态</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">get</span> <span class="string">file</span> <span class="string">stat</span> <span class="string">for</span> <span class="string">gpg</span> <span class="string">key</span></span><br><span class="line">  <span class="attr">stat:</span> <span class="string">path=/usr/share/keyrings/docker-archive-keyring.gpg</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">vscode_gpg_key</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断远程文件是否存在</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">gpg</span> <span class="string">key</span></span><br><span class="line">  <span class="attr">shell:</span></span><br><span class="line">    <span class="attr">cmd:</span> <span class="string">curl</span> <span class="string">-fsSL</span> <span class="string">https://download.docker.com/linux/ubuntu/gpg</span> <span class="string">|</span> <span class="string">gpg</span> <span class="string">--dearmor</span> <span class="string">-o</span> <span class="string">/usr/share/keyrings/docker-archive-keyring.gpg</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">not</span> <span class="string">vscode_gpg_key.stat.exists</span></span><br></pre></td></tr></table></figure><h2 id="变量判断"><a href="#变量判断" class="headerlink" title="变量判断"></a>变量判断</h2><p>ansible 可通过如下几个关键字对变量进行判断：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>string</td><td>判断对象是否是一个字符串，是字符串则返回真；</td></tr><tr><td>number</td><td>判断对象是否是一个数字，是数字则返回真；</td></tr><tr><td>defined</td><td>判断变量是否已经定义，已经定义则返回真；</td></tr><tr><td>undefind</td><td>判断变量是否已经定义，未定义则返回真；</td></tr><tr><td>none</td><td>判断变量值是否为空，如果变量已经定义，但是变量值为空，则返回真；</td></tr></tbody></table><p>例 1：当对应的条件为真时，你可以看到 debug 模块对应的输出。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">defined_var:</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">    <span class="attr">none_var:</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;Variable is defined&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">defined_var</span> <span class="string">is</span> <span class="string">defined</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;Variable is undefined&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">undefined_var</span> <span class="string">is</span> <span class="string">undefined</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;The variable is defined, but there is no value&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">none_var</span> <span class="string">is</span> <span class="string">none</span></span><br></pre></td></tr></table></figure><p>例 2：判断给定变量是一个字符串还是数字。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">testvar:</span> <span class="string">&quot;a&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;testvar&#125;&#125;</span> is a number&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">testvar</span> <span class="string">is</span> <span class="string">number</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;testvar&#125;&#125;</span> is a string&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">testvar</span> <span class="string">is</span> <span class="string">string</span></span><br></pre></td></tr></table></figure><h2 id="结果判断"><a href="#结果判断" class="headerlink" title="结果判断"></a>结果判断</h2><p>ansible 可通过如下几个关键字来对任务的执行结果进行判断：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>success 或 succeeded</td><td>通过任务的返回信息判断任务的执行状态，任务执行成功则返回真</td></tr><tr><td>failure 或 failed</td><td>通过任务的返回信息判断任务的执行状态，任务执行失败则返回真</td></tr><tr><td>change 或 changed</td><td>通过任务的返回信息判断任务的执行状态，任务执行状态为 changed 则返回真</td></tr><tr><td>skip 或 skipped</td><td>通过任务的返回信息判断任务的执行状态，当任务没有满足条件，而被跳过执行时，则返回真</td></tr></tbody></table><p>例：根据任务执行结果输出对应信息。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">doshell:</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">shell:</span> <span class="string">&quot;cat /test_folder/test_file&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">doshell</span> <span class="string">==</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">returnmsg</span></span><br><span class="line">    <span class="attr">ignore_errors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;success&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">success</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;failed&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">failure</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;changed&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">change</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;skip&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">skip</span></span><br></pre></td></tr></table></figure><h2 id="整除判断"><a href="#整除判断" class="headerlink" title="整除判断"></a>整除判断</h2><p>ansible 可通过如下关键字对一个数字进行整除判断：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>even</td><td>判断数值是否是偶数，是偶数则返回真</td></tr><tr><td>odd</td><td>判断数值是否是奇数，是奇数则返回真</td></tr><tr><td>divisibleby(num)</td><td>判断是否可以整除指定的数值，如果除以指定的值以后余数为 0，则返回真</td></tr></tbody></table><p>看如下示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">num1:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">num2:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">num3:</span> <span class="number">8</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; num1 &#125;&#125;</span> is an even number&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">num1</span> <span class="string">is</span> <span class="string">even</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; num2 &#125;&#125;</span> is an odd number&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">num2</span> <span class="string">is</span> <span class="string">odd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; num3 &#125;&#125;</span> can be divided exactly by 4&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">num3</span> <span class="string">is</span> <span class="string">divisibleby(4)</span></span><br></pre></td></tr></table></figure><h2 id="列表父子集判断"><a href="#列表父子集判断" class="headerlink" title="列表父子集判断"></a>列表父子集判断</h2><p>ansible 可使用如下关键字对列表进行父子集判断：</p><table><thead><tr><th>父子集判断</th><th>说明</th></tr></thead><tbody><tr><td>subset</td><td>判断一个 list 是不是另一个 list 的子集，是另一个 list 的子集时返回真</td></tr><tr><td>superset</td><td>判断一个 list 是不是另一个 list 的父集，是另一个 list 的父集时返回真</td></tr></tbody></table><p>看如下示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">a:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">b:</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;A is a subset of B&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">a</span> <span class="string">is</span> <span class="string">subset(b)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;B is the parent set of A&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">b</span> <span class="string">is</span> <span class="string">superset(a)</span></span><br></pre></td></tr></table></figure><h2 id="版本判断"><a href="#版本判断" class="headerlink" title="版本判断"></a>版本判断</h2><p>在 ansible 中 version 关键字可以用于对比两个版本号的大小，或者与指定的版本号进行对比，使用语法为 version(‘ 版本号 ‘, ‘ 比较操作符 ‘)。</p><p>version 支持的比较操作符如下：</p><table><thead><tr><th>比较操作符</th><th>符号表示</th><th>字母表示</th></tr></thead><tbody><tr><td>大于</td><td>&gt;</td><td>gt</td></tr><tr><td>大于等于</td><td>&gt;&#x3D;</td><td>ge</td></tr><tr><td>小于</td><td>&lt;</td><td>lt</td></tr><tr><td>小于等于</td><td>&lt;&#x3D;</td><td>le</td></tr><tr><td>等于</td><td>&#x3D;&#x3D; 或 &#x3D;</td><td>eq</td></tr><tr><td>不等于</td><td>!&#x3D; 或 &lt;&gt;</td><td>ne</td></tr></tbody></table><p>看如下示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">ver1:</span> <span class="number">18.04</span></span><br><span class="line">    <span class="attr">ver2:</span> <span class="number">22.04</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;This message can be displayed when the ver2 is greater than ver1&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">ver2</span> <span class="string">is</span> <span class="string">version(ver1,&quot;&gt;&quot;)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;system version <span class="template-variable">&#123;&#123;ansible_distribution_version&#125;&#125;</span> greater than 18.04&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">ansible_distribution_version</span> <span class="string">is</span> <span class="string">version(&quot;18.04&quot;,&quot;gt&quot;)</span></span><br></pre></td></tr></table></figure><h2 id="合并判断"><a href="#合并判断" class="headerlink" title="合并判断"></a>合并判断</h2><p>在 ansible 中，可以使用 block 关键字将多个任务整合成一个块，这个块将被当做一个整体，我们可以对这个块添加判断条件，当条件成立时，则执行这个块中的所有任务。</p><p>我们来看一个小示例，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;task1&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">block:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;task2&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;task3&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="number">2</span> <span class="string">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="状态判断"><a href="#状态判断" class="headerlink" title="状态判断"></a>状态判断</h2><p>failed_when 的作用就是，当对应的条件成立时，将对应任务的执行状态设置为失败，我们可以借助 failed_when 关键字来完成类似 fail 模块的功能。</p><p>看下面示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;I execute normally&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">shell:</span> <span class="string">&quot;echo &#x27;This is a string for testing error&#x27;&quot;</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">return_value</span></span><br><span class="line">    <span class="attr">failed_when:</span> <span class="string">&#x27; &quot;error&quot; in return_value.stdout&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;I never execute,Because the playbook has stopped&quot;</span></span><br></pre></td></tr></table></figure><p>上例中，failed_when 对应的条件是 “error” in return_value.stdout，表示 error 字符串如果存在于 shell 模块执行后的标准输出中，则条件成立，当条件成立后，shell 模块的执行状态将会被设置为失败，由于 shell 模块的执行状态被设置为失败，所以 playbook 会终止运行，于是，最后的 debug 模块并不会被执行。</p><p>理解了 ‘ failed_when’ 关键字以后，顺势理解 ‘changed_when’ 关键字就容易多了。</p><table><thead><tr><th>状态判断</th><th>说明</th></tr></thead><tbody><tr><td>failed_when</td><td>关键字的作用是在条件成立时，将对应任务的执行状态设置为失败。</td></tr><tr><td>changed_when</td><td>关键字的作用是在条件成立时，将对应任务的执行状态设置为 changed。</td></tr></tbody></table><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;test message&quot;</span></span><br><span class="line">    <span class="attr">changed_when:</span> <span class="number">2</span> <span class="string">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>debug 模块在正常执行的情况下只能是 ok 状态，上例中，我们使用 changed_when 关键字将 debug 模块的执行后的状态定义为了 changed，你可以尝试执行上例 playbook，执行效果如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook test.yml </span><br><span class="line"></span><br><span class="line">PLAY [localhost] **********************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [debug] **************************************************************************************************************************</span><br><span class="line">changed: [localhost] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;test message&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP ****************************************************************************************************************************</span><br><span class="line">localhost                  : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0  </span><br></pre></td></tr></table></figure><blockquote><p>在 Ansible 中只有任务作出了实际的操作时（执行后状态为 changed），才会真正的执行对应的 handlers，这样我们可以控制当前任务的状态。</p></blockquote><p>其实，changed_when 除了能够在条件成立时将任务的执行状态设置为 changed，还能让对应的任务永远不能是 changed 状态，示例如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">B</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">shell:</span> <span class="string">&quot;ls /opt&quot;</span></span><br><span class="line">    <span class="attr">changed_when:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>当将 changed_when 直接设置为 false 时，对应任务的状态将不会被设置为 changed，如果任务原本的执行状态为 changed，最终则会被设置为 ok，所以，上例 playbook 执行后，shell 模块的执行状态最终为 ok。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装配置vncserver</title>
      <link href="/posts/bd65d26a/"/>
      <url>/posts/bd65d26a/</url>
      
        <content type="html"><![CDATA[<p>VNC（Virtual Network Computing）是一种远程桌面协议。</p><p>vnc 大致可以分为两种，一种直接查看 <code>TTY</code> 上正在显示的桌面（和插上显示器显示的一致），另一种是创建一个新的桌面（即 可以在一台 linux 上打开若干个桌面供若干用户使用）常用的 vnc 服务器有：<code>x11vnc</code> <code>tigervnc</code> <code>tightvnc</code></p><p>我的系统是：<code>ubuntu22.04</code>, 如果你不是这个系统，可能需要做一些修改。参考官方文档：<a href="https://help.ubuntu.com/community/VNC/Servers">https://help.ubuntu.com/community/VNC/Servers</a> 本文配置直接转发桌面显示。 直接转发桌面我这里使用的是 <code>x11vnc</code> , 创建 vnc 虚拟桌面请看: <a href="/posts/sghylv/">香橙派配置VNC Server</a></p><h2 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install x11vnc</span><br></pre></td></tr></table></figure><h2 id="创建密码文件"><a href="#创建密码文件" class="headerlink" title="创建密码文件"></a>创建密码文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x11vnc -storepasswd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用 vncpasswd 命令来创建，支持非交互式创建</span></span><br><span class="line"><span class="comment"># echo 123456 | vncpasswd -f &gt; ~/.vnc/passwd</span></span><br></pre></td></tr></table></figure><p>密码文件创建在： <code>~/.vnc/passwd</code></p><h2 id="通过-systemd-启动"><a href="#通过-systemd-启动" class="headerlink" title="通过 systemd 启动"></a>通过 systemd 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /lib/systemd/system/x11vnc.service &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Start x11vnc at startup.</span></span><br><span class="line"><span class="string">After=multi-user.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/x11vnc -auth guess -forever -loop -noxdamage -repeat -rfbauth /home/orangepi/.vnc/passwd -rfbport 5900 -shared</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now x11vnc.service</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><code>x11vnc</code> 包含一个 <code>/usr/share/applications/x11vnc.desktop</code> 桌面文件，你可以在桌面上找到 x11 vnc 的图标，然后通过图形界面来配置。比如：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407151440567.png" alt="image.png|654"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> vnc </tag>
            
            <tag> RemoteControl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装和配置samba共享</title>
      <link href="/posts/a7c8660c/"/>
      <url>/posts/a7c8660c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在 windows 平台创建 smb 共享是一件很方便的事情，右键共享即可，一直没有关心 linux 平台的 smb 服务，最近家里有一台装了 ubuntu 的笔记本，想放在角落里做 nas 用，所以看看如何搭建 smb 共享。</p></blockquote><h2 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install samba</span><br></pre></td></tr></table></figure><p>如果不小心删除了配置文件，可以通过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge samba-common samba</span><br><span class="line">sudo apt install samba</span><br></pre></td></tr></table></figure><p>来重新生成</p><h2 id="创建-samba-用户"><a href="#创建-samba-用户" class="headerlink" title="创建 samba 用户"></a>创建 samba 用户</h2><p>samba 使用 Linux 的用户和权限系统，但是有自己的认证机制。</p><p>samba 用户首先要是一个 Linux 用户，不然是创建不成功的。</p><h3 id="创建一个-Linux-用户"><a href="#创建一个-Linux-用户" class="headerlink" title="创建一个 Linux 用户"></a>创建一个 Linux 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -s /bin/bash -m zhanglikun</span><br></pre></td></tr></table></figure><blockquote><p>-m 是在 home 目录自动创建一个 zhanglikun 目录</p></blockquote><h3 id="创建一个-smb-用户"><a href="#创建一个-smb-用户" class="headerlink" title="创建一个 smb 用户"></a>创建一个 smb 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a zhanglikun</span><br></pre></td></tr></table></figure><p>手动输入两遍密码即可,其他操作可以通过 <code>smbpass -h</code> 查看</p><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><p>使用 zhanglikun 用户在家目录创建一个共享目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> samba</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>保证 server role 是 standalone server（默认情况下就是如此）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server role = standalone server</span><br></pre></td></tr></table></figure><h3 id="添加共享配置"><a href="#添加共享配置" class="headerlink" title="添加共享配置"></a>添加共享配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[samba]</span><br><span class="line">    path = /home/zhanglikun/samba</span><br><span class="line">    browseable = yes</span><br><span class="line">    read only = no</span><br><span class="line">#    force create mode = 0660</span><br><span class="line">#    force directory mode = 2770</span><br><span class="line">    valid users = zhanglikun</span><br><span class="line"></span><br><span class="line"># 下面是一个匿名只读配置</span><br><span class="line">[share]</span><br><span class="line">    path = /mnt/samba</span><br><span class="line">    browsable =yes</span><br><span class="line">    writable = no</span><br><span class="line">    guest ok = yes</span><br><span class="line">    read only = yes</span><br></pre></td></tr></table></figure><p>选项的含义如下：</p><table><thead><tr><th>配置项</th><th>作用</th></tr></thead><tbody><tr><td>[samba] 和 [public]</td><td>登录时将使用的共享名称。</td></tr><tr><td>path</td><td>分享的路径。</td></tr><tr><td>browseable</td><td>是否应在可用共享列表中列出该共享。通过设置为 no，其他用户将看不到共享。</td></tr><tr><td>read only</td><td>valid users 列表中指定的用户是否能够写入此共享。</td></tr><tr><td>force create mode</td><td>设置此共享中新创建文件的权限。</td></tr><tr><td>force directory mode</td><td>设置此共享中新创建目录的权限。</td></tr><tr><td>valid users</td><td>允许访问共享的用户和组的列表。群组以@符号为前缀。</td></tr></tbody></table><p>完成后，使用以下方法重新启动 Samba 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nmbd.service</span><br></pre></td></tr></table></figure><h2 id="连接-samba-共享"><a href="#连接-samba-共享" class="headerlink" title="连接 samba 共享"></a>连接 samba 共享</h2><h3 id="从-Linux-连接到-Samba-共享"><a href="#从-Linux-连接到-Samba-共享" class="headerlink" title="从 Linux 连接到 Samba 共享"></a>从 Linux 连接到 Samba 共享</h3><p>Linux 用户可以使用文件管理器从命令行访问 samba 共享或挂载 Samba 共享。</p><h4 id="方法-1-使用-smbclient-客户端"><a href="#方法-1-使用-smbclient-客户端" class="headerlink" title="方法 1. 使用 smbclient 客户端"></a>方法 1. 使用 smbclient 客户端</h4><p><code>smbclient</code> 是允许您从命令行访问 <code>Samba</code> 的工具。 <code>smbclient</code> 软件包尚未预先安装在大多数 Linux 发行版中，因此您需要使用分发软件包管理器进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install smbclient</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install samba-client</span><br></pre></td></tr></table></figure><p>访问 Samba 共享的语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //<span class="string">&quot;&lt;windows_computername&gt;/&lt;windows_sharename&gt;&quot;</span> -U <span class="string">&quot;&lt;windows_username&gt;%&lt;windows_password&gt;&quot;</span></span><br></pre></td></tr></table></figure><p>您将登录 Samba 命令行界面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Try <span class="string">&quot;help&quot;</span> to get a list of possible commands.</span><br><span class="line">smb: \&gt;</span><br></pre></td></tr></table></figure><h4 id="方法-2-挂载-Samba-共享"><a href="#方法-2-挂载-Samba-共享" class="headerlink" title="方法 2. 挂载 Samba 共享"></a>方法 2. 挂载 Samba 共享</h4><p>要在 Linux 上挂载 Samba 共享，您需要安装 <code>cifs-utils</code> 软件包。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">CentOS</button><button type="button" class="tab">Ubuntu</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install cifs-utils</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cifs-utils</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>接下来，创建安装点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /mnt/smbmount</span><br></pre></td></tr></table></figure><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">手动挂载</button><button type="button" class="tab">fstab自动挂载</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uid和gid是挂载到本地的权限。除了有远程服务器权限外，本地也要有权限才能修改。</span></span><br><span class="line">sudo mount -t cifs //192.168.1.11/0/ /mnt -o vers=2.0,uid=0,gid=0,dir_mode=0755,file_mode=0755,mfsymlinks,cache=strict,rsize=1048576,wsize=1048576,username=iuxt,password=password</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//&lt;windows_computername&gt;/&lt;windows_sharename&gt; /mnt/windows_share cifs username=&lt;windows_username&gt;,password=&lt;windows_password&gt;,iocharset=utf8 0 0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="从-Windows-连接到-Samba-共享"><a href="#从-Windows-连接到-Samba-共享" class="headerlink" title="从 Windows 连接到 Samba 共享"></a>从 Windows 连接到 Samba 共享</h3><p>Windows 用户还可以选择从命令行和 GUI 连接到 Samba 共享。以下步骤显示了如何使用 Windows File Explorer 访问共享。</p><p>打开文件资源管理器，然后在地址栏中以以下格式输入 Samba 共享的地址 <code>\\samba_hostname_or_server_ip\sharename</code> 回车，将提示您输入登录凭据<br>如果需要挂载，则在资源管理器中找到 <code>映射网络驱动器</code>,按照提示输入地址和用户名密码即可挂载成一个盘符。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 挂载共享</span><br><span class="line"><span class="built_in">net</span> use z: \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.<span class="number">163</span>\share /user:&quot;&lt;计算机名\用户名&gt;&quot; &quot;&lt;密码&gt;&quot;</span><br><span class="line"></span><br><span class="line"># 查看已经创建的连接</span><br><span class="line"><span class="built_in">net</span> use</span><br><span class="line"></span><br><span class="line"># 断开共享</span><br><span class="line"><span class="built_in">net</span> use /delete \\<span class="number">10</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">132</span>\ubuntu</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> samba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给 Ubuntu 加密 Home 目录</title>
      <link href="/posts/sqln8l/"/>
      <url>/posts/sqln8l/</url>
      
        <content type="html"><![CDATA[<p>Ubuntu 在安装的时候是可以进行全盘加密的，但是全盘加密没法像 Windows 做的那样无感（开机需要输入密码才能进入进入系统，macOS 的 FileVault 也是如此，Windows 的 BitLocker 是可以利用 TPM 进行自动解密，使用体验完全和不加密一样，微软牛逼）在一些需要无人值守的情况下就不太好用，比如使用远程桌面连接机器，然后重启了远程机器，你会发现再也连不上了，因为需要先解密磁盘才能启动操作系统。</p><h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><p>加密 Home 文件夹，需要安装 <code>eCryptfs</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ecryptfs-utils cryptsetup</span><br></pre></td></tr></table></figure><h2 id="开始加密"><a href="#开始加密" class="headerlink" title="开始加密"></a>开始加密</h2><p>加密切换到 <code>root</code> 用户执行，或者你也可以创建一个管理员账号来执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ecryptfs-migrate-home -u &lt;用户名&gt;</span><br></pre></td></tr></table></figure><p>过程中需要输入你加密的用户的用户名和密码。加密后会创建临时备份目录，如果可以正常进入桌面，可以把备份目录删除，备份目录在 <code>/home/</code> 下。</p><p>可以执行以下命令来记录你随机生成的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ecryptfs-unwrap-passphrase</span><br></pre></td></tr></table></figure><h2 id="加密交换区"><a href="#加密交换区" class="headerlink" title="加密交换区"></a>加密交换区</h2><p>加密交换分区可能会妨碍休眠和挂起功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ecryptfs-setup-swap</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hyper-V 自定义内部网络网段和IP地址</title>
      <link href="/posts/6f952944/"/>
      <url>/posts/6f952944/</url>
      
        <content type="html"><![CDATA[<h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>首先如果是仅仅想要主机和虚拟机进行数据互通，其实不需要固定 IP，直接通过计算机名就可以互相访问。</p><h2 id="Hyper-V-网络模式"><a href="#Hyper-V-网络模式" class="headerlink" title="Hyper-V 网络模式"></a>Hyper-V 网络模式</h2><p>外部虚拟网络: 类似于 VMware 的桥接网络模式, 在希望允许虚拟机与外部服务器和管理操作系统（有时称为父分区）进行通信时，可以使用此类型的虚拟网络。此类型的虚拟网络还允许位于同一物理服务器上的虚拟机互相通信。</p><p>内部虚拟网络: 类似于 VMware 的 NAT 网络模式, 在希望允许同一物理服务器上的虚拟机与虚拟机和管理操作系统之间进行通信时，可以使用此类型的虚拟网络。内部虚拟网络是一种未绑定到物理网络适配器的虚拟网络。它通常用来构建从管理操作系统连接到虚拟机所需的测试环境。</p><p>专用虚拟网络: 在希望只允许同一物理服务器上的虚拟机之间进行通信时，可以使用此类型的虚拟网络。专用虚拟网络是一种无需在管理操作系统中装有虚拟网络适配器的虚拟网络。在希望将虚拟机从管理操作系统以及外部网络中的网络通信中分离出来时，通常会使用专用虚拟网络。</p><p>由于 Hyper-V 自带的 Default Switch 在每次电脑重启的时候会自动分配一个未使用的网段, 无法达到固定 IP 的效果, Hyper-V 默认的 Default Switch 同时支持了 NAT 网络以及 DHCP</p><p>正常来说想要固定 IP 有以下方式:</p><ol><li>创建一个自定义的网段, 固定网段的地址范围, 然后虚拟机使用固定 IP</li><li>增加一个新的仅内网网卡, 虚拟机正常访问网络使用 Default Switch 不变, 物理机访问虚拟机使用仅内网网卡</li><li>使用外部虚拟网络, 和主机处于同一个内网</li></ol><h2 id="方案一-创建自定义-NAT-网段"><a href="#方案一-创建自定义-NAT-网段" class="headerlink" title="方案一: 创建自定义 NAT 网段"></a>方案一: 创建自定义 NAT 网段</h2><p>参考：<a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/user-guide/setup-nat-network">https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/user-guide/setup-nat-network</a></p><h3 id="添加虚拟交换机"><a href="#添加虚拟交换机" class="headerlink" title="添加虚拟交换机"></a>添加虚拟交换机</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用powershell添加</button><button type="button" class="tab">手动添加</button></div><div class="tab-contents"><div class="tab-item-content active"><p>以管理员身份启动 PowerShell</p><blockquote><p>Win11 和新一点的 Win10 系统可以通过右键点击开始菜单，选择 <code>Windows 终端(管理员)</code> 打开</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟交换机，等同于在Hyper-V管理器界面中新建虚拟网络交换机</span></span><br><span class="line"><span class="built_in">New-VMSwitch</span> <span class="literal">-SwitchName</span> <span class="string">&quot;NAT&quot;</span> <span class="literal">-SwitchType</span> Internal</span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙放通这个网卡的所有流量</span></span><br><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;允许NAT网卡&quot;</span> <span class="literal">-InterfaceAlias</span> <span class="string">&quot;vEthernet (NAT)&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-Action</span> Allow</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>可以到 Hyper V 管理器 虚拟交换机管理器 新建虚拟交换机<br>类型选择 <code>内部</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/Snipaste_2022-01-13_09-39-25.png" alt="手动创建虚拟交换机|506"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="设置-ip-地址"><a href="#设置-ip-地址" class="headerlink" title="设置 ip 地址"></a>设置 ip 地址</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用powershell添加</button><button type="button" class="tab">手动添加</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取虚拟交换机的ifindex，并赋值到变量中</span></span><br><span class="line"><span class="variable">$ifindex</span> = <span class="built_in">Get-NetAdapter</span> <span class="literal">-Name</span> <span class="string">&quot;vEthernet (NAT)&quot;</span> | <span class="built_in">Select-Object</span> <span class="literal">-ExpandProperty</span> <span class="string">&#x27;ifIndex&#x27;</span></span><br><span class="line"><span class="comment"># 在虚拟交换机上设置固定IP，用于网关IP</span></span><br><span class="line"><span class="built_in">New-NetIPAddress</span> <span class="literal">-IPAddress</span> <span class="number">10.0</span>.<span class="number">0.1</span> <span class="literal">-PrefixLength</span> <span class="number">24</span> <span class="literal">-InterfaceIndex</span> <span class="variable">$ifindex</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>进入 windows 设置，给网卡 <code>vEthernet (NAT)</code> 设置固定 ip 和子网掩码</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/Snipaste_2022-01-13_09-43-03.png" alt="手动设置|520"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="创建-NAT-网络"><a href="#创建-NAT-网络" class="headerlink" title="创建 NAT 网络"></a>创建 NAT 网络</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-NetNat</span> <span class="literal">-Name</span> Internal <span class="literal">-InternalIPInterfaceAddressPrefix</span> <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><h3 id="删除-NAT-网络"><a href="#删除-NAT-网络" class="headerlink" title="删除 NAT 网络"></a>删除 NAT 网络</h3><p>如果不需要 NAT 网络了，可以使用下面的命令来删除（NAT 网络只能存在一个）。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-NetNat</span>                  <span class="comment"># NAT网络保持一个就行了，可以删除后重新创建</span></span><br><span class="line"><span class="built_in">Remove-NetNat</span> NAT           <span class="comment"># 删除nat网络</span></span><br></pre></td></tr></table></figure><h2 id="方案二-创建一个仅内网交换机"><a href="#方案二-创建一个仅内网交换机" class="headerlink" title="方案二: 创建一个仅内网交换机"></a>方案二: 创建一个仅内网交换机</h2><h3 id="创建一个内部交换机"><a href="#创建一个内部交换机" class="headerlink" title="创建一个内部交换机"></a>创建一个内部交换机</h3><p>进入 Hyper-V 虚拟交换机管理器, 创建一个内部虚拟交换机</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309141440799.png" alt="image.png|431"></p><h3 id="修改网卡-IP-信息"><a href="#修改网卡-IP-信息" class="headerlink" title="修改网卡 IP 信息"></a>修改网卡 IP 信息</h3><p>在 控制面板 – 更改适配器设置界面, 给内部虚拟交换机这个网卡设置 IP 地址, 只需要设置 IP 和掩码即可.</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309141439136.png" alt="image.png|641"></p><h3 id="虚拟机增加网卡"><a href="#虚拟机增加网卡" class="headerlink" title="虚拟机增加网卡"></a>虚拟机增加网卡</h3><p>在虚拟机设置界面, 增加一个新的网络适配器, 交换机选择内部虚拟交换机</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309141440651.png" alt="image.png|478"></p><h3 id="操作系统网卡配置固定-IP"><a href="#操作系统网卡配置固定-IP" class="headerlink" title="操作系统网卡配置固定 IP"></a>操作系统网卡配置固定 IP</h3><p>此时在操作系统中, 会多出来一张网卡, 多出来的网卡配置一下固定 IP 和掩码即可, IP 和交换机在同一个网段, 不要重复.<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309141443040.png" alt="image.png|593"></p><p>此时主机可以通过 172.16.0.8 这个地址访问虚拟机, 虚拟机也可以通过 172.16.0.1 访问主机</p><h2 id="方案三-使用外部网络"><a href="#方案三-使用外部网络" class="headerlink" title="方案三: 使用外部网络"></a>方案三: 使用外部网络</h2><p>创建外部虚拟机交换机, 选择一下桥接的网卡, 这种方式虚拟机也会获得一个 IP 地址, 虚拟机就会像主机一样可以对外提供服务, 常用于服务器</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309141444528.png" alt="image.png|429"></p><p>操作系统内设置外部虚拟交换机网卡即可.</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyper-V </tag>
            
            <tag> VirtualMachine </tag>
            
            <tag> Windows </tag>
            
            <tag> Command </tag>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的crontab无法执行的一些问题</title>
      <link href="/posts/63d10d9c/"/>
      <url>/posts/63d10d9c/</url>
      
        <content type="html"><![CDATA[<p>crontab 是 linux 平台的定时任务系统，不过有时候可以运行的命令或脚本在 crontab 里面就是不运行，下面找了一些可能的原因以及解决方案。</p><h2 id="看不到日志"><a href="#看不到日志" class="headerlink" title="看不到日志"></a>看不到日志</h2><p>一般来说，crontab 的任务控制台输出会打到 <code>/var/spool/mail/&lt;username&gt;</code> 里面，然后通过 email 发出去<br><code>crontab</code> 服务的运行的日志一般都在 <code>/var/log/cron</code> 里面，这个日志可以看到任务有没有执行</p><p>如果想将命令输出内容重定向到其他文件，可以在命令后添加 <code> &gt;&gt; xxx.log 2&gt;&amp;1</code>, 不加 <code>2&gt;&amp;1</code> 错误日志看不到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="built_in">date</span> &gt;&gt; /tmp/cron.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="环境变量的问题"><a href="#环境变量的问题" class="headerlink" title="环境变量的问题"></a>环境变量的问题</h2><p>crontab 环境变量和登录 shell 查看的环境变量是不同的，比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="built_in">env</span> &gt;&gt; /tmp/env.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>查看一下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">HOME</span>=/home/iuxt</span><br><span class="line"><span class="attr">LOGNAME</span>=iuxt</span><br><span class="line"><span class="attr">PATH</span>=/usr/bin:/bin</span><br><span class="line"><span class="attr">LANG</span>=C.UTF-<span class="number">8</span></span><br><span class="line"><span class="attr">SHELL</span>=/bin/sh</span><br><span class="line"><span class="attr">PWD</span>=/home/iuxt</span><br></pre></td></tr></table></figure><p>比系统的环境变量要少很多，比如 PATH 只有 <code>/usr/bin</code> 和 <code>/bin</code>， 安装在其他位置的程序是会 <code>command not found</code> 的，解决方法有两个：</p><ol><li><p>写绝对路径</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /usr/bin/env &gt;&gt; /tmp/env.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><blockquote><p>但是这个方法对于很多脚本比较麻烦，因为脚本里面可能用的是相对路径也会 <code>command not found</code> 的</p></blockquote></li><li><p>crontab 的首部添加需要的环境变量</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">* * * * * <span class="built_in">env</span> &gt;&gt; /tmp/env.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><p>在命令的前方添加环境变量</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * TEST=XXX env &gt;&gt; /tmp/env.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><p>把命令放进 shell 脚本里，在脚本顶部声明环境变量</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure></li></ol><h2 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h2><p>这个比较好理解了，crontab 也是分用户执行的<br>cron 配置文件在 <code>/var/spool/cron/用户名</code>(redhat 系)，没有权限访问可执行文件，或者没有权限生成临时文件等都会导致 crontab 执行失败。</p><p>使用 crontab 编辑的时候可以指定用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -u iuxt -e</span><br></pre></td></tr></table></figure><h2 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h2><p>这个比较坑了，man crontab 解释如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Although cron requires that each entry in a crontab end in a newline character, neither the crontab command nor the cron daemon will detect this error. Instead, the crontab will appear to load normally. However, the command will never run. The best choice is to ensure that your crontab has a blank line at the end.</span><br><span class="line"></span><br><span class="line">4th Berkeley Distribution 29 December 1993 CRONTAB(1)</span><br></pre></td></tr></table></figure><p>每一条 cron 表达式都要以换行符结尾，保险起见 crontab 最后留一个空行吧。</p><h2 id="服务没启动"><a href="#服务没启动" class="headerlink" title="服务没启动"></a>服务没启动</h2><p>crontab 服务 crond 没有启动</p><p>启动 <code>servicd crond start</code></p><h2 id="时区问题"><a href="#时区问题" class="headerlink" title="时区问题"></a>时区问题</h2><p>修改时区后需要重启 crond 服务才能以新的时区为准。</p><h2 id="路径问题"><a href="#路径问题" class="headerlink" title="路径问题"></a>路径问题</h2><p>脚本里面写绝对路径没问题，写相对路径就会造成脚本执行不对，比如一个脚本会写入文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入脚本所在目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>&quot;</span></span><br><span class="line"></span><br><span class="line">NOW=$(<span class="built_in">date</span> +<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$NOW</span> &gt;&gt; log.log</span><br></pre></td></tr></table></figure><p>如果不加 <code>cd &quot;$(dirname &quot;$0&quot;)&quot;</code> 那么 crontab 会将 log.log 文件写入到 Home 目录，加上 <code>cd &quot;$(dirname &quot;$0&quot;)&quot;</code> 会先进入到脚本所在目录再执行。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crontab </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两台计算机直接传输文件的几种方式</title>
      <link href="/posts/2c246a61/"/>
      <url>/posts/2c246a61/</url>
      
        <content type="html"><![CDATA[<p>这里的计算机指的是广义上的计算机，包括但不限于家用电脑、服务器、手机、树莓派等等</p><h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><blockquote><p>scp 使用的是 SSH 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拷贝本地文件testfile到192.168.1.100的/tmp目录下</span></span><br><span class="line">scp testfile root@192.168.1.100:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝本地文件夹到192.168.1.100的/tmp目录下</span></span><br><span class="line">scp -r testfolder root@192.168.1.100:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝远程到本地</span></span><br><span class="line">scp root@192.168.1.100:/tmp/testfile .</span><br></pre></td></tr></table></figure><h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><blockquote><p>ftp 控制端口是 21，用于账号密码认证以及协商端口等。<br>主动模式：数据端口是 20<br>被动模式：客户端可服务端协商一个端口</p></blockquote><p>使用 Python 简单搭建一个 ftp 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pyftpdlib</span><br><span class="line">python3 -m pyftpdlib -p 21</span><br></pre></td></tr></table></figure><h2 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h2><blockquote><p>sftp 是安全的 ftp，走的是 SSH 协议</p></blockquote><h3 id="sftp-常用命令"><a href="#sftp-常用命令" class="headerlink" title="sftp 常用命令"></a>sftp 常用命令</h3><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>cd path</td><td>Change remote directory to ‘path’</td></tr><tr><td>get [-afpR] remote [local]</td><td>Download file</td></tr><tr><td>help</td><td>Display this help text</td></tr><tr><td>lcd path</td><td>Change local directory to ‘path’</td></tr><tr><td>lls [ls-options [path]]</td><td>Display local directory listing</td></tr><tr><td>lmkdir path</td><td>Create local directory</td></tr><tr><td>ln [-s] oldpath newpath</td><td>Link remote file (-s for symlink)</td></tr><tr><td>lpwd</td><td>Print local working directory</td></tr><tr><td>ls [-1afhlnrSt] [path]</td><td>Display remote directory listing</td></tr><tr><td>mkdir path</td><td>Create remote directory</td></tr><tr><td>put [-afpR] local [remote]</td><td>Upload file</td></tr><tr><td>pwd</td><td>Display remote working directory</td></tr><tr><td>reget [-fpR] remote [local]</td><td>Resume download file</td></tr><tr><td>reput [-fpR] local [remote]</td><td>Resume upload file</td></tr><tr><td>rm path</td><td>Delete remote file</td></tr><tr><td>rmdir path</td><td>Remove remote directory</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sftp root@192.168.1.100</span><br><span class="line"><span class="comment"># 可以用cd ls等命令，找到文件后使用get下载</span></span><br><span class="line">get testfile</span><br></pre></td></tr></table></figure><h2 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h2><h3 id="使用-ssh-协议传输"><a href="#使用-ssh-协议传输" class="headerlink" title="使用 ssh 协议传输"></a>使用 ssh 协议传输</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz <span class="built_in">source</span>/ user@remote_host:/destination</span><br></pre></td></tr></table></figure><p>如果 ssh 有其他参数，需要特殊指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz -e <span class="string">&#x27;ssh -p 2234&#x27;</span> <span class="built_in">source</span>/ user@remote_host:/destination</span><br></pre></td></tr></table></figure><h3 id="使用-rsync-协议传输"><a href="#使用-rsync-协议传输" class="headerlink" title="使用 rsync 协议传输"></a>使用 rsync 协议传输</h3><blockquote><p>使用 rsync 协议需要对方安装 rsync 守护程序</p></blockquote><p>使用 rsync:&#x2F;&#x2F;协议（默认端口 873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔::。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av <span class="built_in">source</span>/ 192.168.122.32::module/destination</span><br></pre></td></tr></table></figure><p>注意，上面地址中的 module 并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。</p><p>如果想知道 rsync 守护程序分配的所有 module 列表，可以执行下面命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync rsync://192.168.122.32</span><br></pre></td></tr></table></figure><p>rsync 协议除了使用双冒号，也可以直接用 rsync:&#x2F;&#x2F;协议指定地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av <span class="built_in">source</span>/ rsync://192.168.122.32/module/destination</span><br></pre></td></tr></table></figure><h3 id="排除"><a href="#排除" class="headerlink" title="排除"></a>排除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av --exclude <span class="string">&quot;snapshot&quot;</span> /var/lib/cass ./bak/</span><br></pre></td></tr></table></figure><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>使用 python 搭建一个简单的 http 服务</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Python 2.x</button><button type="button" class="tab">Python 3.x</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 8000</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h2><p>优点：方便、可以使用 udp 端口被进行传输</p><p>在服务器上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -l 1234      <span class="comment"># 监听tcp 1234端口</span></span><br><span class="line">nc -lu 1234     <span class="comment"># 监听udp 1234端口</span></span><br></pre></td></tr></table></figure><p>在客户端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc 10.0.0.131 1234      <span class="comment"># 通过tcp连接服务器</span></span><br><span class="line">nc 10.0.0.131 -u 1234   <span class="comment"># 通过udp连接服务器</span></span><br></pre></td></tr></table></figure><p>连接上后，在控制台输入文字，服务器端会显示</p><p>同样的，可以把控制台的数据重定向到文件，就可以实现文件的传输了</p><p>接受文件端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l 1234 &gt; file.txt</span><br></pre></td></tr></table></figure><p>传送文件端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 10.0.0.131 1234 &lt; file.txt</span><br></pre></td></tr></table></figure><h2 id="smb-或-nfs-等"><a href="#smb-或-nfs-等" class="headerlink" title="smb 或 nfs 等"></a>smb 或 nfs 等</h2><p><a href="/4b677f68">搭建NFS服务</a></p><h2 id="lrzsz"><a href="#lrzsz" class="headerlink" title="lrzsz"></a>lrzsz</h2><p>lrzsz 可以在连接终端的时候直接进行文件传输，比较方便，但是对终端有要求，在 windows 端有 xshell 可以支持，Linux 中 kde 的 konsole 可以支持。lrzsz 速度没有 scp 快，但是在连接了 ssh 的时候比较方便。比较适合传输小文件，大文件会比较容易出错。</p><p>xshell 甚至可以直接拖文件到终端窗口完成上传操作</p><p>远程服务器安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y lrzsz</span><br></pre></td></tr></table></figure><p>上传文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure><p>下载文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sz testfile</span><br></pre></td></tr></table></figure><h2 id="直接使用-SSH-加管道来传输"><a href="#直接使用-SSH-加管道来传输" class="headerlink" title="直接使用 SSH 加管道来传输"></a>直接使用 SSH 加管道来传输</h2><blockquote><p>大家知道 Linux 管道可以传输数据，如果管道和 SSH 配合使用的话，也可以达到传输文件的效果，比如：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> 1.txt| ssh iuxt@10.0.0.9 <span class="string">&quot;cd /tmp &amp;&amp; cat &gt; 1.txt&quot;</span></span><br></pre></td></tr></table></figure><p>这样就是把主机上的 1.txt 文件传输到 10.0.0.9 的 tmp&#x2F;1.txt 里面了。</p><p>还可以配合 tar 实现边压缩边传输：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcv testfolder -f - | ssh iuxt@10.0.0.9 <span class="string">&quot;cd /tmp &amp;&amp; tar zxf -&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维使用的Windows软件分享</title>
      <link href="/posts/spc5z0/"/>
      <url>/posts/spc5z0/</url>
      
        <content type="html"><![CDATA[<h2 id="终端工具"><a href="#终端工具" class="headerlink" title="终端工具"></a>终端工具</h2><h3 id="xshell-全家桶"><a href="#xshell-全家桶" class="headerlink" title="xshell 全家桶"></a>xshell 全家桶</h3><p>Xmanager Power Suite 8 支持 rdp 协议连接 windows，包含四大金刚组件（xshell xftp xmanager xlpd）附上 7 和 6 版本备用。不过 xshell 的缺点是使用 rz 和 sz 上传下载文件的时候容易乱码（文件传输失败并且终端上会刷很多乱码文本）</p><table><thead><tr><th>软件名</th><th>包含组件</th><th>下载地址</th></tr></thead><tbody><tr><td>xshell plus 7</td><td>包含 xshell 和 xftp ，解压即用，不用执行 bat，不写注册表，不弹窗。</td><td><a href="https://github.com/iuxt/src/releases/download/ops/XshellPlus_v7.0.0023r.7z">github</a></td></tr><tr><td>Xmanager Power Suite 6</td><td>包含 xshell xftp xmanager xlpd，需要执行 bat 脚本，不弹窗。</td><td><a href="https://github.com/iuxt/src/releases/download/ops/Xmanager.Power.Suite.6.0.0029.zip">github</a></td></tr><tr><td>Xmanager Power Suite 8</td><td>包含 xshell xftp xmanager xlpd，不用执行 bat 脚本，不弹窗。</td><td><a href="https://github.com/iuxt/src/releases/download/xmanager/Xmanager.Power.Suite.8.zip">github</a></td></tr></tbody></table><h3 id="mobaxterm"><a href="#mobaxterm" class="headerlink" title="mobaxterm"></a>mobaxterm</h3><p>待完善</p><h3 id="securecrt"><a href="#securecrt" class="headerlink" title="securecrt"></a>securecrt</h3><p>待完善</p><h3 id="tssh"><a href="#tssh" class="headerlink" title="tssh"></a>tssh</h3><p>tssh 是纯命令行软件，可以在 <code>Windows Terminal</code> 中运行，看起来更极客一点。tssh 可以兼容 lrzsz 使用 rz 和 sz 上传下载文件，并且自测没有发生过乱码。</p><p>tssh 可以直接使用 windows 版本的，也可以在 WSL 中运行 Linux 版本的。具体使用方法可以看：<a href="/posts/shqeci">trzsz 使用记录</a></p><h2 id="连接数据库工具"><a href="#连接数据库工具" class="headerlink" title="连接数据库工具"></a>连接数据库工具</h2><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><table><thead><tr><th>软件名</th><th>下载地址</th><th>是否推荐</th></tr></thead><tbody><tr><td>Navicat Premium 17</td><td>中文 解压即用版，可以联网更新。</td><td><a href="https://github.com/iuxt/src/releases/download/navicat17/Navicat.Premium.17.zip">github</a></td></tr><tr><td>Navicat Premium 17 Portable</td><td>中文 便携版，配置文件存储在软件目录。注意：此版本会造成其他非便携版保存的链接丢失，不要和正常版本共用。</td><td><a href="https://github.com/iuxt/src/releases/download/navicat17/Navicat.Premium.17.Portable.zip">github</a></td></tr><tr><td>Navicat 16.3.7</td><td>中文 解压即用版，可以联网更新。</td><td><a href="https://github.com/iuxt/src/releases/download/ops/Navicat.Premium.16.3.7.zip">github</a></td></tr><tr><td>Navicat 16.0.6</td><td>中文 解压即用版，不可更新。</td><td><a href="https://github.com/iuxt/src/releases/download/ops/Navicat_16.0.6.7z">github</a></td></tr><tr><td>Navicat 12</td><td>中文 解压即用版，不可更新。</td><td><a href="https://github.com/iuxt/src/releases/download/ops/Navicat.Premium.12.zip">github</a></td></tr></tbody></table><h3 id="sqlyog"><a href="#sqlyog" class="headerlink" title="sqlyog"></a>sqlyog</h3><p>有社区版和收费版，体积小巧，还不错。</p><h3 id="HeidiSQL"><a href="#HeidiSQL" class="headerlink" title="HeidiSQL"></a>HeidiSQL</h3><p>是个免费软件，官网在：<a href="https://www.heidisql.com/">https://www.heidisql.com/</a></p><h3 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h3><p>Java 写的客户端，又重又不好用。不过是开源软件，跨平台。</p><h2 id="Redis-管理工具"><a href="#Redis-管理工具" class="headerlink" title="Redis 管理工具"></a>Redis 管理工具</h2><p>新版 Navicat 就支持管理 Redis 了。</p><h2 id="剪切板工具"><a href="#剪切板工具" class="headerlink" title="剪切板工具"></a>剪切板工具</h2><p>打杂的运维需要经常复制粘贴，所以一个好用的剪切板软件必不可少。</p><h3 id="Windows-自带"><a href="#Windows-自带" class="headerlink" title="Windows 自带"></a>Windows 自带</h3><p>按下 <code>⊞ Win</code> + <code>v</code> 即可显示</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241231101650495.png" alt="image.png"></p><h3 id="ditto"><a href="#ditto" class="headerlink" title="ditto"></a>ditto</h3><p>在微软商店即可下载，免费软件。</p><h3 id="clipboard-fusion"><a href="#clipboard-fusion" class="headerlink" title="clipboard fusion"></a>clipboard fusion</h3><p>这个软件挺好用的，不过有可能有一些小问题，比如有时候复制了上面不显示，它支持将常用的固定在一个单独的页面上，方便直接粘贴。并且支持触发器，比如删除换行符，删除空格等。基本功能免费，高级功能收费。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20241231101754204.png" alt="image.png|357"></p><h2 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a>截图工具</h2><h3 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h3><p>基本功能免费，专业功能收费。挺不错的软件。</p><h3 id="pixpin"><a href="#pixpin" class="headerlink" title="pixpin"></a>pixpin</h3><p>也是基本功能免费，专业功能收费，支持录 GIF，长截图等。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用s6-Overlay来管理多进程容器</title>
      <link href="/posts/ea811085/"/>
      <url>/posts/ea811085/</url>
      
        <content type="html"><![CDATA[<p>容器使用最佳实践是：一个容器运行一个进程，进程退出容器也就退出，很优雅是不是？但是…在日常工作中总有一些你懂的的原因，就需要多个进程塞在一个容器里面，那么我们可以怎么来管理容器内进程呢？这个时候容器内的进程管理工具就派上用场了。s6-Overlay 就是其中之一<br>s6-Overlay 官方 github 地址：<a href="https://github.com/just-containers/s6-overlay">https://github.com/just-containers/s6-overlay</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>容器是通过判断 pid&#x3D;1 的进程来判断容器是否工作正常的，也就是说 s6-Overlay 进程 pid 为 1</p><p>通过官方安装脚本来安装</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.1/s6-overlay-amd64-installer /tmp/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> +x /tmp/s6-overlay-amd64-installer &amp;&amp; /tmp/s6-overlay-amd64-installer /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y nginx &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;daemon off;&quot;</span> &gt;&gt; /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/init&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;nginx&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>这样即可生效，当 nginx 挂掉的时候，容器一样会退出的。</p><h2 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h2><p>首先主服务，可以这么理解，这个服务挂掉了，整个容器就没有存在的意义了，这个服务应该写在 CMD 里面，这样遵循容器规范。</p><p>辅助服务，应该放在&#x2F;etc&#x2F;service.d&#x2F;里面，以项目名做区分。</p><p>文件结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@2ae83d42ee34:/etc/services.d# tree</span><br><span class="line">.</span><br><span class="line">|-- testapp</span><br><span class="line">|   |-- finish</span><br><span class="line">|   `-- run</span><br><span class="line">`-- testapp2</span><br><span class="line">    |-- finish</span><br><span class="line">    `-- run</span><br></pre></td></tr></table></figure><p>其中 run 和 finish 都是可执行文件（bash 或 python 或二进制等），容器启动会运行 run 程序，如果 run 意外退出则会运行 finish，并且会被自动拉起。整个过程容器不会退出。</p><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><ul><li>容器里面运行 crontab</li></ul><p>一般的容器镜像都没有 crontab，首先安装 crontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install crontabs</span><br></pre></td></tr></table></figure><p>然后容器里面编写服务启动脚本 run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">crond -f</span><br></pre></td></tr></table></figure><p>服务结束脚本 finish</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>这样就可以在容器里面运行 crontab 了</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>瞎扯一句，如果有一个程序不提供前台运行的选项，只能后台运行，那么在容器中也可以这么做</p><p>写一个 <code>entrypoint.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/sshd &amp;&amp; /bin/bash</span><br></pre></td></tr></table></figure><p>容器的 CMD 执行 <code>entrypoint.sh</code> 即可不退出，但是问题是 sshd 退出了容器也不会退出。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crontab </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask之服务端持久化session</title>
      <link href="/posts/f2ce6df5/"/>
      <url>/posts/f2ce6df5/</url>
      
        <content type="html"><![CDATA[<p>需求如下：开发一个 web 界面，用户经过 oauth 认证后，给用户生成一个随机密码显示出来，并将用户名和密码发送给 radiusserver 用来当作 WIFI 密码。<br>因为希望密码不要随便就更换，那样员工出去再进来，手机就需要重新输入新密码才能连 WIFI，容易被人打。所以用 session 存储的方式，将密码保存一定时间。</p><h2 id="什么是-session"><a href="#什么是-session" class="headerlink" title="什么是 session"></a>什么是 session</h2><p>session 基于 cookie 实现，保存在服务端的键值对（dict 类型），同时在浏览器中的 cookie 中也对应一相同的随机字符串，用来再次请求的时候验证<br>Flask 中的 session 是加密的，所以需要配置 <code>SECRET_KEY</code></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, session</span><br></pre></td></tr></table></figure><h3 id="配置-SECRET-KEY"><a href="#配置-SECRET-KEY" class="headerlink" title="配置 SECRET_KEY"></a>配置 SECRET_KEY</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.secret_key = os.getenv(<span class="string">&quot;SECRET_KEY&quot;</span>, <span class="string">&quot;not set key&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="设置-session-类型"><a href="#设置-session-类型" class="headerlink" title="设置 session 类型"></a>设置 session 类型</h3><p>可以存临时文件，还可以存 redis、memcached、mongodb 等</p><p>app.config[‘SESSION_TYPE’] &#x3D; ‘filesystem’</p><h3 id="设置-session-过期时间，默认是浏览器关闭就过期"><a href="#设置-session-过期时间，默认是浏览器关闭就过期" class="headerlink" title="设置 session 过期时间，默认是浏览器关闭就过期"></a>设置 session 过期时间，默认是浏览器关闭就过期</h3><p>app.config[‘PERMANENT_SESSION_LIFETIME’] &#x3D; 3600</p><h2 id="设置-session"><a href="#设置-session" class="headerlink" title="设置 session"></a>设置 session</h2><h3 id="添加-session"><a href="#添加-session" class="headerlink" title="添加 session"></a>添加 session</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置session</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set</span>():</span><br><span class="line">    session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;zhanglikun&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="读取-session"><a href="#读取-session" class="headerlink" title="读取 session"></a>读取 session</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 读取session</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get</span>():</span><br><span class="line">    <span class="comment"># return session[&#x27;username&#x27;]</span></span><br><span class="line">    <span class="keyword">return</span> session.get(<span class="string">&#x27;username&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><code>session[&#39;username&#39;]</code> 和 <code>session.get(&#39;username&#39;)</code> 都可以获取到值，不同的是:<br>session[‘username’] 键不存在就会异常<br>session.get(‘username’) 键不存在时返回 None</p></blockquote><h3 id="删除-session"><a href="#删除-session" class="headerlink" title="删除 session"></a>删除 session</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/delete/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>():</span><br><span class="line">    <span class="built_in">print</span> session.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="built_in">print</span> session.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="清除-session-中所有数据"><a href="#清除-session-中所有数据" class="headerlink" title="清除 session 中所有数据"></a>清除 session 中所有数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/clear&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear</span>():</span><br><span class="line">    <span class="built_in">print</span> session.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="comment"># 清除session中所有数据</span></span><br><span class="line">    session.clear()</span><br><span class="line">    <span class="built_in">print</span> session.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>检查端口是否能通的几种方法</title>
      <link href="/posts/ecf46dbb/"/>
      <url>/posts/ecf46dbb/</url>
      
        <content type="html"><![CDATA[<p>服务器上运行了一个服务，想测试一下端口通不通，可以通过以下一些方法来测试。</p><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><p>常见的 tcp 端口测试都是用的 telnet，用法也很简单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 10.0.0.7 22</span><br></pre></td></tr></table></figure><p>成功会显示：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Trying 10.0.0.7...</span><br><span class="line">Connected to 10.0.0.7.</span><br><span class="line">Escape character is &#x27;^]&#x27;.</span><br><span class="line">SSH-2.0-OpenSSH_7.4</span><br></pre></td></tr></table></figure><p>失败会显示：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Trying 10.0.0.7...</span><br><span class="line">telnet: Unable to connect to remote host: Connection refused</span><br></pre></td></tr></table></figure><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@localhost -p 8000</span><br></pre></td></tr></table></figure><p>失败会显示</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host localhost port 8001: Connection refused</span><br></pre></td></tr></table></figure><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>curl ip:port</p><p>失败会显示</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl: (7) Failed to connect to localhost port 8001: Connection refused</span><br></pre></td></tr></table></figure><h2 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h2><h3 id="检查-TCP-端口"><a href="#检查-TCP-端口" class="headerlink" title="检查 TCP 端口"></a>检查 TCP 端口</h3><p>下面的命令会检查远程主机上是否打开了端口 80、22 和 9000：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -zv 192.168.2.1 80 22 9000</span><br></pre></td></tr></table></figure><p>也可以指定端口扫描的范围 (速度非常快)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -zv 192.168.2.1 20-9000</span><br></pre></td></tr></table></figure><h3 id="检查-UDP-端口"><a href="#检查-UDP-端口" class="headerlink" title="检查 UDP 端口"></a>检查 UDP 端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -vuz 10.16.83.10 161</span><br></pre></td></tr></table></figure><p>通的话, 会显示:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309121124086.png"></p><p>不通的话, 会显示:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202309121126143.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> 网络 </tag>
            
            <tag> Bash </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用radius和OpenLDAP来认证unifi AP</title>
      <link href="/posts/c0e7cc9a/"/>
      <url>/posts/c0e7cc9a/</url>
      
        <content type="html"><![CDATA[<blockquote><p>公司目前用的 WIFI 是 unifi 的 AP，员工离职后仍然可以连接公司 WIFI，是一个安全隐患，所以准备将 AP 接入 radius 来认证，数据取自 openldap，员工离职删除 openldap 账号即可。</p></blockquote><p>本次操作系统使用的是 CentOS 7</p><h2 id="OpenLDAP"><a href="#OpenLDAP" class="headerlink" title="OpenLDAP"></a>OpenLDAP</h2><blockquote><p>参考文章：<a href="https://www.server-world.info/en/note?os=CentOS_7&amp;p=openldap">https://www.server-world.info/en/note?os=CentOS_7&amp;p=openldap</a></p></blockquote><h3 id="安装-OpenLDAP"><a href="#安装-OpenLDAP" class="headerlink" title="安装 OpenLDAP"></a>安装 OpenLDAP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openldap openldap-clients openldap-servers</span><br><span class="line"><span class="built_in">cp</span> /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span><br><span class="line"><span class="built_in">chown</span> ldap. /var/lib/ldap/DB_CONFIG</span><br><span class="line">systemctl <span class="built_in">enable</span> --now slapd</span><br></pre></td></tr></table></figure><h3 id="OpenLDAP-基础配置"><a href="#OpenLDAP-基础配置" class="headerlink" title="OpenLDAP 基础配置"></a>OpenLDAP 基础配置</h3><ol><li><p>生成一个密码<br> <code>slappasswd</code><br> 将生成的密码复制保存</p></li><li><p>设置 root 密码</p><p> chrootpw.ldif</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dn: olcDatabase=&#123;0&#125;config,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;nLyOWsRyvfvC6zRBL7M2ltlutgrIgnHH</span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif</span><br></pre></td></tr></table></figure></li><li><p>导入基本结构</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif</span><br><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif</span><br><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif</span><br></pre></td></tr></table></figure></li></ol><h3 id="设置目录管理员密码"><a href="#设置目录管理员密码" class="headerlink" title="设置目录管理员密码"></a>设置目录管理员密码</h3><p>chdomain.ldif</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">dn: olcDatabase=&#123;1&#125;monitor,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to * by dn.base=<span class="string">&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;</span></span><br><span class="line">    <span class="built_in">read</span> by dn.base=<span class="string">&quot;cn=Manager,dc=i,dc=com&quot;</span> <span class="built_in">read</span> by * none</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcSuffix</span><br><span class="line">olcSuffix: dc=i,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcRootDN</span><br><span class="line">olcRootDN: cn=Manager,dc=i,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;nLyOWsRyvfvC6zRBL7M2ltlutgrIgnHH</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by</span><br><span class="line">    dn=<span class="string">&quot;cn=Manager,dc=i,dc=com&quot;</span> write by anonymous auth by self write by * none</span><br><span class="line">olcAccess: &#123;1&#125;to dn.base=<span class="string">&quot;&quot;</span> by * <span class="built_in">read</span></span><br><span class="line">olcAccess: &#123;2&#125;to * by dn=<span class="string">&quot;cn=Manager,dc=i,dc=com&quot;</span> write by * <span class="built_in">read</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif</span><br></pre></td></tr></table></figure><h3 id="OpenLDAP-创建用户"><a href="#OpenLDAP-创建用户" class="headerlink" title="OpenLDAP 创建用户"></a>OpenLDAP 创建用户</h3><p>basedomain.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">dn</span>: dc=i,dc=com</span><br><span class="line"><span class="attribute">objectClass</span>: top</span><br><span class="line"><span class="attribute">objectClass</span>: dcObject</span><br><span class="line"><span class="attribute">objectclass</span>: organization</span><br><span class="line"><span class="attribute">o</span>: Server World</span><br><span class="line"><span class="attribute">dc</span>: i</span><br><span class="line"></span><br><span class="line"><span class="attribute">dn</span>: cn=Manager,dc=i,dc=com</span><br><span class="line"><span class="attribute">objectClass</span>: organizationalRole</span><br><span class="line"><span class="attribute">cn</span>: Manager</span><br><span class="line"><span class="attribute">description</span>: Directory Manager</span><br><span class="line"></span><br><span class="line"><span class="attribute">dn</span>: ou=People,dc=ch,dc=com</span><br><span class="line"><span class="attribute">objectClass</span>: organizationalUnit</span><br><span class="line"><span class="attribute">ou</span>: People</span><br><span class="line"></span><br><span class="line"><span class="attribute">dn</span>: ou=Group,dc=i,dc=com</span><br><span class="line"><span class="attribute">objectClass</span>: organizationalUnit</span><br><span class="line"><span class="attribute">ou</span>: Group</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spawn ldapadd -x -D cn=Manager,dc=i,dc=com -W -f basedomain.ldif</span><br></pre></td></tr></table></figure><p>add_user.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">dn</span>: uid=zhangsan,ou=People,dc=i,dc=com</span><br><span class="line"><span class="attribute">ou</span>: People</span><br><span class="line"><span class="attribute">uid</span>: zhangsan</span><br><span class="line"><span class="attribute">cn</span>: zhangsan</span><br><span class="line"><span class="attribute">sn</span>: zhangsan</span><br><span class="line"><span class="attribute">givenName</span>: zhangsan</span><br><span class="line"><span class="attribute">displayName</span>: zhangsan</span><br><span class="line"><span class="attribute">mail</span>: zhangsan@i.net</span><br><span class="line"><span class="attribute">objectClass</span>: person</span><br><span class="line"><span class="attribute">objectClass</span>: organizationalPerson</span><br><span class="line"><span class="attribute">objectClass</span>: inetOrgPerson</span><br><span class="line"><span class="attribute">userpassword</span>: 123456</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spawn ldapadd -x -D cn=Manager,dc=i,dc=com -W -f add_user.ldif</span><br></pre></td></tr></table></figure><h3 id="防火墙放开端口"><a href="#防火墙放开端口" class="headerlink" title="防火墙放开端口"></a>防火墙放开端口</h3><p>略</p><h2 id="FreeRadius"><a href="#FreeRadius" class="headerlink" title="FreeRadius"></a>FreeRadius</h2><h3 id="安装-FreeRadius"><a href="#安装-FreeRadius" class="headerlink" title="安装 FreeRadius"></a>安装 FreeRadius</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y freeradius freeradius-utils freeradius-ldap</span><br></pre></td></tr></table></figure><h3 id="配置-FreeRadius"><a href="#配置-FreeRadius" class="headerlink" title="配置 FreeRadius"></a>配置 FreeRadius</h3><h4 id="配置客户端连接信息"><a href="#配置客户端连接信息" class="headerlink" title="配置客户端连接信息"></a>配置客户端连接信息</h4><p>客户端连接信息：<code>/etc/raddb/clients.conf</code>，客户端使用这个 <code>secret</code> 来连接 <code>radius</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">client private-network-1 &#123;</span><br><span class="line">    ipaddr        = 192.168.2.0/23</span><br><span class="line">    secret        = 12345678</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置-LDAP-连接信息"><a href="#配置-LDAP-连接信息" class="headerlink" title="配置 LDAP 连接信息"></a>配置 LDAP 连接信息</h4><p>ldap 连接信息在 <code>/etc/raddb/mods-available/ldap</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/raddb/mods-enabled</span><br><span class="line"><span class="built_in">ln</span> -s ../mods-available/ldap .</span><br></pre></td></tr></table></figure><p>编辑 <code>/etc/raddb/mods-enabled/ldap</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ldap &#123;</span><br><span class="line">...</span><br><span class="line">        server = &#x27;localhost&#x27;</span><br><span class="line">        identity = &#x27;cn=Manager,dc=i,dc=com&#x27;</span><br><span class="line">        password = 123456</span><br><span class="line">        base_dn = &#x27;dc=i,dc=com&#x27;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动-FreeRadius"><a href="#启动-FreeRadius" class="headerlink" title="启动 FreeRadius"></a>启动 FreeRadius</h3><p>调试模式启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">radiusd -X</span><br></pre></td></tr></table></figure><p>正常启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now radiusd</span><br></pre></td></tr></table></figure><h2 id="unifi"><a href="#unifi" class="headerlink" title="unifi"></a>unifi</h2><p>需要先下载 <a href="https://www.ui.com/download-software/">ac控制器</a>，取得管理后台权限。</p><p>在 Settings – Advanced Features – Radius – Add Radius Profile</p><p>打开 enable Wireless 选项</p><p>secret 位置填写上面的 <code>/etc/raddb/clients.conf</code> 对应的 secret</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/unifi_ac_controller_config.png" alt="AC config"></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> Auth </tag>
            
            <tag> Radius </tag>
            
            <tag> OpenLDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将wsl里的文件挂载进虚拟机</title>
      <link href="/posts/49e7e3c2/"/>
      <url>/posts/49e7e3c2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>虽然不同操作系统使用起来大致类似，很多开源软件同时支持 <a href="/tags/linux/">Linux</a> 和 <a href="/tags/windows/">Windows</a>，就算不支持，Windows 还有 <a href="/tags/cygwin/">cygwin</a> 或 <a href="/tags/wsl/">WSL</a>，Linux 也有 wine，但是我感觉这两种系统最大的区别还是文件系统，比如将 Linux 下的文件复制到 Windows，然后再复制回 Linux，得到的文件和原来的是一样的吗，答案是否定的，因为文件权限可能已经发生了变化，另外 Windows 的 NTFS 大小写不敏感，导致很多时候从 Linux 复制文件到 Windows 的时候总会弹个窗问我是否覆盖，还有 Linux 的软链接也无法复制到 Windows 里面。<br>本人平时写代码等都是在 linux 上运行的，不过最近系统换成了 Windows，为了避免以上问题，将文件放进了 WSL 里面，同时用到了虚拟机做测试，所以想将 wsl 和虚拟机的目录进行同步，才有了这篇文章。</p></blockquote><h2 id="在-Windows-环境下找到想要共享的目录"><a href="#在-Windows-环境下找到想要共享的目录" class="headerlink" title="在 Windows 环境下找到想要共享的目录"></a>在 Windows 环境下找到想要共享的目录</h2><blockquote><p>以下 3 种都可以</p></blockquote><ul><li>在 Windows 下可以这样访问 WSL<code>\\wsl$\发行版名</code>，比如 <code>\\wsl$\Ubuntu</code>，将完整的链接复制下来。</li><li>将 <code>\wsl$\Ubuntu</code> 映射到一个虚拟盘符，比如 Z:，这种方法可以用在比如 <a href="/tags/vagrant/">vagrant</a> 上面</li></ul><h2 id="配置虚拟机开启共享文件夹"><a href="#配置虚拟机开启共享文件夹" class="headerlink" title="配置虚拟机开启共享文件夹"></a>配置虚拟机开启共享文件夹</h2><ul><li><p>VMware Workstation 虚拟机</p><p>  虚拟机设置 - 选项 - 共享文件夹 填写上一步获取到的路径<br>  期间会弹出提示《路径指向网络位置，请确保其在运行虚拟机时可供访问》，忽略即可。</p></li><li><p>Virtualbox 虚拟机</p><p>  虚拟机设置 - 共享文件夹 - 固定分配, 挂载点留空，进系统手动挂载</p></li></ul><h2 id="虚拟机里挂载目录"><a href="#虚拟机里挂载目录" class="headerlink" title="虚拟机里挂载目录"></a>虚拟机里挂载目录</h2><ul><li><p>VMware Workstation 虚拟机<br>  需要先安装 <code>open-vm-tools</code>，然后编写个脚本 <code>mount_hgfs.sh</code>：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/bin/vmhgfs-fuse .host:/modules /etc/puppetlabs/code/modules -o subtype=vmhgfs-fuse,allow_other</span><br><span class="line">/usr/bin/vmhgfs-fuse .host:/manifests /etc/puppetlabs/code/environments/production/manifests -o subtype=vmhgfs-fuse,allow_other</span><br></pre></td></tr></table></figure><blockquote><p>allow_other 添加的话，挂载后的目录权限为 777，即所有人可读写，不加的话仅 root 可读写，其他人不可读写。<br>.host:&#x2F;xxx 这个是共享名，是在 VMware 软件界面填写的，可以通过命令 <code>vmware-hgfsclient</code> 查看。</p></blockquote></li><li><p>Virtualbox 虚拟机<br>  也需要安装 virtual guest tools，不过可以使用 mount 命令挂载，也可以修改 fstab 自动挂载</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">etc_puppetlabs_code_modules /etc/puppetlabs/code/modules vboxsf dmode=775,fmode=644,_netdev,uid=0,gid=0,_netdev 0 0</span><br><span class="line">etc_puppetlabs_code_environments_production_manifests /etc/puppetlabs/code/environments/production/manifests vboxsf dmode=775,fmode=644,_netdev,uid=0,gid=0,_netdev 0 0</span><br></pre></td></tr></table></figure></li></ul><h2 id="开机自启动挂载"><a href="#开机自启动挂载" class="headerlink" title="开机自启动挂载"></a>开机自启动挂载</h2><ul><li><p>VMware Workstation 虚拟机</p><p>  修改 root 的 crontab</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot /root/mount_hgfs.sh</span><br></pre></td></tr></table></figure></li><li><p>Virtualbox 虚拟机<br>  通过 fstab 来挂载。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualMachine </tag>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
            <tag> Crontab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最后一个Typora免费版0.11.18</title>
      <link href="/posts/64b52e0d/"/>
      <url>/posts/64b52e0d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Typora 是一个所见即所得的 Markdown 跨平台写作工具，目前已经发布正式版，并且更改为付费模式，0.11.18_beta 是最后一个免费的测试版，有需要的可以选择下载。</p></blockquote><h2 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h2><p>下载地址： <del><a href="https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.exe">https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.exe</a></del></p><p>0.11.18 现在被远程施法了，会提示过期无法使用,可以使用 <a href="https://github.com/iuxt/src/releases/download/2.0/typora-setup-x64_0.9.96.exe">0.9.96</a> 版</p><h2 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h2><p>下载地址： <a href="https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.dmg">https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.dmg</a></p><h2 id="Ubuntu-用户"><a href="#Ubuntu-用户" class="headerlink" title="Ubuntu 用户"></a>Ubuntu 用户</h2><p>下载地址：<a href="https://github.com/iuxt/src/releases/download/2.0/Typora_Linux_0.11.18_amd64.deb">https://github.com/iuxt/src/releases/download/2.0/Typora_Linux_0.11.18_amd64.deb</a></p><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><p>使用 apt 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ./Typora_Linux_0.11.18_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="其他-Linux-用户（非-debian-系）"><a href="#其他-Linux-用户（非-debian-系）" class="headerlink" title="其他 Linux 用户（非 debian 系）"></a>其他 Linux 用户（非 debian 系）</h2><p>下载地址：<a href="https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.tar.gz">https://github.com/iuxt/src/releases/download/2.0/typora-0-11-18.tar.gz</a></p><h3 id="安装方法-1"><a href="#安装方法-1" class="headerlink" title="安装方法"></a>安装方法</h3><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf typora-0-11-18.tar.gz -C /opt/</span><br></pre></td></tr></table></figure><p>创建桌面文件和图标</p><p>vim ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;typora.desktop</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Desktop Entry]</span></span><br><span class="line"><span class="attr">Name</span>=Typora</span><br><span class="line"><span class="attr">Comment</span>=A minimal Markdown reading &amp; writing app. Change Log: (https://typora.io/windows/dev_release.html)</span><br><span class="line"><span class="attr">GenericName</span>=Markdown Editor</span><br><span class="line"><span class="attr">Exec</span>=/opt/typora/Typora</span><br><span class="line"><span class="attr">Icon</span>=/opt/typora/resources/assets/icon/icon_256x256@<span class="number">2</span>x.png</span><br><span class="line"><span class="attr">Type</span>=Application</span><br><span class="line"><span class="attr">Categories</span>=<span class="literal">Off</span>ice<span class="comment">;WordProcessor;Development;</span></span><br><span class="line"><span class="attr">MimeType</span>=text/markdown<span class="comment">;text/x-markdown;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> Markdown </tag>
            
            <tag> GUI </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python使用dotenv来管理环境变量</title>
      <link href="/posts/026f1c74/"/>
      <url>/posts/026f1c74/</url>
      
        <content type="html"><![CDATA[<blockquote><p>管理环境变量是一件比较麻烦的事情，好在 python 有 python-dotenv 可以帮助我们来简化这个操作</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接 pip 来安装就好</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-dotenv</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>创建.env 文件，记得添加到.gitignore 里面</p><p>.env 文件内容为键值对形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#这是注释</span><br><span class="line">FOO=&quot;BAR&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dotenv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">dotenv.load_dotenv()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(os.getenv(<span class="string">&quot;FOO&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="shell-脚本怎么使用-env-文件"><a href="#shell-脚本怎么使用-env-文件" class="headerlink" title="shell 脚本怎么使用.env 文件"></a>shell 脚本怎么使用.env 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$FOO</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Shell </tag>
            
            <tag> 配置文件 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记本电脑CPU性能被锁定在0.78GHz的原因及解决方案</title>
      <link href="/posts/7a7fe042/"/>
      <url>/posts/7a7fe042/</url>
      
        <content type="html"><![CDATA[<blockquote><p>家里的旧笔记本电脑使用电池正常工作，但是插上电源就锁频率 800MHz，非常的卡，Google 了一下，总结如下。</p></blockquote><h2 id="出现这种情况的原因"><a href="#出现这种情况的原因" class="headerlink" title="出现这种情况的原因"></a>出现这种情况的原因</h2><blockquote><p>可能是由于供电不好，比如充电器非原装，或者散热不行系统会自动降低 cpu 频率来保证系统稳定。</p></blockquote><h2 id="一劳永逸的解决方案"><a href="#一劳永逸的解决方案" class="headerlink" title="一劳永逸的解决方案"></a>一劳永逸的解决方案</h2><ol><li>使用原装的充电器</li><li>定期清理笔记本电脑灰尘</li><li>看看 bios 里面有没有相关的设置 BD PROCHOT，把它关掉，或者升级 bios 试试看看。</li></ol><h2 id="Windows-系统怎么解决"><a href="#Windows-系统怎么解决" class="headerlink" title="Windows 系统怎么解决"></a>Windows 系统怎么解决</h2><p>Just download throttlestop and Disable BD PROCHOT and Turbo<br>不过每次重启都需要重新设置一下<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/throttlestop.png" alt="ThrottleStop"><br>官网下载地址：<a href="https://www.techpowerup.com/download/techpowerup-throttlestop/">https://www.techpowerup.com/download/techpowerup-throttlestop/</a></p><h2 id="Ubuntu-系统怎么解决"><a href="#Ubuntu-系统怎么解决" class="headerlink" title="Ubuntu 系统怎么解决"></a>Ubuntu 系统怎么解决</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt install cpufrequtils msr-tools -y</span><br><span class="line">cpufreq-set -c 0 -g performance</span><br><span class="line">cpufreq-set -c 1 -g performance</span><br><span class="line">cpufreq-set -c 2 -g performance</span><br><span class="line">cpufreq-set -c 3 -g performance</span><br><span class="line">modprobe msr</span><br><span class="line">wrmsr 0x1FC 17422</span><br></pre></td></tr></table></figure><p>上面的 0123 需要和 CPU 核心数对应<br>需要每次开机都运行一遍（需要 ROOT 权限）</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用typora更好更快地写hugo博客</title>
      <link href="/posts/b4cf69c3/"/>
      <url>/posts/b4cf69c3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>hugo 是一个静态博客生成工具，自己有自己的文件组织方式，所以导致的结果就是使用 typora 不能正常显示图片，插入图片也不能放在正确的位置上。<br>typora 已经成为收费软件了，有能力请支持正版，或者使用旧版本 <a href="/64b52e0d">最后一个Typora免费版0.11.18</a></p></blockquote><h2 id="图片管理"><a href="#图片管理" class="headerlink" title="图片管理"></a>图片管理</h2><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/typora_config_image.png" alt="typora配置图片位置"></p><p>按照图示设置后，即可正常显示图片，复制粘贴图片也能复制到正确的位置，设置完成后，发现 markdown 的 frontmatter 增加了 2 行：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">typora-root-url:</span> <span class="string">../../static</span></span><br><span class="line"><span class="attr">typora-copy-images-to:</span> <span class="string">../../static/img</span></span><br></pre></td></tr></table></figure><p>意思是将图片放在 static 的 img 目录里。每次都在 markdown 文件添加上这两行即可，那么有没有办法自动添加呢？</p><p>当然有~</p><p>编辑 hugo 目录下的 <code>archetypes/default.md</code>,这个文件是默认创建的模版。在里面添加上上述内容。</p><h2 id="自动生成分类"><a href="#自动生成分类" class="headerlink" title="自动生成分类"></a>自动生成分类</h2><blockquote><p>不想让所有的 markdown 文件都在一个文件夹内，比如想按文件夹分类，A 文件夹内的文章发布后就是在 A 分类下。</p></blockquote><p>可以将 <code>archetypes/default.md</code> 里面的 <code>categories</code> 修改成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span> [<span class="string">&quot;<span class="template-variable">&#123;&#123; trim (replace .File.Dir &quot;posts/&quot; &quot;&quot;) &quot;/&quot; &#125;&#125;</span>&quot;</span>]</span><br></pre></td></tr></table></figure><p>以后创建新文章的时候就可以自动生成分类了。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hugo </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译安装Redis记录</title>
      <link href="/posts/1da8e73d/"/>
      <url>/posts/1da8e73d/</url>
      
        <content type="html"><![CDATA[<h2 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.redis.io/releases/redis-6.0.9.tar.gz</span><br><span class="line">tar xf redis-6.0.9.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-6.2.13</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>编译需要 gcc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /usr/local/redis/&#123;bin,conf&#125;</span><br><span class="line">sudo <span class="built_in">cp</span> src/&#123;redis-benchmark,redis-check-aof,redis-check-rdb,redis-cli,redis-server&#125; /usr/local/redis/bin/</span><br><span class="line">sudo <span class="built_in">cp</span> redis.conf /usr/local/redis/conf/redis.conf</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis/conf/redis.conf</span><br></pre></td></tr></table></figure><h2 id="通过-systemd-管理"><a href="#通过-systemd-管理" class="headerlink" title="通过 systemd 管理"></a>通过 systemd 管理</h2><p>vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;redis.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[unit]</span></span><br><span class="line"><span class="attr">Description</span>=redis-server</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"> </span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/redis/bin/redis-server /usr/local/redis/conf/redis.conf</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux平台文本编辑器vim</title>
      <link href="/posts/280100fb/"/>
      <url>/posts/280100fb/</url>
      
        <content type="html"><![CDATA[<p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/vim_keymap.png" alt="keymap"></p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>i</td><td>在当前光标之前插入</td></tr><tr><td>a</td><td>在当前光标之后插入</td></tr><tr><td>I</td><td>在当前行 最前面插入</td></tr><tr><td>o</td><td>在下方新建一行, 然后插入</td></tr><tr><td>O</td><td>在上方新建一行, 然后插入</td></tr><tr><td>G</td><td>跳到最后面</td></tr><tr><td>gg</td><td>跳到最前面</td></tr><tr><td>$</td><td>跳到行尾</td></tr><tr><td>^</td><td>跳到行首</td></tr><tr><td>v</td><td>多选</td></tr><tr><td>ctrl v</td><td>块选</td></tr><tr><td>V</td><td>行选</td></tr><tr><td>yy</td><td>复制一行</td></tr><tr><td>p</td><td>在光标后粘贴</td></tr><tr><td>P</td><td>在光标前粘贴</td></tr><tr><td>dd</td><td>截切一行</td></tr><tr><td>e</td><td>多选模式下   向后一个单词</td></tr><tr><td>b</td><td>多选模式下   向前一个单词</td></tr><tr><td>d^</td><td>删除到行首</td></tr><tr><td>d$</td><td>删除到行尾</td></tr><tr><td>D</td><td>删除到行尾</td></tr></tbody></table><h2 id="替换文本"><a href="#替换文本" class="headerlink" title="替换文本"></a>替换文本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接进行全文替换</span></span><br><span class="line">:%s<span class="comment">#原文本#替换后的文本#g</span></span><br><span class="line">:%s/原文本/替换后的文本/g</span><br><span class="line">:%s@原文本@替换后的文本@g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换前提示用户</span></span><br><span class="line">:%s<span class="comment">#原文本#替换后的文本#gc</span></span><br></pre></td></tr></table></figure><h2 id="匹配删除"><a href="#匹配删除" class="headerlink" title="匹配删除"></a>匹配删除</h2><p>删除包含特定字符的行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:g/pattern/d            <span class="comment"># 全局范围内</span></span><br><span class="line">:1,20g/pattern/d        <span class="comment"># 删除1~20行内匹配的行</span></span><br></pre></td></tr></table></figure><p>删除以#开头的注释</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g/^#/d</span><br></pre></td></tr></table></figure><p>删除空行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g/^\s*$/d</span><br></pre></td></tr></table></figure><p>删除#后面的行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g/#.*/d</span><br></pre></td></tr></table></figure><p>删除不匹配的行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:v/pattern/d</span><br><span class="line">:g!/pattern/d</span><br></pre></td></tr></table></figure><blockquote><p>patton 里面可以是正则表达式，比如说 ^10.104</p></blockquote><h3 id="每一行最后添加一个字符"><a href="#每一行最后添加一个字符" class="headerlink" title="每一行最后添加一个字符"></a>每一行最后添加一个字符</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/$/,/</span><br></pre></td></tr></table></figure><h3 id="用-sudo-打开"><a href="#用-sudo-打开" class="headerlink" title="用 sudo 打开"></a>用 sudo 打开</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">w</span> !sudo tee %</span><br></pre></td></tr></table></figure><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">wq</span>     保存退出</span><br><span class="line">:q      不保存退出</span><br><span class="line">:q!     强制不保存退出</span><br><span class="line">:<span class="keyword">x</span>      保存退出</span><br><span class="line"></span><br><span class="line">ZZ      保存退出，相当于:<span class="keyword">wq</span></span><br><span class="line">ZQ      不保存退出，相当于:q!</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote><p>全局配置文件 <code>/etc/vim/vimrc</code><br>当前用户配置文件 <code>~/.vimrc</code></p></blockquote><h3 id="鼠标模式"><a href="#鼠标模式" class="headerlink" title="鼠标模式"></a>鼠标模式</h3><blockquote><p>Vim7.1 使用鼠标时会默认进入虚拟选中模式 (visual mode)，就好像通过 v 选中的一样。</p></blockquote><p>命令模式执行：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">set</span> mouse-=<span class="keyword">a</span></span><br></pre></td></tr></table></figure><p>或者将其写入配置文件里</p><h2 id="分屏操作"><a href="#分屏操作" class="headerlink" title="分屏操作"></a>分屏操作</h2><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>横向分屏</td><td>:sp</td></tr><tr><td>纵向分屏</td><td>:vsp</td></tr><tr><td>横向分屏并打开新文件</td><td>:sp test.sh</td></tr><tr><td>纵向分屏并打开新文件</td><td>:vsp test.sh</td></tr><tr><td>切到其他分屏</td><td>先按 Ctrl w 再按 hjkl 调整光标方向</td></tr></tbody></table><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/preservim/nerdtree.git ~/.vim/pack/vendor/start/nerdtree</span><br><span class="line">vim -u NONE -c <span class="string">&quot;helptags ~/.vim/pack/vendor/start/nerdtree/doc&quot;</span> -c q</span><br></pre></td></tr></table></figure><p>vim ~&#x2F;.vimrc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let NERDTreeWinPos=&quot;left&quot;</span><br><span class="line">noremap &lt;F10&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27;</span><br><span class="line">let g:NERDTreeDirArrowCollapsible = &#x27;▾&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>快捷键设置为 F10</p></blockquote><h2 id="vim-打开中文乱码"><a href="#vim-打开中文乱码" class="headerlink" title="vim 打开中文乱码"></a>vim 打开中文乱码</h2><p>在 <code>~/.vimrc</code> 里增加几行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> termencoding=utf-8</span><br><span class="line"><span class="built_in">set</span> encoding=utf8</span><br><span class="line"><span class="built_in">set</span> fileencodings=utf8,ucs-bom,gbk,cp936,gb2312,gb18030</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vagrant常见报错解决方案</title>
      <link href="/posts/1e258e64/"/>
      <url>/posts/1e258e64/</url>
      
        <content type="html"><![CDATA[<p>vagrant 是一款虚拟机管理工具，可以通过代码来控制虚拟机的状态，帮助提升开发效率</p><h2 id="提示-umount-mnt-not-mounted"><a href="#提示-umount-mnt-not-mounted" class="headerlink" title="提示 umount: &#x2F;mnt: not mounted"></a>提示 umount: &#x2F;mnt: not mounted</h2><blockquote><p>出现这种情况一般是由于安装了 <code>vagrant-vbguest</code> 插件, 但是这个插件并不能自动帮助我们安装 vbguest<br>这种情况可能是由于内核版本比较低导致的</p></blockquote><ul><li><p>方案 1: 升级内核<br>  vagrantfile 增加一行</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vbguest.installer_options = &#123; <span class="symbol">allow_kernel_upgrade:</span> <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure></li><li><p>方案 2: 降级 vagrant-vbguest</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin uninstall vagrant-vbguest</span><br><span class="line">vagrant plugin install vagrant-vbguest --plugin-version 0.21</span><br></pre></td></tr></table></figure></li></ul><h2 id="报错网段不在-nat-网段里面"><a href="#报错网段不在-nat-网段里面" class="headerlink" title="报错网段不在 nat 网段里面"></a>报错网段不在 nat 网段里面</h2><p>vagrantfile 添加 <code>virtualbox__intnet</code> 参数</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">ip:</span> <span class="string">&quot;10.0.0.12&quot;</span>, <span class="symbol">virtualbox__intnet:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h2><blockquote><p>Stderr: VBoxManage: error: Could not find the VirtualBox Remote Desktop Extension library<br>需要安装 <code>LibVNCServer-devel</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualMachine </tag>
            
            <tag> Vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用expect来解决命令交互问题</title>
      <link href="/posts/751c3cf9/"/>
      <url>/posts/751c3cf9/</url>
      
        <content type="html"><![CDATA[<p>linux 里面很多命令都是需要人为交互的，对于做成脚本来说，有点不合适了，比如通过密码连接 SSH 必须要在控制台输入密码（安全起见还是用 rsa key），<code>expect</code> 是预期的意思，它可以实现我们预期的结果。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu/debian</span></span><br><span class="line">sudo apt install -y expect</span><br><span class="line">  </span><br><span class="line"><span class="comment"># centos/rhel</span></span><br><span class="line">sudo yum install -y ecpect</span><br></pre></td></tr></table></figure><h2 id="解释器使用-expect"><a href="#解释器使用-expect" class="headerlink" title="解释器使用 expect"></a>解释器使用 expect</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> IP     [lindex <span class="variable">$argv</span> 0] <span class="comment"># 读取第1个参数设置为 IP 变量</span></span><br><span class="line"><span class="built_in">set</span> PASSWD [lindex <span class="variable">$argv</span> 1] <span class="comment"># 读取第2个参数设置为 PASSWD 变量</span></span><br><span class="line"><span class="built_in">set</span> CMD    [lindex <span class="variable">$argv</span> 2] <span class="comment"># 读取第3个参数设置为 CMD 变量</span></span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$IP</span> <span class="variable">$CMD</span> <span class="comment"># spawn 来给命令加壳，以便于断言输出</span></span><br><span class="line">expect &#123; <span class="comment"># expect 是断言命令</span></span><br><span class="line">  <span class="comment"># 如果读取到屏幕上输出 (yes/no) 信息，则输入 &quot;yes&quot; 并按下回车键</span></span><br><span class="line">  <span class="comment"># exp_continue 是继续等待花括号内的断言, 如果不加这一句会直接跳出 expect</span></span><br><span class="line">  <span class="string">&quot;(yes/no)?&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>; exp_continue &#125;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$PASSWD</span>\r&quot;</span> &#125; <span class="comment"># 如果读取到屏幕上输出 password 信息，则输入 PASSWD 变量中的内容</span></span><br><span class="line">  <span class="string">&quot;*host &quot;</span> &#123; <span class="built_in">exit</span> 1 &#125; <span class="comment"># 如果读取到 &quot;No route to host&quot; 等内容， 就以非0状态退出</span></span><br><span class="line">&#125;</span><br><span class="line">expect eof <span class="comment"># 等待命令执行结束</span></span><br></pre></td></tr></table></figure><p>这种方式由于解释器使用了 expect，所以只能使用有限的命令，不是很推荐</p><h3 id="执行结果赋予变量"><a href="#执行结果赋予变量" class="headerlink" title="执行结果赋予变量"></a>执行结果赋予变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> result [<span class="built_in">exec</span> hostname -I]</span><br><span class="line">puts <span class="string">&quot;本机IP地址是: <span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="解释器使用-bash"><a href="#解释器使用-bash" class="headerlink" title="解释器使用 bash"></a>解释器使用 bash</h2><blockquote><p>假设 certbot 不支持非交互使用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> LC_CTYPE=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line">expect -c <span class="string">&#x27;</span></span><br><span class="line"><span class="string">set timeout 3</span></span><br><span class="line"><span class="string">spawn ssh user@&lt;host&gt; -p 60022</span></span><br><span class="line"><span class="string">expect &quot;password&quot;</span></span><br><span class="line"><span class="string">send &quot;password\r&quot;</span></span><br><span class="line"><span class="string">interact</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="直接使用-expect-命令"><a href="#直接使用-expect-命令" class="headerlink" title="直接使用 expect 命令"></a>直接使用 expect 命令</h2><blockquote><p>这种和切换解释器类似， 类比于 <code>./test.sh</code> 和 <code>bash test.sh</code> 的关系。</p></blockquote><p>vim test.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spawn ldapadd -x -D cn=Manager,dc=i,dc=com -W -f /vagrant/basedomain.ldif</span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;Enter LDAP Password:&quot;</span> &#123;send <span class="string">&quot;123456\n&quot;</span>;exp_continue&#125;</span><br><span class="line">eof</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expect test.sh</span><br></pre></td></tr></table></figure><h2 id="一些例子🌰"><a href="#一些例子🌰" class="headerlink" title="一些例子🌰"></a>一些例子🌰</h2><h3 id="自动登录带两步验证码的跳板机"><a href="#自动登录带两步验证码的跳板机" class="headerlink" title="自动登录带两步验证码的跳板机"></a>自动登录带两步验证码的跳板机</h3><p>手动登录的方式：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408131814901.gif" alt="yuanshi.gif"></p><p>使用脚本自动登录，效果如下图：</p><p>脚本做了：</p><ol><li>自动输入密码</li><li>自动输入两步验证码（谷歌验证器 6 位数字动态密码）</li></ol><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408131815193.gif" alt="test.gif"></p><p>totp.py 获取验证码的脚本</p><blockquote><p>这个脚本需要接收一个参数，参数为 TOTP Seed，也就是二维码解析出来的内容。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">totp = pyotp.TOTP(sys.argv[<span class="number">1</span>])</span><br><span class="line">totp_password = totp.now()</span><br><span class="line"><span class="built_in">print</span>(totp_password, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>登录脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="comment"># 捕获窗口大小变化的信号，并调整spawn进程的终端大小</span></span><br><span class="line"><span class="built_in">trap</span> &#123;</span><br><span class="line">  <span class="comment"># 获取当前终端的行数和列数</span></span><br><span class="line">  <span class="built_in">set</span> rows [<span class="built_in">stty</span> rows]</span><br><span class="line">  <span class="built_in">set</span> cols [<span class="built_in">stty</span> columns]</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 调整spawn进程的终端行数和列数</span></span><br><span class="line">  <span class="built_in">stty</span> rows <span class="variable">$rows</span> columns <span class="variable">$cols</span> &lt; <span class="variable">$spawn_out</span>(slave,name)</span><br><span class="line">&#125; WINCH</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> user root</span><br><span class="line"><span class="built_in">set</span> host 10.0.0.10</span><br><span class="line"><span class="built_in">set</span> password 123456</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">timeout</span> 30</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$host</span> -p 60022</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动输入密码</span></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="string">&quot;yes/no&quot;</span> &#123;send <span class="string">&quot;yes\r&quot;</span>&#125;</span><br><span class="line">    <span class="string">&quot;*assword:*&quot;</span> &#123;send <span class="string">&quot;<span class="variable">$password</span>\r&quot;</span>&#125;</span><br><span class="line">    <span class="comment"># TOTP两步验证码，通过调用Python脚本获取到。</span></span><br><span class="line">    <span class="string">&quot;*OTP verification code*&quot;</span> &#123;</span><br><span class="line">        <span class="comment"># expect_user -re &quot;(.*)\n&quot;</span></span><br><span class="line">        <span class="comment"># set veri_code $expect_out(1,string)</span></span><br><span class="line">        <span class="comment"># 上面那两行是手动输入，下面这个则是依靠自动计算</span></span><br><span class="line">        <span class="built_in">set</span> veri_code [ <span class="built_in">exec</span> sh -c &#123;python3 totp.py &lt;totp_seed&gt;&#125; ]</span><br><span class="line">        send <span class="string">&quot;<span class="variable">$&#123;veri_code&#125;</span>\r&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入交互模式，保持会话打开</span></span><br><span class="line">interact</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建NFS服务</title>
      <link href="/posts/4b677f68/"/>
      <url>/posts/4b677f68/</url>
      
        <content type="html"><![CDATA[<blockquote><p>k8s 集群需要存储，本地测试环境懒得搞些复杂的，开始回忆回忆入门时学的 nfs 的搭建，记录下吧，方便查看</p></blockquote><h2 id="搭建服务器"><a href="#搭建服务器" class="headerlink" title="搭建服务器"></a>搭建服务器</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y nfs-kernel-server</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y nfs-utils</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建共享目录</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> /nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除权限限制</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R nobody:nogroup /nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># RHEL 9 系统</span></span><br><span class="line"><span class="comment"># sudo chown -R nobody:nobody /nfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/nfs *(rw,sync,no_subtree_check,no_root_squash)&quot;</span> &gt;&gt; /etc/exports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure><p>重启服务</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS 7</button><button type="button" class="tab">CentOS 9 或 RHEL 9</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nfs-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nfs-server</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line">sudo systemctl restart nfs</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nfs</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nfs-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nfs-server</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="搭建客户端"><a href="#搭建客户端" class="headerlink" title="搭建客户端"></a>搭建客户端</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y nfs-common</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y nfs-utils</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建待挂载的目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">sudo mount 10.0.0.3:/nfs /mnt/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 /etc/fstab 开机自动挂载</span></span><br><span class="line">10.0.0.3:/nfs    /mnt/nfs    nfs    defaults    0 0 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> NFS </tag>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker不支持中文解决方案</title>
      <link href="/posts/581a1bd9/"/>
      <url>/posts/581a1bd9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>ubuntu 官方镜像默认的字符集支持 <code>C</code>, <code>C.UTF-8</code>, and <code>POSIX</code></p></blockquote><p>查看容器使用的字符集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@huige-demo-web-0:/var/www/html/forum/files# locale</span><br><span class="line">LANG=</span><br><span class="line">LANGUAGE=</span><br><span class="line">LC_CTYPE=&quot;POSIX&quot;</span><br><span class="line">LC_NUMERIC=&quot;POSIX&quot;</span><br><span class="line">LC_TIME=&quot;POSIX&quot;</span><br><span class="line">LC_COLLATE=&quot;POSIX&quot;</span><br><span class="line">LC_MONETARY=&quot;POSIX&quot;</span><br><span class="line">LC_MESSAGES=&quot;POSIX&quot;</span><br><span class="line">LC_PAPER=&quot;POSIX&quot;</span><br><span class="line">LC_NAME=&quot;POSIX&quot;</span><br><span class="line">LC_ADDRESS=&quot;POSIX&quot;</span><br><span class="line">LC_TELEPHONE=&quot;POSIX&quot;</span><br><span class="line">LC_MEASUREMENT=&quot;POSIX&quot;</span><br><span class="line">LC_IDENTIFICATION=&quot;POSIX&quot;</span><br><span class="line">LC_ALL=</span><br></pre></td></tr></table></figure><p>要使容器内进程可以打开中文文件，需要将 <code>locale</code> 设置成 <code>C.UTF-8</code> 即可</p><p>修改 <code>Dockerfile</code>，添加 <code>ENV</code></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> LANG C.UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure><p>重新构建，运行，再次查看 <code>locale</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@4d4501013874:/# locale</span><br><span class="line">LANG=c.utf8</span><br><span class="line">LANGUAGE=</span><br><span class="line">LC_CTYPE=&quot;c.utf8&quot;</span><br><span class="line">LC_NUMERIC=&quot;c.utf8&quot;</span><br><span class="line">LC_TIME=&quot;c.utf8&quot;</span><br><span class="line">LC_COLLATE=&quot;c.utf8&quot;</span><br><span class="line">LC_MONETARY=&quot;c.utf8&quot;</span><br><span class="line">LC_MESSAGES=&quot;c.utf8&quot;</span><br><span class="line">LC_PAPER=&quot;c.utf8&quot;</span><br><span class="line">LC_NAME=&quot;c.utf8&quot;</span><br><span class="line">LC_ADDRESS=&quot;c.utf8&quot;</span><br><span class="line">LC_TELEPHONE=&quot;c.utf8&quot;</span><br><span class="line">LC_MEASUREMENT=&quot;c.utf8&quot;</span><br><span class="line">LC_IDENTIFICATION=&quot;c.utf8&quot;</span><br><span class="line">LC_ALL=</span><br></pre></td></tr></table></figure><p>如果想让容器内可以正常显示中文（应该没人想这么干吧），需要先安装 <code>locale</code> 然后将 <code>locale</code> 设置成 <code>zh_CN.UTF-8</code></p><p>修改 <code>Dockerfile</code>，添加</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y locales &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; localedef -i zh_CN -c -f UTF-8 -A /usr/share/locale/locale.alias zh_CN.UTF-8</span></span><br><span class="line"><span class="keyword">ENV</span> LANG zh_CN.utf8</span><br></pre></td></tr></table></figure><p>然后就可以完美显示中文了</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 编码 </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用python控制windows鼠标和键盘</title>
      <link href="/posts/2426edfc/"/>
      <url>/posts/2426edfc/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>python</code> 在 <code>windows</code> 下操作键盘鼠标（有点类似于按键精灵），可以使用 <code>PyUserInput</code> 模块，<code>PyUserInput</code> 依赖 <code>pywin32</code> 和 <code>pyHook</code> 模块。<br><code>pyautogui</code> 感觉很不错，可以实现 <code>PyUserInput</code> 的所有功能，并且可以根据提供的截图来进行图像识别。</p></blockquote><h2 id="PyUserInput"><a href="#PyUserInput" class="headerlink" title="PyUserInput"></a>PyUserInput</h2><h3 id="安装-PyUserInput"><a href="#安装-PyUserInput" class="headerlink" title="安装 PyUserInput"></a>安装 PyUserInput</h3><p>PyUserInput 模块安装前需要安装 pywin32 和 pyHook 模块<br><code>pip install pywin32</code></p><p>pyHook 模块可从这里下载，需要下载对应版本的 whl 文件<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br>安装: <code>pip install xxx.whl</code></p><p>PyUserInput 模块<br>官网: <a href="https://github.com/PyUserInput/PyUserInput">https://github.com/PyUserInput/PyUserInput</a></p><blockquote><p>这个模块官方已经不维护了，目前来看 <code>python</code>3.7+<code>win11</code> 还可以用，后续有需要的同学可以看看 <a href="https://github.com/moses-palmer/pynput">Pynput</a></p></blockquote><h3 id="使用-PyUserInput"><a href="#使用-PyUserInput" class="headerlink" title="使用 PyUserInput"></a>使用 PyUserInput</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymouse <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pykeyboard <span class="keyword">import</span> PyKeyboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别定义一个实例</span></span><br><span class="line">m = PyMouse()</span><br><span class="line">k = PyKeyboard()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 鼠标操作：</span></span><br><span class="line"><span class="comment"># x,y       坐标位置</span></span><br><span class="line"><span class="comment"># button    1表示左键，2表示点击右键</span></span><br><span class="line"><span class="comment"># n         点击次数，默认是1次，2表示双击</span></span><br><span class="line">m.click(x,y,button,n)</span><br><span class="line">m.move(x,y)     <span class="comment"># 鼠标移动到坐标(x,y)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得屏幕尺寸</span></span><br><span class="line">x_dim, y_dim = m.screen_size()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 键盘操作：</span></span><br><span class="line">k.type_string(‘Hello, World!’)      <span class="comment"># 模拟键盘输入字符串</span></span><br><span class="line">k.press_key(‘H’)                    <span class="comment"># 模拟键盘按H键</span></span><br><span class="line">k.release_key(‘H’)                  <span class="comment"># 模拟键盘松开H键</span></span><br><span class="line">k.tap_key(“H”)                      <span class="comment"># 模拟点击H键</span></span><br><span class="line">k.tap_key(‘H’,n=<span class="number">2</span>,interval=<span class="number">5</span>)       <span class="comment"># 模拟点击H键，2次，每次间隔5秒</span></span><br><span class="line">k.tap_key(k.function_keys[<span class="number">5</span>])       <span class="comment"># 点击功能键F5</span></span><br><span class="line">k.tap_key(k.numpad_keys[<span class="number">5</span>],<span class="number">3</span>)       <span class="comment"># 点击小键盘5，3次</span></span><br><span class="line"></span><br><span class="line">k.press_keys([k.windows_l_key,<span class="string">&#x27;r&#x27;</span>]) <span class="comment"># 按下 WIN + R</span></span><br><span class="line"></span><br><span class="line">k.control_key                       <span class="comment"># Ctrl 按键</span></span><br><span class="line">k.alt_key                           <span class="comment"># Alt 键</span></span><br><span class="line">k.tab_key                           <span class="comment"># Tab 键</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例，完成点击屏幕中央并键入“Hello, World!”的功能：</span></span><br><span class="line">x_dim, y_dim = m.screen_size()</span><br><span class="line">m.click(x_dim//<span class="number">2</span>, y_dim//<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">k.type_string(<span class="string">&#x27;Hello, World!&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="pyautogui"><a href="#pyautogui" class="headerlink" title="pyautogui"></a>pyautogui</h2><p>官网文档：<a href="https://pyautogui.readthedocs.io/en/latest/">https://pyautogui.readthedocs.io/en/latest/</a><br>官方支持 windows、mac、linux。</p><h3 id="安装-pyautogui"><a href="#安装-pyautogui" class="headerlink" title="安装 pyautogui"></a>安装 pyautogui</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyautogui opencv-python</span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"></span><br><span class="line">pyautogui.FAILSAFE = <span class="literal">True</span>     <span class="comment"># 出现故障，鼠标移动到左上角可以退出程序</span></span><br><span class="line">pyautogui.PAUSE = <span class="number">0.3</span>         <span class="comment"># 每一步的等待时间</span></span><br><span class="line"></span><br><span class="line">screenWidth, screenHeight = pyautogui.size()    <span class="comment"># 获取主显示器尺寸</span></span><br><span class="line">currentMouseX, currentMouseY = pyautogui.position() <span class="comment"># 获取鼠标当前位置</span></span><br><span class="line"></span><br><span class="line">pyautogui.moveTo(<span class="number">100</span>, <span class="number">150</span>) <span class="comment"># 鼠标移动到指定坐标</span></span><br><span class="line"></span><br><span class="line">pyautogui.click()          <span class="comment"># 点击鼠标左键</span></span><br><span class="line">pyautogui.click(<span class="number">100</span>, <span class="number">200</span>)  <span class="comment"># 点击指定坐标</span></span><br><span class="line">pyautogui.click(<span class="string">&#x27;button.png&#x27;</span>) <span class="comment"># 点击指定图片</span></span><br><span class="line"></span><br><span class="line">pyautogui.move(<span class="number">400</span>, <span class="number">0</span>)      <span class="comment"># 鼠标相对移动</span></span><br><span class="line">pyautogui.doubleClick()     <span class="comment"># 双击</span></span><br><span class="line">pyautogui.moveTo(<span class="number">500</span>, <span class="number">500</span>, duration=<span class="number">2</span>, tween=pyautogui.easeInOutQuad)  <span class="comment"># Use tweening/easing function to move mouse over 2 seconds.</span></span><br><span class="line"></span><br><span class="line">pyautogui.write(<span class="string">&#x27;Hello world!&#x27;</span>, interval=<span class="number">0.25</span>)  <span class="comment"># type with quarter-second pause in between each key</span></span><br><span class="line">pyautogui.press(<span class="string">&#x27;esc&#x27;</span>)     <span class="comment"># Press the Esc key. All key names are in pyautogui.KEY_NAMES</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> pyautogui.hold(<span class="string">&#x27;shift&#x27;</span>):  <span class="comment"># Press the Shift key down and hold it.</span></span><br><span class="line">    pyautogui.press([<span class="string">&#x27;left&#x27;</span>, <span class="string">&#x27;left&#x27;</span>, <span class="string">&#x27;left&#x27;</span>, <span class="string">&#x27;left&#x27;</span>])  <span class="comment"># Press the left arrow key 4 times.</span></span><br><span class="line"><span class="comment"># Shift key is released automatically.</span></span><br><span class="line"></span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;c&#x27;</span>) <span class="comment"># Press the Ctrl-C hotkey combination.</span></span><br><span class="line"></span><br><span class="line">pyautogui.alert(<span class="string">&#x27;This is the message to display.&#x27;</span>) <span class="comment"># Make an alert box appear and pause the program until OK is clicked.</span></span><br><span class="line"></span><br><span class="line">pyautogui.locateOnScreen(<span class="string">&#x27;looksLikeThis.png&#x27;</span>)  <span class="comment"># 图像识别，返回坐标值</span></span><br><span class="line">pyautogui.locateOnScreen(<span class="string">&#x27;looksLikeThis.png&#x27;</span>, confidence=<span class="number">0.9</span>)  <span class="comment"># 用到opencv进行图像识别，匹配相似度90%</span></span><br></pre></td></tr></table></figure><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>在 win server 中， 可能会出现明明已经安装了 opencv-python 但是却报错： <code>NotImplementedError: The confidence keyword argument is only available if OpenCV</code> ， 你需要安装 桌面体验 功能：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202305041257094.png" alt="服务器管理器"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Automatic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速上手vagrant</title>
      <link href="/posts/ca1596c5/"/>
      <url>/posts/ca1596c5/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>vagrant</code> 是一个虚拟机管理工具 (虚拟机编排工具)，使用方式有点类似于 <code>docker-compose</code>，这个工具的优势就是可以把手动安装虚拟机这个操作转换成通过代码来控制虚拟机<br>有点类似于使用 <code>dockerfile</code> 来构建 docker 镜像的感觉。</p></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>vagrant init</td><td>生成 vagrantfile 文件</td></tr><tr><td>vagrant up</td><td>启动虚拟机</td></tr><tr><td>vagent halt</td><td>关闭虚拟机</td></tr><tr><td>vagrant box list</td><td>查看安装的 box（虚拟机镜像）</td></tr><tr><td>vagrant box add centos&#x2F;7</td><td>安装 box（虚拟机镜像）</td></tr><tr><td>vagrant ssh (hostname)</td><td>通过 ssh 连接</td></tr></tbody></table><h2 id="常用-vagrantfile"><a href="#常用-vagrantfile" class="headerlink" title="常用 vagrantfile"></a>常用 vagrantfile</h2><h3 id="批量创建虚拟机"><a href="#批量创建虚拟机" class="headerlink" title="批量创建虚拟机"></a>批量创建虚拟机</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line">servers = &#123;</span><br><span class="line">    <span class="symbol">:client</span> =&gt; <span class="string">&#x27;172.16.2.10&#x27;</span>,</span><br><span class="line">    <span class="symbol">:master1</span> =&gt; <span class="string">&#x27;172.16.2.11&#x27;</span>,</span><br><span class="line">    <span class="symbol">:master2</span> =&gt; <span class="string">&#x27;172.16.2.12&#x27;</span>,</span><br><span class="line">    <span class="symbol">:master3</span> =&gt; <span class="string">&#x27;172.16.2.13&#x27;</span>,</span><br><span class="line">    <span class="symbol">:worker1</span> =&gt; <span class="string">&#x27;172.16.2.21&#x27;</span>,</span><br><span class="line">    <span class="symbol">:worker2</span> =&gt; <span class="string">&#x27;172.16.2.22&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vagrant</span>.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">  config.vm.box = <span class="string">&quot;ubuntu/focal64&quot;</span></span><br><span class="line">  config.vm.box_check_update = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 自动插入hosts</span></span><br><span class="line">  <span class="comment"># vagrant plugin install vagrant-hostmanager</span></span><br><span class="line">  config.hostmanager.enabled = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.manage_host = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.manage_guest = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.ignore_private_ip = <span class="literal">false</span></span><br><span class="line">  config.hostmanager.include_offline = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  servers.each <span class="keyword">do</span> |<span class="params">server_name, server_ip</span>|</span><br><span class="line">    config.vm.define server_name <span class="keyword">do</span> |<span class="params">server_config</span>|</span><br><span class="line">      server_config.vm.hostname = <span class="string">&quot;<span class="subst">#&#123;server_name.to_s&#125;</span>&quot;</span></span><br><span class="line">      server_config.vm.network <span class="symbol">:private_network</span>, <span class="symbol">ip:</span> server_ip</span><br><span class="line">      server_config.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">vb</span>|</span><br><span class="line">        vb.name = server_name.to_s</span><br><span class="line">        vb.memory = <span class="string">&quot;4096&quot;</span></span><br><span class="line">        vb.cpus = <span class="number">4</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="循环创建虚拟机"><a href="#循环创建虚拟机" class="headerlink" title="循环创建虚拟机"></a>循环创建虚拟机</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vagrant</span>.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line"></span><br><span class="line">  (<span class="number">1</span>..<span class="number">3</span>).each <span class="keyword">do</span> |<span class="params">i</span>|</span><br><span class="line">    config.vm.define <span class="string">&quot;node<span class="subst">#&#123;i&#125;</span>&quot;</span> <span class="keyword">do</span> |<span class="params">node</span>|</span><br><span class="line">      node.vm.box = <span class="string">&quot;ubuntu/trusty64&quot;</span></span><br><span class="line">      node.vm.hostname=<span class="string">&quot;node<span class="subst">#&#123;i&#125;</span>&quot;</span></span><br><span class="line">      node.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">ip:</span> <span class="string">&quot;192.168.59.<span class="subst">#&#123;i&#125;</span>&quot;</span></span><br><span class="line">      node.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">v</span>|</span><br><span class="line">        v.name = <span class="string">&quot;node<span class="subst">#&#123;i&#125;</span>&quot;</span></span><br><span class="line">        v.memory = <span class="number">2048</span></span><br><span class="line">        v.cpus = <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">                  </span><br><span class="line">      node.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="string">&lt;&lt;-SHELL</span></span><br><span class="line"><span class="string">        wget -qO- https://get.docker.com/ | sed &#x27;s/docker-engine/docker-engine=1.11.0-0~trusty/&#x27; | sh</span></span><br><span class="line"><span class="string">        usermod -aG docker vagrant</span></span><br><span class="line"><span class="string">      SHELL</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="多次定义安装虚拟机"><a href="#多次定义安装虚拟机" class="headerlink" title="多次定义安装虚拟机"></a>多次定义安装虚拟机</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vagrant</span>.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">  config.vm.define <span class="string">&quot;master&quot;</span> <span class="keyword">do</span> |<span class="params">master</span>|</span><br><span class="line">    master.vm.box = <span class="string">&quot;centos/7&quot;</span></span><br><span class="line">    master.vm.provider <span class="string">&quot;virtualbox&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">ip:</span> <span class="string">&quot;10.10.0.10&quot;</span></span><br><span class="line">    master.vm.synced_folder <span class="string">&quot;/home/iuxt/code/system-deployment/configuration/puppet/modules&quot;</span>, <span class="string">&quot;/etc/puppetlabs/code/modules&quot;</span>,<span class="symbol">create:</span> <span class="literal">true</span>,<span class="symbol">owner:</span> <span class="string">&quot;root&quot;</span>, <span class="symbol">group:</span> <span class="string">&quot;root&quot;</span>,<span class="symbol">mount_options:</span>[<span class="string">&quot;dmode=775&quot;</span>,<span class="string">&quot;fmode=644&quot;</span>]</span><br><span class="line">    master.vm.synced_folder <span class="string">&quot;/home/iuxt/code/system-deployment/configuration/puppet/environments/production/manifests&quot;</span>, <span class="string">&quot;/etc/puppetlabs/code/environments/production/manifests&quot;</span>,<span class="symbol">create:</span> <span class="literal">true</span>,<span class="symbol">owner:</span> <span class="string">&quot;root&quot;</span>, <span class="symbol">group:</span> <span class="string">&quot;root&quot;</span>,<span class="symbol">mount_options:</span>[<span class="string">&quot;dmode=775&quot;</span>,<span class="string">&quot;fmode=644&quot;</span>]</span><br><span class="line">    master.vm.hostname = <span class="string">&quot;puppet-master&quot;</span></span><br><span class="line">    master.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">vb</span>|</span><br><span class="line">      vb.gui = <span class="literal">false</span></span><br><span class="line">      vb.memory = <span class="string">&quot;4096&quot;</span></span><br><span class="line">      vb.cpus = <span class="string">&quot;2&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    master.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="string">&lt;&lt;-SHELL</span></span><br><span class="line"><span class="string">       sudo rpm -Uvh https://yum.puppet.com/puppet6-release-el-7.noarch.rpm</span></span><br><span class="line"><span class="string">       yum install puppetserver -y</span></span><br><span class="line"><span class="string">       echo &quot;127.0.0.1 puppet&quot; &gt;&gt; /etc/hosts</span></span><br><span class="line"><span class="string">    SHELL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">&quot;agent&quot;</span> <span class="keyword">do</span> |<span class="params">agent</span>|</span><br><span class="line">    agent.vm.box = <span class="string">&quot;centos/7&quot;</span></span><br><span class="line">    agent.vm.provider <span class="string">&quot;virtualbox&quot;</span></span><br><span class="line">    agent.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">ip:</span> <span class="string">&quot;10.10.0.11&quot;</span></span><br><span class="line">    agent.vm.hostname = <span class="string">&quot;puppet-agent&quot;</span></span><br><span class="line">    agent.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">vb</span>|</span><br><span class="line">      vb.gui = <span class="literal">false</span></span><br><span class="line">      vb.memory = <span class="string">&quot;4096&quot;</span></span><br><span class="line">      vb.cpus = <span class="string">&quot;2&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    agent.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="string">&lt;&lt;-SHELL</span></span><br><span class="line"><span class="string">       sudo rpm -Uvh https://yum.puppet.com/puppet6-release-el-7.noarch.rpm</span></span><br><span class="line"><span class="string">       yum install puppet -y</span></span><br><span class="line"><span class="string">       echo &quot;10.0.0.10 puppet&quot; &gt;&gt; /etc/hosts</span></span><br><span class="line"><span class="string">    SHELL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="自动管理-hosts"><a href="#自动管理-hosts" class="headerlink" title="自动管理 hosts"></a>自动管理 hosts</h3><blockquote><p>插件官网：<a href="https://github.com/devopsgroup-io/vagrant-hostmanager">https://github.com/devopsgroup-io/vagrant-hostmanager</a></p></blockquote><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-hostmanager</span><br></pre></td></tr></table></figure><p>启用</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vagrant</span>.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">  config.hostmanager.enabled = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.manage_host = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.manage_guest = <span class="literal">true</span></span><br><span class="line">  config.hostmanager.ignore_private_ip = <span class="literal">false</span></span><br><span class="line">  config.hostmanager.include_offline = <span class="literal">true</span></span><br><span class="line">  config.vm.define <span class="string">&#x27;example-box&#x27;</span> <span class="keyword">do</span> |<span class="params">node</span>|</span><br><span class="line">    node.vm.hostname = <span class="string">&#x27;example-box-hostname&#x27;</span></span><br><span class="line">    node.vm.network <span class="symbol">:private_network</span>, <span class="symbol">ip:</span> <span class="string">&#x27;192.168.42.42&#x27;</span></span><br><span class="line">    node.hostmanager.aliases = <span class="string">%w(example-box.localdomain example-box-alias)</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="挂载本机目录到虚拟机"><a href="#挂载本机目录到虚拟机" class="headerlink" title="挂载本机目录到虚拟机"></a>挂载本机目录到虚拟机</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vagrant</span>.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">    config.vm.define <span class="string">&quot;master&quot;</span> <span class="keyword">do</span> |<span class="params">master</span>|</span><br><span class="line">    master.vm.box = <span class="string">&quot;centos/7&quot;</span></span><br><span class="line">    master.vm.provider <span class="string">&quot;virtualbox&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">ip:</span> <span class="string">&quot;10.10.0.10&quot;</span></span><br><span class="line">    master.vm.synced_folder <span class="string">&quot;/home/iuxt/code/system-deployment/configuration/puppet/modules&quot;</span>, <span class="string">&quot;/etc/puppetlabs/code/modules&quot;</span>,<span class="symbol">create:</span> <span class="literal">true</span>,<span class="symbol">owner:</span> <span class="string">&quot;root&quot;</span>, <span class="symbol">group:</span> <span class="string">&quot;root&quot;</span>,<span class="symbol">mount_options:</span>[<span class="string">&quot;dmode=775&quot;</span>,<span class="string">&quot;fmode=644&quot;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>这里可能会提示：<code>mount: unknown filesystem type &#39;vboxsf&#39;</code>，这是因为虚拟机没有自带 <code>vbox guest agent</code>, 以前的 centos 是 vagrant 自己打包的，都是带 vbox guest agent 的，但是现在 vagrant 下载 centos 的 box 的时候会重定向到 centos 官网，这个 box 是不带 vbox guest agent 的，解决办法有以下：</p><ol><li>更换镜像为 <code>generic/centos7</code>, 镜像官网：<a href="https://roboxes.org/">https://roboxes.org/</a></li><li>自己安装好再重新打包 box</li><li>安装 <code>vagrant plugin install vagrant-vbguest</code>，这个插件可以自动挂载 iso，然后安装。</li><li>更换增加 <code>type</code> 参数，使用 nfs 或 smb 来和虚拟机共享，需要主机安装 nfs 或 smb 服务。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualMachine </tag>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo butterfly 主题使用记录</title>
      <link href="/posts/sm3z1i/"/>
      <url>/posts/sm3z1i/</url>
      
        <content type="html"><![CDATA[<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>nodejs 使用 <code>v20.17.0</code> 版本<br>包管理使用 npm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化主题，第一次需要执行</span></span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">npm i</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看效果</span></span><br><span class="line">npx hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新文章</span></span><br><span class="line">npx hexo new <span class="string">&quot;测试文章&quot;</span></span><br></pre></td></tr></table></figure><p>然后将 <code>source/_posts/测试文章.md</code> 移动到对应的分类目录下。</p><p><del>由于 hexo-abbrlink 和 hexo-auto-category 的冲突，需要执行 2 次 <code>npx hexo g</code> 才能正确生成需要的 front matter</del>这个问题已经解决了, 替换成了包 <code>hexo-abbrlink-iuxt</code> 解决了这个问题, 执行 <code>npx hexo g</code> 即可自动生成固定链接和分类</p><h2 id="封面图"><a href="#封面图" class="headerlink" title="封面图"></a>封面图</h2><p>1280 x 720 或者 3:2 的比例</p><h2 id="常用-shortcode-记录"><a href="#常用-shortcode-记录" class="headerlink" title="常用 shortcode 记录"></a>常用 shortcode 记录</h2><p>标签外挂官方文档： <a href="https://butterfly.js.org/posts/2df239ce/">https://butterfly.js.org/posts/2df239ce/</a><br><a href="https://butterfly.js.org/posts/ceeb73f/">https://butterfly.js.org/posts/ceeb73f/</a></p><h3 id="tabs"><a href="#tabs" class="headerlink" title="tabs"></a>tabs</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">第一个标签页</button><button type="button" class="tab">第二个标签页</button></div><div class="tab-contents"><div class="tab-item-content active"><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;这里是第一个标签页的内容&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p></div><div class="tab-item-content"><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;这里是第二个标签页的内容&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="图库"><a href="#图库" class="headerlink" title="图库"></a>图库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h3 id="行内图片"><a href="#行内图片" class="headerlink" title="行内图片"></a>行内图片</h3><p>我覺得很漂亮 <img class="inline-img" src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px" /></p><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>高亮所需的文字</p><mark class="hl-label color">text</mark><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>text</td><td>文字</td></tr><tr><td>color</td><td>【可选】背景颜色， default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</td></tr></tbody></table><h3 id="提示-警告"><a href="#提示-警告" class="headerlink" title="提示&#x2F;警告"></a>提示&#x2F;警告</h3><p><a href="https://butterfly.js.org/posts/2df239ce/">https://butterfly.js.org/posts/2df239ce/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默認 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h2 id="如果不想使用图床"><a href="#如果不想使用图床" class="headerlink" title="如果不想使用图床"></a>如果不想使用图床</h2><p>在 source&#x2F;img 目录下放你的图片， 生成的静态文件在： <a href="https://xxx.com/img/1.png%EF%BC%8C">https://xxx.com/img/1.png，</a> 可以直接使用 &#x2F;img&#x2F;1.png 来引用</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一个特殊的空格--硬空格</title>
      <link href="/posts/8e49530e/"/>
      <url>/posts/8e49530e/</url>
      
        <content type="html"><![CDATA[<h2 id="事情的起因"><a href="#事情的起因" class="headerlink" title="事情的起因"></a>事情的起因</h2><p>我在测试一个 <code>nginx</code> 配置文件，配置文件来自于印象笔记网页版复制（本人用的 linux，没有印象笔记客户端可用），编辑的时候发现了蹊跷：</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/image-20211028180909688.png" alt="image-20211028180909688"></p><p>不过没有太在意，还有一点蹊跷的是 <code>vim</code> 编辑的时候该高亮的地方也不高亮了，接着改好了配置文件后，发现 <code>nginx -t</code> 怎么测试都不通过。</p><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><p>当然怀疑是 nginx 配置文件的问题，将配置文件复制到 <code>windows</code> 下，使用 <code>notepad++</code> 编辑（显示所有符号）发现里面的空格并不是空格</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/image-20211028181420775.png" alt="image-20211028181420775"></p><p>真正的空格应该显示的是 <code>.</code>，tab 显示的应该是 <code>➡️</code>。将这个 “ 空格 “ 复制出来，然后找个在线转换器<a href="http://www.hiencode.com/jinzhi.html">http://www.hiencode.com/jinzhi.html</a>转换成 16 进制数据，发现是 <code>a0</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/image-20211028181809194.png" alt="image-20211028181809194"></p><p>然后到<a href="https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8">https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8</a>搜了下 <code>a0</code>，发现是一个叫做不换行空格的东西，又叫硬空格（hard space、fixed space）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/image-20211028180646950.png" alt="image-20211028180646950"></p><p>用途是禁止换行，常用于 <code>html</code>，比如地址 <code>xx省xx市 xx县 xx镇 xx村</code> 这个我们希望在网页上不要换行显示，就会打上 <code>&amp;nbsp;</code> 取代空格，表示我希望在页面变窄的时候换行显示。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络设备命名规则及修改</title>
      <link href="/posts/69bcc649/"/>
      <url>/posts/69bcc649/</url>
      
        <content type="html"><![CDATA[<h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><p>centos 从 7 开始网卡名称默认不再是熟悉的 eth0、而是类似于 ens33、enps0f0 等<br><a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/networking_guide/ch-consistent_network_device_naming">rhel7官方文档</a></p><h3 id="这么做的好处是"><a href="#这么做的好处是" class="headerlink" title="这么做的好处是"></a>这么做的好处是</h3><p>在 Red Hat Enterprise Linux 7 中，udev 支持大量不同的命名方案。默认是根据固件、拓扑及位置信息分配固定名称。这样做的优点是命名可完全自动进行，并可预期，即使添加或删除硬件后也会保留其名称（不会出现重复枚举的情况），同时可顺利更换损坏的硬件。不足之处是，相比传统的名称，比如 eth0 或 wlan0，这些名称有时会比较难理解。例如：enp5s0。</p><h3 id="设备命名的过程"><a href="#设备命名的过程" class="headerlink" title="设备命名的过程"></a>设备命名的过程</h3><ol><li><code>/usr/lib/udev/rules.d/60-net.rules</code> 文件中的规则会让 udev 帮助工具 <code>/lib/udev/rename_device</code> 查看所有 <code>/etc/sysconfig/network-scripts/ifcfg-suffix</code> 文件。如果发现包含 HWADDR 条目的 ifcfg 文件与某个接口的 MAC 地址匹配，它会将该接口重命名为 ifcfg 文件中由 DEVICE 指令给出的名称。</li><li><code>/usr/lib/udev/rules.d/71-biosdevname.rules</code> 中的规则让 biosdevname 根据其命名策略重命名该接口，即在上一步中没有重命名该接口、已安装 biosdevname、且在 boot 命令行中将 <code>biosdevname=0</code> 作为内核命令给出。</li><li><code>/lib/udev/rules.d/75-net-description.rules</code> 中的规则让 udev 通过检查网络接口设备，填写内部 udev 设备属性值 ID_NET_NAME_ONBOARD、ID_NET_NAME_SLOT、ID_NET_NAME_PATH。注：有些设备属性可能处于未定义状态。</li><li><code>/usr/lib/udev/rules.d/80-net-name-slot.rules</code> 中的规则让 udev 重命名该接口，优先顺序如下：ID_NET_NAME_ONBOARD、ID_NET_NAME_SLOT、ID_NET_NAME_PATH。并提供如下信息：没有在步骤 1 或 2 中重命名该接口，同时未给出内核参数 <code>net.ifnames=0</code>。如果一个参数未设定，则会按列表的顺序设定下一个。如果没有设定任何参数，则不会重命名该接口。</li></ol><h2 id="修改网络设备命名"><a href="#修改网络设备命名" class="headerlink" title="修改网络设备命名"></a>修改网络设备命名</h2><h3 id="debian-系、ubuntu-等"><a href="#debian-系、ubuntu-等" class="headerlink" title="debian 系、ubuntu 等"></a>debian 系、ubuntu 等</h3><p>vim &#x2F;etc&#x2F;default&#x2F;grub</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果这项有参数了，和现有参数用空格分开</span></span><br><span class="line"><span class="attr">GRUB_CMDLINE_LINUX</span>=<span class="string">&quot;net.ifnames=0 biosdevname=0&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>重启后执行 <code>ip a</code> 查看设备名修改成功了没有</p><p>然后修改网络：<br>vim &#x2F;etc&#x2F;netplan&#x2F;xx.yaml</p><p>设备名修改后，执行 <code>netplan try</code></p><h3 id="redhat-系、centos-等"><a href="#redhat-系、centos-等" class="headerlink" title="redhat 系、centos 等"></a>redhat 系、centos 等</h3><p>vim &#x2F;etc&#x2F;sysconfig&#x2F;grub</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">GRUB_CMDLINE_LINUX</span>=<span class="string">&quot;... net.ifnames=0 biosdevname=0&quot;</span></span><br></pre></td></tr></table></figure><p>然后更新 grub、重启、更改网络配置文件</p><h4 id="在安装系统时修改"><a href="#在安装系统时修改" class="headerlink" title="在安装系统时修改"></a>在安装系统时修改</h4><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Debian</button><button type="button" class="tab">CentOS</button></div><div class="tab-contents"><div class="tab-item-content active"><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404262259986.png" alt="image.png"></p><p>这个界面按下 <code>e</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404262301459.png" alt="image.png"></p><p>参数添加完成后，按下 <code>F10</code> 启动</p></div><div class="tab-item-content"><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202401301209674.png" alt="202401301209674.png|592"></p><p>光标放在 install 上， 按下 tab 键， 在 quiet 后面输入 <code> net.ifnames=0 biosdevname=0</code></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="kickstart-预安装固定设备名"><a href="#kickstart-预安装固定设备名" class="headerlink" title="kickstart 预安装固定设备名"></a>kickstart 预安装固定设备名</h2><h3 id="centos-系"><a href="#centos-系" class="headerlink" title="centos 系"></a>centos 系</h3><p>一共有两个地方需要修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">    --hvm --virt-type kvm \</span><br><span class="line">    --accelerate \</span><br><span class="line">    --name vm-conghua \</span><br><span class="line">    --os-type linux \</span><br><span class="line">    --vcpus 2 \</span><br><span class="line">    --ram 4096 \</span><br><span class="line">    --disk path=/dev/mapper/ssd_data-vm_conghua \</span><br><span class="line">    --network bridge:br13,model=virtio \</span><br><span class="line">    --nographics \</span><br><span class="line">    --location http://cn.archive.ubuntu.com/ubuntu/dists/focal/main/installer-amd64/ \</span><br><span class="line">    --initrd-inject=/tmp/tmp.HotM405TfF/ks.cfg \</span><br><span class="line">    --cpu host \</span><br><span class="line">    --extra-args <span class="string">&#x27;ks=file:/ks.cfg console=tty0 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0&#x27;</span></span><br></pre></td></tr></table></figure><p>ks.cfg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">bootloader --location=mbr --driveorder=vda --append=&quot; crashkernel=auto console=ttyS0,115200n8 net.ifnames=0 biosdevname=0&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Puppet Server从部署到上线使用</title>
      <link href="/posts/e8243516/"/>
      <url>/posts/e8243516/</url>
      
        <content type="html"><![CDATA[<p>这是一篇 todo 文章，可以快速将 puppetserver 部署起来，经常遇到的坑也会写出来，但是自己不踩吭记忆是没有成长的（不仅仅是收获经验，重要的是增加了学习的能力），如果不缺时间的话，强烈建议看官方文档：<a href="https://puppet.com/docs/puppet/7/server/install_from_packages.html">https://puppet.com/docs/puppet/7/server/install_from_packages.html</a></p><h2 id="安装-master"><a href="#安装-master" class="headerlink" title="安装 master"></a>安装 master</h2><h3 id="通过源来安装"><a href="#通过源来安装" class="headerlink" title="通过源来安装"></a>通过源来安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh https://yum.puppet.com/puppet7-release-el-8.noarch.rpm</span><br><span class="line">sudo yum install puppetserver</span><br></pre></td></tr></table></figure><h3 id="启动-master-服务"><a href="#启动-master-服务" class="headerlink" title="启动 master 服务"></a>启动 master 服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start puppetserver</span><br></pre></td></tr></table></figure><blockquote><p>如果报错 <code>Found master private key &#39;/etc/puppetlabs/puppet/ssl/private_keys/localhost.localdomain.pem&#39; but master public key &#39;/etc/puppetlabs/puppet/ssl/public...</code> 需要把 ssl 目录删除 <code>sudo rm -rf /etc/puppetlabs/puppet/ssl/*</code>（<strong>已经上线的 master，请自己考虑后果再决定</strong>），再尝试启动</p></blockquote><h3 id="修改-dns-解析"><a href="#修改-dns-解析" class="headerlink" title="修改 dns 解析"></a>修改 dns 解析</h3><p>解析 puppet 到 master 的 ip 即可</p><blockquote><p>或者绑定 hosts, 如果是 hosts，客户端和服务器都需要绑定 hosts 到 master 的 ip</p></blockquote><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.10.0.10  puppet</span><br></pre></td></tr></table></figure><h2 id="安装-puppet-agent"><a href="#安装-puppet-agent" class="headerlink" title="安装 puppet-agent"></a>安装 puppet-agent</h2><blockquote><p>安装 agnet 需要先启用仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh https://yum.puppet.com/puppet7-release-el-8.noarch.rpm</span><br><span class="line">sudo yum install puppet-agent</span><br></pre></td></tr></table></figure><h2 id="anget-连接-server"><a href="#anget-连接-server" class="headerlink" title="anget 连接 server"></a>anget 连接 server</h2><h3 id="手动签名认证"><a href="#手动签名认证" class="headerlink" title="手动签名认证"></a>手动签名认证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#] puppet agent --test</span></span><br><span class="line"></span><br><span class="line">Info: Creating a new RSA SSL key <span class="keyword">for</span> agent</span><br><span class="line">Info: csr_attributes file loading from /etc/puppetlabs/puppet/csr_attributes.yaml</span><br><span class="line">Info: Creating a new SSL certificate request <span class="keyword">for</span> agent</span><br><span class="line">Info: Certificate Request fingerprint (SHA256): A3:CA:C3:B1:69:C9:97:3D:3A:BB:A4:F0:E5:15:34:A5:74:B5:86:08:E1:A9:02:A6:D4:91:12:04:6A:89:76:70</span><br><span class="line">Info: Certificate <span class="keyword">for</span> agent has not been signed yet</span><br><span class="line">Couldn<span class="string">&#x27;t fetch certificate from CA server; you might still need to sign this agent&#x27;</span>s certificate (agent).</span><br><span class="line">Exiting now because the waitforcert setting is <span class="built_in">set</span> to 0.</span><br></pre></td></tr></table></figure><p>这时候需要在 master 节点上面允许 agnet 的证书，以下是 master 节点执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看还没签名的证书</span></span><br><span class="line">puppetserver ca list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给所有证书签名</span></span><br><span class="line">puppetserver ca sign --all</span><br></pre></td></tr></table></figure><h3 id="自动签名认证"><a href="#自动签名认证" class="headerlink" title="自动签名认证"></a>自动签名认证</h3><p>自动认证需要编写 ACL 规则，一个简单的规则如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#] vim /etc/puppetlabs/puppet/autosign.conf</span></span><br><span class="line"></span><br><span class="line">*.localhost.com</span><br></pre></td></tr></table></figure><p>然后重新启动 master 服务即可</p><h2 id="部署代码"><a href="#部署代码" class="headerlink" title="部署代码"></a>部署代码</h2><p>然后把清单文件 (.pp) 放到 master 的 <code>/etc/puppetlabs/code/environments/production/manifests</code><br><code>modules</code> 放到 <code>/etc/puppetlabs/code/modules</code></p><h2 id="其他证书操作"><a href="#其他证书操作" class="headerlink" title="其他证书操作"></a>其他证书操作</h2><h3 id="吊销证书"><a href="#吊销证书" class="headerlink" title="吊销证书"></a>吊销证书</h3><p>如果不想让某个 agent 来连接 master，可以在 master 上面把证书撤销</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puppetserver ca revoke --certname agent_name</span><br></pre></td></tr></table></figure><h3 id="清理证书"><a href="#清理证书" class="headerlink" title="清理证书"></a>清理证书</h3><p>比如说重装了系统，需要 master 重新生成证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puppetserver ca clean --certname agent_name</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Puppet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络管理命令</title>
      <link href="/posts/211e1b4c/"/>
      <url>/posts/211e1b4c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2009 年 Debian 开发者邮件列表宣布放弃使用缺乏维护的 net-tools 工具包，net-tools 包含历史悠久的 ifconfig, netstat 等网络相关的命令<br>iproute2 用于取代 net-tools，在大部分的发行版都自带了。命令有 ip, ss, net 等命令替代了之前的网络操作命令。</p></blockquote><h2 id="命令对照表"><a href="#命令对照表" class="headerlink" title="命令对照表"></a>命令对照表</h2><table><thead><tr><th>net-tools</th><th>iproute2</th></tr></thead><tbody><tr><td>arp -na</td><td>ip neigh</td></tr><tr><td>ifconfig</td><td>ip link</td></tr><tr><td>ifconfig -a</td><td>ip addr show</td></tr><tr><td>ifconfig -s</td><td>ip -s link</td></tr><tr><td>ifconfig eth0 up</td><td>ip link set eth0 up</td></tr><tr><td>ipmaddr</td><td>ip maddr</td></tr><tr><td>iptunnel</td><td>ip tunnel</td></tr><tr><td>netstat</td><td>ss</td></tr><tr><td>netstat -i</td><td>ip -s link</td></tr><tr><td>netstat -g</td><td>ip maddr</td></tr><tr><td>netstat -l</td><td>ss -l</td></tr><tr><td>netstat -r</td><td>ip route</td></tr><tr><td>route add</td><td>ip route add</td></tr><tr><td>route del</td><td>ip route del</td></tr><tr><td>route -n</td><td>ip route show</td></tr><tr><td>vconfig</td><td>ip link</td></tr></tbody></table><h2 id="ip-命令"><a href="#ip-命令" class="headerlink" title="ip 命令"></a>ip 命令</h2><h3 id="配置-ip-或者接口"><a href="#配置-ip-或者接口" class="headerlink" title="配置 ip 或者接口"></a>配置 ip 或者接口</h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>ip a</td><td>显示所有网络接口</td></tr><tr><td>ip -4 a</td><td>显示所有 IPv4 相关网络接口</td></tr><tr><td>ip a show eth0</td><td>查看特定的网络接口</td></tr><tr><td>ip a add 192.168.80.174 dev eth0</td><td>添加 ip 地址</td></tr><tr><td>ip a del 192.168.80.174 dev eth0</td><td>删除 ip 地址</td></tr><tr><td>ip -s -s a f to 192.168.1.0&#x2F;24</td><td>清除所有接口上的所有地址</td></tr><tr><td>ip link set dev eth0 address 00:0c:29:33:4e:aa</td><td>添加 MAC 地址</td></tr><tr><td>ip link set eth0 down</td><td>禁用网络接口</td></tr><tr><td>ip link set eth0 up</td><td>启用网络接口</td></tr><tr><td>ip link ls up</td><td>列出正在运行的网络接口</td></tr><tr><td>ip link set dev eth0 arp on</td><td>启用 ARP 协议</td></tr><tr><td>ip link set txqueuelen 10000 dev eth0</td><td>设置队列传输长度</td></tr><tr><td>ip link set mtu 9000 dev eth0</td><td>设置最大传输单元</td></tr></tbody></table><h3 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有路由表</span></span><br><span class="line">ip r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加/删除默认的网关</span></span><br><span class="line">ip route add default via 192.168.1.254</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加路由</span></span><br><span class="line">ip route add 192.168.1.0/24 dev eth0</span><br><span class="line">ip route add 192.168.1.0/24 via 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除路由</span></span><br><span class="line">ip route del 192.168.1.0/24 dev eth0</span><br><span class="line">ip route del 192.168.1.0/24 via 192.168.1.1</span><br></pre></td></tr></table></figure><h2 id="ss-命令"><a href="#ss-命令" class="headerlink" title="ss 命令"></a>ss 命令</h2><blockquote><p>ss 是 Socket Statistics 的缩写，用来获取 socket 统计信息，可以显示和 netstat 类似的内容。ss 的优势在于它能够显示更多更详细的有关 TCP 和连接状态的信息，而且比 netstat 更快速更高效。</p></blockquote><h3 id="SS-命令使用实例"><a href="#SS-命令使用实例" class="headerlink" title="SS 命令使用实例"></a>SS 命令使用实例</h3><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>ss -t -a</td><td>显示 TCP 连接</td></tr><tr><td>ss -s</td><td>显示 Sockets 摘要</td></tr><tr><td>ss -l</td><td>列出所有打开的网络连接端口</td></tr><tr><td>ss -pl</td><td>查看进程使用的 socket</td></tr><tr><td>ss -u -a</td><td>显示所有 UDP Sockets</td></tr><tr><td>ss -anltp</td><td>显示所有监听的 tcp 端口</td></tr></tbody></table><h3 id="用-TCP-状态过滤-Sockets"><a href="#用-TCP-状态过滤-Sockets" class="headerlink" title="用 TCP 状态过滤 Sockets"></a>用 TCP 状态过滤 Sockets</h3><p>显示所有状态为 Established 的 HTTP 连接（http 可以换成 ssh 或数字）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -anltp state established <span class="string">&#x27;( dport = :http or sport = :http )&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>state 可选的有</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">established</span><br><span class="line">syn-sent</span><br><span class="line">syn-recv</span><br><span class="line">fin-wait-1</span><br><span class="line">fin-wait-2</span><br><span class="line">time-wait</span><br><span class="line">closed</span><br><span class="line">close-wait</span><br><span class="line">last-ack</span><br><span class="line">listen</span><br><span class="line">closing</span><br><span class="line"></span><br><span class="line">all :           所有以上状态</span><br><span class="line">connected :     除了listen and closed的所有状态</span><br><span class="line">synchronized :  所有已连接的状态除了syn-sent</span><br><span class="line">bucket :        显示状态为maintained as minisockets,如：time-wait和syn-recv</span><br><span class="line">big :           和bucket相反</span><br></pre></td></tr></table></figure><h2 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h2><blockquote><p>NetworkManager 是一个守护进程，用户不与 NetworkManager 系统服务直接互动，而是通过图形及命令行用户界面工具执行网络配置任务。Red Hat Enterprise Linux 7 中有以下工具可用：<br>nmtui nmcli 和一些图形界面管理工具等</p></blockquote><p>参考文档: <a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/networking_guide/ch-introduction_to_rhel_networking">https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/networking_guide/ch-introduction_to_rhel_networking</a></p><p>查看 NetworkManager 状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status NetworkManager</span><br></pre></td></tr></table></figure><h3 id="nmcli"><a href="#nmcli" class="headerlink" title="nmcli"></a>nmcli</h3><p>常用命令，connection 可以简写成 c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nmcli c reload                      重新加载配置文件</span><br><span class="line">nmcli connection show               要显示所有链接</span><br><span class="line">nmcli device status                 显示由 NetworkManager 识别到设备及其状态：</span><br><span class="line">nmcli dev disconnect iface bond0    停止网络接口</span><br><span class="line">nmcli con up ens33                  激活网络连接</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="nmtui"><a href="#nmtui" class="headerlink" title="nmtui"></a>nmtui</h3><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install NetworkManager-tui</span><br></pre></td></tr></table></figure><p>文本图形工具，使用方法略</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们为什么要用容器(或者说k8s)</title>
      <link href="/posts/cb400b2a/"/>
      <url>/posts/cb400b2a/</url>
      
        <content type="html"><![CDATA[<h2 id="起因或现状"><a href="#起因或现状" class="headerlink" title="起因或现状"></a>起因或现状</h2><blockquote><p>公司准备上线 k8s 集群，目前在云上有微软 azure 托管的 aks，aks 上面的用来部署一些对外的业务，数据中心（有两个 - 移动和电信）是我自建的，主要是对内网服务</p></blockquote><p>现在的问题是我们构使用的是 jenkins，构建方式和传统虚拟机发布没什么区别，只是换成了容器，简单来说就是:</p><blockquote><p>传统发布（所有环境流程一致）： 拉代码 - 构建 - 可执行文件上传服务器<br>现在发布（所有环境流程一致）： 拉容器镜像（基础环境） - 拉代码 - 构建 - 上传镜像仓库</p></blockquote><p>所有环境的发布都需要准备一套环境，也就是说容器并没有解决我们的环境标准化的问题，比如：</p><blockquote><p>我们的 jenkins 的 node 节点在数据中心、办公室内网、azure 云上都有，因为这些环境都需要构建一遍镜像<br>围绕构建需要提供一些基础设施，比如我们 apt、maven、pypi 等的缓存服务（用的 nexus），容器镜像仓库（用的 jfrog）这些都需要在每个环境准备一套，每个服务还需要做高可用，简单算下来也有 6 个 nexus 和 4 个 jfrog</p></blockquote><p>如果我们换成办公室构建完成，上传到公网的 jfrog 仓库，后面所有的操作都以容器镜像为单位进行（比如测试测试的就是镜像、发布发布的也是镜像而不是代码），nexus 缓存和 jfrog 只需要 1 个就可以了，而且可以保证测试环境和生产环境一致。</p><h2 id="为什么会这样"><a href="#为什么会这样" class="headerlink" title="为什么会这样"></a>为什么会这样</h2><p>我觉得还是公司在把容器当作虚拟机在用，并没有发挥容器的优势，反而增加了很多维护成本。<br>和领导提过这个方案，被否定了。原因如下：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/Screenshot_20211015_111956.png" alt="建议"></p><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><h3 id="首先第一点：我们为什么要用容器（k8s），它解决了我们什么问题"><a href="#首先第一点：我们为什么要用容器（k8s），它解决了我们什么问题" class="headerlink" title="首先第一点：我们为什么要用容器（k8s），它解决了我们什么问题"></a>首先第一点：我们为什么要用容器（k8s），它解决了我们什么问题</h3><p>我觉得容器的好处有：</p><ul><li>一个是标准化，运行环境在测试环境和生产环境完全一致（除了内核层），标准化的另一个好处是 CICD 或者说运维、开发的效率更高</li><li>另一个好处是节省资源，包括 k8s 的容器调度不会像虚拟机那样很多跑了一两个服务，很多资源都浪费掉了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 docker buildx 构建不同平台的镜像</title>
      <link href="/posts/ffacccf0/"/>
      <url>/posts/ffacccf0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一直使用 oracle 提供的免费 arm 云服务器，自己的 pc 又是 x86 架构，x86 构建出来的镜像不能在 arm 平台使用</p></blockquote><p>使用 buildx 可以生成跨平台镜像，跨平台镜像就是同一个镜像名称，同一个 tag，但是 arm 机器和 amd64 机器拉下来的镜像 hash 是不一样的</p><h2 id="创建-docker-buildx-构建环境"><a href="#创建-docker-buildx-构建环境" class="headerlink" title="创建 docker buildx 构建环境"></a>创建 docker buildx 构建环境</h2><blockquote><p>这里的 driver 有两种，一种是 docker-container，一种是 docker，构建多平台版本只能使用 docker-container, –use 是将切换为默认</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker buildx create --use --name buildx --node buildx --driver-opt network=host</span><br></pre></td></tr></table></figure><h2 id="准备-qemu-模拟器"><a href="#准备-qemu-模拟器" class="headerlink" title="准备 qemu 模拟器"></a>准备 qemu 模拟器</h2><p>构建不通架构的镜像是通过 qemu 来模拟的，你会发现构建过程中，和 build 机器同架构的会构建很快，不同架构构建很慢。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装全部模拟器</span></span><br><span class="line">docker run --privileged --<span class="built_in">rm</span> tonistiigi/binfmt --install all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定的模拟器</span></span><br><span class="line">docker run --privileged --<span class="built_in">rm</span> tonistiigi/binfmt --install arm64,riscv64,arm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载指定模拟器</span></span><br><span class="line">docker run --privileged --<span class="built_in">rm</span> tonistiigi/binfmt --uninstall qemu-aarch64</span><br></pre></td></tr></table></figure><h2 id="buildx-构建镜像"><a href="#buildx-构建镜像" class="headerlink" title="buildx 构建镜像"></a>buildx 构建镜像</h2><p>准备一个简单的 Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu</span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;uname&quot;</span>, <span class="string">&quot;-i&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker buildx build --push \</span><br><span class="line">    --tag iuxt/ubuntu:latest \</span><br><span class="line">    --platform linux/amd64,linux/arm64 .</span><br></pre></td></tr></table></figure><p>这个时候登录 dockerhub 查看</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/20220518103637.png" alt="docker镜像"><br>可以看到已经是多平台支持了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> iuxt/test</span><br><span class="line"></span><br><span class="line">&gt; x86_64</span><br></pre></td></tr></table></figure><p>正常构建的时候，也需要考虑到不同的架构区别，在构建命令里面做判断，比如</p><p><strong>Dockerfile</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:latest</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> build.sh /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /build.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> REDIS_ADDR=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span></span><br><span class="line"><span class="keyword">ENV</span> REDIS_PASSWORD=<span class="number">111111</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /redis_exporter -redis.addr <span class="variable">$&#123;REDIS_ADDR&#125;</span> -redis.password <span class="variable">$&#123;REDIS_PASSWORD&#125;</span></span></span><br></pre></td></tr></table></figure><p><strong>build.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt install curl -y &amp;&amp; apt clean all</span><br><span class="line"><span class="built_in">cd</span> /tmp/ </span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $(<span class="built_in">uname</span> -m) <span class="keyword">in</span></span><br><span class="line">x86_64)</span><br><span class="line">    filename=<span class="string">&quot;redis_exporter-v1.37.0.linux-amd64.tar.gz&quot;</span></span><br><span class="line">    bin=<span class="string">&quot;redis_exporter-v1.37.0.linux-amd64/redis_exporter&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">aarch64)</span><br><span class="line">    filename=<span class="string">&quot;redis_exporter-v1.37.0.linux-arm64.tar.gz&quot;</span></span><br><span class="line">    bin=<span class="string">&quot;redis_exporter-v1.37.0.linux-arm64/redis_exporter&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;don&#x27;t support <span class="subst">$(uname -i)</span>&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">curl -OL https://github.com/oliver006/redis_exporter/releases/download/v1.37.0/<span class="variable">$filename</span></span><br><span class="line">tar xf <span class="variable">$filename</span> &amp;&amp; <span class="built_in">mv</span> <span class="variable">$bin</span> /</span><br><span class="line"><span class="built_in">rm</span> -rf /tmp/*</span><br></pre></td></tr></table></figure><h2 id="docker-buildx-常用命令"><a href="#docker-buildx-常用命令" class="headerlink" title="docker buildx 常用命令"></a>docker buildx 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有的builder列表</span></span><br><span class="line">docker buildx <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除创建的builder</span></span><br><span class="line">docker buildx <span class="built_in">rm</span> mybuilder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换默认builder</span></span><br><span class="line">docker buildx use mybuilder</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用certbot自动申请ssl证书</title>
      <link href="/posts/28c679c3/"/>
      <url>/posts/28c679c3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>certbot 可以自动申请 let’s encrypt https 证书, 并且可以自动续期，另见：<a href="/posts/1e777b9e">使用acme.sh来自动更新https证书</a></p></blockquote><h2 id="申请证书前准备"><a href="#申请证书前准备" class="headerlink" title="申请证书前准备"></a>申请证书前准备</h2><h3 id="添加-DNS-解析"><a href="#添加-DNS-解析" class="headerlink" title="添加 DNS 解析"></a>添加 DNS 解析</h3><p>域名为你需要申请 https 证书的域名，添加 A 记录到服务器 IP</p><h3 id="安装-certbot-和-certbot-nginx-plugin"><a href="#安装-certbot-和-certbot-nginx-plugin" class="headerlink" title="安装 certbot 和 certbot nginx plugin"></a>安装 certbot 和 certbot nginx plugin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install certbot</span><br><span class="line">sudo apt install python3-certbot-nginx</span><br></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --non-interactive --redirect --agree-tos --nginx -d password.zahui.fan -m captain@zahui.fan</span><br></pre></td></tr></table></figure><blockquote><p>以上操作除了申请证书外，还可以自动添加 https 配置到 nginx，很方便。</p></blockquote><h2 id="证书续期"><a href="#证书续期" class="headerlink" title="证书续期"></a>证书续期</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew</span><br></pre></td></tr></table></figure><blockquote><p>添加到 root 用户的 crontab 里面就可以实现自动续期，距离到期时间太长会自动跳过续期</p></blockquote><h2 id="删除证书"><a href="#删除证书" class="headerlink" title="删除证书"></a>删除证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot delete</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Crontab </tag>
            
            <tag> Linux </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Systemd入门教程all in One</title>
      <link href="/posts/f94fbe20/"/>
      <url>/posts/f94fbe20/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考自<a href="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html">https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html</a>，感谢阮一峰老哥。<br>同样可以看 Arch Wiki：<a href="https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">systemd</a> ，Arch Wiki 真的不错。</p></blockquote><h2 id="由来"><a href="#由来" class="headerlink" title="由来"></a>由来</h2><p>历史上，Linux 的启动一直采用 init 进程。</p><p>下面的命令用来启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/apache2 start</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><p>这种方法有两个缺点。</p><ul><li>一是启动时间长。init 进程是串行启动，只有前一个进程启动完，才会启动下一个进程。</li><li>二是启动脚本复杂。init 进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。</li></ul><h2 id="systemd-的诞生"><a href="#systemd-的诞生" class="headerlink" title="systemd 的诞生"></a>systemd 的诞生</h2><p>Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。<br>systemd 成为系统的第一个进程（也就是 PID&#x3D;1），其他进程都是它的子进程。</p><h2 id="systemd-包括的命令"><a href="#systemd-包括的命令" class="headerlink" title="systemd 包括的命令"></a>systemd 包括的命令</h2><blockquote><p>systemd 不是一个命令，而是一组命令。比如 systemctl hostnamectl timedatectl 等</p></blockquote><h3 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h3><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启系统</span></span><br><span class="line">sudo systemctl reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭系统，切断电源</span></span><br><span class="line">sudo systemctl poweroff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动进入救援状态（单用户状态）</span></span><br><span class="line">sudo systemctl rescue</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启进入UEFI界面</span></span><br><span class="line">sudo systemctl reboot --firmware-setup</span><br></pre></td></tr></table></figure><h3 id="systemd-analyze"><a href="#systemd-analyze" class="headerlink" title="systemd-analyze"></a>systemd-analyze</h3><p>systemd-analyze 命令用于查看启动耗时。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看启动耗时</span></span><br><span class="line">systemd-analyze                                                                                       </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个服务的启动耗时</span></span><br><span class="line">systemd-analyze blame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示瀑布状的启动过程流</span></span><br><span class="line">systemd-analyze critical-chain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定服务的启动流</span></span><br><span class="line">systemd-analyze critical-chain atd.service</span><br></pre></td></tr></table></figure><h3 id="hostnamectl"><a href="#hostnamectl" class="headerlink" title="hostnamectl"></a>hostnamectl</h3><p>hostnamectl 命令用于查看当前主机的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前主机的信息</span></span><br><span class="line">hostnamectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名。</span></span><br><span class="line">sudo hostnamectl set-hostname rhel7</span><br></pre></td></tr></table></figure><h3 id="localectl"><a href="#localectl" class="headerlink" title="localectl"></a>localectl</h3><p>localectl 命令用于查看本地化设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看本地化设置</span></span><br><span class="line">localectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置本地化参数。</span></span><br><span class="line">sudo localectl set-locale LANG=en_US.utf8</span><br><span class="line">sudo localectl set-keymap en_US</span><br></pre></td></tr></table></figure><h3 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h3><blockquote><p>timedatectl 命令用于查看当前时区设置。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前时区设置</span></span><br><span class="line">timedatectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有可用的时区</span></span><br><span class="line">timedatectl list-timezones                                                                                   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置当前时区</span></span><br><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br><span class="line">sudo timedatectl set-time YYYY-MM-DD</span><br><span class="line">sudo timedatectl set-time HH:MM:SS</span><br></pre></td></tr></table></figure><h3 id="loginctl"><a href="#loginctl" class="headerlink" title="loginctl"></a>loginctl</h3><blockquote><p>loginctl 命令用于查看当前登录的用户。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出当前session</span></span><br><span class="line">loginctl list-sessions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前登录用户</span></span><br><span class="line">loginctl list-users</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出显示指定用户的信息</span></span><br><span class="line">loginctl show-user iuxt</span><br></pre></td></tr></table></figure><h2 id="Unit"><a href="#Unit" class="headerlink" title="Unit"></a>Unit</h2><h3 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h3><p>Systemd 可以管理所有系统资源。不同的资源统称为 Unit（单位）。</p><p>Unit 一共分成 12 种。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Service unit：      系统服务</span><br><span class="line">Target unit：       多个 Unit 构成的一个组</span><br><span class="line">Device Unit：       硬件设备</span><br><span class="line">Mount Unit：        文件系统的挂载点</span><br><span class="line">Automount Unit：    自动挂载点</span><br><span class="line">Path Unit：         文件或路径</span><br><span class="line">Scope Unit：        不是由 Systemd 启动的外部进程</span><br><span class="line">Slice Unit：        进程组</span><br><span class="line">Snapshot Unit：     Systemd 快照，可以切回某个快照</span><br><span class="line">Socket Unit：       进程间通信的 socket</span><br><span class="line">Swap Unit：         swap 文件</span><br><span class="line">Timer Unit：        定时器</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出正在运行的 Unit</span></span><br><span class="line">systemctl list-units</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有Unit，包括没有找到配置文件的或者启动失败的</span></span><br><span class="line">systemctl list-units --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有没有运行的 Unit</span></span><br><span class="line">systemctl list-units --all --state=inactive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有加载失败的 Unit</span></span><br><span class="line">systemctl list-units --failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有正在运行的、类型为 service 的 Unit</span></span><br><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Unit-的状态"><a href="#Unit-的状态" class="headerlink" title="Unit 的状态"></a>Unit 的状态</h3><p>systemctl status 命令用于查看系统状态和单个 Unit 的状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示系统状态</span></span><br><span class="line">systemctl status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示单个 Unit 的状态</span></span><br><span class="line">sysystemctl status bluetooth.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示远程主机的某个 Unit 的状态</span></span><br><span class="line">systemctl -H root@rhel7.example.com status httpd.service</span><br></pre></td></tr></table></figure><p>除了 status 命令，systemctl 还提供了三个查询状态的简单方法，主要供脚本内部的判断语句使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示某个 Unit 是否正在运行</span></span><br><span class="line">systemctl is-active application.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 是否处于启动失败状态</span></span><br><span class="line">systemctl is-failed application.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 服务是否建立了启动链接</span></span><br><span class="line">systemctl is-enabled application.service</span><br></pre></td></tr></table></figure><h3 id="Unit-管理"><a href="#Unit-管理" class="headerlink" title="Unit 管理"></a>Unit 管理</h3><p>对于用户来说，最常用的是下面这些命令，用于启动和停止 Unit（主要是 service）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 立即启动一个服务</span></span><br><span class="line">sudo systemctl start apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即停止一个服务</span></span><br><span class="line">sudo systemctl stop apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启一个服务</span></span><br><span class="line">sudo systemctl restart apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死一个服务的所有子进程</span></span><br><span class="line">sudo systemctl <span class="built_in">kill</span> apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载一个服务的配置文件</span></span><br><span class="line">sudo systemctl reload apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载所有修改过的配置文件</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 的所有底层参数</span></span><br><span class="line">systemctl show httpd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 的指定属性的值</span></span><br><span class="line">systemctl show -p CPUShares httpd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置某个 Unit 的指定属性</span></span><br><span class="line">sudo systemctl set-property httpd.service CPUShares=500</span><br></pre></td></tr></table></figure><h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><p>Unit 之间存在依赖关系：A 依赖于 B，就意味着 Systemd 在启动 A 的时候，同时会去启动 B。<br>systemctl list-dependencies 命令列出一个 Unit 的所有依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-dependencies nginx.service</span><br><span class="line">上面命令的输出结果之中，有些依赖是 Target 类型（详见下文），默认不会展开显示。如果要展开 Target，就需要使用--all参数。</span><br><span class="line">systemctl list-dependencies --all nginx.service</span><br></pre></td></tr></table></figure><h2 id="Unit-的配置文件"><a href="#Unit-的配置文件" class="headerlink" title="Unit 的配置文件"></a>Unit 的配置文件</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit 。<br>Systemd 默认从目录 <code>/etc/systemd/system/</code> 读取配置文件。但是，里面存放的大部分文件都是符号链接，指向目录 <code>/usr/lib/systemd/system/</code>，真正的配置文件存放在那个目录。<br>systemctl enable 命令用于在上面两个目录之间，建立符号链接关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> clamd@scan.service</span><br><span class="line"><span class="comment"># 等同于</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s <span class="string">&#x27;/usr/lib/systemd/system/clamd@scan.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/clamd@scan.service&#x27;</span></span><br><span class="line">如果配置文件里面设置了开机启动，systemctl <span class="built_in">enable</span>命令相当于激活开机启动。</span><br><span class="line"></span><br><span class="line">与之对应的，systemctl <span class="built_in">disable</span>命令用于在两个目录之间，撤销符号链接关系，相当于撤销开机启动。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> clamd@scan.service</span><br><span class="line">配置文件的后缀名，就是该 Unit 的种类，比如sshd.socket。如果省略，Systemd 默认后缀名为.service，所以sshd会被理解成sshd.service。</span><br></pre></td></tr></table></figure><h3 id="配置文件的状态"><a href="#配置文件的状态" class="headerlink" title="配置文件的状态"></a>配置文件的状态</h3><p>systemctl list-unit-files 命令用于列出所有配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有配置文件</span></span><br><span class="line">systemctl list-unit-files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出指定类型的配置文件</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service</span><br><span class="line">这个命令会输出一个列表。</span><br></pre></td></tr></table></figure><p>systemctl list-unit-files</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UNIT FILE              STATE</span><br><span class="line">chronyd.service        enabled</span><br><span class="line">clamd@.service         static</span><br><span class="line">clamd@scan.service     disabled</span><br></pre></td></tr></table></figure><p>这个列表显示每个配置文件的状态，一共有四种。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enabled：已建立启动链接</span><br><span class="line">disabled：没建立启动链接</span><br><span class="line">static：该配置文件没有[Install]部分（无法执行），只能作为其他配置文件的依赖</span><br><span class="line">masked：该配置文件被禁止建立启动链接</span><br></pre></td></tr></table></figure><p>注意，从配置文件的状态无法看出，该 Unit 是否正在运行。这必须执行前面提到的 systemctl status 命令。</p><p>一旦修改配置文件，就要让 Systemd 重新加载配置文件，然后重新启动，否则修改不会生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart httpd.service</span><br></pre></td></tr></table></figure><h3 id="配置文件的格式"><a href="#配置文件的格式" class="headerlink" title="配置文件的格式"></a>配置文件的格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看配置文件的内容</span><br><span class="line">systemctl <span class="built_in">cat</span> atd.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=ATD daemon</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/atd</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="配置文件的区块"><a href="#配置文件的区块" class="headerlink" title="配置文件的区块"></a>配置文件的区块</h3><p>[Unit] 区块通常是配置文件的第一个区块，用来定义 Unit 的元数据，以及配置与其他 Unit 的关系。它的主要字段如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Description：       简短描述</span><br><span class="line">Documentation：     文档地址</span><br><span class="line">Requires：          当前 Unit 依赖的其他 Unit，如果它们没有运行，当前 Unit 会启动失败</span><br><span class="line">Wants：             与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败</span><br><span class="line">BindsTo：           与Requires类似，它指定的 Unit 如果退出，会导致当前 Unit 停止运行</span><br><span class="line">Before：            如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之后启动</span><br><span class="line">After：             如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动</span><br><span class="line">Conflicts：         这里指定的 Unit 不能与当前 Unit 同时运行</span><br><span class="line">Condition...：      当前 Unit 运行必须满足的条件，否则不会运行</span><br><span class="line">Assert...：         当前 Unit 运行必须满足的条件，否则会报启动失败</span><br></pre></td></tr></table></figure><p>[Install] 通常是配置文件的最后一个区块，用来定义如何启动，以及是否开机启动。它的主要字段如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WantedBy：          它的值是一个或多个 Target，当前 Unit 激活时（enable）符号链接会放入/etc/systemd/system目录下面以 Target 名 + .wants后缀构成的子目录中</span><br><span class="line">RequiredBy：        它的值是一个或多个 Target，当前 Unit 激活时，符号链接会放入/etc/systemd/system目录下面以 Target 名 + .required后缀构成的子目录中</span><br><span class="line">Alias：             当前 Unit 可用于启动的别名</span><br><span class="line">Also：              当前 Unit 激活（enable）时，会被同时激活的其他 Unit</span><br></pre></td></tr></table></figure><p>[Service] 区块用来 Service 的配置，只有 Service 类型的 Unit 才有这个区块。它的主要字段如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Type：          定义启动时的进程行为。它有以下几种值。</span><br><span class="line">Type=simple：   默认值，执行ExecStart指定的命令，启动主进程</span><br><span class="line">Type=forking：  以 fork 方式从父进程创建子进程，创建后父进程会立即退出</span><br><span class="line">Type=oneshot：  一次性进程，Systemd 会等当前服务退出，再继续往下执行</span><br><span class="line">Type=dbus：     当前服务通过D-Bus启动</span><br><span class="line">Type=notify：   当前服务启动完毕，会通知Systemd，再继续往下执行</span><br><span class="line">Type=idle：     若有其他任务执行完毕，当前服务才会运行</span><br><span class="line">ExecStart：     启动当前服务的命令</span><br><span class="line">ExecStartPre：  启动当前服务之前执行的命令</span><br><span class="line">ExecStartPost： 启动当前服务之后执行的命令</span><br><span class="line">ExecReload：    重启当前服务时执行的命令</span><br><span class="line">ExecStop：      停止当前服务时执行的命令</span><br><span class="line">ExecStopPost：  停止当其服务之后执行的命令</span><br><span class="line">RestartSec：    自动重启当前服务间隔的秒数</span><br><span class="line">Restart：       定义何种情况 Systemd 会自动重启当前服务，可能的值包括always（总是重启）、on-success、on-failure、on-abnormal、on-abort、on-watchdog</span><br><span class="line">TimeoutSec：    定义 Systemd 停止当前服务之前等待的秒数</span><br><span class="line">Environment：   指定环境变量</span><br></pre></td></tr></table></figure><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p>启动计算机的时候，需要启动大量的 Unit。如果每一次启动，都要一一写明本次启动需要哪些 Unit，显然非常不方便。Systemd 的解决方案就是 Target。</p><p>简单说，Target 就是一个 Unit 组，包含许多相关的 Unit 。启动某个 Target 的时候，Systemd 就会启动里面所有的 Unit。从这个意义上说，Target 这个概念类似于 “ 状态点 “，启动某个 Target 就好比启动到某种状态。</p><p>传统的 init 启动模式里面，有 RunLevel 的概念，跟 Target 的作用很类似。不同的是，RunLevel 是互斥的，不可能多个 RunLevel 同时启动，但是多个 Target 可以同时启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前系统的所有 Target</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一个 Target 包含的所有 Unit</span></span><br><span class="line">systemctl list-dependencies multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动时的默认 Target</span></span><br><span class="line">systemctl get-default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置启动时的默认 Target</span></span><br><span class="line">sudo systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换 Target 时，默认不关闭前一个 Target 启动的进程，</span></span><br><span class="line"><span class="comment"># systemctl isolate 命令改变这种行为，</span></span><br><span class="line"><span class="comment"># 关闭前一个 Target 里面所有不属于后一个 Target 的进程</span></span><br><span class="line">sudo systemctl isolate multi-user.target</span><br></pre></td></tr></table></figure><p>Target 与 传统 RunLevel 的对应关系如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Traditional runlevel      New target name     Symbolically linked to...</span><br><span class="line"></span><br><span class="line">Runlevel 0           |    runlevel0.target -&gt; poweroff.target</span><br><span class="line">Runlevel 1           |    runlevel1.target -&gt; rescue.target</span><br><span class="line">Runlevel 2           |    runlevel2.target -&gt; multi-user.target</span><br><span class="line">Runlevel 3           |    runlevel3.target -&gt; multi-user.target</span><br><span class="line">Runlevel 4           |    runlevel4.target -&gt; multi-user.target</span><br><span class="line">Runlevel 5           |    runlevel5.target -&gt; graphical.target</span><br><span class="line">Runlevel 6           |    runlevel6.target -&gt; reboot.target</span><br></pre></td></tr></table></figure><p>它与 init 进程的主要差别如下。</p><p>（1）默认的 RunLevel（在&#x2F;etc&#x2F;inittab 文件设置）现在被默认的 Target 取代，位置是&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;default.target，通常符号链接到 graphical.target（图形界面）或者 multi-user.target（多用户命令行）。</p><p>（2）启动脚本的位置，以前是&#x2F;etc&#x2F;init.d 目录，符号链接到不同的 RunLevel 目录 （比如&#x2F;etc&#x2F;rc3.d、&#x2F;etc&#x2F;rc5.d 等），现在则存放在&#x2F;lib&#x2F;systemd&#x2F;system 和&#x2F;etc&#x2F;systemd&#x2F;system 目录。</p><p>（3）配置文件的位置，以前 init 进程的配置文件是&#x2F;etc&#x2F;inittab，各种服务的配置文件存放在&#x2F;etc&#x2F;sysconfig 目录。现在的配置文件主要存放在&#x2F;lib&#x2F;systemd 目录，在&#x2F;etc&#x2F;systemd 目录里面的修改可以覆盖原始设置。</p><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><p>Systemd 统一管理所有 Unit 的启动日志。带来的好处就是，可以只用 journalctl 一个命令，查看所有日志（内核日志和应用日志）。日志的配置文件是&#x2F;etc&#x2F;systemd&#x2F;journald.conf。</p><p>journalctl 功能强大，用法非常多。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有日志（默认情况下 ，只保存本次启动的日志）</span></span><br><span class="line">sudo journalctl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内核日志（不显示应用日志）</span></span><br><span class="line">sudo journalctl -k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统本次启动的日志</span></span><br><span class="line">sudo journalctl -b</span><br><span class="line">sudo journalctl -b -0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看上一次启动的日志（需更改设置）</span></span><br><span class="line">sudo journalctl -b -1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定时间的日志</span></span><br><span class="line">sudo journalctl --since=<span class="string">&quot;2012-10-30 18:17:16&quot;</span></span><br><span class="line">sudo journalctl --since <span class="string">&quot;20 min ago&quot;</span></span><br><span class="line">sudo journalctl --since yesterday</span><br><span class="line">sudo journalctl --since <span class="string">&quot;2015-01-10&quot;</span> --<span class="keyword">until</span> <span class="string">&quot;2015-01-11 03:00&quot;</span></span><br><span class="line">sudo journalctl --since 09:00 --<span class="keyword">until</span> <span class="string">&quot;1 hour ago&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部的最新10行日志</span></span><br><span class="line">sudo journalctl -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部指定行数的日志</span></span><br><span class="line">sudo journalctl -n 20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示最新日志</span></span><br><span class="line">sudo journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定服务的日志</span></span><br><span class="line">sudo journalctl /usr/lib/systemd/systemd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定进程的日志</span></span><br><span class="line">sudo journalctl _PID=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个路径的脚本的日志</span></span><br><span class="line">sudo journalctl /usr/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定用户的日志</span></span><br><span class="line">sudo journalctl _UID=33 --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个 Unit 的日志</span></span><br><span class="line">sudo journalctl -u nginx.service</span><br><span class="line">sudo journalctl -u nginx.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示某个 Unit 的最新日志</span></span><br><span class="line">sudo journalctl -u nginx.service -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并显示多个 Unit 的日志</span></span><br><span class="line">journalctl -u nginx.service -u php-fpm.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定优先级（及其以上级别）的日志，共有8级</span></span><br><span class="line"><span class="comment"># 0: emerg</span></span><br><span class="line"><span class="comment"># 1: alert</span></span><br><span class="line"><span class="comment"># 2: crit</span></span><br><span class="line"><span class="comment"># 3: err</span></span><br><span class="line"><span class="comment"># 4: warning</span></span><br><span class="line"><span class="comment"># 5: notice</span></span><br><span class="line"><span class="comment"># 6: info</span></span><br><span class="line"><span class="comment"># 7: debug</span></span><br><span class="line">sudo journalctl -p err -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志默认分页输出，--no-pager 改为正常的标准输出</span></span><br><span class="line">sudo journalctl --no-pager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（单行）输出</span></span><br><span class="line">sudo journalctl -b -u nginx.service -o json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（多行）输出，可读性更好</span></span><br><span class="line">sudo journalctl -b -u nginx.serviceqq</span><br><span class="line"> -o json-pretty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示日志占据的硬盘空间</span></span><br><span class="line">sudo journalctl --disk-usage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件占据的最大空间</span></span><br><span class="line">sudo journalctl --vacuum-size=1G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件保存多久</span></span><br><span class="line">sudo journalctl --vacuum-time=1years</span><br></pre></td></tr></table></figure><h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><blockquote><p><a href="https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">systemd</a> 会给每个用户生成一个 systemd 实例，用户可以在这个实例下管理服务，启动、停止、启用以及禁用他们自己的单元。这个能力大大方便了那些通常在特定用户下运行的守护进程和服务</p></blockquote><ul><li><code>/usr/lib/systemd/user/</code> 这里存放的是各个软件包安装的服务。</li><li><code>~/.local/share/systemd/user/</code> 这里存放的是 HOME 目录中已安装的软件包的单元。</li><li><code>/etc/systemd/user/</code> 这里存放的是由系统管理员维护的系统范围的用户服务。</li><li><code>~/.config/systemd/user/</code> 这里存放的是用户自身的服务。</li></ul><p>当 systemd 用户实例启动时，它会将 <code>default.target</code> 带起来。其他用户单元可以通过 <code>systemctl --user</code> 来管理。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="执行自定义脚本"><a href="#执行自定义脚本" class="headerlink" title="执行自定义脚本"></a>执行自定义脚本</h3><p>通过 systemd 进行开机自启动脚本</p><p>vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;custom.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span> = Custom Startup Service</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span> = simple</span><br><span class="line"><span class="attr">ExecStart</span> = /opt/scripts/custom.sh</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span> = multi-user.target</span><br></pre></td></tr></table></figure><p><code>sudo systemctl enable custom.service</code></p><h3 id="执行定时任务"><a href="#执行定时任务" class="headerlink" title="执行定时任务"></a>执行定时任务</h3><p>timer 类似于 crontab 的定时任务功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有 Service 单元</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span> service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有的 timer 单元</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span> timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有 mount 单元</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span> mount</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有的单元</span></span><br><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><p>比如创建一个 service： <code>/usr/lib/systemd/system/hello.service</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=my hello.sh</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">ExecStart</span>=/bin/bash /root/hello.sh</span><br></pre></td></tr></table></figure><p>在创建一个 timer： <code>/usr/lib/systemd/system/hello.timer</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Timer]</span></span><br><span class="line"><span class="attr">OnUnitActiveSec</span>=<span class="number">5</span>s <span class="comment"># 每隔多久执行任务</span></span><br><span class="line"><span class="attr">AccuracySec</span>=<span class="number">1</span>ms <span class="comment">#设置时间精度，如果不设置的话，具体的执行时间就不一定了</span></span><br><span class="line"><span class="attr">Unit</span>=hello.service <span class="comment"># 要执行哪个任务</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>启动定时器，并开机自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now hello.timer</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Systemd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx反向代理wordpress并启用https</title>
      <link href="/posts/990b6b62/"/>
      <url>/posts/990b6b62/</url>
      
        <content type="html"><![CDATA[<blockquote><p>反向代理 wordpress 遇到了问题，nginx 不启用 https，反向代理没问题（wordpress 和 nginx 之间走 http），但是 nginx 启用了 https，页面上的样式就没有了，f12 查看，发现 js 和 css 走的还是 http，所以 404</p></blockquote><p>根本原因：wordpress 代码里没有开启 https，（wordpress 认为自己是被 http 访问的，毕竟 nginx 是通过 http 来访问它的）</p><h2 id="修改-wordpress-配置"><a href="#修改-wordpress-配置" class="headerlink" title="修改 wordpress 配置"></a>修改 wordpress 配置</h2><blockquote><p>感觉这种方案最靠谱，谁的债谁来还。。</p></blockquote><p>在 <code>wp-config.php</code> 的 <code>if ( ! defined( ‘ABSPATH’ ) )</code> 前面添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FORCE_SSL_LOGIN&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FORCE_SSL_ADMIN&#x27;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h3 id="如果是官方-Docker-容器的话"><a href="#如果是官方-Docker-容器的话" class="headerlink" title="如果是官方 Docker 容器的话"></a>如果是官方 Docker 容器的话</h3><p>强烈建议 Nginx 的 location &#x2F;里面添加一个头：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header X-Forwarded-Proto $scheme;</span><br></pre></td></tr></table></figure><p>wordpress 官方 Docker 镜像会检测这个头来判断是否代码里开启 https</p><p>原因是在：<br>wp-config.php 里面， 为了开启下面的参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]) &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>] === <span class="string">&#x27;https&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://github.com/docker-library/wordpress/pull/142">https://github.com/docker-library/wordpress/pull/142</a></p><p><a href="https://hub.docker.com/_/wordpress">https://hub.docker.com/_/wordpress</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Proxy </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openSUSE常用配置</title>
      <link href="/posts/9f2e533a/"/>
      <url>/posts/9f2e533a/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-vscode"><a href="#安装-vscode" class="headerlink" title="安装 vscode"></a>安装 vscode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc</span><br><span class="line">sudo sh -c <span class="string">&#x27;echo -e &quot;[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ntype=rpm-md\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&quot; &gt; /etc/zypp/repos.d/vscode.repo&#x27;</span></span><br><span class="line"></span><br><span class="line">sudo zypper refresh</span><br><span class="line">sudo zypper install code</span><br></pre></td></tr></table></figure><h2 id="安装-vmware-workstation"><a href="#安装-vmware-workstation" class="headerlink" title="安装 vmware workstation"></a>安装 vmware workstation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install gcc gcc-c++ kernel-source kernel-syms</span><br></pre></td></tr></table></figure><p>然后正常安装 vmware-workstation</p><h2 id="关闭休眠，虚拟机建议操作一下"><a href="#关闭休眠，虚拟机建议操作一下" class="headerlink" title="关闭休眠，虚拟机建议操作一下"></a>关闭休眠，虚拟机建议操作一下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop sleep.target suspend.target hibernate.target hybrid-sleep.target</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> sleep.target suspend.target hibernate.target hybrid-sleep.target</span><br><span class="line">sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target</span><br></pre></td></tr></table></figure><h2 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install fcitx-rime</span><br></pre></td></tr></table></figure><p>在 wayland 下不能自动启动输入法，解决方案：<br>最新的稳定版 Fcitx 和 iBus 都已经了基本的 Wayland 支持，通过 X 的协议转接现。下一代的 Fcitx 将会提供对 Wayland 的直接支持。<br>Wayland 读取的环境配置文件是 &#x2F;etc&#x2F;environment 而不是 X 所读取的环境变量文件。因此对 X 有效的输入法配置在 Wayland 上不起效果了。以管理员权限编辑它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/environment</span><br></pre></td></tr></table></figure><p>这个文件应该是空的，只有几行注释。</p><ul><li><p>以 Fcitx 为例：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INPUT_METHOD=fcitx</span><br><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure></li><li><p>如果您使用 iBus 的话，那么应该添加这几行：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INPUT_METHOD=ibus</span><br><span class="line">GTK_IM_MODULE=ibus</span><br><span class="line">QT_IM_MODULE=ibus</span><br><span class="line">XMODIFIERS=@im=ibus</span><br></pre></td></tr></table></figure></li></ul><p>之后请重启您的系统。</p><h2 id="安装-RDP-客户端"><a href="#安装-RDP-客户端" class="headerlink" title="安装 RDP 客户端"></a>安装 RDP 客户端</h2><h3 id="使用-freerdp"><a href="#使用-freerdp" class="headerlink" title="使用 freerdp"></a>使用 freerdp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install freerdp</span><br></pre></td></tr></table></figure><blockquote><p>如果提示 <code>Failed to find libav H.264 codec</code>，则需要安装<br><code>wget https://opensuse-community.org/codecs-kde.ymp</code> ，在 dolphin 里面打开这个文件<br>官方说明：<a href="https://opensuse-guide.org/codecs.php">https://opensuse-guide.org/codecs.php</a></p></blockquote><p>连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp /v:192.168.2.138 /u:&lt;your username&gt; /p:&lt;your password&gt; /w:1920 /h:1080 /cert:ignore</span><br></pre></td></tr></table></figure><h3 id="使用-remmina"><a href="#使用-remmina" class="headerlink" title="使用 remmina"></a>使用 remmina</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install remmina remmina-plugin-rdp</span><br></pre></td></tr></table></figure><h2 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h2><p>64-bit : zypper install Mesa-libGL1 Mesa<br>32-bit : zypper install Mesa-libGL1-32bit Mesa-32bit</p><h2 id="包管理-zypper"><a href="#包管理-zypper" class="headerlink" title="包管理 zypper"></a>包管理 zypper</h2><h3 id="搜索文件属于哪个包"><a href="#搜索文件属于哪个包" class="headerlink" title="搜索文件属于哪个包"></a>搜索文件属于哪个包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper search --provides /usr/bin/python3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过inode删除文件</title>
      <link href="/posts/33d6f438/"/>
      <url>/posts/33d6f438/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有时候会有一些文件名是乱码的文件无法删除，这时候可以通过 inode 来删除。</p></blockquote><h2 id="获取文件的-inode"><a href="#获取文件的-inode" class="headerlink" title="获取文件的 inode"></a>获取文件的 inode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -ali</span><br></pre></td></tr></table></figure><p>第一列就是文件的 inode</p><h2 id="通过-inode-删除"><a href="#通过-inode-删除" class="headerlink" title="通过 inode 删除"></a>通过 inode 删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -inum 527084 -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash中双横线的作用</title>
      <link href="/posts/314a3942/"/>
      <url>/posts/314a3942/</url>
      
        <content type="html"><![CDATA[<p>看个例子：</p><blockquote><p>假设有个文件叫 <code>-f</code>， 我想把这个文件删除<br>假设我要用 <code>rm -f -f</code> 来删除，会发现无法删除，bash 把第二个 <code>-f</code> 当作参数了</p></blockquote><p>这个时候可以使用 <code>--</code>(当然有其他方法，这里先不讨论)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f -- -f</span><br></pre></td></tr></table></figure><p>这里的 <code>--</code> 表示这个程序的参数已经结束了，后面所有的内容都是参数的值了，比如第二个 <code>-f</code> 就不会认为它是 rm 的参数了</p><p>现在使用 kubectl exec 也会推荐你用 – 后面再接上命令</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unix口令生成与使用</title>
      <link href="/posts/6447a6a9/"/>
      <url>/posts/6447a6a9/</url>
      
        <content type="html"><![CDATA[<p>这个密码有什么用:<br>&#x2F;etc&#x2F;shadow linux 用户密码就是通过这种方法 hash 的<br>http basic auth 的密码也是通过这种方式生成的</p><h2 id="通过-openssl-生成"><a href="#通过-openssl-生成" class="headerlink" title="通过 openssl 生成"></a>通过 openssl 生成</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">openssl passwd -6 123456</span><br><span class="line"></span><br><span class="line">参数的含义：</span><br><span class="line"> -6                  SHA512-based password algorithm</span><br><span class="line"> -5                  SHA256-based password algorithm</span><br><span class="line"> -apr1               MD5-based password algorithm, Apache variant</span><br><span class="line"> -1                  MD5-based password algorithm</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">openssl passwd -1 123456</span><br></pre></td></tr></table></figure><blockquote><p>就能生成一串字符串，其中参数 6 是最长的，1 是最短的，后面 123456 是要加密的密码<br>仔细观察会发现每次生成的密码都是不同的，那是因为每次执行 openssl 会随机生成一个 salt 值，<br>可以有效防止字典反推，比如 123456 这种弱密码</p></blockquote><p>手动指定 salt 值后，每次生成的密码都是一样的了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -salt zlk -6 123456</span><br></pre></td></tr></table></figure><h2 id="通过-htpasswd-生成"><a href="#通过-htpasswd-生成" class="headerlink" title="通过 htpasswd 生成"></a>通过 htpasswd 生成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu or Debian</span></span><br><span class="line">apt install apache2-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rhel or CentOS:</span></span><br><span class="line">yum install httpd-tools</span><br></pre></td></tr></table></figure><p>生成密码, 密码文件为 <code>.htpasswd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -bcd .htpasswd username password</span><br></pre></td></tr></table></figure><h2 id="通过-python-生成"><a href="#通过-python-生成" class="headerlink" title="通过 python 生成"></a>通过 python 生成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import crypt; print(crypt.crypt(&quot;123456&quot;,&quot;salt&quot;))&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>salt 是盐值，在密码学中，是指通过在密码任意固定位置插入特定的字符串，让散列后的结果和使用原始密码的散列结果不相符，这种过程称之为“加盐”。不同盐值生成的密码是不同的，能一定程度上防止反推出密码。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Auth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在没有密码的情况下给Windows植入恶意软件（离线攻击）</title>
      <link href="/posts/shtwtk/"/>
      <url>/posts/shtwtk/</url>
      
        <content type="html"><![CDATA[<p>什么是离线攻击，通俗点说就是电脑主人离开了电脑，黑客跑到电脑面前进行破解的方法🤣。这种破解方式主要是通过修改 Windows 的 SAM 文件来达到获取权限的目的。</p><h2 id="Windows-的-SAM-文件"><a href="#Windows-的-SAM-文件" class="headerlink" title="Windows 的 SAM 文件"></a>Windows 的 SAM 文件</h2><p>Windows 的 SAM 文件（Security Accounts Manager）是一个用于存储本地用户账户和密码散列值的数据库文件。它在 Windows 操作系统中扮演着至关重要的角色，用于管理本地安全和账户信息。SAM 文件通常位于 C:\Windows\System32\config 目录中。</p><p>SAM 文件的原理</p><ul><li>账户信息存储：SAM 文件包含了本地用户账户的信息，包括用户名和相关的安全标识符（SID）。每个用户都有一个唯一的 SID，用于标识用户和控制访问权限。</li><li>密码存储：为了安全起见，SAM 文件不直接存储用户的明文密码，而是存储密码的散列值。Windows 使用 NTLM（NT LAN Manager）协议生成这些散列值。具体而言，NTLM 采用 MD4 散列算法对用户密码进行散列。</li><li>加密保护：为了进一步保护 SAM 文件中的数据，Windows 对其进行加密。加密密钥存储在一个名为 SYSTEM 的文件中。攻击者需要同时访问 SAM 和 SYSTEM 文件才能解密和破解密码散列值。</li><li>注册表访问：在系统运行时，SAM 文件作为 Windows 注册表的一部分，通过 <code>HKEY_LOCAL_MACHINE\SAM</code> 路径访问。由于安全原因，只有具有系统级权限的用户（如 SYSTEM 账户）才能直接访问该路径。</li></ul><h2 id="提前要求"><a href="#提前要求" class="headerlink" title="提前要求"></a>提前要求</h2><ul><li>物理接触，能摸到电脑，可以插入 U 盘</li><li>BIOS&#x2F;UEFI 不能设置密码，可以通过 U 盘启动电脑</li><li>Windows 系统盘不能开启 BitLocker 磁盘加密</li></ul><p>满足这些条件后，可以尝试进行植入木马病毒。</p><h2 id="确定下使用的账户"><a href="#确定下使用的账户" class="headerlink" title="确定下使用的账户"></a>确定下使用的账户</h2><p>一般来说一台电脑只有一个 Windows 用户，记录下日常使用的用户名。</p><h2 id="使用-U-盘进入-PE-系统"><a href="#使用-U-盘进入-PE-系统" class="headerlink" title="使用 U 盘进入 PE 系统"></a>使用 U 盘进入 PE 系统</h2><p>进入 PE 系统，将 SAM 文件备份（用于之后恢复密码）<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408071251917.png" alt="image.png"></p><p>用 NTPWEdit 或者 Dism++ 修改账户密码<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202408071253647.png" alt="image.png"></p><p>保存重启后，即可正常进入桌面。植入木马程序后，再次重启进入 PE， 将上面备份的 SAM 文件恢复到原始位置。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shell数学运算</title>
      <link href="/posts/cd044a59/"/>
      <url>/posts/cd044a59/</url>
      
        <content type="html"><![CDATA[<h2 id="bash-自带的数学运算"><a href="#bash-自带的数学运算" class="headerlink" title="bash 自带的数学运算"></a>bash 自带的数学运算</h2><blockquote><p>不依赖其他包，只要你的 shell 是 bash</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(( <span class="number">1</span>  + <span class="number">1</span> ))</span><br><span class="line"><span class="built_in">echo</span> $(( <span class="number">1</span>  - <span class="number">3</span> ))</span><br><span class="line"><span class="built_in">echo</span> $(( <span class="number">10</span> * <span class="number">3</span> ))</span><br><span class="line"><span class="built_in">echo</span> $(( <span class="number">10</span> / <span class="number">3</span> ))</span><br></pre></td></tr></table></figure><h2 id="expr"><a href="#expr" class="headerlink" title="expr"></a>expr</h2><blockquote><p>expr 可以当计算器用不过它主要还是个计数器</p></blockquote><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算字符串长度</span></span><br><span class="line"><span class="built_in">expr</span> length <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取字符串，3表示从第3个字符开始，5表示抓取的字符串长度</span></span><br><span class="line"><span class="built_in">expr</span> substr <span class="string">&quot;hello world&quot;</span> 3 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取第一个字符串出现的位置</span></span><br><span class="line"><span class="built_in">expr</span> index <span class="string">&quot;hello world&quot;</span> o</span><br></pre></td></tr></table></figure><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">expr</span> 10 % 3</span><br><span class="line"><span class="built_in">expr</span> 10 + 10</span><br><span class="line"><span class="built_in">expr</span> 30 / 3 / 2</span><br><span class="line"><span class="built_in">expr</span> 30 \* 3        <span class="comment"># 使用乘号时，必须用反斜线屏蔽其特定含义。</span></span><br></pre></td></tr></table></figure><h2 id="bc"><a href="#bc" class="headerlink" title="bc"></a>bc</h2><blockquote><p>bc 是一个命令行的计算器工具，有些过于精简的发行版没有自带。</p></blockquote><p>支持浮点数四则运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1.1 + 2.2&quot;</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1.1 - 2.2&quot;</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2 * 2.2&quot;</span> | bc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法取得是整数部分，小数部分舍弃</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;9 / 6&quot;</span> | bc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留小数点后两位</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;scale=2; 9/6&quot;</span> | bc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开根号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sqrt(100)&quot;</span> | bc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10^3&quot;</span> | bc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取余数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10 % 3&quot;</span> | bc</span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print 4.5+3.4 &#125;&#x27;</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print 4.5-3.4 &#125;&#x27;</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print 4.5*3.4 &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法awk会保留小数点后6位</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print 1/3 &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 混合运算</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print (2.2 - 1.1)*2+3 &#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7升级到RHEL8</title>
      <link href="/posts/6d586ed1/"/>
      <url>/posts/6d586ed1/</url>
      
        <content type="html"><![CDATA[<p>本文依照 redhat 官方文档制作，总共分为两步，先将 centos7 转换为 rhel7，然后再将 rhel7 升级为 rhel8</p><blockquote><p>参考文档：<br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/converting_from_an_rpm-based_linux_distribution_to_rhel/index">CentOS转换为rhel7</a><br><a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/8/html/upgrading_from_rhel_6_to_rhel_8/preparing-the-rhel-7-system-for-an-upgrade-to-rhel-8_upgrading-from-rhel-6-to-rhel-8">rhel7升级为rhel8</a></p></blockquote><h2 id="centos7-升级为-rhel7"><a href="#centos7-升级为-rhel7" class="headerlink" title="centos7 升级为 rhel7"></a>centos7 升级为 rhel7</h2><h3 id="升级到-centos7-最新版"><a href="#升级到-centos7-最新版" class="headerlink" title="升级到 centos7 最新版"></a>升级到 centos7 最新版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; reboot</span><br></pre></td></tr></table></figure><h3 id="安装-convert2rhel"><a href="#安装-convert2rhel" class="headerlink" title="安装 convert2rhel"></a>安装 convert2rhel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release https://www.redhat.com/security/data/fd431d51.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">curl -o /etc/yum.repos.d/convert2rhel.repo https://ftp.redhat.com/redhat/convert2rhel/7/convert2rhel.repo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum install -y convert2rhel</span><br></pre></td></tr></table></figure><h3 id="开始转换"><a href="#开始转换" class="headerlink" title="开始转换"></a>开始转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">convert2rhel --username &lt;替换为你的用户名&gt; --password &lt;替换为你的密码&gt;</span><br><span class="line">不加--pool 会提示手动选择，为了安全也可以不加参数直接运行convert2rhel</span><br></pre></td></tr></table></figure><h2 id="rhel7-升级-rhel8"><a href="#rhel7-升级-rhel8" class="headerlink" title="rhel7 升级 rhel8"></a>rhel7 升级 rhel8</h2><h3 id="启用这两个仓库"><a href="#启用这两个仓库" class="headerlink" title="启用这两个仓库"></a>启用这两个仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">subscription-manager repos --<span class="built_in">enable</span> rhel-7-server-rpms &amp;&amp; \</span><br><span class="line">subscription-manager repos --<span class="built_in">enable</span> rhel-7-server-extras-rpms</span><br></pre></td></tr></table></figure><h3 id="取消版本锁定？"><a href="#取消版本锁定？" class="headerlink" title="取消版本锁定？"></a>取消版本锁定？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">subscription-manager release --<span class="built_in">unset</span></span><br><span class="line">yum versionlock clear</span><br></pre></td></tr></table></figure><h3 id="确保-locale-是-en-US"><a href="#确保-locale-是-en-US" class="headerlink" title="确保 locale 是 en_US"></a>确保 locale 是 en_US</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/locale.conf</span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装-leapp"><a href="#安装-leapp" class="headerlink" title="安装 leapp"></a>安装 leapp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update &amp;&amp; reboot</span><br><span class="line">yum install leapp leapp-repository</span><br></pre></td></tr></table></figure><h3 id="Leapp-实用程序所需的数据"><a href="#Leapp-实用程序所需的数据" class="headerlink" title="Leapp 实用程序所需的数据"></a>Leapp 实用程序所需的数据</h3><blockquote><p>数据来自于<a href="https://access.redhat.com/articles/3664871">https://access.redhat.com/articles/3664871</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf leapp-data14.tar.gz -C /etc/leapp/files &amp;&amp; <span class="built_in">rm</span> leapp-data14.tar.gz</span><br></pre></td></tr></table></figure><h3 id="准备升级，检查问题"><a href="#准备升级，检查问题" class="headerlink" title="准备升级，检查问题"></a>准备升级，检查问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leapp preupgrade</span><br></pre></td></tr></table></figure><h3 id="创建应答文件，做出响应"><a href="#创建应答文件，做出响应" class="headerlink" title="创建应答文件，做出响应"></a>创建应答文件，做出响应</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leapp answer --section remove_pam_pkcs11_module_check.confirm=True</span><br></pre></td></tr></table></figure><p>或者修改 <code>/var/log/leapp/answerfile</code></p><h3 id="开始升级，在终端来升级，不要远程连接"><a href="#开始升级，在终端来升级，不要远程连接" class="headerlink" title="开始升级，在终端来升级，不要远程连接"></a>开始升级，在终端来升级，不要远程连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leapp upgrade</span><br></pre></td></tr></table></figure><h3 id="升级完成清理仓库"><a href="#升级完成清理仓库" class="headerlink" title="升级完成清理仓库"></a>升级完成清理仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove epel-release puppet5-release ...</span><br><span class="line">/etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h3 id="打开-selinux"><a href="#打开-selinux" class="headerlink" title="打开 selinux"></a>打开 selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="升级完检查"><a href="#升级完检查" class="headerlink" title="升级完检查"></a>升级完检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subscription-manager list --installed</span><br><span class="line"><span class="built_in">uname</span> -r</span><br><span class="line">subscription-manager release</span><br><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内核级负载均衡 LVS DR模式 部署记录</title>
      <link href="/posts/5fdc91d7/"/>
      <url>/posts/5fdc91d7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>DR 模式，Director 和 realserver 都在一个内网里面，他们都绑定上同一个 VIP, 原理是通过 Director Server 修改数据包的 MAC 地址， 所以得让 realserver 不响应 arp，不然肯定会造成内网 IP 冲突</p></blockquote><p>规划：</p><table><thead><tr><th>机器</th><th>IP</th></tr></thead><tbody><tr><td>VIP</td><td>10.0.0.8</td></tr><tr><td>director</td><td>10.0.0.41</td></tr><tr><td>realserver1</td><td>10.0.0.42</td></tr><tr><td>realserver2</td><td>10.0.0.43</td></tr><tr><td>网卡 interface</td><td>eth0</td></tr></tbody></table><h2 id="RealServer-设置"><a href="#RealServer-设置" class="headerlink" title="RealServer 设置"></a>RealServer 设置</h2><h3 id="创建虚拟网卡"><a href="#创建虚拟网卡" class="headerlink" title="创建虚拟网卡"></a>创建虚拟网卡</h3><p>个人习惯，可选，可以绑定在任何网卡上面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> add ipvs0 <span class="built_in">type</span> dummy</span><br></pre></td></tr></table></figure><h3 id="配置不响应-ARP-请求"><a href="#配置不响应-ARP-请求" class="headerlink" title="配置不响应 ARP 请求"></a>配置不响应 ARP 请求</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">方法1: 调整内核参数</button><button type="button" class="tab">方法2: 采用arptables</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不响应ARP请求, 修改内核参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/conf/ipvs0/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /proc/sys/net/ipv4/conf/ipvs0/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arptables -A IN -d &lt;virtual_ip&gt; -j DROP</span><br><span class="line">arptables-A OUT -s &lt;virtual_ip&gt; -j mangle --mangle-ip-s &lt;real_ip&gt;</span><br></pre></td></tr></table></figure><blockquote><p>上面的意思是：进来的 ARP，如果目的 IP 是 VIP 的，丢弃; 发出去的 ARP 包，如果源 IP 是 VIP 的，改成 realserver 的 IP。与内核 ARP 参数 arp_ignore&#x3D;1,arp_announce&#x3D;2 的作用是一样的。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disable arp requests on virtual_ip</span></span><br><span class="line">arptables -I INPUT -j DROP -d 10.0.0.8</span><br><span class="line">arptables -I OUTPUT -j mangle -s 10.0.0.8 --mangle-ip-s 10.0.0.42</span><br></pre></td></tr></table></figure><blockquote><p>特别注意：arptables 只是过虑了 ARP 广播包，如果手动绑定 IP 和 MAC，或者存在正确的 MAC 缓存，也是可以和主机通信的</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="绑定-VIP"><a href="#绑定-VIP" class="headerlink" title="绑定 VIP"></a>绑定 VIP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.0.8/32 dev ipvs0</span><br></pre></td></tr></table></figure><h2 id="Director-设置"><a href="#Director-设置" class="headerlink" title="Director 设置"></a>Director 设置</h2><h3 id="添加-VIP"><a href="#添加-VIP" class="headerlink" title="添加 VIP"></a>添加 VIP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip address add 10.0.0.8/24 dev eth0</span><br></pre></td></tr></table></figure><h3 id="配置-ipvs-规则"><a href="#配置-ipvs-规则" class="headerlink" title="配置 ipvs 规则"></a>配置 ipvs 规则</h3><p>rr 是轮询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -A -t 10.0.0.8:80 -s rr</span><br><span class="line">ipvsadm -a -t 10.0.0.8:80 -r 10.0.0.42:80 -g</span><br><span class="line">ipvsadm -a -t 10.0.0.8:80 -r 10.0.0.43:80 -g</span><br><span class="line">ipvsadm</span><br></pre></td></tr></table></figure><h2 id="使用脚本完成以上操作"><a href="#使用脚本完成以上操作" class="headerlink" title="使用脚本完成以上操作"></a>使用脚本完成以上操作</h2><h3 id="start-lvs-realserver-sh"><a href="#start-lvs-realserver-sh" class="headerlink" title="start_lvs_realserver.sh"></a>start_lvs_realserver.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VIP=10.0.0.8</span><br><span class="line">REALIP=10.0.0.42</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable arp requests on virtual_ip</span></span><br><span class="line">arptables -I INPUT -j DROP -d <span class="variable">$VIP</span></span><br><span class="line">arptables -I OUTPUT -j mangle -s <span class="variable">$VIP</span> --mangle-ip-s <span class="variable">$REALIP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add vip after arptables is initialized</span></span><br><span class="line">ip <span class="built_in">link</span> add ipvs0 <span class="built_in">type</span> dummy</span><br><span class="line">ip addr add <span class="variable">$VIP</span>/32 brd + dev ipvs0</span><br></pre></td></tr></table></figure><h3 id="stop-lvs-realserver-sh"><a href="#stop-lvs-realserver-sh" class="headerlink" title="stop_lvs_realserver.sh"></a>stop_lvs_realserver.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">VIP=10.0.0.8</span><br><span class="line">REALIP=10.0.0.42</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop realserver</span></span><br><span class="line">ip addr del <span class="variable">$VIP</span>/32 brd + dev ipvs0</span><br><span class="line">ip <span class="built_in">link</span> del ipvs0</span><br><span class="line">arptables -D INPUT -j DROP -d <span class="variable">$VIP</span></span><br><span class="line">arptables -D OUTPUT -j mangle -s <span class="variable">$VIP</span> --mangle-ip-s <span class="variable">$REALIP</span></span><br></pre></td></tr></table></figure><h3 id="start-lvs-directserver-sh"><a href="#start-lvs-directserver-sh" class="headerlink" title="start_lvs_directserver.sh"></a>start_lvs_directserver.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.0.8 dev eth0</span><br><span class="line">ipvsadm -A -t 10.0.0.8:80 -s rr</span><br><span class="line">ipvsadm -a -t 10.0.0.8:80 -r 10.0.0.42:80 -g</span><br><span class="line">ipvsadm -a -t 10.0.0.8:80 -r 10.0.0.43:80 -g</span><br></pre></td></tr></table></figure><h3 id="stop-lvs-directserver-sh"><a href="#stop-lvs-directserver-sh" class="headerlink" title="stop_lvs_directserver.sh"></a>stop_lvs_directserver.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip addr del 10.0.0.8 dev eth0</span><br><span class="line">ipvsadm -C</span><br></pre></td></tr></table></figure><h2 id="高可用方案"><a href="#高可用方案" class="headerlink" title="高可用方案"></a>高可用方案</h2><p><a href="/posts/675d47a9">使用keepalived完成LVS高可用</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Network </tag>
            
            <tag> LoadBalance </tag>
            
            <tag> keepalived </tag>
            
            <tag> HA </tag>
            
            <tag> lvs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell指定分隔符</title>
      <link href="/posts/e93bd813/"/>
      <url>/posts/e93bd813/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为什么要指定换行符，我们看一个例子</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">data=<span class="string">&quot;</span></span><br><span class="line"><span class="string">a b c</span></span><br><span class="line"><span class="string">d e f</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$data</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>输出的结果是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br></pre></td></tr></table></figure><p>因为系统默认把空格和换行都当作了分隔符。为了避免这种情况，我们可以手动指定分隔符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">data=<span class="string">&quot;</span></span><br><span class="line"><span class="string">a b c</span></span><br><span class="line"><span class="string">d e f</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span>        <span class="comment"># 指定分隔符为换行</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$data</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>这样打印出来的就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a b c</span><br><span class="line">d e f</span><br></pre></td></tr></table></figure><p>再看一个例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=<span class="string">&quot;aa,bb,cc,dd,ee&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>输出为：<br><code>aa,bb,cc,dd,ee</code></p><p>我们想要的输出结果可能是这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">ee</span><br></pre></td></tr></table></figure><p>可以修改成这样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">oldIFS=<span class="variable">$IFS</span>        <span class="comment">#定义变量为默认的IFS</span></span><br><span class="line">IFS=,              <span class="comment">#设置默认的分隔符</span></span><br><span class="line">a=<span class="string">&quot;aa,bb,cc,dd,ee&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">IFS=<span class="variable">$oldIFS</span>        <span class="comment">#还原默认值</span></span><br></pre></td></tr></table></figure><blockquote><p>还原默认值这一步也可以不操作，具体看这个操作会不会影响到后面的 shell 命令。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Actions自动发布博客</title>
      <link href="/posts/3debc8f2/"/>
      <url>/posts/3debc8f2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>偶然发现 github actions 可以执行一些命令，这下可以把我的 crontab 停掉了，也不用占用一台机器专门用来发布博客了，并且完全免费！！</p></blockquote><blockquote><p>首先我的 GitHub pages 和博客原始文件是分为两个仓库的，在 GitHub Pages 仓库里添加了一个 Actions 用来钉钉发通知：</p></blockquote><h2 id="GitHub-仓库配置-Secret"><a href="#GitHub-仓库配置-Secret" class="headerlink" title="GitHub 仓库配置 Secret"></a>GitHub 仓库配置 Secret</h2><p>需要先将环境变量配置在 Settings –&gt; Secrets and Variables –&gt; Actions 里面</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202304111133670.png" alt="github Acrions 环境变量配置"></p><p>配置后，可以在 actions 里面通过 <code>$&#123;&#123; secrets.dingtalk_secret &#125;&#125;</code> 调用到对应的数据</p><h2 id="针对-Hexo-博客的构建"><a href="#针对-Hexo-博客的构建" class="headerlink" title="针对 Hexo 博客的构建"></a>针对 Hexo 博客的构建</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy_github_pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 为了解决更新日期问题,从git读取提交时间,然后批量touch一下</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build_hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git ls-files -z | while read -d &#x27;&#x27; path; do touch -d &quot;$(git log -1 --format=&quot;@%ct&quot; &quot;$path&quot;)&quot; &quot;$path&quot;; done</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          npx hexo clean</span></span><br><span class="line"><span class="string">          npx hexo g</span></span><br><span class="line"><span class="string"></span>          </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@4.1.5</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">main</span> <span class="comment"># The branch the action should deploy to.</span></span><br><span class="line">          <span class="attr">FOLDER:</span> <span class="string">public</span> <span class="comment"># The folder the action should deploy.</span></span><br><span class="line">          <span class="attr">ssh-key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SSH_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">repository-name:</span> <span class="string">iuxt/iuxt.github.io</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="针对于-Hugo-博客的构建"><a href="#针对于-Hugo-博客的构建" class="headerlink" title="针对于 Hugo 博客的构建"></a>针对于 Hugo 博客的构建</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span>                                                  <span class="comment"># master更新后执行</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span>  <span class="string">&#x27;0 0 * * *&#x27;</span>                                        <span class="comment"># 每天0点自动执行</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy_github_pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hugo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-hugo@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">hugo-version:</span> <span class="string">&#x27;0.80.0&#x27;</span></span><br><span class="line">          <span class="attr">extended:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config core.quotePath false</span></span><br><span class="line"><span class="string">          hugo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@4.1.4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">main</span>                                          <span class="comment"># 你要发布到哪个分支（GitHub Pages的仓库分支，不是你hugo代码的分支）</span></span><br><span class="line">          <span class="attr">FOLDER:</span> <span class="string">public</span>                                        <span class="comment"># 发布的文件夹，默认就是public</span></span><br><span class="line">          <span class="attr">ssh-key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SSH_KEY</span> <span class="string">&#125;&#125;</span>                <span class="comment"># 我发布到不同的仓库，需要用到私钥，私钥用GitHub Secret来管理，发布同仓库可以去掉这个配置</span></span><br><span class="line">          <span class="attr">repository-name:</span> <span class="string">iuxt/iuxt.github.io</span>                  <span class="comment"># 发布到同仓库的不同分支要去掉这个配置</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">algolia</span> <span class="string">upload</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          npm run algolia                                       # 使用algolia的，可以同时推送到algolia</span></span><br><span class="line"><span class="string"></span>        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ALGOLIA_APP_ID:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALGOLIA_APP_ID</span> <span class="string">&#125;&#125;</span>         <span class="comment"># 一样的，需要在GitHub Secret里面创建键值对。</span></span><br><span class="line">          <span class="attr">ALGOLIA_INDEX_NAME:</span> <span class="string">blog</span></span><br><span class="line">          <span class="attr">ALGOLIA_INDEX_FILE:</span> <span class="string">public/index.json</span></span><br><span class="line">          <span class="attr">ALGOLIA_ADMIN_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALGOLIA_ADMIN_KEY</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="推送到百度，加快收录"><a href="#推送到百度，加快收录" class="headerlink" title="推送到百度，加快收录"></a>推送到百度，加快收录</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Baidu</span> <span class="string">push</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span>  <span class="string">&#x27;0 0 * * *&#x27;</span>                            <span class="comment"># 使用crontab定时执行，0点实际执行时间是9点，可能是时区问题</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">baidu-push:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span>                   <span class="comment"># 拉取代码，并拉取git submodule</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hugo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-hugo@v2</span>             <span class="comment"># hugo环境，用的是别人写好的actions</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">hugo-version:</span> <span class="string">&#x27;0.80.0&#x27;</span></span><br><span class="line">          <span class="attr">extended:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config core.quotePath false</span></span><br><span class="line"><span class="string">          hugo                                      # 使用hugo命令生成静态文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">requests</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">requests</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Push</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          python &lt;&lt;END</span></span><br><span class="line"><span class="string">          import requests</span></span><br><span class="line"><span class="string">          import re</span></span><br><span class="line"><span class="string">          with open(&#x27;public/sitemap.xml&#x27;, &#x27;r&#x27;) as sitemap:</span></span><br><span class="line"><span class="string">            pattern = re.compile(r&#x27;(?&lt;=&lt;loc&gt;).+?(?=&lt;/loc&gt;)&#x27;)</span></span><br><span class="line"><span class="string">            result = pattern.findall(sitemap.read())[:9]</span></span><br><span class="line"><span class="string">            req = requests.post(&#x27;http://data.zz.baidu.com/urls?site=https://zahui.fan&amp;token=$&#123;&#123; secrets.BAIDU_PUSH_TOKEN &#125;&#125;&#x27;, &#x27;\n&#x27;.join(result))</span></span><br><span class="line"><span class="string">            print(req.text)</span></span><br><span class="line"><span class="string">          END</span></span><br></pre></td></tr></table></figure><p>推送到百度有可能会失败， 需要减少推送的数量， 对于我来说，推送 9 条不会报错。</p><h2 id="发送钉钉通知"><a href="#发送钉钉通知" class="headerlink" title="发送钉钉通知"></a>发送钉钉通知</h2><blockquote><p>这个我配置在了静态文件所在的仓库，就是 hexo 构建完成推送到的仓库，每当仓库发生了更新， 就会推送一条通知到钉钉</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">dingtalk_notify</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span>                                 <span class="comment"># 在收到push的时候触发</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span>                            <span class="comment"># 监控main分支</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">dingtalk_notify:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span>              <span class="comment"># 用ubuntu系统来执行</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dingtalk_notify</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          python &lt;&lt;END</span></span><br><span class="line"><span class="string">          import time</span></span><br><span class="line"><span class="string">          import hmac</span></span><br><span class="line"><span class="string">          import hashlib</span></span><br><span class="line"><span class="string">          import base64</span></span><br><span class="line"><span class="string">          import urllib.parse</span></span><br><span class="line"><span class="string">          import requests</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">          <span class="string">now</span> <span class="string">=</span> <span class="string">str(time.strftime(&quot;%Y-%m-%d</span> <span class="string">%H:%M:%S&quot;,</span> <span class="string">time.localtime()))</span></span><br><span class="line"></span><br><span class="line">          <span class="string">secret</span> <span class="string">=</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; secrets.dingtalk_secret &#125;&#125;</span>&quot;</span>                         <span class="comment"># 这里是GitHub Secret， 需要在仓库设置里创建对应的键值对</span></span><br><span class="line">          <span class="string">webhook_url</span> <span class="string">=</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; secrets.dingtalk_url &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 根据时间戳生成签名</span></span><br><span class="line">          <span class="string">timestamp</span> <span class="string">=</span> <span class="string">str(round(time.time()</span> <span class="string">*</span> <span class="number">1000</span><span class="string">))</span></span><br><span class="line">          <span class="string">secret_enc</span> <span class="string">=</span> <span class="string">secret.encode(&#x27;utf-8&#x27;)</span></span><br><span class="line">          <span class="string">string_to_sign</span> <span class="string">=</span> <span class="string">&#x27;&#123;&#125;\n&#123;&#125;&#x27;</span><span class="string">.format(timestamp,</span> <span class="string">secret)</span></span><br><span class="line">          <span class="string">string_to_sign_enc</span> <span class="string">=</span> <span class="string">string_to_sign.encode(&#x27;utf-8&#x27;)</span></span><br><span class="line">          <span class="string">hmac_code</span> <span class="string">=</span> <span class="string">hmac.new(secret_enc,</span> <span class="string">string_to_sign_enc,</span> <span class="string">digestmod=hashlib.sha256).digest()</span></span><br><span class="line">          <span class="string">sign</span> <span class="string">=</span> <span class="string">urllib.parse.quote_plus(base64.b64encode(hmac_code))</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 要发送的数据</span></span><br><span class="line">          <span class="string">data</span> <span class="string">=</span> <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">              &quot;</span><span class="string">msgtype&quot;:&quot;text&quot;,</span></span><br><span class="line">              <span class="attr">&quot;text&quot;:</span> &#123;</span><br><span class="line">                  <span class="attr">&quot;content&quot;:</span> <span class="string">&quot;%s %s&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">          <span class="string">&#125;</span></span><br><span class="line">          <span class="string">&quot;&quot;</span><span class="string">&quot; %(now, &quot;</span><span class="string">博客自动发布成功&quot;)</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># url参数</span></span><br><span class="line">          <span class="string">params=&#123;</span></span><br><span class="line">              <span class="attr">&#x27;timestamp&#x27;:</span> <span class="string">timestamp,</span></span><br><span class="line">              <span class="attr">&#x27;sign&#x27;:</span> <span class="string">sign</span></span><br><span class="line">          <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># header</span></span><br><span class="line">          <span class="string">header</span> <span class="string">=</span> &#123;<span class="attr">&#x27;Content-Type&#x27;:</span> <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment"># post消息出去</span></span><br><span class="line">          <span class="string">r</span> <span class="string">=</span> <span class="string">requests.post(webhook_url,</span> <span class="string">headers=header,</span> <span class="string">params=params,</span> <span class="string">data=data.encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">          <span class="string">print(r.text)</span></span><br><span class="line">          <span class="string">END</span></span><br></pre></td></tr></table></figure><h2 id="使用-Github-Actions-造成的文章更新时间问题"><a href="#使用-Github-Actions-造成的文章更新时间问题" class="headerlink" title="使用 Github Actions 造成的文章更新时间问题"></a>使用 Github Actions 造成的文章更新时间问题</h2><p>参考原文：<a href="https://mrseawave.github.io/blogs/articles/2021/01/07/ci-hexo-update-time/">https://mrseawave.github.io/blogs/articles/2021/01/07/ci-hexo-update-time/</a></p><p>当使用 Travis CI or Github Actions 自动化部署时，发现部署成功后，所有文章的更新时间都变成了此次提交修改的时间，但有些文章在上一次提交后是没有发生过任何修改的。</p><p>这是因为 git 在推送更新时，并不记录保存文件的访问时间、修改时间等元信息，（<a href="https://archive.kernel.org/oldwiki/git.wiki.kernel.org/index.php/Git_FAQ.html?spm=a2c4e.10696291.0.0.671919a4OeAqE1#Why_isn.27t_Git_preserving_modification_time_on_files.3F">原因在这里</a>）所以每次使用 git 把项目 clone 下来时，文件的时间都是克隆时的时间。又因为如果没有在 front-matter 中指定 updated，Hexo 会默认使用文件的最后修改时间作为文章的更新时间，所以会出现所有文章的更新时间都发生变化的情况。</p><p>总的来说，使用 git clone 下来的文件的时间都不是原来文件的时间，而自动化部署每次都需要 clone 源码才能进行后面的生成和部署操作，所以目前如果想正确显示更新时间。对于 Github Actions 可以使用命令在构建之前进行处理</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy_gh_pages:</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Restore</span> <span class="string">file</span> <span class="string">modification</span> <span class="string">time</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">git</span> <span class="string">ls-files</span> <span class="string">-z</span> <span class="string">|</span> <span class="string">while</span> <span class="string">read</span> <span class="string">-d</span> <span class="string">&#x27;&#x27;</span> <span class="string">path;</span> <span class="string">do</span> <span class="string">touch</span> <span class="string">-d</span> <span class="string">&quot;$(git log -1 --format=&quot;</span><span class="string">@%ct&quot;</span> <span class="string">&quot;$path&quot;</span><span class="string">)&quot;</span> <span class="string">&quot;$path&quot;</span><span class="string">;</span> <span class="string">done</span></span><br></pre></td></tr></table></figure><p>如果 git 命令不好用， 也可以使用 find 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="built_in">source</span>/_posts -name <span class="string">&#x27;*.md&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span> <span class="built_in">touch</span> -d <span class="string">&quot;<span class="subst">$(git log -1 --format=<span class="string">&quot;@%ct&quot;</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span>)</span>&quot;</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实际上，clone 下来的文件的时间还是克隆时的时间，然后通过上面的命令，它将 clone 下来的文件的时间改成了该文件最近一次变动的推送时间（也即文件最后一次修改的 push 时间）。</p><p>注：如果 github actions 中使用 actions&#x2F;checkout@v2，请设定它的参数 fetch-depth: 0，因为 0 表示获取所有分支和标签的所有历史记录。默认值为 1</p><h2 id="时区问题"><a href="#时区问题" class="headerlink" title="时区问题"></a>时区问题</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">notify</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">dingtalk_notify:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="string">.........</span></span><br></pre></td></tr></table></figure><h2 id="推送条件"><a href="#推送条件" class="headerlink" title="推送条件"></a>推送条件</h2><p>我不希望任何更改都去执行 <code>GitHub Actions</code> 构建，查找了文档， 可以这么配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">    <span class="comment"># 下面这些目录发生变化才会触发 GitHub Actions</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/工具/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/基础运维/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/监控/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/开发/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/日志/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/数据库/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/Kubernetes/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;source/_posts/Windows/**&#x27;</span></span><br></pre></td></tr></table></figure><p>这样配置，只有更新了这些目录下的文件，才会自动执行 <code>Github Actions</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automatic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows个人文件夹名字变英文</title>
      <link href="/posts/f6f77df5/"/>
      <url>/posts/f6f77df5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有时候 windows 用户文件夹里面有些会变成英文,虽然没什么影响,不过强迫症会不舒服 (比如我)<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/3356113696516.png" alt="现象"></p></blockquote><p>这种情况是由于文件夹内没有 <code>desktop.ini</code> 导致的,或者 <code>desktop.ini</code> 权限不正确</p><blockquote><p>desktop.ini 文件是一个隐藏文件</p></blockquote><h2 id="windows10-的-desktop-ini-文件内容"><a href="#windows10-的-desktop-ini-文件内容" class="headerlink" title="windows10 的 desktop.ini 文件内容"></a>windows10 的 desktop.ini 文件内容</h2><p>下载:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21798</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">184</span></span><br></pre></td></tr></table></figure><p>桌面:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21769</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">183</span></span><br><span class="line"><span class="section">[&#123;E8A54E83-A4A0-4C7F-B391-DF76B9DB9690&#125;]</span></span><br><span class="line"><span class="attr">AppID</span>=&#123;<span class="number">1</span>EC9B-E1972AA-E5401EC-<span class="number">9</span>BE1-<span class="number">932</span>A-EE540&#125;</span><br></pre></td></tr></table></figure><p>文档:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21770</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">112</span></span><br><span class="line"><span class="attr">IconFile</span>=%SystemRoot%\system32\shell32.dll</span><br><span class="line"><span class="attr">IconIndex</span>=-<span class="number">235</span></span><br></pre></td></tr></table></figure><p>图片:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21779</span></span><br><span class="line"><span class="attr">InfoTip</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">12688</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">113</span></span><br><span class="line"><span class="attr">IconFile</span>=%SystemRoot%\system32\shell32.dll</span><br><span class="line"><span class="attr">IconIndex</span>=-<span class="number">236</span></span><br></pre></td></tr></table></figure><p>视频:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21779</span></span><br><span class="line"><span class="attr">InfoTip</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">12688</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">113</span></span><br><span class="line"><span class="attr">IconFile</span>=%SystemRoot%\system32\shell32.dll</span><br><span class="line"><span class="attr">IconIndex</span>=-<span class="number">236</span></span><br></pre></td></tr></table></figure><p>音乐:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">21790</span></span><br><span class="line"><span class="attr">InfoTip</span>=@%SystemRoot%\system32\shell32.dll,-<span class="number">12689</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">108</span></span><br><span class="line"><span class="attr">IconFile</span>=%SystemRoot%\system32\shell32.dll</span><br><span class="line"><span class="attr">IconIndex</span>=-<span class="number">237</span></span><br></pre></td></tr></table></figure><p>3D 对象:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[.ShellClassInfo]</span></span><br><span class="line"><span class="attr">LocalizedResourceName</span>=@%SystemRoot%\system32\windows.storage.dll,-<span class="number">21825</span></span><br><span class="line"><span class="attr">IconResource</span>=%SystemRoot%\system32\imageres.dll,-<span class="number">198</span></span><br></pre></td></tr></table></figure><h2 id="重新授权"><a href="#重新授权" class="headerlink" title="重新授权"></a>重新授权</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\<span class="number">3</span>D Objects&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Videos&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Pictures&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Documents&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Downloads&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Music&quot;</span><br><span class="line"><span class="built_in">attrib</span> +R &quot;<span class="variable">%UserProFile%</span>\Desktop&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟机常用操作记录</title>
      <link href="/posts/4926dc90/"/>
      <url>/posts/4926dc90/</url>
      
        <content type="html"><![CDATA[<h2 id="检查前提条件"><a href="#检查前提条件" class="headerlink" title="检查前提条件"></a>检查前提条件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是 Intel 的 CPU, 输出 VMX;如果是 AMD 的 CPU, 输出 SVM</span></span><br><span class="line">grep -Eoc <span class="string">&#x27;(vmx|svm)&#x27;</span> /proc/cpuinfo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用 kvm-ok 工具监测</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install cpu-checker</span><br><span class="line">kvm-ok</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装-kvm"><a href="#安装-kvm" class="headerlink" title="安装 kvm"></a>安装 kvm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst libvirt-daemon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装图形管理工具（可选）</span></span><br><span class="line"><span class="comment"># apt install virt-manager -y</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">sudo systemctl is-active libvirtd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加用户权限</span></span><br><span class="line">sudo usermod -aG libvirt <span class="variable">$USER</span></span><br><span class="line">sudo usermod -aG kvm <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><h2 id="添加和删除网卡（虚拟硬件）"><a href="#添加和删除网卡（虚拟硬件）" class="headerlink" title="添加和删除网卡（虚拟硬件）"></a>添加和删除网卡（虚拟硬件）</h2><p>要列出要在 KVM 虚拟机中使用的可用网络，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh net-list --all</span><br></pre></td></tr></table></figure><p>默认情况下是不活跃的，需要启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh net-start default</span><br><span class="line">virsh net-autostart default</span><br></pre></td></tr></table></figure><h3 id="查看网卡列表"><a href="#查看网卡列表" class="headerlink" title="查看网卡列表"></a>查看网卡列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh domiflist vm-yaohai</span><br></pre></td></tr></table></figure><h3 id="添加网卡-模式桥接到-br0"><a href="#添加网卡-模式桥接到-br0" class="headerlink" title="添加网卡 (模式桥接到 br0)"></a>添加网卡 (模式桥接到 br0)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh attach-interface vm-yaohai --<span class="built_in">type</span> bridge --<span class="built_in">source</span> br0 --model virtio --config</span><br></pre></td></tr></table></figure><h3 id="删除网卡-指定-mac-地址删除"><a href="#删除网卡-指定-mac-地址删除" class="headerlink" title="删除网卡 (指定 mac 地址删除)"></a>删除网卡 (指定 mac 地址删除)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh detach-interface vm-yaohai --<span class="built_in">type</span> bridge --mac 52:54:00:61:4c:f3 --config</span><br></pre></td></tr></table></figure><p><del>添加网卡或删除网卡后需要重新定义,不然重启会失效</del></p><p><del>virsh dumpxml vm-yaohai &gt; &#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;vm-yaohai.xml</del><br><del>virsh define &#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;vm-yaohai.xml</del></p><h2 id="kvm-默认网桥"><a href="#kvm-默认网桥" class="headerlink" title="kvm 默认网桥"></a>kvm 默认网桥</h2><blockquote><p>libvirt 默认使用了一个名为 default 的 nat 网络，这个网络默认使用 virbr0 作为桥接接口，使用 dnsmasq 来为使用 nat 网络的虚拟机提供 dns 及 dhcp 服务，dnsmasq 生效后的配置文件：<code>/var/lib/libvirt/network/default.xml</code><br>当 libvirtd 服务启动的时候，它会将它管理的被标记为 autostart 的 network 一并启动起来，而启动 network 的时候就会自动调用 dnsmasq 并赋予其适宜的配置文件来运行服务。</p></blockquote><h3 id="KVM-网桥启动"><a href="#KVM-网桥启动" class="headerlink" title="KVM 网桥启动"></a>KVM 网桥启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default网卡自动启动（virbr0）</span></span><br><span class="line">virsh net-autostart default</span><br><span class="line"></span><br><span class="line"><span class="comment"># default网卡启动（virbr0）</span></span><br><span class="line">virsh net-start default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网卡列表</span></span><br><span class="line">virsh net-list --all</span><br></pre></td></tr></table></figure><h3 id="修改网段"><a href="#修改网段" class="headerlink" title="修改网段"></a>修改网段</h3><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh net-edit default</span><br></pre></td></tr></table></figure><p><del>重新定义</del></p><p><del>&#96;&#96;&#96;bash</del><br><del>sudo virsh net-define &#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;networks&#x2F;default.xml</del><br><del>&#96;&#96;&#96;</del></p><p>重新启动网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh net-destroy default</span><br><span class="line">sudo virsh net-start default</span><br></pre></td></tr></table></figure><h2 id="virsh-常用命令"><a href="#virsh-常用命令" class="headerlink" title="virsh 常用命令"></a>virsh 常用命令</h2><h3 id="查看虚拟机"><a href="#查看虚拟机" class="headerlink" title="查看虚拟机"></a>查看虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh list --all</span><br></pre></td></tr></table></figure><h3 id="销毁虚拟机"><a href="#销毁虚拟机" class="headerlink" title="销毁虚拟机"></a>销毁虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh destroy debian11</span><br><span class="line">virsh undefine debian11</span><br></pre></td></tr></table></figure><h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh shutdown debian11</span><br></pre></td></tr></table></figure><h3 id="创建-Linux-虚拟机"><a href="#创建-Linux-虚拟机" class="headerlink" title="创建 Linux 虚拟机"></a>创建 Linux 虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟机磁盘</span></span><br><span class="line">qemu-img create -f qcow2 /var/lib/libvirt/images/debian11.qcow2 20G</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">    --name debian11 \</span><br><span class="line">    --memory memory=1024,currentMemory=512 \</span><br><span class="line">    --disk path=/var/lib/libvirt/images/debian11.qcow2,size=20 \</span><br><span class="line">    --vcpus 1 \</span><br><span class="line">    --os-type linux \</span><br><span class="line">    --os-variant debian10 \</span><br><span class="line">    --network bridge=br0,model=virtio \</span><br><span class="line">    --graphics none \</span><br><span class="line">    --console pty,target_type=serial \</span><br><span class="line">    --location <span class="string">&#x27;http://mirrors.tencent.com/debian/dists/bullseye/main/installer-amd64/&#x27;</span> \</span><br><span class="line">    --extra-args <span class="string">&#x27;console=ttyS0,115200n8 serial&#x27;</span> \</span><br><span class="line">    --debug</span><br></pre></td></tr></table></figure><h3 id="创建-windows-虚拟机"><a href="#创建-windows-虚拟机" class="headerlink" title="创建 windows 虚拟机"></a>创建 windows 虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">    --name win10 \</span><br><span class="line">    --ram 2048 \</span><br><span class="line">    --disk path=/var/lib/libvirt/images/win10.qcow2,size=20 \</span><br><span class="line">    --vcpus 2 \</span><br><span class="line">    --os-type windows \</span><br><span class="line">    --os-variant win10 \</span><br><span class="line">    --network bridge=br0,model=virtio \</span><br><span class="line">    --graphics none \</span><br><span class="line">    --console pty,target_type=serial \</span><br><span class="line">    --cdrom /home/test/Downloads/Win10_21H1_Chinese(Simplified)_x64.iso \</span><br><span class="line">    --extra-args <span class="string">&#x27;console=ttyS0,115200n8 serial&#x27;</span></span><br></pre></td></tr></table></figure><p>开启 vnc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh vncdisplay win10</span><br></pre></td></tr></table></figure><h3 id="导入虚拟机"><a href="#导入虚拟机" class="headerlink" title="导入虚拟机"></a>导入虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">--name debian11 \</span><br><span class="line">--ram 2048 \</span><br><span class="line">--disk path=/var/lib/libvirt/images/debian11.qcow2,size=20 \</span><br><span class="line">--vcpus 2 \</span><br><span class="line">--os-type linux \</span><br><span class="line">--os-variant debian11 \</span><br><span class="line">--network bridge=br0,model=virtio \</span><br><span class="line">--graphics none \</span><br><span class="line">--console pty,target_type=serial \</span><br><span class="line">--import</span><br></pre></td></tr></table></figure><h3 id="导出虚拟机为-qcow2"><a href="#导出虚拟机为-qcow2" class="headerlink" title="导出虚拟机为 qcow2"></a>导出虚拟机为 qcow2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-clone --original debian11 --name debian11-clone --file /var/lib/libvirt/images/debian11-clone.qcow2</span><br></pre></td></tr></table></figure><h2 id="kickstart-自动装机"><a href="#kickstart-自动装机" class="headerlink" title="kickstart 自动装机"></a>kickstart 自动装机</h2><h3 id="virt-install-命令"><a href="#virt-install-命令" class="headerlink" title="virt-install 命令"></a>virt-install 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">    --hvm --virt-type kvm \</span><br><span class="line">    --accelerate \</span><br><span class="line">    --name vm-1 \</span><br><span class="line">    --os-type linux \</span><br><span class="line">    --os-variant centos-stream8 \</span><br><span class="line">    --vcpus 2 \</span><br><span class="line">    --ram 4096 \</span><br><span class="line">    --disk path=/dev/mapper/lv_name \</span><br><span class="line">    --network <span class="string">&quot;bridge:br0,model=virtio&quot;</span> \</span><br><span class="line">    --nographics \</span><br><span class="line">    --location https://mirrors.aliyun.com/centos/8-stream/BaseOS/x86_64/os/ \</span><br><span class="line">    --initrd-inject=./ks.cfg \</span><br><span class="line">    --cpu host \</span><br><span class="line">    --extra-args <span class="string">&quot;ks=file:/ks.cfg console=tty0 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>后面的 <code>net.ifnames=0 biosdevname=0</code> 是内核参数,将网卡设备名固定为 eth0..eth1 等<br>–os-type 可以通过命令 <code>osinfo-query os</code> 获取</p></blockquote><h3 id="kickstart-内容"><a href="#kickstart-内容" class="headerlink" title="kickstart 内容"></a>kickstart 内容</h3><blockquote><p>在系统安装后桌面上会生成一份 <code>anaconda-ks.cfg</code> 这个就是安装这个系统使用的 kickstart 配置</p></blockquote><p>安装 <code>centos8 stream</code> 的 <code>ks.cfg</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Kickstart file automatically generated by anaconda.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#version=DEVEL</span></span><br><span class="line">install</span><br><span class="line">url --url=<span class="string">&quot;https://mirrors.aliyun.com/centos/8-stream/BaseOS/x86_64/os/&quot;</span></span><br><span class="line">repo --name=<span class="string">&quot;CentOS&quot;</span>  --baseurl=<span class="string">&quot;https://mirrors.aliyun.com/centos/8-stream/BaseOS/x86_64/os/&quot;</span> --cost=100</span><br><span class="line"></span><br><span class="line">lang en_US.UTF-8</span><br><span class="line">keyboard us</span><br><span class="line">network --onboot <span class="built_in">yes</span> --device eth0 --bootproto static --ip 10.0.0.120 --netmask 255.255.0.0 --gateway 10.0.0.8 --noipv6 --nameserver 10.0.0.35,10.0.0.30</span><br><span class="line">network  --hostname=vm-name</span><br><span class="line"></span><br><span class="line"><span class="comment">#default pwd is R/)ydu.?egUdT&#x27;Xl</span></span><br><span class="line">rootpw  --iscrypted $6$7ljjIEi8rX8ydAOv<span class="variable">$N4qtXrPQZIp5n5pbLf</span>/BQ/1BgE0ODHoXGJzCiWCYl006hOhZeITXl.yz0kpRvolScvAMOZ..XzPIX7iiRtV5v/</span><br><span class="line">firewall --service=ssh</span><br><span class="line">authconfig --enableshadow --passalgo=sha512</span><br><span class="line">selinux --enforcing</span><br><span class="line">timezone --utc Asia/Shanghai</span><br><span class="line">text</span><br><span class="line">bootloader --location=mbr --driveorder=vda --append=<span class="string">&quot; crashkernel=auto console=ttyS0,115200n8 net.ifnames=0 biosdevname=0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The following is the partition information you requested</span></span><br><span class="line"><span class="comment"># Note that any partitions you deleted are not expressed</span></span><br><span class="line"><span class="comment"># here so unless you clear all partitions first, this is</span></span><br><span class="line"><span class="comment"># not guaranteed to work</span></span><br><span class="line"></span><br><span class="line">clearpart --all --drives=vda</span><br><span class="line">part /boot --fstype=xfs --size=500</span><br><span class="line">part pv.01 --grow</span><br><span class="line">volgroup vg_os pv.01</span><br><span class="line">logvol / --fstype=xfs --name=lv_root --vgname=vg_os --percent 90</span><br><span class="line"></span><br><span class="line"><span class="comment"># any invalid partition tables found on disks are initialized</span></span><br><span class="line"></span><br><span class="line">zerombr</span><br><span class="line"></span><br><span class="line">%packages</span><br><span class="line">@core</span><br><span class="line">curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># install puppet agent. But it could be very slow, so you have to install it manually</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#%post</span></span><br><span class="line"><span class="comment">#(</span></span><br><span class="line"><span class="comment">#    echo &#x27;Install Puppet&#x27;</span></span><br><span class="line"><span class="comment">#    curl -OL https://yum.puppetlabs.com/puppet6-release-el-7.noarch.rpm</span></span><br><span class="line"><span class="comment">#    rpm -i puppet6-release-el-7.noarch.rpm</span></span><br><span class="line"><span class="comment">#    yum update -y</span></span><br><span class="line"><span class="comment">#    yum install -y puppet-agent</span></span><br><span class="line"><span class="comment">#) 1&gt;&gt; /root/post_install.log 2&gt;&amp;1</span></span><br><span class="line"></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><h2 id="kvm-透传主机-usb-设备"><a href="#kvm-透传主机-usb-设备" class="headerlink" title="kvm 透传主机 usb 设备"></a>kvm 透传主机 usb 设备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG kvm <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><h2 id="kvm-修改配置"><a href="#kvm-修改配置" class="headerlink" title="kvm 修改配置"></a>kvm 修改配置</h2><h3 id="修改内存大小"><a href="#修改内存大小" class="headerlink" title="修改内存大小"></a>修改内存大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh setmaxmem &lt;vm-name&gt; 16G --config</span><br><span class="line">sudo virsh setmem &lt;vm-name&gt; 16G --config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualMachine </tag>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python脚本接受参数</title>
      <link href="/posts/6c12bda4/"/>
      <url>/posts/6c12bda4/</url>
      
        <content type="html"><![CDATA[<p>完善一下 python 脚本，让它支持更完善的参数（长参数、短参数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> getopt, sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_args</span>(<span class="params">args=sys.argv[<span class="number">1</span>:]</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(args, <span class="string">&quot;hvc:w:&quot;</span>, [<span class="string">&quot;help&quot;</span>, <span class="string">&quot;short&quot;</span>, <span class="string">&quot;verbose&quot;</span>, <span class="string">&quot;critical_num=&quot;</span>, <span class="string">&quot;warning_num=&quot;</span>])</span><br><span class="line">    <span class="keyword">except</span> getopt.GetoptError <span class="keyword">as</span> err:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Input parameter error&quot;</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    verbose = <span class="literal">False</span></span><br><span class="line">    short = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt <span class="keyword">in</span> (<span class="string">&quot;-h&quot;</span>, <span class="string">&quot;--help&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            useage:</span></span><br><span class="line"><span class="string">                -h --help          : print help</span></span><br><span class="line"><span class="string">                -v --verbose       : show dmesg oom kill log</span></span><br><span class="line"><span class="string">                -c --critical_num  : How many times is called a critical</span></span><br><span class="line"><span class="string">                -w --warning_num   : How many times is called a warning</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--critical_num&quot;</span>):</span><br><span class="line">            critical_num = arg</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">&quot;-w&quot;</span>, <span class="string">&quot;--warning_num&quot;</span>):</span><br><span class="line">            warning_num = arg</span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">&quot;-s&quot;</span>):</span><br><span class="line">            short = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> opt <span class="keyword">in</span> (<span class="string">&quot;-v&quot;</span>):</span><br><span class="line">            verbose = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> warning_num, critical_num, short, verbose</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(parse_args())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用mimikatz读取windows密码</title>
      <link href="/posts/a80bd06b/"/>
      <url>/posts/a80bd06b/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/gentilkiwi/mimikatz">github地址</a></p><p>mimikatz 是一个小工具，可以查看到 windows 加载进内存的密码数据，首先最起码要使用 Administrator 权限启动</p><p>依次执行：</p><p>从 administrator 提升到 system</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">privilege::<span class="title">debug</span>  </span></span><br></pre></td></tr></table></figure><p>获取明文密码</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sekurlsa::<span class="title">logonpasswords</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Puppet遍历hash生成array</title>
      <link href="/posts/bee2f20f/"/>
      <url>/posts/bee2f20f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>公司的 nagios 监控是使用 puppet 来进行自动部署的，但是需要手动修改 puppet 配置才能生效，现在的问题是添加一个新机器得先在 puppet 上添加机器，然后添加到相对应的组，我们想能否让它自动添加到对应的组里面。</p></blockquote><p>vim nagios_server.pp</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">nagios::nagios::add_linux_remote &#123;</span><br><span class="line">        <span class="string">&#x27;guangzhou.localhost.com&#x27;</span> :</span><br><span class="line">        addr     =&gt; <span class="string">&#x27;10.0.0.9&#x27;</span>,</span><br><span class="line">        services =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_load&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Current Load&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;,</span><br><span class="line">                     ...</span><br><span class="line">                     &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_zombie_procs&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Zombie Processes&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;];</span><br><span class="line">        <span class="string">&#x27;tianjin.localhost.com&#x27;</span> :</span><br><span class="line">        addr     =&gt; <span class="string">&#x27;10.0.0.90&#x27;</span>,</span><br><span class="line">        services =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_load&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Current Load&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;,</span><br><span class="line">                     ...</span><br><span class="line">                     &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_zombie_procs&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Zombie Processes&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> &#123; <span class="string">&#x27;nagios::nagios&#x27;</span>:</span><br><span class="line">        hostgroups =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;supermicro&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Supermicro Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; [<span class="string">&#x27;guangzhou.localhost.com&#x27;</span> ... <span class="string">&#x27;yingtan.localhost.com&#x27;</span>]&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;windows&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Windows Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; [<span class="string">&#x27;win2016-dc.localhost.com&#x27;</span> ... <span class="string">&#x27;win2016-oos8.localhost.com&#x27;</span>]&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;vms&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Virtual Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; [<span class="string">&#x27;tianjin.localhost.com&#x27;</span> ... <span class="string">&#x27;erdao.localhost.com&#x27;</span>]&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;edc&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span>  =&gt; <span class="string">&#x27;edc servers&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; [<span class="string">&#x27;bjedc1.localhost.com&#x27;</span> ... <span class="string">&#x27;cdcbjedc3.localhost.com&#x27;</span>]&#125;,</span><br><span class="line">                      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过循环来调用 add_linux_remote 来创建很多个配置文件。安装 nagios（省略）和生成 hostgroup.cfg 配置文件,这里的列表是手动填上去的。</p></blockquote><p>nagios 模块 add_linux_remote 内容：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">define nagios::nagios::add_linux_remote (</span><br><span class="line">    <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="variable">$port</span>=<span class="number">5666</span>,</span><br><span class="line">    <span class="variable">$check_command</span>=<span class="string">&quot;check-host-alive&quot;</span>,</span><br><span class="line">    <span class="variable">$services</span>) &#123;</span><br><span class="line">    file &#123; <span class="string">&quot;/etc/nagios/objects/$&#123;name&#125;.cfg&quot;</span>:</span><br><span class="line">        <span class="keyword">ensure</span>     =&gt; <span class="string">&#x27;present&#x27;</span>,</span><br><span class="line">        content    =&gt; template(<span class="string">&#x27;nagios/linux-host.cfg.erb&#x27;</span>),</span><br><span class="line">        owner      =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        group      =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        mode       =&gt; <span class="string">&#x27;0664&#x27;</span>,</span><br><span class="line">        <span class="keyword">require</span>    =&gt; <span class="title class_">File</span>[<span class="string">&#x27;/etc/nagios/objects&#x27;</span>],</span><br><span class="line">        notify     =&gt; <span class="title class_">Class</span>[<span class="string">&#x27;nagios::nagios::service&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改变量为-hash"><a href="#修改变量为-hash" class="headerlink" title="修改变量为 hash"></a>修改变量为 hash</h2><p>现在传给 add_linux_remote 的变量是很多个 hash，采用循环的方式，得先让它先成一个 hash，才能方便我们进行遍历<br>添加了一个新的参数 hostgroup 来判断应该放在哪个分组下。</p><p>vim nagios_server.pp</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">monitor_list = &#123;</span><br><span class="line">        <span class="string">&#x27;guangzhou.localhost.com&#x27;</span> =&gt; &#123;</span><br><span class="line">        addr     =&gt; <span class="string">&#x27;10.0.0.9&#x27;</span>,</span><br><span class="line">        hostgroup =&gt; <span class="string">&#x27;supermicro&#x27;</span>,</span><br><span class="line">        services =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_load&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Current Load&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;,</span><br><span class="line">                     ...</span><br><span class="line">                     &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_zombie_procs&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Zombie Processes&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;],</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;tianjin.localhost.com&#x27;</span> =&gt; &#123;</span><br><span class="line">        addr     =&gt; <span class="string">&#x27;10.0.0.90&#x27;</span>,</span><br><span class="line">        hostgroup =&gt; <span class="string">&#x27;vms&#x27;</span>,</span><br><span class="line">        services =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_load&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Current Load&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;,</span><br><span class="line">                     ...</span><br><span class="line">                     &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;check_zombie_procs&#x27;</span>, <span class="string">&#x27;desc&#x27;</span> =&gt; <span class="string">&#x27;Zombie Processes&#x27;</span>, <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="number">1</span>&#125;],</span><br><span class="line">        &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在这种格式是 monitor_list 是一个大 hash，大 hash 里面有很多小 hash</p><h2 id="不改变原先模块的工作方式"><a href="#不改变原先模块的工作方式" class="headerlink" title="不改变原先模块的工作方式"></a>不改变原先模块的工作方式</h2><p>这里执行 add_linux_remote 或者 add_windows_remote</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$monitor_list</span>.each |<span class="params">$key, $value</span>| &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] =~ <span class="regexp">/(supermicro|edc|vms)/</span> &#123;</span><br><span class="line">            nagios::nagios::add_linux_remote &#123; <span class="variable">$key</span>:</span><br><span class="line">            addr     =&gt; <span class="variable">$value</span>[<span class="string">&quot;addr&quot;</span>],</span><br><span class="line">            services =&gt; <span class="variable">$value</span>[<span class="string">&quot;services&quot;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elsif</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] =~ <span class="regexp">/windows/</span> &#123;</span><br><span class="line">            nagios::nagios::add_windows_remote &#123; <span class="variable">$key</span>:</span><br><span class="line">            addr     =&gt; <span class="variable">$value</span>[<span class="string">&quot;addr&quot;</span>],</span><br><span class="line">            services =&gt; <span class="variable">$value</span>[<span class="string">&quot;services&quot;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接下来修改添加 hostgroup 的部分</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> &#123; <span class="string">&#x27;nagios::nagios&#x27;</span>:</span><br><span class="line">        hostgroups =&gt; [&#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;supermicro&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Supermicro Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; <span class="variable">$monitor_list</span>.map |<span class="params">$key, $value</span>| &#123;<span class="keyword">if</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] == <span class="string">&quot;supermicro&quot;</span> &#123; <span class="variable">$key</span> &#125;&#125;.filter |<span class="params">$items</span>| &#123; <span class="variable">$items</span> &#125;&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;windows&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Windows Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; <span class="variable">$monitor_list</span>.map |<span class="params">$key, $value</span>| &#123;<span class="keyword">if</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] == <span class="string">&quot;windows&quot;</span> &#123; <span class="variable">$key</span> &#125;&#125;.filter |<span class="params">$items</span>| &#123; <span class="variable">$items</span> &#125;&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;vms&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span> =&gt; <span class="string">&#x27;Virtual Machines&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; <span class="variable">$monitor_list</span>.map |<span class="params">$key, $value</span>| &#123;<span class="keyword">if</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] == <span class="string">&quot;vms&quot;</span> &#123; <span class="variable">$key</span> &#125;&#125;.filter |<span class="params">$items</span>| &#123; <span class="variable">$items</span> &#125;&#125;,</span><br><span class="line">                       &#123;<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;edc&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;alias&#x27;</span>  =&gt; <span class="string">&#x27;edc servers&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;members&#x27;</span> =&gt; <span class="variable">$monitor_list</span>.map |<span class="params">$key, $value</span>| &#123;<span class="keyword">if</span> <span class="variable">$value</span>[<span class="string">&quot;hostgroup&quot;</span>] == <span class="string">&quot;edc&quot;</span> &#123; <span class="variable">$key</span> &#125;&#125;.filter |<span class="params">$items</span>| &#123; <span class="variable">$items</span> &#125;&#125;,</span><br><span class="line">                      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里的操作是 先 map，通过判断生成 array，然后调用 filter 去掉 array 里面的空值。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Puppet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hugo博客添加live2d看板娘</title>
      <link href="/posts/23f4c55d/"/>
      <url>/posts/23f4c55d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>看板娘就是网页上面漂浮的小人，可以随着鼠标的移动而做出反应，在 hexo 上面是有现成的 npm module，在 hugo 上面只能自己引入 js 啦。</p></blockquote><p>我用的是 <code>hugo v0.84.1-4BD65E22+extended</code>， LoveIt 版本是 0.2.10</p><h2 id="方法-1-使用-html-模板，引入-js-文件"><a href="#方法-1-使用-html-模板，引入-js-文件" class="headerlink" title="方法 1: 使用 html 模板，引入 js 文件"></a>方法 1: 使用 html 模板，引入 js 文件</h2><p>编辑 <code>themes/LoveIt/layouts/partials/footer.html</code> ， 在 <code>&#123;&#123;- end -&#125;&#125;</code> 的上一行添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Live2D，网页上的小人，可以修改live2d_config.js来修改模型，模型都在static/live2d_models里面 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 你也可以把js文件下载下来，放到static/js/目录下，就不依赖别人的服务了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    L2Dwidget.<span class="title function_">init</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">model</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">scale</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">hHeadPos</span>: <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">vHeadPos</span>: <span class="number">0.618</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">jsonPath</span>: <span class="string">&#x27;https://cdn.jsdelivr.net/npm/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json&#x27;</span>,       <span class="comment">// xxx.model.json 的路径,换人物修改这个</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">display</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">superSample</span>: <span class="number">1</span>,     <span class="comment">// 超采样等级</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">width</span>: <span class="number">120</span>,         <span class="comment">// canvas的宽度</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">height</span>: <span class="number">300</span>,        <span class="comment">// canvas的高度</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">position</span>: <span class="string">&#x27;left&#x27;</span>,   <span class="comment">// 显示位置：左或右</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">hOffset</span>: <span class="number">0</span>,         <span class="comment">// canvas水平偏移</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">vOffset</span>: <span class="number">0</span>,         <span class="comment">// canvas垂直偏移</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">mobile</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">show</span>: <span class="literal">true</span>,         <span class="comment">// 是否在移动设备上显示</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">scale</span>: <span class="number">1</span>,           <span class="comment">// 移动设备上的缩放</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">motion</span>: <span class="literal">true</span>,       <span class="comment">// 移动设备是否开启重力感应</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">react</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">opacityDefault</span>: <span class="number">1</span>,  <span class="comment">// 默认透明度</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">opacityOnHover</span>: <span class="number">1</span>,  <span class="comment">// 鼠标移上透明度</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">     &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法-2-直接在-config-toml-里面引入-js-文件"><a href="#方法-2-直接在-config-toml-里面引入-js-文件" class="headerlink" title="方法 2: 直接在 config.toml 里面引入 js 文件"></a>方法 2: 直接在 config.toml 里面引入 js 文件</h2><p><code>vim config.toml</code>， 要确保里面的 js 文件可以直接访问</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第三方库配置</span></span><br><span class="line"><span class="section">[params.page.library]</span></span><br><span class="line">  <span class="section">[params.page.library.css]</span></span><br><span class="line">  <span class="section">[params.page.library.js]</span></span><br><span class="line">    <span class="attr">live2d-widget1</span> = <span class="string">&quot;https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.min.js&quot;</span></span><br><span class="line">    <span class="attr">live2d-widget2</span> = <span class="string">&quot;https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.0.min.js&quot;</span></span><br><span class="line">    <span class="attr">live2d-config</span> = <span class="string">&quot;/js/live2d_config.js&quot;</span></span><br></pre></td></tr></table></figure><p><code>vim static/js/live2d_config.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">L2Dwidget.<span class="title function_">init</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: &#123;</span><br><span class="line">        <span class="attr">scale</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">hHeadPos</span>: <span class="number">0.5</span>,</span><br><span class="line">        <span class="attr">vHeadPos</span>: <span class="number">0.618</span>,</span><br><span class="line">        <span class="attr">jsonPath</span>: <span class="string">&#x27;https://cdn.jsdelivr.net/npm/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json&#x27;</span>,       <span class="comment">// xxx.model.json 的路径,换人物修改这个</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">display</span>: &#123;</span><br><span class="line">        <span class="attr">superSample</span>: <span class="number">1</span>,     <span class="comment">// 超采样等级</span></span><br><span class="line">        <span class="attr">width</span>: <span class="number">120</span>,         <span class="comment">// canvas的宽度</span></span><br><span class="line">        <span class="attr">height</span>: <span class="number">300</span>,        <span class="comment">// canvas的高度</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&#x27;left&#x27;</span>,   <span class="comment">// 显示位置：左或右</span></span><br><span class="line">        <span class="attr">hOffset</span>: <span class="number">0</span>,         <span class="comment">// canvas水平偏移</span></span><br><span class="line">        <span class="attr">vOffset</span>: <span class="number">0</span>,         <span class="comment">// canvas垂直偏移</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mobile</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,         <span class="comment">// 是否在移动设备上显示</span></span><br><span class="line">        <span class="attr">scale</span>: <span class="number">1</span>,           <span class="comment">// 移动设备上的缩放</span></span><br><span class="line">        <span class="attr">motion</span>: <span class="literal">true</span>,       <span class="comment">// 移动设备是否开启重力感应</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">react</span>: &#123;</span><br><span class="line">        <span class="attr">opacityDefault</span>: <span class="number">1</span>,  <span class="comment">// 默认透明度</span></span><br><span class="line">        <span class="attr">opacityOnHover</span>: <span class="number">1</span>,  <span class="comment">// 鼠标移上透明度</span></span><br><span class="line">    &#125;,</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hugo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本接受参数</title>
      <link href="/posts/7635ef7e/"/>
      <url>/posts/7635ef7e/</url>
      
        <content type="html"><![CDATA[<h2 id="直接传参"><a href="#直接传参" class="headerlink" title="直接传参"></a>直接传参</h2><p>一般情况下直接传参，比如</p><p>test.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> hello <span class="variable">$1</span></span><br></pre></td></tr></table></figure><p>.&#x2F;test.sh world<br>hello world</p><h2 id="使用-getopts-解析参数"><a href="#使用-getopts-解析参数" class="headerlink" title="使用 getopts 解析参数"></a>使用 getopts 解析参数</h2><p>这种方法可以忽略参数位置，使脚本更完善</p><p>test.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;a:b:c&quot;</span> arg           <span class="comment">#选项后面的冒号表示该选项需要参数</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$arg</span> <span class="keyword">in</span></span><br><span class="line">        a)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;a <span class="variable">$OPTARG</span>&quot;</span>    <span class="comment">#参数存在$OPTARG中</span></span><br><span class="line">        ;;</span><br><span class="line">        b)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;b <span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        c)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;c&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        ?)                     <span class="comment">#当有不认识的选项的时候arg为?</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;unkonw argument&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~$ ./test.sh -a 1 -b 2 -c  </span><br><span class="line">a 1  </span><br><span class="line">b 2  </span><br><span class="line">c</span><br></pre></td></tr></table></figure><h2 id="使用-shift"><a href="#使用-shift" class="headerlink" title="使用 shift"></a>使用 shift</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">cat</span> &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">这里是帮助文档</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; <span class="built_in">help</span> &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$#</span> -gt 0 ]]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    -n | --name)</span><br><span class="line">        name=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    -c | --count)</span><br><span class="line">        count=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    -h | --<span class="built_in">help</span>)</span><br><span class="line">        <span class="built_in">help</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    --)</span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">help</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> name: <span class="variable">$name</span></span><br><span class="line"><span class="built_in">echo</span> count: <span class="variable">$count</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡(反向代理)</title>
      <link href="/posts/0f0ebc52/"/>
      <url>/posts/0f0ebc52/</url>
      
        <content type="html"><![CDATA[<h2 id="7-层负载均衡"><a href="#7-层负载均衡" class="headerlink" title="7 层负载均衡"></a>7 层负载均衡</h2><blockquote><p>7 层就是用域名来进行转发</p></blockquote><p>类似配置文件：</p><p><code>vim /etc/nginx/conf.d/xxx.conf</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream  wordpress &#123;</span><br><span class="line">    server  192.168.1.20:8000 weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">    server  192.168.1.21:8000 weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 ;</span><br><span class="line">    server_name wordpress.zahui.fan;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://wordpress;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反代到虚拟主机的另一台-Nginx"><a href="#反代到虚拟主机的另一台-Nginx" class="headerlink" title="反代到虚拟主机的另一台 Nginx"></a>反代到虚拟主机的另一台 Nginx</h3><p>比如现在有一台服务器，部署了 a、b 两个服务，比如 a.com 到 a 服务，b.com 到 b 服务，这种情况我的 Nginx 想要代理 b 服务，就需要指定反代 header <code>proxy_set_header Host &quot;b.com&quot;</code>，配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line">  server_name c.com;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass https://x.x.x.x;      # b服务的ip，也可以用域名，用域名理论上不需要下面这条。</span><br><span class="line">    proxy_set_header HOST b.com;     # 代理服务器请求后端使用的Header</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-层负载"><a href="#4-层负载" class="headerlink" title="4 层负载"></a>4 层负载</h2><blockquote><p>4 层负载就是类似端口转发</p></blockquote><p><code>vim /etc/nginx.conf</code> 最后添加：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">    include port_forward.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>vim /etc/nginx/port_forward.conf</code></p><h3 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 访问本机的5555端口， 转发到172.16.1.7的22端口</span><br><span class="line">server &#123;</span><br><span class="line">    listen 5555;</span><br><span class="line">    proxy_pass 172.16.1.7:22;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂配置"><a href="#复杂配置" class="headerlink" title="复杂配置"></a>复杂配置</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream mysql-server &#123;</span><br><span class="line">    server 192.168.1.20:3306 weight=5 max_fails=3 fail_timeout=10s;</span><br><span class="line">    server 192.168.1.21:3306 weight=5 max_fails=3 fail_timeout=10s;</span><br><span class="line">    server 192.168.1.22:3306 weight=5 max_fails=3 fail_timeout=10s;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 3306;</span><br><span class="line">    proxy_connect_timeout 1s;</span><br><span class="line">    proxy_timeout 10s;</span><br><span class="line">    proxy_pass mysql-server;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> LoadBalance </tag>
            
            <tag> Proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络之Bridge和Bond</title>
      <link href="/posts/8ec7155e/"/>
      <url>/posts/8ec7155e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>网桥相当于一台虚拟交换机，你可以把自己的网卡绑定在虚拟交换机上，并把其他接口（比如虚拟机的网络）桥接到这个网卡上面来，相当于大家都是在一个内网里面。</p></blockquote><p>创建网桥方法, 以 Redhat 系为例。</p><h2 id="使用-nmtui-创建网桥"><a href="#使用-nmtui-创建网桥" class="headerlink" title="使用 nmtui 创建网桥"></a>使用 nmtui 创建网桥</h2><ol><li>删除网卡配置文件<br>可以到 <code>/etc/sysconfig/network-scripts/</code> 里面删除 <code>ifcfg-</code> 开头的配置</li><li>使用 nmtui 创建网桥，并将网卡设备绑定到网桥， 一般关闭生成树协议（STP）</li><li>检查 <code>/etc/sysconfig/network-scripts/</code> 里面有没有多余的配置文件，有的话需要删除以免冲突</li><li>网卡和网桥都需要开机自启动<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/nmtui.gif" alt="nmtui"></li></ol><h2 id="使用配置文件创建网桥"><a href="#使用配置文件创建网桥" class="headerlink" title="使用配置文件创建网桥"></a>使用配置文件创建网桥</h2><blockquote><p>生成 uuid <code>cat /proc/sys/kernel/random/uuid</code> 或者 <code>uuidgen</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -euf -o pipefail</span><br><span class="line"></span><br><span class="line">BRIDGE_UUID=$(uuidgen)</span><br><span class="line">BRIDGE_NAME=br13</span><br><span class="line">NET_UUID=$(uuidgen)</span><br><span class="line">NET_DEVICE=ens33</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;/etc/sysconfig/network-scripts/ifcfg-<span class="variable">$&#123;NET_DEVICE&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">TYPE=Ethernet</span></span><br><span class="line"><span class="string">NAME=$&#123;NET_DEVICE&#125;</span></span><br><span class="line"><span class="string">UUID=$&#123;NET_UUID&#125;</span></span><br><span class="line"><span class="string">DEVICE=$&#123;NET_DEVICE&#125;</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">BRIDGE=$&#123;BRIDGE_NAME&#125;</span></span><br><span class="line"><span class="string">BRIDGE_UUID=$&#123;BRIDGE_UUID&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;/etc/sysconfig/network-scripts/ifcfg-<span class="variable">$&#123;BRIDGE_NAME&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">STP=no</span></span><br><span class="line"><span class="string">BRIDGING_OPTS=multicast_snooping=0</span></span><br><span class="line"><span class="string">TYPE=Bridge</span></span><br><span class="line"><span class="string">PROXY_METHOD=none</span></span><br><span class="line"><span class="string">BROWSER_ONLY=no</span></span><br><span class="line"><span class="string">IPV6INIT=no</span></span><br><span class="line"><span class="string">NAME=$&#123;BRIDGE_NAME&#125;</span></span><br><span class="line"><span class="string">UUID=$&#123;BRIDGE_UUID&#125;</span></span><br><span class="line"><span class="string">DEVICE=$&#123;BRIDGE_NAME&#125;</span></span><br><span class="line"><span class="string">BOOTPROTO=dhcp</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="使用配置文件创建-bond-并绑定网桥"><a href="#使用配置文件创建-bond-并绑定网桥" class="headerlink" title="使用配置文件创建 bond 并绑定网桥"></a>使用配置文件创建 bond 并绑定网桥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/sysconfig/network-scripts/ifcfg-eno1</span></span><br><span class="line"><span class="string">TYPE=&quot;Ethernet&quot;</span></span><br><span class="line"><span class="string">BOOTPROTO=&quot;none&quot;</span></span><br><span class="line"><span class="string">DEVICE=&quot;eno1&quot;</span></span><br><span class="line"><span class="string">ONBOOT=&quot;yes&quot;</span></span><br><span class="line"><span class="string">MASTER=bond0</span></span><br><span class="line"><span class="string">SLAVE=yes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/sysconfig/network-scripts/ifcfg-eno2</span></span><br><span class="line"><span class="string">TYPE=&quot;Ethernet&quot;</span></span><br><span class="line"><span class="string">BOOTPROTO=&quot;none&quot;</span></span><br><span class="line"><span class="string">DEVICE=&quot;eno2&quot;</span></span><br><span class="line"><span class="string">ONBOOT=&quot;yes&quot;</span></span><br><span class="line"><span class="string">MASTER=bond0</span></span><br><span class="line"><span class="string">SLAVE=yes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/sysconfig/network-scripts/ifcfg-bond0</span></span><br><span class="line"><span class="string">DEVICE=bond0</span></span><br><span class="line"><span class="string">TYPE=Bond</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">BONDING_OPTS=&quot;downdelay=0 updelay=0 miimon=100 mode=802.3ad xmit_hash_policy=1&quot;</span></span><br><span class="line"><span class="string">BRIDGE=br13</span></span><br><span class="line"><span class="string">BONDING_MASTER=yes</span></span><br><span class="line"><span class="string">NAME=&quot;bond0&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/sysconfig/network-scripts/ifcfg-br13</span></span><br><span class="line"><span class="string">DEVICE=br13</span></span><br><span class="line"><span class="string">TYPE=Bridge</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">BOOTPROTO=dhcp</span></span><br><span class="line"><span class="string">STP=no</span></span><br><span class="line"><span class="string">BRIDGING_OPTS=multicast_snooping=0</span></span><br><span class="line"><span class="string">PROXY_METHOD=none</span></span><br><span class="line"><span class="string">BROWSER_ONLY=no</span></span><br><span class="line"><span class="string">DEFROUTE=yes</span></span><br><span class="line"><span class="string">IPV4_FAILURE_FATAL=no</span></span><br><span class="line"><span class="string">IPV6INIT=no</span></span><br><span class="line"><span class="string">NAME=br13</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>notepad++宏功能自动操作文档</title>
      <link href="/posts/2208175c/"/>
      <url>/posts/2208175c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>notepad++ 是一款 windows 平台的文本编辑器, 比较轻量和功能强大<br>宏功能类似于录像回放, 将自己的操作录制下来, 并进行重复执行, 解放双手</p></blockquote><h2 id="简单操作"><a href="#简单操作" class="headerlink" title="简单操作"></a>简单操作</h2><p>先看个例子, 我要删除所有的奇数行, 我的操作是: 点击录制, 光标放在第一行, 按下 <code>home</code> 键, 按住 <code>shift</code> 键,再按 <code>end</code> 键 (选中整行), 按一下 <code>delete</code> 键, 为了方便重复执行, 再按两下 <code>↓</code>, 停止录制<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/notepad++.gif" alt="notepad++"></p><h2 id="结合搜索功能"><a href="#结合搜索功能" class="headerlink" title="结合搜索功能"></a>结合搜索功能</h2><p>比如这个文件有几千行, 我要在每个 service 里面添加一条数据<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/search.png" alt="search"></p><p>可以这样操作<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/auto_search.gif" alt="auto_search"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux定时执行任务crontab</title>
      <link href="/posts/2de1df7e/"/>
      <url>/posts/2de1df7e/</url>
      
        <content type="html"><![CDATA[<p><a href="/posts/63d10d9c/">crontab 常见的故障处理</a></p><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="启动停止服务"><a href="#启动停止服务" class="headerlink" title="启动停止服务"></a>启动停止服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start cron</span><br><span class="line">systemctl stop cron</span><br></pre></td></tr></table></figure><h3 id="查看所有用户-crontab"><a href="#查看所有用户-crontab" class="headerlink" title="查看所有用户 crontab"></a>查看所有用户 crontab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd | <span class="built_in">cut</span> -f 1 -d : |xargs -I &#123;&#125; crontab -l -u &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>crontab 在&#x2F;etc 目录下面存在 cron.hourly、cron.daily、cron.weekly、cron.monthly、cron.d 五个目录, 这些相当于快捷方式, 直接将你的脚本扔进去就可以<br>和 crontab、cron.deny 二个文件。</p><table><thead><tr><th>目录</th><th>作用</th></tr></thead><tbody><tr><td>cron.daily</td><td>每天执行</td></tr><tr><td>cron.weekly</td><td>每周执行</td></tr><tr><td>cron.monthly</td><td>每月执行</td></tr><tr><td>cron.hourly</td><td>每小时执行</td></tr><tr><td>crontab</td><td>系统级任务, 在这里面调用了上面几个</td></tr></tbody></table><h3 id="用户配置文件"><a href="#用户配置文件" class="headerlink" title="用户配置文件"></a>用户配置文件</h3><p>直接使用 <code>crontab -e</code> 编辑就行, <code>-e</code> 使用的编辑器可以通过 <code>select-editor</code> 来指定<br>或者使用 <code>crontab -u www-data -e</code> 指定用户执行。</p><p>配置文件在 <code>/var/spool/cron</code> 下</p><h3 id="crontab-文件格式"><a href="#crontab-文件格式" class="headerlink" title="crontab 文件格式"></a>crontab 文件格式</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name command to be executed</span></span><br><span class="line">17 *    * * *    root    <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly</span><br><span class="line">25 6    * * *    root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br><span class="line">47 6    * * 7    root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.weekly )</span><br><span class="line">52 6    1 * *    root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.monthly )</span><br></pre></td></tr></table></figure><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表每的意思，例如 month 字段如果是星号，则表示每月都执行该命令操作。</td></tr><tr><td>,</td><td>表示分隔时段的意思，例如，“1,3,5,7,9”。</td></tr><tr><td>-</td><td>表示一个时间范围，例如“2-6”表示“2,3,4,5,6”。</td></tr><tr><td>&#x2F;</td><td>可以用正斜线指定时间的间隔频率，例如 <code>0-23/2</code> 表示每两小时执行一次。同时正斜线可以和星号一起使用，例如 <code>*/10</code></td></tr></tbody></table><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每月每天每小时的第 0 分钟执行一次 /bin/ls</span></span><br><span class="line">0 * * * * /bin/ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup</span></span><br><span class="line">0 6-12/3 * 12 * /usr/bin/backup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 周一到周五每天下午 5:00 寄一封信给 alex@domain.name</span></span><br><span class="line">0 17 * * 1-5 mail -s <span class="string">&quot;hi&quot;</span> alex@domain.name &lt; /tmp/maildata</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分....执行 echo &quot;haha&quot;</span></span><br><span class="line">20 0-23/2 * * * <span class="built_in">echo</span> <span class="string">&quot;haha&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab 也可实现程序开机自启动的作用，比如一些开机一次性任务等</span></span><br><span class="line">@reboot <span class="built_in">echo</span> <span class="string">&quot;test&quot;</span> &gt;&gt; /tmp/test</span><br></pre></td></tr></table></figure><p>下面再看看几个具体的例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0 */2 * * * /sbin/service httpd restart         <span class="comment"># 意思是每两个小时重启一次apache</span></span><br><span class="line">50 7 * * * /sbin/service sshd start             <span class="comment"># 意思是每天7：50开启ssh服务</span></span><br><span class="line">50 22 * * * /sbin/service sshd stop             <span class="comment"># 意思是每天22：50关闭ssh服务</span></span><br><span class="line">0 0 1,15 * * fsck /home                         <span class="comment"># 每月1号和15号检查/home 磁盘</span></span><br><span class="line">1 * * * * /home/bruce/backup                    <span class="comment"># 每小时的第一分执行 /home/bruce/backup这个文件</span></span><br><span class="line">00 03 * * 1-5 find /home <span class="string">&quot;*.xxx&quot;</span> -mtime +4 -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \;   <span class="comment"># 每周一至周五3点钟，在目录/home中，查找文件名为*.xxx的文件，并删除4天前的文件。</span></span><br><span class="line">30 6 */10 * * <span class="built_in">ls</span>                                            <span class="comment"># 意思是每月的1、11、21、31日是的6：30执行一次ls命令</span></span><br></pre></td></tr></table></figure><p>注意：当程序在你所指定的时间执行后，系统会寄一封信给你，显示该程序执行的内容，若是你不希望收到这样的信，请在每一行空一格之后加上 <code>&gt; /dev/null 2&gt;&amp;1</code> 即可</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automatic </tag>
            
            <tag> Crontab </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用nologin用户执行命令</title>
      <link href="/posts/2c88f7f6/"/>
      <url>/posts/2c88f7f6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我们知道可以通过编辑 <code>/etc/passwd</code> 给某些用户设置 shell 为 <code>nologin</code> 或 <code>false</code> 可以阻止这些用户登录<br>但某些时候需要特定的用户来执行命令，可以使用 sudo 或 su 来临时切换用户执行</p></blockquote><h2 id="使用-su"><a href="#使用-su" class="headerlink" title="使用 su"></a>使用 su</h2><p><code>su -s</code> 是指定 shell，这里 <code>www</code> 用户默认 <code>shell</code> 是 <code>nologin</code> 这里指定使用 <code>/bin/bash</code>, <code>-c</code> 后面接需要运行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su www -s /bin/bash -c <span class="string">&quot;mkdir /tmp/111&quot;</span></span><br></pre></td></tr></table></figure><h2 id="使用-sudo"><a href="#使用-sudo" class="headerlink" title="使用 sudo"></a>使用 sudo</h2><p>使用 www 用户来执行 <code>mkdir /tmp/111</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u www <span class="built_in">mkdir</span> /tmp/111</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>守护进程工具supervisor</title>
      <link href="/posts/4d9192f8/"/>
      <url>/posts/4d9192f8/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install supervisor</span><br><span class="line">yum install supervisor</span><br><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[program:nginx]</span><br><span class="line">user=gsw945</span><br><span class="line">directory=/data/exec/nginx/sbin/</span><br><span class="line">command=/data/exec/nginx/sbin/nginx -g &quot;daemon off;&quot;</span><br><span class="line">numprocs=1</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line"></span><br><span class="line">startsecs=5</span><br><span class="line">startretries=3</span><br><span class="line">stopsignal=HUP</span><br><span class="line">stopasgroup=true</span><br><span class="line">stopwaitsecs=5</span><br><span class="line"></span><br><span class="line">redirect_stderr=false</span><br><span class="line">stdout_logfile_maxbytes=20MB</span><br><span class="line">stdout_logfile_backups = 1</span><br><span class="line">stdout_logfile=/var/log/supervisor/%(program_name)s-out.log</span><br><span class="line">stderr_logfile_maxbytes=20MB</span><br><span class="line">stderr_logfile=/var/log/supervisor/%(program_name)s-err.log</span><br><span class="line"></span><br><span class="line">environment=JAVA_HOME=&quot;xxxxxx&quot;,aaa=&quot;bbb&quot;</span><br></pre></td></tr></table></figure><blockquote><p>这个 directory 用处： 程序路径还是要用绝对路径，但是后面加的参数就可以生效了。</p></blockquote><h3 id="启动多个进程"><a href="#启动多个进程" class="headerlink" title="启动多个进程"></a>启动多个进程</h3><blockquote><p>numprocs&#x3D;1 大于 1 个进程的时候：需要加上， 比如程序名 test，启动 3 个进程</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">numprocs=3</span><br><span class="line">process_name=%(program_name)s_%(process_num)02d</span><br><span class="line"></span><br><span class="line">进程名为:</span><br><span class="line">test:test_00</span><br><span class="line">test:test_01</span><br><span class="line">test:test_02</span><br></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="重启-daemon-进程"><a href="#重启-daemon-进程" class="headerlink" title="重启 daemon 进程"></a>重启 daemon 进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl reload</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl restart 服务名或all</span><br></pre></td></tr></table></figure><h3 id="重启一组服务"><a href="#重启一组服务" class="headerlink" title="重启一组服务"></a>重启一组服务</h3><p>重启 test:801-803</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl restart <span class="built_in">test</span>:80&#123;1..3&#125;</span><br></pre></td></tr></table></figure><h3 id="重启所有-test-开头的服务"><a href="#重启所有-test-开头的服务" class="headerlink" title="重启所有 test 开头的服务"></a>重启所有 test 开头的服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl restart <span class="built_in">test</span>:</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>用 supervisor 守护 Prometheus 发现 Prometheus 经常报错 max open files ， 但是操作系统已经将 open files 调整到非常高了。检查下来发现是 supervisor 主配置文件里面限制了 open files 数量</p><p>vim &#x2F;etc&#x2F;supervisord.conf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[supervisord]</span></span><br><span class="line"><span class="attr">logfile</span>=/var/log/supervisor/supervisord.log  <span class="comment">; (main log file;default $CWD/supervisord.log)</span></span><br><span class="line"><span class="attr">logfile_maxbytes</span>=<span class="number">50</span>MB       <span class="comment">; (max main logfile bytes b4 rotation;default 50MB)</span></span><br><span class="line"><span class="attr">logfile_backups</span>=<span class="number">10</span>          <span class="comment">; (num of main logfile rotation backups;default 10)</span></span><br><span class="line"><span class="attr">loglevel</span>=info               <span class="comment">; (log level;default info; others: debug,warn,trace)</span></span><br><span class="line"><span class="attr">pidfile</span>=/var/run/supervisord.pid <span class="comment">; (supervisord pidfile;default supervisord.pid)</span></span><br><span class="line"><span class="attr">nodaemon</span>=<span class="literal">false</span>              <span class="comment">; (start in foreground if true;default false)</span></span><br><span class="line"><span class="attr">minfds</span>=<span class="number">1024</span>                 <span class="comment">; (min. avail startup file descriptors;default 1024)</span></span><br><span class="line"><span class="attr">minprocs</span>=<span class="number">200</span>                <span class="comment">; (min. avail process descriptors;default 200)</span></span><br><span class="line"><span class="comment">;umask=022                  ; (process file creation umask;default 022)</span></span><br><span class="line"><span class="comment">;user=chrism                 ; (default is current user, required if root)</span></span><br><span class="line"><span class="comment">;identifier=supervisor       ; (supervisord identifier, default is &#x27;supervisor&#x27;)</span></span><br><span class="line"><span class="comment">;directory=/tmp              ; (default is not to cd during start)</span></span><br><span class="line"><span class="comment">;nocleanup=true              ; (don&#x27;t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="comment">;childlogdir=/tmp            ; (&#x27;AUTO&#x27; child log dir, default $TEMP)</span></span><br><span class="line"><span class="comment">;environment=KEY=value       ; (key value pairs to add to environment)</span></span><br><span class="line"><span class="comment">;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)</span></span><br></pre></td></tr></table></figure><p>其中 <code>minfds</code> 是限制打开的文件描述符， 将值调大即可， 需要重启 supervisord 服务。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx开启基本http认证</title>
      <link href="/posts/5855bc56/"/>
      <url>/posts/5855bc56/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Nginx 使用 <code>ngx_http_auth_basic_module</code> 模块支持 HTTP 基本身份验证功能</p></blockquote><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><p>比如需要&#x2F;api 路径下的资源需要认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ^~ /api &#123;</span><br><span class="line">    auth_basic &quot;authentication&quot;;</span><br><span class="line">    auth_basic_user_file conf.d/.htpasswd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置密码文件-htpasswd"><a href="#配置密码文件-htpasswd" class="headerlink" title="配置密码文件.htpasswd"></a>配置密码文件.htpasswd</h2><p>两种方法二选一</p><h3 id="使用-htpasswd-生成"><a href="#使用-htpasswd-生成" class="headerlink" title="使用 htpasswd 生成"></a>使用 htpasswd 生成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu or Debian</span></span><br><span class="line">apt install apache2-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rhel or CentOS:</span></span><br><span class="line">yum install httpd-tools</span><br></pre></td></tr></table></figure><p>生成密码, 密码文件为 <code>.htpasswd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -bcd .htpasswd username password</span><br></pre></td></tr></table></figure><h3 id="使用-openssl-生成"><a href="#使用-openssl-生成" class="headerlink" title="使用 openssl 生成"></a>使用 openssl 生成</h3><blockquote><p><code>echo -n xxx</code> 不打印换行符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>  -n <span class="string">&#x27;username:&#x27;</span> &gt;&gt; .htpasswd</span><br><span class="line">openssl passwd -1 password &gt;&gt; .htpasswd</span><br><span class="line"><span class="comment"># -1 参数可以换成 -2 -3 ... -6, 数字越大,密码越长(md5算法). 还可以 -apr1 (Apache variant of the BSD algorithm).</span></span><br></pre></td></tr></table></figure><blockquote><p>openssl 生成的密码也可以用到 linux 的&#x2F;etc&#x2F;shadow 里面</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Auth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux性能分析</title>
      <link href="/posts/8ea6978b/"/>
      <url>/posts/8ea6978b/</url>
      
        <content type="html"><![CDATA[<h2 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h2><blockquote><p>间隔 1s, 一共 5 次</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat 1 5</span><br></pre></td></tr></table></figure><p>每一列的说明</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Procs（进程）:</span><br><span class="line">- r: 运行队列中进程数量</span><br><span class="line">- b: 等待IO的进程数量</span><br><span class="line"></span><br><span class="line">Memory（内存）:</span><br><span class="line">- swpd: 使用虚拟内存大小</span><br><span class="line">- free: 可用内存大小</span><br><span class="line">- buff: 用作缓冲的内存大小</span><br><span class="line">- cache: 用作缓存的内存大小</span><br><span class="line"></span><br><span class="line">Swap:</span><br><span class="line">- si: 每秒从交换区写到内存的大小</span><br><span class="line">- so: 每秒写入交换区的内存大小</span><br><span class="line">- IO：（现在的Linux版本块的大小为1024bytes）</span><br><span class="line">- bi: 每秒读取的块数</span><br><span class="line">- bo: 每秒写入的块数</span><br><span class="line"></span><br><span class="line">system：</span><br><span class="line">- <span class="keyword">in</span>: 每秒中断数，包括时钟中断</span><br><span class="line">- cs: 每秒上下文切换数</span><br><span class="line"></span><br><span class="line">CPU（以百分比表示）</span><br><span class="line">- us: 用户进程执行时间(user time)</span><br><span class="line">- sy: 系统进程执行时间(system time)</span><br><span class="line">- <span class="built_in">id</span>: 空闲时间(包括IO等待时间)</span><br><span class="line">- wa: 等待IO时间</span><br></pre></td></tr></table></figure><h2 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  install sysstat</span><br></pre></td></tr></table></figure><h3 id="查看物理网卡占用"><a href="#查看物理网卡占用" class="headerlink" title="查看物理网卡占用"></a>查看物理网卡占用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sar -n DEV 1 5</span><br></pre></td></tr></table></figure><blockquote><p>sar -n 选项使用 6 个不同的开关：DEV，EDEV，NFS，NFSD，SOCK，IP，EIP，ICMP，EICMP，TCP，ETCP，UDP，SOCK6，IP6，EIP6，ICMP6，EICMP6 和 UDP6 ，DEV 显示网络接口信息，EDEV 显示关于网络错误的统计数据，NFS 统计活动的 NFS 客户端的信息，NFSD 统计 NFS 服务器的信息，SOCK 显示套接字信息，ALL 显示所有 5 个开关。它们可以单独或者一起使用。<br>1 表示 1 秒一次, 5 表示一共 5 次</p></blockquote><h3 id="查看-swap"><a href="#查看-swap" class="headerlink" title="查看 swap"></a>查看 swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sar -W 1 5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟内存swap</title>
      <link href="/posts/25938561/"/>
      <url>/posts/25938561/</url>
      
        <content type="html"><![CDATA[<h2 id="增加-swap-文件"><a href="#增加-swap-文件" class="headerlink" title="增加 swap(文件)"></a>增加 swap(文件)</h2><h3 id="创建-swap"><a href="#创建-swap" class="headerlink" title="创建 swap"></a>创建 swap</h3><p>生成一个空文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个4G的swap文件</span></span><br><span class="line">sudo fallocate -l 4G /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用dd命令来创建，建议用fallocate，是瞬间生成的，不像dd真的要写入文件内容。</span></span><br><span class="line"><span class="comment"># sudo dd if=/dev/zero of=/swapfile bs=1M count=2048</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> 600 /swapfile</span><br></pre></td></tr></table></figure><p>标记成 swap 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap /swapfile</span><br></pre></td></tr></table></figure><h3 id="手动挂载-swap"><a href="#手动挂载-swap" class="headerlink" title="手动挂载 swap"></a>手动挂载 swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">挂载： </span><br><span class="line">sudo swapon /swapfile</span><br><span class="line"></span><br><span class="line">卸载： </span><br><span class="line">sudo swapoff /swapfile</span><br></pre></td></tr></table></figure><h3 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h3><p><code>vim /etc/fstab</code> 添加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swapfile   none  swap  sw  0  0</span><br></pre></td></tr></table></figure><h2 id="删除-swap-文件"><a href="#删除-swap-文件" class="headerlink" title="删除 swap(文件)"></a>删除 swap(文件)</h2><h3 id="查看-swap-文件地址"><a href="#查看-swap-文件地址" class="headerlink" title="查看 swap 文件地址"></a>查看 swap 文件地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon</span><br></pre></td></tr></table></figure><h3 id="手动关闭-swap"><a href="#手动关闭-swap" class="headerlink" title="手动关闭 swap"></a>手动关闭 swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff /swapfile</span><br></pre></td></tr></table></figure><h3 id="删除-swap-文件-1"><a href="#删除-swap-文件-1" class="headerlink" title="删除 swap 文件"></a>删除 swap 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -f /swapfile</span><br></pre></td></tr></table></figure><h3 id="取消开机自动挂载"><a href="#取消开机自动挂载" class="headerlink" title="取消开机自动挂载"></a>取消开机自动挂载</h3><p><code>vim /etc/fstab</code>, 删除包含 <code>swapfile</code> 的一行</p><h2 id="删除-swap（LVM-分区）"><a href="#删除-swap（LVM-分区）" class="headerlink" title="删除 swap（LVM 分区）"></a>删除 swap（LVM 分区）</h2><h3 id="判断是否是-LVM-分区"><a href="#判断是否是-LVM-分区" class="headerlink" title="判断是否是 LVM 分区"></a>判断是否是 LVM 分区</h3><p>LVM 分区做 swap，如果你用 centos7 默认安装的话， 就是用的 LV 做 swap，可以 <code>cat /etc/fstab</code> 和 <code>lvdisplay</code> 确认下<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404241305360.png" alt="image.png"></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404241305675.png" alt="image.png"></p><p>上图所示， 就是用的 lv 做 swap 分区</p><h3 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h3><p>马上关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><p>修改配置永久关闭：<br><code>vim /etc/fstab</code> 删除包含 swap 的那一行</p><p>保守一点，如果 swap 占用空间不要了，lvm 也不动了，那么就到此为止就行。</p><h3 id="删除-swap-的-LV"><a href="#删除-swap-的-LV" class="headerlink" title="删除 swap 的 LV"></a>删除 swap 的 LV</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lvremove &lt;vg名字&gt; &lt;lv名字&gt;</span></span><br><span class="line">lvremove centos swap</span><br></pre></td></tr></table></figure><p>扩容剩下的 LV</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/mapper/centos-root</span><br></pre></td></tr></table></figure><p>动态增加磁盘大小</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">ext文件系统</button><button type="button" class="tab">xfs文件系统</button><button type="button" class="tab">RHEL</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs  /dev/sdb1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xfs_growfs /dev/sdb1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在早期的 RHEL 中，由于 resize2fs 无在线 resize 功能，故额外提供了 ext2online。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ext2online /dev/sdb1</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><p>CentOS7 系统修改 <code>/etc/default/grub</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404241418956.png" alt="image.png"></p><p>然后执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><p>更新 grub 配置</p><p>如果你已经删除了 LV，但是忘记修改内核参数了，那么重启后会无法启动，解决方法见：<a href="/posts/scfoaz/">centos删除swap后无法启动</a></p><h2 id="调整内核-swap-策略"><a href="#调整内核-swap-策略" class="headerlink" title="调整内核 swap 策略"></a>调整内核 swap 策略</h2><p>swap 使用是根据内核参数 <code>vm.swappiness</code> 决定的， 数值越大表示内核会更加积极的将内存中的数据移动到 Swap 分区</p><table><thead><tr><th>vm.swappiness</th><th>含义</th></tr></thead><tbody><tr><td>0</td><td>指示内核尽可能避免交换。</td></tr><tr><td>10-50</td><td>指示内核在换出内存页面时稍微积极一些</td></tr><tr><td>50-100</td><td>指示内核在换出内存页面时适度积极</td></tr><tr><td>100</td><td>指示内核在换出内存页面时非常积极</td></tr></tbody></table><h3 id="查看内核参数"><a href="#查看内核参数" class="headerlink" title="查看内核参数"></a>查看内核参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -a</span><br><span class="line">sysctl vm.swappiness</span><br></pre></td></tr></table></figure><h3 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl vm.swappiness=80</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;80&quot;</span> &gt; /proc/sys/vm/swappiness</span><br></pre></td></tr></table></figure><h3 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h3><p><code>vim /etc/sysctl.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness = 80</span><br></pre></td></tr></table></figure><p>执行 <code>sysctl -p</code> 马上生效。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python环境打包</title>
      <link href="/posts/15e02d6d/"/>
      <url>/posts/15e02d6d/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要打包"><a href="#为什么要打包" class="headerlink" title="为什么要打包"></a>为什么要打包</h2><p>公司有个远古项目, 用到的是 <code>fabric1.x</code>, 只支持 <code>python2</code> 版本, 并且对环境要求比较苛刻, 而且代码已经无人维护, 这种情况下将包固定下来, 保证代码可以运行</p><h2 id="安装-pyenv-环境"><a href="#安装-pyenv-环境" class="headerlink" title="安装 pyenv 环境"></a>安装 pyenv 环境</h2><blockquote><p>pyenv 官网 <a href="https://github.com/pyenv/pyenv">https://github.com/pyenv/pyenv</a>，pyenv 和其他的虚拟环境不同之处在于它可以安装任意版本的 python 环境（源码编译）<br>所以需要安装编译 python 的环境。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git zlib zlib-devel libffi-devel openssl openssl-devel readline-devel bzip2-devel sqlite-devel</span><br><span class="line">curl https://pyenv.run | bash</span><br></pre></td></tr></table></figure><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><blockquote><p>安装 python2.7.18 的虚拟环境, 此环境只给 fabric 用, 所以就没有添加到环境变量, 以免影响其他 python 程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install sqlite-devel bzip2-devel readline-devel</span><br><span class="line"></span><br><span class="line">/root/.pyenv/bin/pyenv install 2.7.18</span><br></pre></td></tr></table></figure><h2 id="使用虚拟环境安装需要的包"><a href="#使用虚拟环境安装需要的包" class="headerlink" title="使用虚拟环境安装需要的包"></a>使用虚拟环境安装需要的包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/.pyenv/versions/2.7.18/bin/pip install fabric==1.14.1</span><br></pre></td></tr></table></figure><p>安装完成后在 <code>/root/.pyenv/versions/2.7.18/bin</code> 看到了 fab 可执行程序</p><h2 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /root/.pyenv/versions/2.7.18/bin/fab /usr/local/bin/fab</span><br></pre></td></tr></table></figure><p>这样 fab 的环境就准备好了, 后面只需要把 <code>/root/.pyenv</code> 打包分发给其他机器<br>其实还可以使用 pyinstaller 打包, 不过我感觉没啥必要了.</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统环境变量</title>
      <link href="/posts/7468bc35/"/>
      <url>/posts/7468bc35/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境变量简单来说就是一个键值对，比较常见的是 <code>path</code> 环境变量，定义的是全局程序存放的位置</p></blockquote><p>Windows 查看环境变量 使用 <code>echo %date%</code></p><h2 id="用户环境变量"><a href="#用户环境变量" class="headerlink" title="用户环境变量"></a>用户环境变量</h2><p>注册表位置：<code>HKEY_CURRENT_USER\Environment</code> 用户环境变量只对当前用户起作用</p><h2 id="系统环境变量"><a href="#系统环境变量" class="headerlink" title="系统环境变量"></a>系统环境变量</h2><p>注册表位置：<code>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment</code></p><h3 id="常用系统自带变量"><a href="#常用系统自带变量" class="headerlink" title="常用系统自带变量"></a>常用系统自带变量</h3><table><thead><tr><th>变量</th><th>类似格式</th></tr></thead><tbody><tr><td>%COMMONPROGRAMFILES%</td><td>C:\Program Files\Common Files</td></tr><tr><td>%COMMONPROGRAMFILES(x86)%</td><td>C:\Program Files (x86)\Common Files</td></tr><tr><td>%PROGRAMFILES%</td><td>C:\Program Files</td></tr><tr><td>%PROGRAMFILES(X86)%</td><td>C:\Program Files (x86)</td></tr><tr><td>%COMSPEC%</td><td>C:\Windows\System32\cmd.exe</td></tr><tr><td>%HOMEDRIVE%</td><td>C:</td></tr><tr><td>%HOMEPATH%</td><td>C:\Users\iuxt</td></tr><tr><td>%SYSTEMROOT%</td><td>C:\Windows</td></tr><tr><td>%WINDIR%</td><td>C:\Windows</td></tr><tr><td>%TMP%</td><td>C:\Users\iuxt\AppData\Local\Temp</td></tr><tr><td>%TEMP%</td><td>C:\Users\iuxt\AppData\Local\Temp</td></tr><tr><td>%CD%</td><td>当前目录</td></tr><tr><td>%DATE%</td><td>当前日期</td></tr><tr><td>%TIME%</td><td>时间</td></tr><tr><td>%APPDATA%</td><td>C:\Users\iuxt\AppData\Roaming</td></tr><tr><td>%LOCALAPPDATA%</td><td>C:\Users\iuxt\AppData\Local</td></tr><tr><td>%SYSTEMDRIVE%</td><td>C:</td></tr><tr><td>%USERNAME%</td><td>iuxt</td></tr><tr><td>%USERPROFILE%</td><td>C:\Users\iuxt</td></tr><tr><td>%ONEDRIVE%</td><td>C:\Users\iuxt\OneDrive</td></tr><tr><td>%ERRORLEVEL%</td><td>上一个命令的错误码， 类似于 linux 里面的 $?</td></tr><tr><td>%PROGRAMDATA%</td><td>C:\ProgramData</td></tr><tr><td>%PUBLIC%</td><td>C:\Users\Public</td></tr><tr><td>%COMPUTERNAME%</td><td>计算机名</td></tr><tr><td>%RANDOM%</td><td>随机数（0-32767）</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux磁盘扩容(非LVM)</title>
      <link href="/posts/33420276/"/>
      <url>/posts/33420276/</url>
      
        <content type="html"><![CDATA[<p>LVM 是 <code>Logical Volume Manager</code> 的缩写，中文逻辑卷管理，LVM 是建立在磁盘分区和文件系统之间的一个逻辑层，LVM 会更加灵活，可以动态扩容缩容分区大小。调整分区大小有风险，请做好充分测试再决定是否执行。<br>如果启用了 <code>lvm</code>，请查看 <a href="/posts/f4ea28c3/">LVM逻辑卷管理</a><br>那么怎么知道机器有没有启用 LVM 呢，可以执行 <code>sudo lvdisplay</code> 查看有没有已存在的 LV，<code>lsblk</code> 查看现有的文件系统有没有 <code>LVM</code></p><blockquote><p>网上查到的方法都是使用 <code>fdisk</code> 删除分区后再重新创建, 这种方式会有安全问题, 而 <code>growpart</code> 命令是安全的.</p></blockquote><h2 id="扩容器查看容量大小"><a href="#扩容器查看容量大小" class="headerlink" title="扩容器查看容量大小"></a>扩容器查看容量大小</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk4 ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vdb1       985G  165G  770G  18% /data</span><br></pre></td></tr></table></figure><blockquote><p>如果你要扩容的路径对应的 <code>Filesystem</code> 不是 <code>/dev/sdx</code> 请不要看这篇文章</p></blockquote><h2 id="先增加硬盘容量"><a href="#先增加硬盘容量" class="headerlink" title="先增加硬盘容量"></a>先增加硬盘容量</h2><blockquote><p>需要 growpart 命令, 没有请安装</p></blockquote><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian</button><button type="button" class="tab">CentOS和Fedora</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cloud-guest-utils</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install cloud-utils-growpart</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="执行-growpart-命令"><a href="#执行-growpart-命令" class="headerlink" title="执行 growpart 命令"></a>执行 growpart 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk4 ~]<span class="comment"># growpart /dev/vdb 1</span></span><br><span class="line">CHANGED: partition=1 start=2048 old: size=2097149952 end=2097152000 new: size=3145725919 end=3145727967</span><br></pre></td></tr></table></figure><h2 id="最后调整文件系统大小"><a href="#最后调整文件系统大小" class="headerlink" title="最后调整文件系统大小"></a>最后调整文件系统大小</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">ext文件系统</button><button type="button" class="tab">xfs文件系统</button><button type="button" class="tab">RHEL</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs  /dev/sdb1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xfs_growfs /dev/sdb1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在早期的 RHEL 中，由于 resize2fs 无在线 resize 功能，故额外提供了 ext2online。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ext2online /dev/sdb1</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Disk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper集群搭建</title>
      <link href="/posts/sds4db/"/>
      <url>/posts/sds4db/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/zookeeper/zookeeper-3.8.4/apache-zookeeper-3.8.4-bin.tar.gz</span><br></pre></td></tr></table></figure><p>Zookeeper 是为其他分布式程序提供服务的，所以本身自己不能随便就挂了，所以 zookeeper 自身的集群机制就很重要。zookeeper 的集群机制采用的是半数存活机制，也就是整个集群节点中有半数以上的节点存活，那么整个集群环境可用。这也就是说们的集群节点最好是奇数个节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/zookeeper_&#123;<span class="built_in">log</span>,data&#125;</span><br></pre></td></tr></table></figure><p>调整配置文件 <code>/data/apache-zookeeper-3.8.4-bin/conf/zoo.cfg</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tickTime</span>=<span class="number">2000</span></span><br><span class="line"><span class="attr">initLimit</span>=<span class="number">10</span></span><br><span class="line"><span class="attr">syncLimit</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">dataLogDir</span>=/data/zookeeper_log</span><br><span class="line"><span class="attr">dataDir</span>=/data/zookeeper_data</span><br><span class="line"><span class="attr">clientPort</span>=<span class="number">2181</span></span><br><span class="line"><span class="attr">autopurge.snapRetainCount</span>=<span class="number">500</span></span><br><span class="line"><span class="attr">autopurge.purgeInterval</span>=<span class="number">24</span></span><br><span class="line"><span class="attr">server.1</span>=<span class="number">10.0</span>.<span class="number">0.11</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.2</span>=<span class="number">10.0</span>.<span class="number">0.12</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.3</span>=<span class="number">10.0</span>.<span class="number">0.13</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br></pre></td></tr></table></figure><h2 id="myid-配置"><a href="#myid-配置" class="headerlink" title="myid 配置"></a>myid 配置</h2><p>除了修改 zoo.cfg 配置文件外,zookeeper 集群模式下还要配置一个 myid 文件,这个文件需要放在 dataDir 目录下<br>这个文件里面有一个数据就是 A 的值（该 A 就是 zoo.cfg 文件中 server.A&#x3D;B:C:D 中的 A）,在 zoo.cfg 文件中配置的 dataDir 路径中创建 myid 文件。</p><p>不同服务器配置不一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一台服务器</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /data/zookeeper_data/myid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二台服务器</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /data/zookeeper_data/myid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三台服务器</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3&quot;</span> &gt; /data/zookeeper_data/myid</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动zookeeper</span></span><br><span class="line">/data/apache-zookeeper-3.8.4-bin/bin/zkServer.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看zookeeper服务状态</span></span><br><span class="line">/data/apache-zookeeper-3.8.4-bin/bin/zkServer.sh status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 搭建 </tag>
            
            <tag> HA </tag>
            
            <tag> 有状态服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows网络管理命令netsh</title>
      <link href="/posts/f85b3ad3/"/>
      <url>/posts/f85b3ad3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>netsh 是 windows 平台网络管理命令</p></blockquote><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><h3 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sc config mpsdrv <span class="built_in">start</span>= auto</span><br><span class="line">sc config mpssvc <span class="built_in">start</span>= auto</span><br><span class="line">sc <span class="built_in">start</span> mpsdrv</span><br><span class="line">sc <span class="built_in">start</span> mpssvc</span><br><span class="line"></span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state on</span><br></pre></td></tr></table></figure><h3 id="规则配置"><a href="#规则配置" class="headerlink" title="规则配置"></a>规则配置</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:: 拒绝指定IP访问指定端口</span><br><span class="line">netsh advfirewall firewall add rule name=BlockRTX <span class="built_in">dir</span>=<span class="keyword">in</span> protocol=tcp localport=<span class="number">8000</span> action=block enable=yes remoteip=<span class="number">192</span>.<span class="number">168</span>.<span class="number">5</span>.<span class="number">2</span></span><br><span class="line"></span><br><span class="line">:: 开放一个端口</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;<span class="number">445</span>&quot; protocol=TCP <span class="built_in">dir</span>=<span class="keyword">in</span> localport=<span class="number">445</span> action=allow</span><br><span class="line"></span><br><span class="line">:: windows xp 使用</span><br><span class="line">netsh firewall <span class="built_in">set</span> portopening TCP <span class="number">445</span> ENABLE</span><br></pre></td></tr></table></figure><h3 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: 关闭防火墙</span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode <span class="built_in">mode</span>=disable</span><br><span class="line"></span><br><span class="line">:: 防火墙恢复默认配置</span><br><span class="line">netsh firewall reset</span><br></pre></td></tr></table></figure><h2 id="修改网络设置"><a href="#修改网络设置" class="headerlink" title="修改网络设置"></a>修改网络设置</h2><h3 id="修改-ip、dns-等"><a href="#修改-ip、dns-等" class="headerlink" title="修改 ip、dns 等"></a>修改 ip、dns 等</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># STATIC</span><br><span class="line">netsh interface ip <span class="built_in">set</span> address &quot;以太网&quot; static <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">88</span> <span class="number">255</span>.<span class="number">255</span>.<span class="number">252</span>.<span class="number">0</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">8</span>.<span class="number">3</span></span><br><span class="line">netsh interface ip <span class="built_in">set</span> dns &quot;以太网&quot; static <span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span>.<span class="number">114</span></span><br><span class="line">netsh interface ip add dns &quot;以太网&quot; <span class="number">114</span>.<span class="number">114</span>.<span class="number">115</span>.<span class="number">115</span></span><br><span class="line"></span><br><span class="line"># DHCP</span><br><span class="line">netsh interface ip <span class="built_in">set</span> address &quot;以太网&quot; dhcp</span><br><span class="line">netsh interface ip <span class="built_in">set</span> dns &quot;以太网&quot; dhcp</span><br></pre></td></tr></table></figure><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><h3 id="启用-IP-Helper-服务"><a href="#启用-IP-Helper-服务" class="headerlink" title="启用 IP Helper 服务"></a>启用 IP Helper 服务</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc config iphlpsvc <span class="built_in">start</span>=auto</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> iphlpsvc</span><br></pre></td></tr></table></figure><h3 id="开启-IPv4-转发"><a href="#开启-IPv4-转发" class="headerlink" title="开启 IPv4 转发"></a>开启 IPv4 转发</h3><p>在注册表中修改：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters /v IPEnableRouter /t REG_DWORD /d <span class="number">1</span> /f</span><br></pre></td></tr></table></figure><p>然后重启电脑使其生效。</p><h3 id="转发配置"><a href="#转发配置" class="headerlink" title="转发配置"></a>转发配置</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用 netsh 将本地 <span class="number">8080</span> 端口的流量转发到 <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span>:<span class="number">80</span></span><br><span class="line">netsh interface portproxy add v4tov4 listenport=<span class="number">8080</span> listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> connectport=<span class="number">80</span> connectaddress=<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看当前端口转发规则</span><br><span class="line">netsh interface portproxy show all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除指定端口转发</span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=<span class="number">8080</span> listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">测试转发是否生效</span><br><span class="line">netstat -ano | <span class="built_in">findstr</span> :<span class="number">8080</span></span><br></pre></td></tr></table></figure><h3 id="防火墙配置-1"><a href="#防火墙配置-1" class="headerlink" title="防火墙配置"></a>防火墙配置</h3><p>防火墙要允许端口可以被访问</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=&quot;Allow Port <span class="number">8080</span>&quot; <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow protocol=TCP localport=<span class="number">8080</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVM逻辑卷管理</title>
      <link href="/posts/f4ea28c3/"/>
      <url>/posts/f4ea28c3/</url>
      
        <content type="html"><![CDATA[<p>LVM 是 <code>Logical Volume Manager</code> 的缩写，中文逻辑卷管理，LVM 是建立在磁盘分区和文件系统之间的一个逻辑层，LVM 会更加灵活，可以动态扩容缩容分区大小。调整分区大小有风险，请做好充分测试再决定是否执行。<br>如果没有启用 <code>lvm</code>，请查看 <a href="/33420276/">linux磁盘扩容 - 非LVM</a><br>那么怎么知道机器有没有启用 LVM 呢，可以执行 <code>sudo lvdisplay</code> 查看有没有已存在的 LV，对比 <code>df -hT</code> 里面的 <code>Filesystem</code>，也可以用 <code>lsblk</code> 查看有没有 lvm。</p><div class="note warning simple"><p>记住一点， 如果你的磁盘没有分区并已经在使用中， 那么千万不要使用 fdisk 来分区，会损坏数据！！！</p></div><h2 id="LVM-的一些概念"><a href="#LVM-的一些概念" class="headerlink" title="LVM 的一些概念"></a>LVM 的一些概念</h2><p>PV： 物理卷，比如一个分区，一个磁盘<br>VG： 卷组，将多个 PV 整合在一起，形成一个大的池子<br>LV： 逻辑卷，从 VG 划分出来一个个空间，可以当作分区来看待，可以格式化，可以挂载</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><table><thead><tr><th></th><th>查看</th><th>查看详细信息</th><th>扩展</th><th>创建</th></tr></thead><tbody><tr><td>卷组 VG</td><td>vgs</td><td>vgdisplay</td><td>vgextend</td><td>vgcreate</td></tr><tr><td>逻辑卷 LV</td><td>lvs</td><td>lvdisplay</td><td>lvextend</td><td>lvcreate</td></tr><tr><td>物理卷 PV</td><td>pvs</td><td>pvdisplay</td><td>pvresize</td><td>pvcreate</td></tr></tbody></table><h2 id="扩容文件系统"><a href="#扩容文件系统" class="headerlink" title="扩容文件系统"></a>扩容文件系统</h2><h3 id="物理扩容"><a href="#物理扩容" class="headerlink" title="物理扩容"></a>物理扩容</h3><blockquote><p>虚拟机扩容就是扩容虚拟磁盘，物理机扩容比如可以增加硬盘。</p></blockquote><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">创建新的PV</button><button type="button" class="tab">扩展现有的PV</button></div><div class="tab-contents"><div class="tab-item-content active"><blockquote><p>如果是新增硬盘，只能创建新的 PV</p></blockquote><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">创建新分区</button><button type="button" class="tab">不分区直接使用裸设备</button></div><div class="tab-contents"><div class="tab-item-content active"><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404261039315.png" alt="image.png"></p><blockquote><p>这里有个疑问，如果不设置分区 ID 为 <code>8e</code>，也不影响后续操作，但是 <code>fdisk -l /dev/sda</code> 的时候，查看到的新分区 Type 为 Linux，而不是 Linux LVM，不知道这两种有什么不同，知道的大佬麻烦告诉我一下。。</p></blockquote><p>创建 pv</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vdb1</span><br><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><p>添加 PV 到 VG</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend vg1 /dev/vdb1</span><br></pre></td></tr></table></figure><blockquote><p>添加完成 <code>sudo vgdisplay</code> 可以看到 <code>Free PE / Size</code> 的空间大小</p></blockquote></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vdb</span><br><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><p>添加 PV 到 VG</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend vg1 /dev/vdb</span><br></pre></td></tr></table></figure><blockquote><p>添加完成 <code>sudo vgdisplay</code> 可以看到 <code>Free PE / Size</code> 的空间大小</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tab-item-content"><blockquote><p>如果虚拟机是通过扩容现有硬盘的方式来扩容，可以扩展现有 PV，如果是新增的硬盘，只能新建 PV 来扩容</p></blockquote><p>安装 cloud-utils</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu和Debian</span></span><br><span class="line">sudo apt install cloud-guest-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS和RHEL</span></span><br><span class="line">sudo yum install cloud-utils-growpart</span><br></pre></td></tr></table></figure><p>如何判断 pv 是一个设备还是一个分区</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202404252228062.png" alt="image.png"></p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">PV是一个分区</button><button type="button" class="tab">PV是一个磁盘设备</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">growpart /dev/vdb 1</span><br><span class="line">pvs</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvresize /dev/vdb</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="创建或扩展-LV"><a href="#创建或扩展-LV" class="headerlink" title="创建或扩展 LV"></a>创建或扩展 LV</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">扩展现有的LV</button><button type="button" class="tab">创建新的LV</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lvextend /dev/mapper/vg1-lv1 /dev/sda4</span><br><span class="line">lvextend -l +100%FREE /dev/mapper/vg1-lv1</span><br><span class="line">lvextend -L +1024M /dev/mapper/vg1-lv1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个指定大小的lv，并指定名字为lv2</span></span><br><span class="line">lvcreate -L 2G -n lv2 vg1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个占全部卷组大小的lv，并指定名字为lv3</span></span><br><span class="line">lvcreate -l 100%VG -n lv3 vg1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空闲空间80%大小的lv，并指定名字为lv4</span></span><br><span class="line">lvcreate -l 80%Free -n lv4 vg1</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="格式化并挂载"><a href="#格式化并挂载" class="headerlink" title="格式化并挂载"></a>格式化并挂载</h3><blockquote><p>新创建的 <code>LV</code> 类似于硬盘分区，需要格式化后再挂载</p></blockquote><p>格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/mapper/vg1-lv1</span><br></pre></td></tr></table></figure><p>挂载</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">手动挂载</button><button type="button" class="tab">fstab自动挂载</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/mapper/vg1-lv1 /opt</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/mapper/vg1-lv1 /opt xfs defaults 0 0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="调整文件系统大小"><a href="#调整文件系统大小" class="headerlink" title="调整文件系统大小"></a>调整文件系统大小</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">ext文件系统</button><button type="button" class="tab">xfs文件系统</button><button type="button" class="tab">RHEL</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs /dev/mapper/vg1-lv1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xfs_growfs /dev/mapper/vg1-lv1</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在早期的 RHEL 中，由于 resize2fs 无在线 resize 功能，故额外提供了 ext2online。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ext2online /dev/mapper/vg1-lv1</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="缩小文件系统"><a href="#缩小文件系统" class="headerlink" title="缩小文件系统"></a>缩小文件系统</h2><ol><li><p>卸载文件系统</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/vg_name/lv_name</span><br></pre></td></tr></table></figure></li><li><p>检查文件系统是否有错误</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -f /dev/vg0/lvm1</span><br></pre></td></tr></table></figure></li><li><p>调整文件系统大小</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs /dev/vg0/lvm1 10G</span><br></pre></td></tr></table></figure></li><li><p>调整 LV 的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvreduce -L 10G /dev/vg0/lvm1</span><br></pre></td></tr></table></figure></li><li><p>重新挂载 LV</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/vg0/lvm1 /lvm1</span><br></pre></td></tr></table></figure></li></ol><h2 id="移除-PV"><a href="#移除-PV" class="headerlink" title="移除 PV"></a>移除 PV</h2><blockquote><p>比如某个 PV 对应的硬盘损坏，需要更换，比如需要更换 <code>/dev/sdb</code></p></blockquote><ol><li><p>查看 pv 使用情况</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pvdisplay</span><br></pre></td></tr></table></figure><p> 查看对应的 PV 参数 <code>Allocated PE</code>，若不为 0 表示有逻辑卷在使用，需要使用 <code>pvmove /dev/sdb</code> 将数据转移到其他空闲的 PV 上面</p></li><li><p>将 PV 从 VG 移出</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgreduce vg_name /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>移除 PV</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>更换硬盘，然后重新创建 PV，添加 VG 等</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Disk </tag>
            
            <tag> 扩容 </tag>
            
            <tag> 分区 </tag>
            
            <tag> 挂载 </tag>
            
            <tag> 格式化 </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux用户管理</title>
      <link href="/posts/sd9in4/"/>
      <url>/posts/sd9in4/</url>
      
        <content type="html"><![CDATA[<h2 id="增加用户"><a href="#增加用户" class="headerlink" title="增加用户"></a>增加用户</h2><p>useradd [选项] 用户名</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-g</td><td>指定用户的用户主组,（查看用户属于哪个组直接从 passwd 文件查看）</td></tr><tr><td>-G</td><td>指定用户的附加组     （查看用户属于哪个附加组直接从 group 文件查看）</td></tr><tr><td>-u</td><td>指定用户 ID，即指定用户标识符 ((ID 是唯一的),不想使用系统默认指定的 ID 则可以使用 -u 指定 ID,默认 Centos6.x500 之后递增，Centos7.x 从 1000 之后递增</td></tr><tr><td>-d</td><td>自定义用户的家目录,不要系统默认创建的家目录</td></tr><tr><td>-m</td><td>创建用户的家目录</td></tr><tr><td>-M</td><td>不创建家目录</td></tr><tr><td>-c</td><td>备注信息,可写可不写</td></tr><tr><td>-s</td><td>指定用户登录的 shell,不写默认是&#x2F;bin&#x2F;sh,通常会给程序创建一个不允许登陆的账号 -s &#x2F;sbin&#x2F;nologin 或 -s &#x2F;bin&#x2F;false</td></tr><tr><td>-r</td><td>创建一个系统账号,centos7 系统账号的 UID 是从 1-999 之间的,centos6 是从 1-499 之间的</td></tr></tbody></table><p>常用格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -s /bin/bash iuxt            <span class="comment"># 常用操作，创建用户和家目录。</span></span><br><span class="line">useradd iuxt<span class="comment">#创建iuxt用户和自动默认创建同名的iuxt组，默认分配用户ID</span></span><br><span class="line">useradd -M -s /sbin/nologin nginx<span class="comment">#创建一个没有家目录及不能登录的nginx用户</span></span><br><span class="line">useradd -g 1001 -G 1002 -u 8989 -d /home/iuxt -s /bin/bash iuxt</span><br></pre></td></tr></table></figure><h2 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h2><p>usermod 修改用户信息<br>usermod 命令用于修改用户信息，其语法格式如下：</p><p>usermod [选项] 用户名</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-g</td><td>修改用户的用户组,其后可接组名或 gid（查看用户属于哪个组直接从 passwd 文件查看）（一个用户只能有一个主组）</td></tr><tr><td>-G</td><td>修改用户的附加组,其后可接组名或 gid（查看用户属于哪个附加组直接从 group 文件查看）（一个用户可以有多个附属组,换句话说,一个组可以有多个用户,但这个组对用户来说必须是附加组）</td></tr><tr><td>-u</td><td>修改用户 ID，即修改用户标识符</td></tr><tr><td>-l</td><td>修改用户名（usermod -l new_name old_name）</td></tr><tr><td>-s</td><td>修改用户登录的 shell</td></tr><tr><td>-L</td><td>锁住用户</td></tr><tr><td>-U</td><td>解锁用户</td></tr><tr><td>-d</td><td>修改用户的家目录</td></tr><tr><td>-m</td><td>必须与 -d 一起使用，表示移动家目录里面文件</td></tr></tbody></table><p>常用操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">usermod -l iuxt old_name     <span class="comment"># 将用户名old_name改为iuxt,仅仅是修改用户名,家目录名old_name或默认组old_name并没有被修改</span></span><br><span class="line">usermod -L iuxt<span class="comment"># 锁住用户iuxt</span></span><br><span class="line">usermod -md /home/iuxt1 iuxt<span class="comment"># 修改用户iuxt的家目录,iuxt1目录必须实现创建,而且创建后注意属主属组权限</span></span><br><span class="line">usermod -s /sbin/nologin iuxt<span class="comment"># 修改用户的登录shell</span></span><br><span class="line">usermod -g 6688 iuxt<span class="comment"># 修改用户的主组</span></span><br><span class="line">usermod -G zhangsan,zabbix lisi<span class="comment"># -G指定修改lisi附属组为zhangsan，zabbix</span></span><br><span class="line"><span class="built_in">id</span> lisi<span class="comment"># 查看lisi的信息</span></span><br></pre></td></tr></table></figure><p>说明：<br>一个用户只能有一个主组，但可以有多个附加组。使用 id user_name 来查看。<br>修改用户家目录必须使用参数 -md 配合使用。</p><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><p>userdel 删除用户<br>userdel 命令用于删除用户，其语法格式如下：</p><p>userdel [选项] 用户名</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-f</td><td>强制删除,即使用户正在登录</td></tr><tr><td>-r</td><td>删除用户,其家目录和 mail spool 也一并删除</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行工具 </tag>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
            <tag> 常用操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb常用操作记录</title>
      <link href="/posts/b1ffa547/"/>
      <url>/posts/b1ffa547/</url>
      
        <content type="html"><![CDATA[<h2 id="打开应用"><a href="#打开应用" class="headerlink" title="打开应用"></a>打开应用</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># am <span class="built_in">start</span> 应用包名/activity名</span><br><span class="line">adb shell am <span class="built_in">start</span> com.ss.android.lark/com.ss.android.lark.main.app.MainActivity</span><br></pre></td></tr></table></figure><h3 id="获取-Activity-名"><a href="#获取-Activity-名" class="headerlink" title="获取 Activity 名"></a>获取 Activity 名</h3><p>手机打开 App，电脑使用命令：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity activities</span><br></pre></td></tr></table></figure><p>搜索一下 <code>mActivityComponent</code> :</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202406241352443.png" alt="image.png"></p><h2 id="获取系统信息"><a href="#获取系统信息" class="headerlink" title="获取系统信息"></a>获取系统信息</h2><h3 id="获取是否解锁状态"><a href="#获取是否解锁状态" class="headerlink" title="获取是否解锁状态"></a>获取是否解锁状态</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys window policy</span><br></pre></td></tr></table></figure><p>不同版本可能参数不一样，一个通用的办法是在熄屏先执行此命令，记录下来，然后亮屏再执行一次，对比一下差异就能知道是哪个参数了。小米 11 参数为 <code>mIsScreenOn</code></p><h2 id="卸载无法卸载的系统应用"><a href="#卸载无法卸载的系统应用" class="headerlink" title="卸载无法卸载的系统应用"></a>卸载无法卸载的系统应用</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm uninstall --user <span class="number">0</span> com.miui.systemAdSolution</span><br><span class="line"></span><br><span class="line">等同于先进入adb shell ，然后再执行命令</span><br><span class="line">adb shell</span><br><span class="line">&gt; pm uninstall --user <span class="number">0</span> com.miui.systemAdSolution</span><br></pre></td></tr></table></figure><h3 id="查询-APP-列表"><a href="#查询-APP-列表" class="headerlink" title="查询 APP 列表"></a>查询 APP 列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用下面命令查询已安装的软件列表（之后卸载软件需要知道软件包名称）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有软件</span></span><br><span class="line">adb shell pm list packages</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出系统软件</span></span><br><span class="line">adb shell pm list packages -s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出其他软件</span></span><br><span class="line">adb shell pm list packages -3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已禁用软件</span></span><br><span class="line">adb shell pm list packages -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已启用软件</span></span><br><span class="line">adb shell pm list packages -e</span><br></pre></td></tr></table></figure><h3 id="查询软件详情"><a href="#查询软件详情" class="headerlink" title="查询软件详情"></a>查询软件详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看软件详细信息</span></span><br><span class="line">adb shell dumpsys package com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看软件安装路径</span></span><br><span class="line">adb shell pm path com.mipay.wallet</span><br></pre></td></tr></table></figure><h3 id="停止-禁用-卸载"><a href="#停止-禁用-卸载" class="headerlink" title="停止 &amp; 禁用 &amp; 卸载"></a>停止 &amp; 禁用 &amp; 卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止 APP</span></span><br><span class="line">adb shell am force-stop com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 APP</span></span><br><span class="line">adb shell pm disable-user com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用 APP</span></span><br><span class="line">adb shell pm <span class="built_in">enable</span> com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 APP，保留缓存与数据。</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 APP，不保留缓存与数据。</span></span><br><span class="line">adb shell pm uninstall --user 0 com.mipay.wallet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载后 恢复安装</span></span><br><span class="line">adb shell pm install-existing --user 0 com.miui.securitycenter</span><br></pre></td></tr></table></figure><blockquote><p>恢复出厂设置会恢复所有被禁用和删除的 APP</p></blockquote><h3 id="MIUI-常用卸载软件记录"><a href="#MIUI-常用卸载软件记录" class="headerlink" title="MIUI 常用卸载软件记录"></a>MIUI 常用卸载软件记录</h3><blockquote><p>以小米 11 HyperOS 1.0 为例（MIUI 类似）:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小米系统广告解决方案</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.miui.systemAdSolution</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小米广告分析</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.miui.analytics</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小米游戏中心服务</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.xiaomi.gamecenter.sdk.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># bug反馈</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.miui.bugreport</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快应用服务框架</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.miui.hybrid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小米自带浏览器（卸载后需要自行安装浏览器）</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.android.browser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小米手机管家（手机管家一键修复会关闭 adb 调试，所以把它卸载掉）</span></span><br><span class="line">adb shell pm uninstall -k --user 0 com.miui.securitycenter</span><br></pre></td></tr></table></figure><h2 id="模拟点击"><a href="#模拟点击" class="headerlink" title="模拟点击"></a>模拟点击</h2><blockquote><p>开发者选项里面要开启 usb 调试 (安全设置) 和 usb 调试两个开关</p></blockquote><h3 id="模拟点击-500-1000-坐标"><a href="#模拟点击-500-1000-坐标" class="headerlink" title="模拟点击 (500,1000) 坐标"></a>模拟点击 (500,1000) 坐标</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input tap 500 1000</span><br></pre></td></tr></table></figure><blockquote><p>开发者选项中打开指针位置可以看到点的坐标</p></blockquote><h3 id="模拟滑动"><a href="#模拟滑动" class="headerlink" title="模拟滑动"></a>模拟滑动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从（250，250）滑动到（300，300）</span></span><br><span class="line">adb shell input swipe 250 250 300 300 </span><br></pre></td></tr></table></figure><h3 id="模拟输入"><a href="#模拟输入" class="headerlink" title="模拟输入"></a>模拟输入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input text <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="模拟按键"><a href="#模拟按键" class="headerlink" title="模拟按键"></a>模拟按键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模拟back</span></span><br><span class="line">adb shell input keyevent 4</span><br></pre></td></tr></table></figure><blockquote><p>keyevent code:</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">KEYCODE_UNKNOWN</span>=<span class="number">0</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SOFT_LEFT</span>=<span class="number">1</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SOFT_RIGHT</span>=<span class="number">2</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_HOME</span>=<span class="number">3</span><span class="comment">;     //home键</span></span><br><span class="line"><span class="attr">KEYCODE_BACK</span>=<span class="number">4</span><span class="comment">;     //back键</span></span><br><span class="line"><span class="attr">KEYCODE_CALL</span>=<span class="number">5</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_ENDCALL</span>=<span class="number">6</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_0</span>=<span class="number">7</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_1</span>=<span class="number">8</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_2</span>=<span class="number">9</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_3</span>=<span class="number">10</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_4</span>=<span class="number">11</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_5</span>=<span class="number">12</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_6</span>=<span class="number">13</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_7</span>=<span class="number">14</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_8</span>=<span class="number">15</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_9</span>=<span class="number">16</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_STAR</span>=<span class="number">17</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_POUND</span>=<span class="number">18</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DPAD_UP</span>=<span class="number">19</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DPAD_DOWN</span>=<span class="number">20</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DPAD_LEFT</span>=<span class="number">21</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DPAD_RIGHT</span>=<span class="number">22</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DPAD_CENTER</span>=<span class="number">23</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_VOLUME_UP</span>=<span class="number">24</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_VOLUME_DOWN</span>=<span class="number">25</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_POWER</span>=<span class="number">26</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_CAMERA</span>=<span class="number">27</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_CLEAR</span>=<span class="number">28</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_A</span>=<span class="number">29</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_B</span>=<span class="number">30</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_C</span>=<span class="number">31</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_D</span>=<span class="number">32</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_E</span>=<span class="number">33</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_F</span>=<span class="number">34</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_G</span>=<span class="number">35</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_H</span>=<span class="number">36</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_I</span>=<span class="number">37</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_J</span>=<span class="number">38</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_K</span>=<span class="number">39</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_L</span>=<span class="number">40</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_M</span>=<span class="number">41</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_N</span>=<span class="number">42</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_O</span>=<span class="number">43</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_P</span>=<span class="number">44</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_Q</span>=<span class="number">45</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_R</span>=<span class="number">46</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_S</span>=<span class="number">47</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_T</span>=<span class="number">48</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_U</span>=<span class="number">49</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_V</span>=<span class="number">50</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_W</span>=<span class="number">51</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_X</span>=<span class="number">52</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_Y</span>=<span class="number">53</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_Z</span>=<span class="number">54</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_COMMA</span>=<span class="number">55</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_PERIOD</span>=<span class="number">56</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_ALT_LEFT</span>=<span class="number">57</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_ALT_RIGHT</span>=<span class="number">58</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SHIFT_LEFT</span>=<span class="number">59</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SHIFT_RIGHT</span>=<span class="number">60</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_TAB</span>=<span class="number">61</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SPACE</span>=<span class="number">62</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SYM</span>=<span class="number">63</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_EXPLORER</span>=<span class="number">64</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_ENVELOPE</span>=<span class="number">65</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_ENTER</span>=<span class="number">66</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_DEL</span>=<span class="number">67</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_GRAVE</span>=<span class="number">68</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MINUS</span>=<span class="number">69</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_EQUALS</span>=<span class="number">70</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_LEFT_BRACKET</span>=<span class="number">71</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_RIGHT_BRACKET</span>=<span class="number">72</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_BACKSLASH</span>=<span class="number">73</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SEMICOLON</span>=<span class="number">74</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_APOSTROPHE</span>=<span class="number">75</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SLASH</span>=<span class="number">76</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_AT</span>=<span class="number">77</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_NUM</span>=<span class="number">78</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_HEADSETHOOK</span>=<span class="number">79</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_FOCUS</span>=<span class="number">80</span><span class="comment">;//*Camera*focus</span></span><br><span class="line"><span class="attr">KEYCODE_PLUS</span>=<span class="number">81</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MENU</span>=<span class="number">82</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_NOTIFICATION</span>=<span class="number">83</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_SEARCH</span>=<span class="number">84</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_PLAY_PAUSE</span>=<span class="number">85</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_STOP</span>=<span class="number">86</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_NEXT</span>=<span class="number">87</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_PREVIOUS</span>=<span class="number">88</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_REWIND</span>=<span class="number">89</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MEDIA_FAST_FORWARD</span>=<span class="number">90</span><span class="comment">;</span></span><br><span class="line"><span class="attr">KEYCODE_MUTE</span>=<span class="number">91</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Ubuntu-等-Linux-系统无法连接-ADB"><a href="#Ubuntu-等-Linux-系统无法连接-ADB" class="headerlink" title="Ubuntu 等 Linux 系统无法连接 ADB"></a>Ubuntu 等 Linux 系统无法连接 ADB</h3><p>官方说明：<a href="https://developer.android.com/studio/run/device?hl=zh-cn">https://developer.android.com/studio/run/device?hl=zh-cn</a></p><p>比如报错 <code>no permissions (user in plugdev group; are your udev rules wrong?)</code></p><p>在 Linux 系统下，需要保证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG plugdev <span class="variable">$LOGNAME</span></span><br><span class="line">sudo apt-get install android-sdk-platform-tools-common adb</span><br></pre></td></tr></table></figure><p>然后注销重新登录，再次执行 adb 命令，手机上应该就会有授权弹窗了。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm部署一套高可用k8s集群 for Ubuntu</title>
      <link href="/posts/526ffc9a/"/>
      <url>/posts/526ffc9a/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 ubuntu 使用 kubeadm 搭建集群， <a href="/posts/b86d9e9f/">centos部署文档</a>, 有疑问的地方可以看 <a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/">官方文档</a></p></blockquote><h2 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h2><blockquote><p>我的机器详情如下, 配置至少为 4C4G</p></blockquote><table><thead><tr><th>hostname</th><th>IP</th><th>作用</th></tr></thead><tbody><tr><td>public</td><td>10.0.0.3</td><td>ingress、apiserver 负载均衡，nfs 存储</td></tr><tr><td>master1</td><td>10.0.0.11</td><td>k8s master 节点</td></tr><tr><td>master2</td><td>10.0.0.12</td><td>k8s master 节点</td></tr><tr><td>master3</td><td>10.0.0.13</td><td>k8s master 节点</td></tr><tr><td>worker1</td><td>10.0.0.21</td><td>k8s worker 节点</td></tr><tr><td>worker2</td><td>10.0.0.22</td><td>k8s worker 节点</td></tr></tbody></table><p>每台机器都做域名解析，或者绑定 hosts(可选但建议)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.0.3  public kube-apiserver</span><br><span class="line">10.0.0.11 master1</span><br><span class="line">10.0.0.12 master2</span><br><span class="line">10.0.0.13 master3</span><br></pre></td></tr></table></figure><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><blockquote><p>基础环境是不管 master 还是 worker 都需要的环境</p></blockquote><ol><li>禁用 swap</li><li>确保每个节点上 MAC 地址和 product_uuid 的唯一性 <code>sudo cat /sys/class/dmi/id/product_uuid</code></li><li>修改 hostname</li><li>允许 iptables 检查桥接流量</li><li>关闭防火墙</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> --now ufw</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h3 id="安装-runtime"><a href="#安装-runtime" class="headerlink" title="安装 runtime"></a>安装 runtime</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Containerd</button><button type="button" class="tab">Docker</button></div><div class="tab-contents"><div class="tab-item-content active"><h4 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置必需的 sysctl 参数，这些参数在重新启动后仍然存在。</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用 sysctl 参数而无需重新启动</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y ca-certificates curl gnupg lsb-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 信任密钥</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加仓库</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line"><span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string"><span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装containerd</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y containerd.io</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>生成默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/containerd</span><br><span class="line">containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><p>结合 runc 使用 systemd cgroup 驱动，在 <code>/etc/containerd/config.toml</code> 中设置</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc]</span></span><br><span class="line">...</span><br><span class="line"><span class="section">[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc.options]</span></span><br><span class="line">   <span class="attr">SystemdCgroup</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><code>sudo systemctl restart containerd</code></p><h4 id="crictl-配置"><a href="#crictl-配置" class="headerlink" title="crictl 配置"></a>crictl 配置</h4><p>之前使用 docker 的时候，docker 给我们做了很多好用的工具，现在用了 containerd，管理容器我们用 cri 管理工具 crictl，创建配置文件</p><p>vim &#x2F;etc&#x2F;crictl.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtime-endpoint:</span> <span class="string">unix:///run/containerd/containerd.sock</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br></pre></td></tr></table></figure><h4 id="配置-Doker"><a href="#配置-Doker" class="headerlink" title="配置 Doker"></a>配置 Doker</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /etc/docker</span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;exec-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;native.cgroupdriver=systemd&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json-file&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;max-size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;storage-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;overlay2&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo systemctl enable --now docker</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">使用官方仓库</button><button type="button" class="tab">使用阿里云镜像仓库</button></div><div class="tab-contents"><div class="tab-item-content active"><blockquote><p>这一步需要科学上网, 不能科学上网的可以看看国内的源。</p></blockquote><p>更新 apt 包索引并安装使用 Kubernetes apt 仓库所需要的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y apt-transport-https ca-certificates curl</span><br></pre></td></tr></table></figure><p>下载 Google Cloud 公开签名秘钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>添加 Kubernetes apt 仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/kubernetes.list</span><br></pre></td></tr></table></figure><p>更新 apt 包索引，安装 kubelet、kubeadm 和 kubectl，并锁定其版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可用的版本号</span></span><br><span class="line">sudo apt-cache madison kubeadm</span><br><span class="line">sudo apt install -y kubeadm=1.21.10-00 kubelet=1.21.10-00 kubectl=1.21.10-00</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁定版本，不随 apt upgrade 更新</span></span><br><span class="line">sudo apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line"></span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可用的版本号</span></span><br><span class="line">sudo apt-cache madison kubeadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line">sudo apt install -y kubeadm=1.21.10-00 kubelet=1.21.10-00 kubectl=1.21.10-00</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line"><span class="comment"># sudo apt install -y kubeadm kubelet kubectl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁定版本，不随 apt upgrade 更新</span></span><br><span class="line">sudo apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="准备高可用方案"><a href="#准备高可用方案" class="headerlink" title="准备高可用方案"></a>准备高可用方案</h2><p><a href="/posts/10cef768/">Kubernetes之master高可用方案</a></p><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><h3 id="kubeadm-init"><a href="#kubeadm-init" class="headerlink" title="kubeadm init"></a>kubeadm init</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">官方镜像源</button><button type="button" class="tab">国内阿里云镜像源</button></div><div class="tab-contents"><div class="tab-item-content active"><p>在 init 之前先将镜像拉取到本地（可选步骤）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version 1.21.10</span><br></pre></td></tr></table></figure><p>在 k8s-master0 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--kubernetes-version 1.21.10 \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;kube-apiserver:6443&quot;</span> \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>在 init 之前先将镜像拉取到本地（可选步骤）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version 1.21.10 --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><p>在 k8s-master0 上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init \</span><br><span class="line">--kubernetes-version 1.21.10 \</span><br><span class="line">--control-plane-endpoint <span class="string">&quot;kube-apiserver:6443&quot;</span> \</span><br><span class="line">--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">--upload-certs \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>也可以用 <code>kubeadm config print init-defaults &gt; init.yaml</code> 生成 kubeadm 的配置，并用<br><code>kubeadm init --config=init.yaml</code> 来创建集群。</p></blockquote><h3 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">安装flannel插件</button><button type="button" class="tab">安装calico插件</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待补充</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><a href="/posts/sepu3k/">kubeadm 部署的集群 常见问题汇总</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> keepalived </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> kubeadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows映射网络驱动器</title>
      <link href="/posts/88695286/"/>
      <url>/posts/88695286/</url>
      
        <content type="html"><![CDATA[<h2 id="net-use-命令常用操作"><a href="#net-use-命令常用操作" class="headerlink" title="net use 命令常用操作"></a>net use 命令常用操作</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: 取消所有连接</span><br><span class="line"><span class="built_in">net</span> use * /<span class="built_in">del</span> /y</span><br><span class="line"></span><br><span class="line">:: 映射坚果云webdav, PERSISTENT:no表示不会记忆映射, 重启会丢失.</span><br><span class="line"><span class="built_in">net</span> use Z: https://dav.jianguoyun.com/dav/ /user:iuxt@qq.com &lt;你的应用密码&gt; /PERSISTENT:no</span><br></pre></td></tr></table></figure><h2 id="subst-命令"><a href="#subst-命令" class="headerlink" title="subst 命令"></a>subst 命令</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:: 映射C:\Files到D: 某些软件不支持</span><br><span class="line"><span class="built_in">subst</span> D: C:\Files</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alpine常用配置</title>
      <link href="/posts/c43764dd/"/>
      <url>/posts/c43764dd/</url>
      
        <content type="html"><![CDATA[<h2 id="包管理-apk"><a href="#包管理-apk" class="headerlink" title="包管理 apk"></a>包管理 apk</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apk add busybox-extras busybox vim python3 git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不缓存，打容器镜像常用</span></span><br><span class="line">apk add --no-cache busybox</span><br></pre></td></tr></table></figure><h3 id="查看安装的包"><a href="#查看安装的包" class="headerlink" title="查看安装的包"></a>查看安装的包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有已安装的包：</span></span><br><span class="line">apk info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看特定包的详细信息：</span></span><br><span class="line">apk info &lt;package_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有已安装包的版本号：</span></span><br><span class="line">apk info -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按字母顺序列出已安装的包：</span></span><br><span class="line">apk info -vv</span><br></pre></td></tr></table></figure><h3 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&#x27;</span> /etc/apk/repositories</span><br></pre></td></tr></table></figure><h3 id="卸载包"><a href="#卸载包" class="headerlink" title="卸载包"></a>卸载包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk del git</span><br></pre></td></tr></table></figure><h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p>alpine 默认的是 ash shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.profile</span><br></pre></td></tr></table></figure><h2 id="alpine-服务管理工具"><a href="#alpine-服务管理工具" class="headerlink" title="alpine 服务管理工具"></a>alpine 服务管理工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有服务</span></span><br><span class="line">rc-service --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加开机自启动</span></span><br><span class="line">rc-update add &#123;service-name&#125;</span><br></pre></td></tr></table></figure><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dns</span></span><br><span class="line">/etc/resolv.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网卡配置文件 /etc/network/interface</span></span><br><span class="line">iface eth0 inet static</span><br><span class="line">    address 192.168.1.150</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 192.168.1.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者iface eth0 inet dhcp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Alpine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用操作记录</title>
      <link href="/posts/518e617c/"/>
      <url>/posts/518e617c/</url>
      
        <content type="html"><![CDATA[<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="查看-GIT-本地配置"><a href="#查看-GIT-本地配置" class="headerlink" title="查看 GIT 本地配置"></a>查看 GIT 本地配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h3 id="编辑-git-配置文件"><a href="#编辑-git-配置文件" class="headerlink" title="编辑 git 配置文件"></a>编辑 git 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --edit</span><br></pre></td></tr></table></figure><h3 id="设置-GIT-用户信息"><a href="#设置-GIT-用户信息" class="headerlink" title="设置 GIT 用户信息"></a>设置 GIT 用户信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;zhanglikun&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;iuxt@qq.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="git-记住密码"><a href="#git-记住密码" class="headerlink" title="git 记住密码"></a>git 记住密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h3 id="配置文件-gitconfig-内容"><a href="#配置文件-gitconfig-内容" class="headerlink" title="配置文件 ~/.gitconfig 内容"></a>配置文件 <code>~/.gitconfig</code> 内容</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[user]</span></span><br><span class="line">        <span class="attr">name</span> = zhanglikun</span><br><span class="line">        <span class="attr">email</span> = iuxt@qq.com</span><br><span class="line"><span class="section">[credential]</span></span><br><span class="line">        <span class="attr">helper</span> = store</span><br></pre></td></tr></table></figure><h3 id="忽略追踪文件权限"><a href="#忽略追踪文件权限" class="headerlink" title="忽略追踪文件权限"></a>忽略追踪文件权限</h3><blockquote><p>建议 windows 代码使用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.filemode <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>git branch -a</td><td>查看所有分支</td></tr><tr><td>git branch -r</td><td>查看远程分支</td></tr><tr><td>git fetch</td><td>更新索引</td></tr><tr><td>git checkout 分支名</td><td>切换到分支</td></tr><tr><td>git checkout -b 本地分支名</td><td>在本地创建一个分支, 并切换到这个分支</td></tr><tr><td>git reset –hard 6e52</td><td>回退到某个 ID</td></tr><tr><td>git add -u</td><td>将删除操作也添加到暂存区</td></tr><tr><td>git rm –cached filename</td><td>将暂存区的文件移出暂存区</td></tr></tbody></table><h3 id="使用-git-checkout-撤销本地修改"><a href="#使用-git-checkout-撤销本地修改" class="headerlink" title="使用 git checkout 撤销本地修改"></a>使用 git checkout 撤销本地修改</h3><blockquote><p>checkout 就是撤销你的修改, 暂存区是会保留.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销所有修改</span></span><br><span class="line">git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销单个文件的修改</span></span><br><span class="line">git checkout readme.md</span><br></pre></td></tr></table></figure><h3 id="git-回滚一个文件到指定版"><a href="#git-回滚一个文件到指定版" class="headerlink" title="git 回滚一个文件到指定版"></a>git 回滚一个文件到指定版</h3><p>根据 commitid 来回滚</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> /path/to/file</span><br><span class="line">git checkout &lt;commit-hashcode&gt; /path/to/file</span><br></pre></td></tr></table></figure><p>回滚到上一个版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout HEAD^ /path/to/file</span><br></pre></td></tr></table></figure><h3 id="使用-git-reset-回退项目版本"><a href="#使用-git-reset-回退项目版本" class="headerlink" title="使用 git reset 回退项目版本"></a>使用 git reset 回退项目版本</h3><blockquote><p>git reflog 查看命令历史</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;commit-hashcode&gt;</span><br><span class="line">git reset --hard HEAD^                  <span class="comment"># HEAD表示当前版本 HEAD^ 表示上一个版本 HEAD^^ 上两个版本 HEAD~100 上100个版本</span></span><br></pre></td></tr></table></figure><h3 id="添加关联的远程-git-仓库"><a href="#添加关联的远程-git-仓库" class="headerlink" title="添加关联的远程 git 仓库"></a>添加关联的远程 git 仓库</h3><blockquote><p>origin 是远端的名字, 多个远端名字不能相同</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/iuxt/test.git</span><br></pre></td></tr></table></figure><h3 id="上传，并关联到-master-分支"><a href="#上传，并关联到-master-分支" class="headerlink" title="上传，并关联到 master 分支"></a>上传，并关联到 master 分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="合并代码"><a href="#合并代码" class="headerlink" title="合并代码"></a>合并代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git merge dev            <span class="comment"># 将dev代码合并到master</span></span><br></pre></td></tr></table></figure><blockquote><p>合并方式如果是 fast-forward 模式, 表示 git 只是切换了一下指针</p></blockquote><h3 id="删除分支-分支改名"><a href="#删除分支-分支改名" class="headerlink" title="删除分支, 分支改名"></a>删除分支, 分支改名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重命名本地分支</span></span><br><span class="line">git branch -m oldbranch newbranch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push --delete origin oldbranch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将重命名后的分支推到远端</span></span><br><span class="line">git push origin newbranch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 与远程分支关联</span></span><br><span class="line">git branch --set-upstream-to origin/newbranch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果远程已经删除了分支, 本地还没更新, 可以使用</span></span><br><span class="line">git fetch -p</span><br></pre></td></tr></table></figure><h3 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h3><p>利用 rebase 删除历史提交记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i &lt;你要基于那个提交的<span class="built_in">id</span>&gt;</span><br></pre></td></tr></table></figure><p>commit 前面的 pick 改成 d 即可，表示丢弃这个 commit，如果需要推送到远端的话，需要 <code>git push -f</code></p><blockquote><p>注意：多人协作慎用 <code>git push -f</code></p></blockquote><h2 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h2><h3 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看标签</span></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看标签详情</span></span><br><span class="line">git show v1.0</span><br></pre></td></tr></table></figure><h3 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h3><p>切换到对应的分支, 默认是打在最新的 commit 上的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag v1</span><br></pre></td></tr></table></figure><p>如果想要打到历史的 commit id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看历史的commit id</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline --abbrev-commit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 commit id 打标签</span></span><br><span class="line">git tag v0.9 f52c633</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打标签带上说明</span></span><br><span class="line">git tag -a v0.1 -m <span class="string">&quot;version 0.1 released&quot;</span> 1094adb</span><br></pre></td></tr></table></figure><h3 id="推送标签"><a href="#推送标签" class="headerlink" title="推送标签"></a>推送标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一次性全部推送标签</span></span><br><span class="line">git push origin --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送一个标签到远程</span></span><br><span class="line">git push origin refs/tags/v0.1</span><br></pre></td></tr></table></figure><h3 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除本地标签</span></span><br><span class="line">git tag -d v0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程标签，需要先删除本地标签</span></span><br><span class="line">git tag -d v0.1</span><br><span class="line">git push origin :refs/tags/v0.1</span><br></pre></td></tr></table></figure><h2 id="submodule"><a href="#submodule" class="headerlink" title="submodule"></a>submodule</h2><h3 id="添加-submodule"><a href="#添加-submodule" class="headerlink" title="添加 submodule"></a>添加 submodule</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt</span><br></pre></td></tr></table></figure><p>后续使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HEIGE-PCloud/DoIt.git</span><br><span class="line"><span class="built_in">cd</span> DoIt</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><h3 id="删除-submodule"><a href="#删除-submodule" class="headerlink" title="删除 submodule"></a>删除 submodule</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git submodule deinit -f -- themes/eureka</span><br><span class="line"><span class="built_in">rm</span> -rf .git/modules/themes/eureka</span><br><span class="line">git <span class="built_in">rm</span> -f themes/eureka</span><br></pre></td></tr></table></figure><p>最后更新一下 <code>.gitmodules</code> 即可</p><h3 id="修改-submodule-的-url"><a href="#修改-submodule-的-url" class="headerlink" title="修改 submodule 的 url"></a>修改 submodule 的 url</h3><p>1.更新 <code>.gitsubmodule</code> 中对应 <code>submodule</code> 的条目 URL</p><p>2.更新 <code>.git/config</code> 中对应 <code>submodule</code> 的条目的 URL</p><p>3.执行 <code>git submodule sync</code></p><h2 id="git-lfs-大文件存储"><a href="#git-lfs-大文件存储" class="headerlink" title="git-lfs 大文件存储"></a>git-lfs 大文件存储</h2><p>git lfs 是大文件存储, 独立于 git 仓库, 通过文件指针的方式来调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化仓库, 系统全局配置, 执行一次即可, 配置保存在 ~/.gitconfig</span></span><br><span class="line">git lfs install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跟踪文件， 即为把指定的文件使用 lfs 来管理, 执行后会添加信息到 .gitattributes 文件中。</span></span><br><span class="line">git lfs track *.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看被 lfs 管理的文件</span></span><br><span class="line">git lfs ls-files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个文件是否被 lfs 管理</span></span><br><span class="line">git check-attr filter xxx.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载所有lfs文件</span></span><br><span class="line">git lfs fetch --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传所有lfs文件</span></span><br><span class="line">git lfs push origin master --all</span><br><span class="line">git lfs push --all</span><br></pre></td></tr></table></figure><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><h3 id="指定密码拉取-git"><a href="#指定密码拉取-git" class="headerlink" title="指定密码拉取 git"></a>指定密码拉取 git</h3><blockquote><p>不安全, 推荐使用 ssh 密钥方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %40 表示 @</span></span><br><span class="line">git <span class="built_in">clone</span> http://admin:admin%401234@203.156.235.84:10000/r/app/client.git</span><br></pre></td></tr></table></figure><h3 id="删除历史记录中的大文件"><a href="#删除历史记录中的大文件" class="headerlink" title="删除历史记录中的大文件"></a>删除历史记录中的大文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 git-filter-repo 工具</span></span><br><span class="line">sudo apt install git-filter-repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设文件为：large_file.zip ，从所有历史记录中删除。</span></span><br><span class="line">git filter-repo --path large_file.zip --invert-paths</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件夹</span></span><br><span class="line">git filter-repo --path 123/ --invert-paths</span><br></pre></td></tr></table></figure><h3 id="windows-建议配置"><a href="#windows-建议配置" class="headerlink" title="windows 建议配置"></a>windows 建议配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交时转换为LF， 拉取时不转换</span></span><br><span class="line"><span class="comment"># 或者配置成false，那么git不处理换行符，由用户自己处理。</span></span><br><span class="line">git config --global core.autocrlf input</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略追踪文件权限</span></span><br><span class="line">git config --global core.filemode <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决控制台不能正常显示中文的问题</span></span><br><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派常用操作记录</title>
      <link href="/posts/16fcf6b8/"/>
      <url>/posts/16fcf6b8/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><h3 id="替换成清华源"><a href="#替换成清华源" class="headerlink" title="替换成清华源"></a>替换成清华源</h3><blockquote><p>清华源地址<a href="https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/">https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=armhf] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">     <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | \</span><br><span class="line">    sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><h2 id="替换软件源"><a href="#替换软件源" class="headerlink" title="替换软件源"></a>替换软件源</h2><p>中科大源<a href="https://mirrors.ustc.edu.cn/help/raspbian.html">https://mirrors.ustc.edu.cn/help/raspbian.html</a><br>清华源<a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation常用操作记录</title>
      <link href="/posts/4bef6e47/"/>
      <url>/posts/4bef6e47/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="官方下载链接"><a href="#官方下载链接" class="headerlink" title="官方下载链接"></a>官方下载链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-10.0.7-2844087.exe </span><br><span class="line"></span><br><span class="line">上面的版本不支持64位Windows系统 </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-12.0.0-2985596.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-12.5.4-5192485.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-12.5.5-5234757.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-12.5.9-7535481.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.0.0-6661328.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.0-7370693.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.1-7528167.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.2-8497320.exe </span><br><span class="line">http://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.3-9474260.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.4-10722678.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.5-10950780.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.6-12368378.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.7-12989993.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-14.1.8-14921873.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.0-10134415.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.1-10737736.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.2-10952284.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.3-12422535.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.4-12990004.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.1.0-13591040.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.0-14665864.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.1-15018445.exe</span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.2-15785246.exe </span><br><span class="line"></span><br><span class="line">上面的版本不能和hyper-v（包括wsl2）共存 </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.5-16285975.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.6-16341506.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.7-17171714.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.0.0-16894299.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.1.0-17198959.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.1.1-17801498.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.1.2-17966106.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.2.0-18760230.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.2.1-18811642.exe </span><br><span class="line">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.2.2-19200509.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1623-WIN-New/VMware-workstation-full-16.2.3-19376536.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1624-WIN/VMware-workstation-full-16.2.4-20089737.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1625-WIN/VMware-workstation-full-16.2.5-20904516.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1625-WIN/VMware-workstation-full-16.2.5-20904516.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1700-WIN/VMware-workstation-full-17.0.0-20800274.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1701-WIN/VMware-workstation-full-17.0.1-21139696.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1702-WIN/VMware-workstation-full-17.0.2-21581411.exe </span><br><span class="line">https://download3.vmware.com/software/WKST-1750-WIN/VMware-workstation-full-17.5.0-22583795.exe</span><br></pre></td></tr></table></figure><h3 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h3><table><thead><tr><th>版本</th><th>批量激活序列号</th></tr></thead><tbody><tr><td>10.x</td><td>1Z0G9-67285-FZG78-ZL3Q2-234JG</td></tr><tr><td>11.x</td><td>YG74R-86G1M-M8DLP-XEQNT-XAHW2</td></tr><tr><td>12.x</td><td>ZC3TK-63GE6-481JY-WWW5T-Z7ATA</td></tr><tr><td>14.x</td><td>AU108-FLF9P-H8EJZ-7XMQ9-XG0U8</td></tr><tr><td>15.x</td><td>FC7D0-D1YDL-M8DXZ-CYPZE-P2AY6</td></tr><tr><td>16.x</td><td>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</td></tr><tr><td>17.x</td><td>VG7TK-AZX8N-0888Y-PYQ7E-MKRW8</td></tr></tbody></table><p><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">最新版下载地址</a></p><h3 id="ubuntu-安装依赖"><a href="#ubuntu-安装依赖" class="headerlink" title="ubuntu 安装依赖"></a>ubuntu 安装依赖</h3><p>Ubuntu 下面安装 VMWare，提示：Build environment error! A required application is missing and Modconfig can not</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc libcanberra*</span><br></pre></td></tr></table></figure><h2 id="减小导出-ova-的体积"><a href="#减小导出-ova-的体积" class="headerlink" title="减小导出 ova 的体积"></a>减小导出 ova 的体积</h2><blockquote><p>导出 OVF 模板之前压缩会大幅度缩小 OVF 的体积</p></blockquote><h3 id="压缩-linux-虚拟机磁盘"><a href="#压缩-linux-虚拟机磁盘" class="headerlink" title="压缩 linux 虚拟机磁盘"></a>压缩 linux 虚拟机磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -E sh -c <span class="string">&#x27;cat /dev/zero &gt; zero;sync;sleep 1;sync;rm -f zero &amp;&amp; vmware-toolbox-cmd disk shrinkonly &amp;&amp; poweroff&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="压缩-windows-虚拟机磁盘"><a href="#压缩-windows-虚拟机磁盘" class="headerlink" title="压缩 windows 虚拟机磁盘"></a>压缩 windows 虚拟机磁盘</h3><p>在虚拟机列表上右键👉🏻️管理👉🏻️清理磁盘</p><h2 id="vmdk-磁盘文件管理"><a href="#vmdk-磁盘文件管理" class="headerlink" title="vmdk 磁盘文件管理"></a>vmdk 磁盘文件管理</h2><h3 id="将单个文件-vmdk-分割成每个不超过-2G-的多个-vmdk-文件"><a href="#将单个文件-vmdk-分割成每个不超过-2G-的多个-vmdk-文件" class="headerlink" title="将单个文件 vmdk 分割成每个不超过 2G 的多个 vmdk 文件"></a>将单个文件 vmdk 分割成每个不超过 2G 的多个 vmdk 文件</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files (x86)\VMware\VMware Workstation\vmware-vdiskmanager.exe&quot; -r source.vmdk -t <span class="number">1</span> split.vmdk</span><br></pre></td></tr></table></figure><h3 id="合并-vmdk-文件"><a href="#合并-vmdk-文件" class="headerlink" title="合并 vmdk 文件"></a>合并 vmdk 文件</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files (x86)\VMware\VMware Workstation\vmware-vdiskmanager.exe&quot; -r split.vmdk -t <span class="number">0</span> merged.vmdk</span><br></pre></td></tr></table></figure><h2 id="虚拟机-Linux-和主机文件共享"><a href="#虚拟机-Linux-和主机文件共享" class="headerlink" title="虚拟机 Linux 和主机文件共享"></a>虚拟机 Linux 和主机文件共享</h2><p>虚拟机需要安装 <code>open-vm-tools</code></p><h3 id="使用命令手动挂载"><a href="#使用命令手动挂载" class="headerlink" title="使用命令手动挂载"></a>使用命令手动挂载</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">4.0内核以上</button><button type="button" class="tab">4.0内核以下</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将所有共享文件夹挂载到/mnt/hgfs</span></span><br><span class="line">sudo vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将名称sharedfolder的共享挂载到/mnt/hgfs</span></span><br><span class="line">sudo /usr/bin/vmhgfs-fuse .host:/sharedfolder /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other </span><br></pre></td></tr></table></figure><blockquote><p>可以用 <code>vmhgfs-fuse -h</code> 查看命令可用的所有参数。挂载点可以自己设置，不一定要放在默认目录。</p></blockquote></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将所有共享文件夹挂载到/mnt/hgfs</span></span><br><span class="line">sudo mount -t vmhgfs .host:/ /mnt/hgfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将名称sharedfolder的共享挂载到/mnt/hgfs</span></span><br><span class="line">sudo mount -t vmhgfs .host:/sharedfolder /mnt/hgfs </span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="使用-fstab-自动挂载"><a href="#使用-fstab-自动挂载" class="headerlink" title="使用 fstab 自动挂载"></a>使用 fstab 自动挂载</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">4.0内核以上</button><button type="button" class="tab">4.0内核以下</button></div><div class="tab-contents"><div class="tab-item-content active"><blockquote><p>在 <code>/etc/fstab</code> 添加一行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认参数</span></span><br><span class="line">.host:/ /mnt/hgfs fuse.vmhgfs-fuse allow_other,defaults 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改用户和所有者，修改默认umask为022，默认权限是755</span></span><br><span class="line">.host:/ /mnt/hgfs/ fuse.vmhgfs-fuse allow_other,uid=1000,gid=1000,<span class="built_in">umask</span>=022 0 0</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><blockquote><p>在 <code>/etc/fstab</code> 添加一行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.host:/ /mnt/hgfs vmhgfs defaults 0 0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualMachine </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows搜索工具everything</title>
      <link href="/posts/542f557/"/>
      <url>/posts/542f557/</url>
      
        <content type="html"><![CDATA[<h2 id="无法弹出移动硬盘"><a href="#无法弹出移动硬盘" class="headerlink" title="无法弹出移动硬盘?"></a>无法弹出移动硬盘?</h2><p>设置👉🏻️索引👉🏻️NTFS 和 REFS<br>取消勾选 <code>自动包含新增固定卷</code></p><h2 id="排除搜索结果"><a href="#排除搜索结果" class="headerlink" title="排除搜索结果"></a>排除搜索结果</h2><p>设置👉🏻️索引👉🏻️排除列表👉🏻️添加筛选器</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$RECYCLE.BIN</span><br><span class="line">*AppData\Roaming\Microsoft\Windows\Recent*</span><br><span class="line">*Windows\Prefetch*</span><br><span class="line">*AppData\Local\Packages\Microsoft.Windows.Search_*</span><br></pre></td></tr></table></figure><h2 id="直接修改配置文件"><a href="#直接修改配置文件" class="headerlink" title="直接修改配置文件"></a>直接修改配置文件</h2><p>需要将 everything 进程完全停止后才能进行修改，不然 everything 关闭的时候会覆盖手动修改的配置文件。</p><ul><li><p>退出 everything</p></li><li><p>停止 everything 服务</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop everything</span><br></pre></td></tr></table></figure></li></ul><p>配置文件地址:<code>%appdata%\Everything\Everything.ini</code> 修改其中一行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">exclude_folders</span>=<span class="string">&quot;$RECYCLE.BIN&quot;</span>,<span class="string">&quot;*AppData\\Roaming\\Microsoft\\Windows\\Recent*&quot;</span>,<span class="string">&quot;*Windows\\Prefetch*&quot;</span>,<span class="string">&quot;*AppData\\Local\\Packages\\Microsoft.Windows.Search_*&quot;</span></span><br></pre></td></tr></table></figure><p>启动 everything 服务</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> everything</span><br></pre></td></tr></table></figure><p>启动 evething 软件</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu_Charmed_Kubernetes</title>
      <link href="/posts/efee88da/"/>
      <url>/posts/efee88da/</url>
      
        <content type="html"><![CDATA[<blockquote><p>官方文档: <a href="https://ubuntu.com/kubernetes/docs">https://ubuntu.com/kubernetes/docs</a></p></blockquote><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>集群 ip 规划，所有机器系统都是 <code>ubuntu 20.04</code></p><table><thead><tr><th>hostname</th><th>ip</th></tr></thead><tbody><tr><td>juju-client</td><td>10.0.0.10</td></tr><tr><td>juju-controller-1</td><td>10.0.0.11</td></tr><tr><td>juju-master-1</td><td>10.0.0.21</td></tr><tr><td>juju-master-2</td><td>10.0.0.22</td></tr><tr><td>juju-master-3</td><td>10.0.0.23</td></tr><tr><td>juju-worker-1</td><td>10.0.0.31</td></tr><tr><td>juju-worker-2</td><td>10.0.0.32</td></tr></tbody></table><blockquote><p>juju-client 为 juju 客户端和 haproxy 机器<br>juju-controller-1 为 juju 控制器节点 (可以做高可用)</p></blockquote><p>以下操作都是在 juju-client 上执行</p><h3 id="安装-juju"><a href="#安装-juju" class="headerlink" title="安装 juju"></a>安装 juju</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install juju --classic</span><br></pre></td></tr></table></figure><h3 id="设置云类型"><a href="#设置云类型" class="headerlink" title="设置云类型"></a>设置云类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju add-cloud</span><br><span class="line">输入manual</span><br></pre></td></tr></table></figure><h3 id="添加机器-一共-5-台"><a href="#添加机器-一共-5-台" class="headerlink" title="添加机器 (一共 5 台)"></a>添加机器 (一共 5 台)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju bootstrap</span><br><span class="line">juju add-machine ssh:root@x.x.x.x</span><br></pre></td></tr></table></figure><blockquote><p>机器添加完成后, <code>juju machines</code> 能看到机器 id</p></blockquote><h3 id="生成-yaml"><a href="#生成-yaml" class="headerlink" title="生成 yaml"></a>生成 yaml</h3><p><del>在<a href="https://jujucharms.com/new/">https://jujucharms.com/new/</a>画图，然后导出成 yaml</del><br><code>etcd</code> 还是 和 <code>master</code> 分开部署<br>etcd.yaml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">Kubernetes</span> <span class="string">Cluster</span> <span class="string">Deploy.</span></span><br><span class="line"><span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line"><span class="attr">machines:</span></span><br><span class="line">  <span class="attr">&#x27;0&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;1&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;2&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;3&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;4&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line"><span class="attr">applications:</span></span><br><span class="line">  <span class="attr">easyrsa:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/easyrsa-345</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">easyrsa:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/etcd-553</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">channel:</span> <span class="number">3.4</span><span class="string">/stable</span></span><br><span class="line">      <span class="attr">bind_to_all_interfaces:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">core:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">etcd:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">snapshot:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;4&#x27;</span></span><br><span class="line"><span class="attr">relations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">etcd:certificates</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">easyrsa:client</span></span><br></pre></td></tr></table></figure><p>core.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">Kubernetes</span> <span class="string">Cluster</span> <span class="string">Deploy.</span></span><br><span class="line"><span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line"><span class="attr">machines:</span></span><br><span class="line">  <span class="attr">&#x27;0&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;1&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;2&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;3&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;4&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;5&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;6&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;7&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line">  <span class="attr">&#x27;8&#x27;:</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line"><span class="attr">applications:</span></span><br><span class="line">  <span class="attr">containerd:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/containerd-102</span></span><br><span class="line">    <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">easyrsa:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/easyrsa-345</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">easyrsa:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/etcd-553</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">channel:</span> <span class="number">3.4</span><span class="string">/stable</span></span><br><span class="line">      <span class="attr">bind_to_all_interfaces:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">core:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">etcd:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">snapshot:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;4&#x27;</span></span><br><span class="line">  <span class="attr">kubeapi-load-balancer:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/kubeapi-load-balancer-757</span></span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;5&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes-master:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/kubernetes-master-955</span></span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">channel:</span> <span class="number">1.20</span><span class="string">/stable</span></span><br><span class="line">      <span class="attr">service-cidr:</span> <span class="number">172.31</span><span class="number">.64</span><span class="number">.0</span><span class="string">/21</span></span><br><span class="line">      <span class="attr">enable-dashboard-addons:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">proxy-extra-args:</span> <span class="string">proxy-mode=ipvs</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">cdk-addons:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">core:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kube-apiserver:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kube-controller-manager:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kube-proxy:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kube-scheduler:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kubectl:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;5&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;6&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;7&#x27;</span></span><br><span class="line">  <span class="attr">kubernetes-worker:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">cs:~containers/kubernetes-worker-726</span></span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">num_units:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">channel:</span> <span class="number">1.20</span><span class="string">/stable</span></span><br><span class="line">      <span class="attr">proxy-extra-args:</span> <span class="string">proxy-mode=ipvs</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">cni-amd64:</span> <span class="number">708</span></span><br><span class="line">      <span class="attr">cni-arm64:</span> <span class="number">699</span></span><br><span class="line">      <span class="attr">cni-s390x:</span> <span class="number">711</span></span><br><span class="line">      <span class="attr">core:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kube-proxy:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kubectl:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">kubelet:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">to:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;8&#x27;</span></span><br><span class="line">  <span class="attr">canal:</span></span><br><span class="line">    <span class="attr">charm:</span> <span class="string">&#x27;cs:~containers/canal-755&#x27;</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">cidr:</span> <span class="number">172.31</span><span class="number">.0</span><span class="number">.0</span><span class="string">/18</span></span><br><span class="line">      <span class="attr">iface:</span> <span class="string">eth0</span></span><br><span class="line">      <span class="attr">ignore-loose-rpf:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">series:</span> <span class="string">focal</span></span><br><span class="line"><span class="attr">relations:</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-master:kube-api-endpoint</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubeapi-load-balancer:apiserver</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-master:loadbalancer</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubeapi-load-balancer:loadbalancer</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-worker:kube-api-endpoint</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubeapi-load-balancer:website</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-master:kube-control</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubernetes-worker:kube-control</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-master:certificates</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">easyrsa:client</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubeapi-load-balancer:certificates</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">easyrsa:client</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-master:etcd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">etcd:db</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">kubernetes-worker:certificates</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">easyrsa:client</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">etcd:certificates</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">easyrsa:client</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">canal:etcd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">etcd:db</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">canal:cni</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubernetes-master:cni</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">canal:cni</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubernetes-worker:cni</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">containerd:containerd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubernetes-worker:container-runtime</span></span><br><span class="line"><span class="bullet">-</span> <span class="bullet">-</span> <span class="string">containerd:containerd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kubernetes-master:container-runtime</span></span><br></pre></td></tr></table></figure><h3 id="根据-yml-来部署"><a href="#根据-yml-来部署" class="headerlink" title="根据 yml 来部署"></a>根据 yml 来部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju deploy ./etcd.yaml --map-machines=existing,0=0,1=1,2=2,3=3,4=4</span><br><span class="line">juju deploy ./core.yaml --map-machines=existing,0=0,1=1,2=2,3=3,4=4,5=5,6=6,7=7,8=8</span><br></pre></td></tr></table></figure><p>juju status 全部 idle 就算正常了</p><h3 id="扩容-worker-节点"><a href="#扩容-worker-节点" class="headerlink" title="扩容 worker 节点"></a>扩容 worker 节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju add-machine ssh:root@x.x.x.x</span><br><span class="line">juju add-unit kubernetes-worker --to &lt;machine_id&gt;</span><br></pre></td></tr></table></figure><h2 id="kata-容器"><a href="#kata-容器" class="headerlink" title="kata 容器"></a>kata 容器</h2><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">juju deploy cs:~containers/kata</span><br><span class="line">juju add-relation kata kubernetes-master</span><br><span class="line">juju add-relation kata kubernetes-worker</span><br><span class="line">juju add-relation kata:untrusted containerd:untrusted</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>部署的时候加上 <code>io.kubernetes.cri.untrusted-workload: &quot;true&quot;</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-untrusted</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">io.kubernetes.cri.untrusted-workload:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><h3 id="删除-kata-运行时"><a href="#删除-kata-运行时" class="headerlink" title="删除 kata 运行时"></a>删除 kata 运行时</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">juju remove-relation --force kata kubernetes-master</span><br><span class="line">juju remove-relation --force kata kubernetes-worker</span><br><span class="line">juju remove-relation --force kata:untrusted containerd:untrusted</span><br><span class="line">juju remove-application kata</span><br></pre></td></tr></table></figure><h2 id="更换-master-节点"><a href="#更换-master-节点" class="headerlink" title="更换 master 节点"></a>更换 master 节点</h2><h3 id="先删除节点"><a href="#先删除节点" class="headerlink" title="先删除节点"></a>先删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">juju remove-unit etcd/1 --force --no-wait</span><br><span class="line">juju remove-unit kubernetes-master/1 --force --no-wait</span><br><span class="line">juju remove-machine 1 --force --no-wait</span><br></pre></td></tr></table></figure><h3 id="etcd-集群删除这个-member"><a href="#etcd-集群删除这个-member" class="headerlink" title="etcd 集群删除这个 member"></a>etcd 集群删除这个 member</h3><blockquote><p><a href="https://ubuntu.com/kubernetes/docs/charm-etcd">https://ubuntu.com/kubernetes/docs/charm-etcd</a></p></blockquote><p>需要先下载证书到本地 (要解压)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju run-action --<span class="built_in">wait</span> etcd/0 package-client-credentials</span><br><span class="line">juju scp etcd/0:etcd_credentials.tar.gz etcd_credentials.tar.gz</span><br></pre></td></tr></table></figure><p>然后使用 etcdctl 删除节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ETCDCTL_KEY_FILE=$(<span class="built_in">pwd</span>)/client.key</span><br><span class="line"><span class="built_in">export</span> ETCDCTL_CERT_FILE=$(<span class="built_in">pwd</span>)/client.crt</span><br><span class="line"><span class="built_in">export</span> ETCDCTL_CA_FILE=$(<span class="built_in">pwd</span>)/ca.crt</span><br><span class="line"><span class="built_in">export</span> ETCDCTL_ENDPOINT=https://10.0.0.21:2379</span><br><span class="line">etcdctl member list</span><br><span class="line"></span><br><span class="line">etcdctl member remove c2499df1988d1925</span><br></pre></td></tr></table></figure><h3 id="增加节点"><a href="#增加节点" class="headerlink" title="增加节点"></a>增加节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">juju add-machine ssh:root@100.64.1.167</span><br><span class="line">juju machines</span><br><span class="line">记住节点ID,假如是9</span><br></pre></td></tr></table></figure><h3 id="扩容-master-到节点-9"><a href="#扩容-master-到节点-9" class="headerlink" title="扩容 master 到节点 9"></a>扩容 master 到节点 9</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju add-unit kubernetes-master --to 9</span><br></pre></td></tr></table></figure><h3 id="扩容-etcd-到节点-9"><a href="#扩容-etcd-到节点-9" class="headerlink" title="扩容 etcd 到节点 9"></a>扩容 etcd 到节点 9</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju add-unit etcd --to 9</span><br></pre></td></tr></table></figure><h2 id="master-节点高可用"><a href="#master-节点高可用" class="headerlink" title="master 节点高可用"></a>master 节点高可用</h2><h3 id="方案-1-搭建-haproxy-负载均衡"><a href="#方案-1-搭建-haproxy-负载均衡" class="headerlink" title="方案 1 搭建 haproxy 负载均衡"></a>方案 1 搭建 haproxy 负载均衡</h3><blockquote><p>添加了参数 <code>proxy-extra-args: proxy-mode=ipvs</code> 表示使用 lvs 做负载均衡，可以不用 haproxy</p></blockquote><ol><li><p>haproxy 配置文件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">...省略</span><br><span class="line"></span><br><span class="line">frontend http_ingress_traffic_fe</span><br><span class="line">    bind 0.0.0.0:80</span><br><span class="line">    mode tcp</span><br><span class="line">    default_backend   http_ingress_traffic_be</span><br><span class="line"></span><br><span class="line">backend http_ingress_traffic_be</span><br><span class="line">    mode tcp</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server      juju-worker-1 10.0.0.31:80 check</span><br><span class="line">    server      juju-worker-2 10.0.0.32:80 check</span><br><span class="line"></span><br><span class="line">frontend https_ingress_traffic_fe</span><br><span class="line">    bind 0.0.0.0:443</span><br><span class="line">    mode tcp</span><br><span class="line">    default_backend   https_ingress_traffic_be</span><br><span class="line"></span><br><span class="line">backend https_ingress_traffic_be</span><br><span class="line">    mode tcp</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server      juju-worker-1 10.0.0.31:443 check</span><br><span class="line">    server      juju-worker-2 10.0.0.32:443 check</span><br><span class="line"></span><br><span class="line">frontend k8s_api_fe</span><br><span class="line">    bind 0.0.0.0:6443</span><br><span class="line">    mode tcp</span><br><span class="line">    default_backend   k8s_api_be</span><br><span class="line"></span><br><span class="line">backend k8s_api_be</span><br><span class="line">    mode tcp</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server      juju-master-1 10.0.0.21:6443 check</span><br><span class="line">    server      juju-master-2 10.0.0.22:6443 check</span><br><span class="line">    server      juju-master-3 10.0.0.23:6443 check</span><br></pre></td></tr></table></figure></li><li><p>修改负载均衡的 ip</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju config kubernetes-master loadbalancer-ips=<span class="string">&quot;10.0.0.10&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="方案-2-使用-keepalived"><a href="#方案-2-使用-keepalived" class="headerlink" title="方案 2 使用 keepalived"></a>方案 2 使用 keepalived</h3><p>参考文章：<a href="https://ubuntu.com/kubernetes/docs/keepalived">https://ubuntu.com/kubernetes/docs/keepalived</a></p><h2 id="juju-controller-高可用"><a href="#juju-controller-高可用" class="headerlink" title="juju-controller 高可用"></a>juju-controller 高可用</h2><h3 id="增加新的-controller-节点"><a href="#增加新的-controller-节点" class="headerlink" title="增加新的 controller 节点"></a>增加新的 controller 节点</h3><p>首先切换到 controller</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju switch controller</span><br><span class="line"><span class="comment"># juju switch default 切换回来</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju add-machine ssh:root@100.64.1.169</span><br></pre></td></tr></table></figure><p>查看 controller 机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju machines</span><br></pre></td></tr></table></figure><h3 id="开启高可用"><a href="#开启高可用" class="headerlink" title="开启高可用"></a>开启高可用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju enable-ha --to 5,6</span><br></pre></td></tr></table></figure><p>查看 controller 信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">juju controllers --refresh</span><br><span class="line">juju controllers</span><br></pre></td></tr></table></figure><h2 id="其他常见问题"><a href="#其他常见问题" class="headerlink" title="其他常见问题"></a>其他常见问题</h2><h3 id="安装-kubectl"><a href="#安装-kubectl" class="headerlink" title="安装 kubectl"></a>安装 kubectl</h3><ol><li><p>安装</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install kubectl --classic</span><br></pre></td></tr></table></figure></li><li><p>获取新的 kubeconfig 配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju scp kubernetes-master/0:config ~/.kube/config</span><br></pre></td></tr></table></figure></li></ol><h3 id="操作-etcd"><a href="#操作-etcd" class="headerlink" title="操作 etcd"></a>操作 etcd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">juju run-action --<span class="built_in">wait</span> etcd/10 package-client-credentials</span><br><span class="line">juju scp etcd/25:etcd_credentials.tar.gz etcd_credentials.tar.gz</span><br><span class="line"></span><br><span class="line">etcdctl --cacert=$(<span class="built_in">pwd</span>)/ca.crt --cert=$(<span class="built_in">pwd</span>)/client.crt --key=$(<span class="built_in">pwd</span>)/client.key --endpoints=<span class="string">&quot;https://172.31.72.5:2379&quot;</span> member list</span><br></pre></td></tr></table></figure><h3 id="重新添加节点"><a href="#重新添加节点" class="headerlink" title="重新添加节点"></a>重新添加节点</h3><blockquote><p>比如已经添加过的机器，由于配置出错或者其他原因想重新添加进来初始化，可以先移除再添加。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">juju remove-machine &lt;machine-id&gt; --force</span><br></pre></td></tr></table></figure><p>在目标机器上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /sbin/remove-juju-services</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /root/cdk /var/lib/juju/ /opt/calicoctl</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> keepalived </tag>
            
            <tag> Container </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建网关服务器</title>
      <link href="/posts/11e2a998/"/>
      <url>/posts/11e2a998/</url>
      
        <content type="html"><![CDATA[<p>网关服务器的常见用途:<br>1.企业局域网想要访问外网,可以使用网关服务器上网<br>2.可以一个网卡连接公网,一个网卡连接局域网交换机,让网关服务器做路由器使用</p><h2 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h2><h3 id="外网适配器打开共享"><a href="#外网适配器打开共享" class="headerlink" title="外网适配器打开共享"></a>外网适配器打开共享</h3><p>打开 控制面板\网络和 Internet\网络连接<br>右键外网网卡, 属性, 共享</p><ul><li><input checked="" disabled="" type="checkbox"> 允许其他用户通过此计算机的 Internet 连接来连接</li></ul><blockquote><p>注意: 外网打开允许其他用户连接后,内网的 IP 地址会自动改变,这时候得手动修改一下内网适配器的 IP 地址.</p></blockquote><h3 id="内网机器设置"><a href="#内网机器设置" class="headerlink" title="内网机器设置"></a>内网机器设置</h3><blockquote><p>内网机器网关配置成 网关服务器 的内网 IP</p></blockquote><p><em>注意:</em><br>内网适配器的固定 IP 不要填写网关,否则会导致路由混乱.</p><h2 id="Liunx-服务端-用-firewalld"><a href="#Liunx-服务端-用-firewalld" class="headerlink" title="Liunx 服务端 (用 firewalld)"></a>Liunx 服务端 (用 firewalld)</h2><blockquote><p>多网卡机器做网关做 nat 转发, 局域网其他机器需要配置网关地址.</p></blockquote><p>开启内核转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysctl.conf</span><br><span class="line">---</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>立即生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><p>开启 NAT 转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-masquerade</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>检查是否允许 NAT 转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-masquerade</span><br></pre></td></tr></table></figure><p>如果不想用了, 禁止防火墙 NAT 转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-masquerade</span><br></pre></td></tr></table></figure><h2 id="在-Linux-平台搭建-使用-iptables"><a href="#在-Linux-平台搭建-使用-iptables" class="headerlink" title="在 Linux 平台搭建 (使用 iptables)"></a>在 Linux 平台搭建 (使用 iptables)</h2><blockquote><p>这里服务端平台用 Centos 7 1804 版本,客户端用的是 Win7<br>外网 IP:192.168.111.0&#x2F;24 内网 IP:192.168.222.0&#x2F;24</p></blockquote><h3 id="关闭-firewalld-打开-iptables-服务"><a href="#关闭-firewalld-打开-iptables-服务" class="headerlink" title="关闭 firewalld,打开 iptables 服务"></a>关闭 firewalld,打开 iptables 服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure><h3 id="安装-iptables-services"><a href="#安装-iptables-services" class="headerlink" title="安装 iptables-services"></a>安装 iptables-services</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-service</span><br></pre></td></tr></table></figure><p>设置开机启动防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br></pre></td></tr></table></figure><p>开启内核转发</p><p>vim &#x2F;etc&#x2F;sysctl.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>配置 iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.222.0/24 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>保存&amp;重启 iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统隐藏文件</title>
      <link href="/posts/adfa6bbb/"/>
      <url>/posts/adfa6bbb/</url>
      
        <content type="html"><![CDATA[<h2 id="attrib-命令"><a href="#attrib-命令" class="headerlink" title="attrib 命令"></a>attrib 命令</h2><blockquote><p>这个只是隐藏, 并没有把文件加密</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">attrib</span> +S +H &lt;文件或文件夹&gt;</span><br></pre></td></tr></table></figure><ul><li>优点: 不用加密解密, 访问简单</li><li>缺点: 不安全</li></ul><h2 id="创建-vhd-并使用-bitlocker"><a href="#创建-vhd-并使用-bitlocker" class="headerlink" title="创建 vhd 并使用 bitlocker"></a>创建 vhd 并使用 bitlocker</h2><p>在磁盘管理里面创建 vhd 磁盘, 挂在好后使用 BitLocker 加密 (可选)</p><ul><li>优点: 数据安全,没有密码无法解密</li><li>缺点: 容易损坏,造成数据<strong>全部丢失</strong></li></ul><h2 id="使用第三方加密软件"><a href="#使用第三方加密软件" class="headerlink" title="使用第三方加密软件"></a>使用第三方加密软件</h2><p>略</p><h2 id="使用压缩软件加密"><a href="#使用压缩软件加密" class="headerlink" title="使用压缩软件加密"></a>使用压缩软件加密</h2><p>略</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows使用命令操作进程</title>
      <link href="/posts/222b586e/"/>
      <url>/posts/222b586e/</url>
      
        <content type="html"><![CDATA[<h2 id="查找进程"><a href="#查找进程" class="headerlink" title="查找进程"></a>查找进程</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist | <span class="built_in">findstr</span> xxx</span><br></pre></td></tr></table></figure><h2 id="根据进程名杀进程"><a href="#根据进程名杀进程" class="headerlink" title="根据进程名杀进程"></a>根据进程名杀进程</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /F /IM npc.exe</span><br></pre></td></tr></table></figure><h2 id="根据进程-PID-杀进程"><a href="#根据进程-PID-杀进程" class="headerlink" title="根据进程 PID 杀进程"></a>根据进程 PID 杀进程</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TASKKILL</span> /PID <span class="number">1230</span> /PID <span class="number">1241</span> /PID <span class="number">1253</span> /T</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows隐藏cmd运行窗口</title>
      <link href="/posts/3b6d9935/"/>
      <url>/posts/3b6d9935/</url>
      
        <content type="html"><![CDATA[<h2 id="使用开源软件实现-推荐"><a href="#使用开源软件实现-推荐" class="headerlink" title="使用开源软件实现 (推荐)"></a>使用开源软件实现 (推荐)</h2><blockquote><p>hidecon.exe <a href="http://code.kliu.org/misc/">官网地址</a></p></blockquote><p>使用方法，将 hidecon.exe 和其他可执行放在一块，在 bat 脚本前面加上</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hidecon.exe</span><br><span class="line">npc -server=xxx:<span class="number">8888</span> -vkey=xxxxxxxxxxxxxxxx -<span class="built_in">type</span>=tcp</span><br></pre></td></tr></table></figure><h2 id="使用-vbs-实现（推荐）"><a href="#使用-vbs-实现（推荐）" class="headerlink" title="使用 vbs 实现（推荐）"></a>使用 vbs 实现（推荐）</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateObject(&quot;WScript.Shell&quot;).Run &quot;D:\syncthing\syncthing.exe&quot;,<span class="number">0</span></span><br></pre></td></tr></table></figure><p>或者批量运行：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set</span> ws = CreateObject(&quot;Wscript.Shell&quot;)</span><br><span class="line">ws.run &quot;<span class="built_in">cmd</span> /c <span class="built_in">start</span> <span class="number">1</span>.exe&quot;,vbhide</span><br><span class="line">ws.run &quot;<span class="built_in">cmd</span> /c <span class="built_in">start</span> <span class="number">2</span>.exe&quot;,vbhide</span><br><span class="line">ws.run &quot;<span class="built_in">cmd</span> /c <span class="built_in">start</span> <span class="number">3</span>.exe&quot;,vbhide</span><br></pre></td></tr></table></figure><p>复制保存成 vbs 文件即可。</p><h2 id="使用-cmd-实现（会有一闪而过的黑窗）"><a href="#使用-cmd-实现（会有一闪而过的黑窗）" class="headerlink" title="使用 cmd 实现（会有一闪而过的黑窗）"></a>使用 cmd 实现（会有一闪而过的黑窗）</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> &quot;%<span class="number">1</span>&quot;==&quot;h&quot; <span class="keyword">goto</span> begin</span><br><span class="line"><span class="built_in">start</span> mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;&quot;&quot;%~nx0&quot;&quot; h&quot;,<span class="number">0</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line">:begin</span><br><span class="line">::以下为正常批处理命令，不可含有<span class="built_in">pause</span> <span class="built_in">set</span>/p等交互命令</span><br></pre></td></tr></table></figure><p>复制保存为 bat 文件即可。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令之awk</title>
      <link href="/posts/c4a2fe4/"/>
      <url>/posts/c4a2fe4/</url>
      
        <content type="html"><![CDATA[<h2 id="awk-多个分隔符"><a href="#awk-多个分隔符" class="headerlink" title="awk 多个分隔符"></a>awk 多个分隔符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;abcdefg&quot;</span> | awk -F <span class="string">&#x27;[ce]&#x27;</span> <span class="string">&#x27;&#123;print $1,$2,$3&#125;&#x27;</span></span><br><span class="line">ab d <span class="built_in">fg</span></span><br></pre></td></tr></table></figure><blockquote><p>但是我想要提取 dmesg 里面的时间，想以 <code>[]</code> 来做分割，这个时候可以反写 <code>[]</code> 取个巧</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | awk -F <span class="string">&#x27;[][]&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="打印某一列为特定值的行"><a href="#打印某一列为特定值的行" class="headerlink" title="打印某一列为特定值的行"></a>打印某一列为特定值的行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;$8==&quot;500&quot;&#x27;</span> nginx_access.log</span><br></pre></td></tr></table></figure><h2 id="awk-交换一个文件的两列"><a href="#awk-交换一个文件的两列" class="headerlink" title="awk 交换一个文件的两列"></a>awk 交换一个文件的两列</h2><p>比如文件 <code>test.txt</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a;b;c</span><br><span class="line">d;e;f</span><br><span class="line">1;2;3</span><br><span class="line">4;5;6</span><br></pre></td></tr></table></figure><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 1"></a>方法 1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&#x27;;&#x27;</span> <span class="string">&#x27;&#123;printf(&quot;%s;%s;%s\n&quot;,$3,$2,$1)&#125;&#x27;</span> test.txt</span><br></pre></td></tr></table></figure><h3 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2"></a>方法 2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&#x27;;&#x27;</span> <span class="string">&#x27;&#123;temp = $3 ; $3 = $1; $1 = temp&#125;1&#x27;</span> OFS=<span class="string">&#x27;;&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line">这里的1 和 &#123;<span class="built_in">print</span>&#125;是一样的, OFS代表分隔符。</span><br></pre></td></tr></table></figure><h2 id="找出某一列是指定值的行"><a href="#找出某一列是指定值的行" class="headerlink" title="找出某一列是指定值的行"></a>找出某一列是指定值的行</h2><p>比如我想知道根目录的磁盘占用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Filesystem     Type      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sdc       ext4      251G   13G  226G   6% /</span><br><span class="line">none           tmpfs     3.9G   68K  3.9G   1% /mnt/wslg</span><br><span class="line">none           tmpfs     3.9G  4.0K  3.9G   1% /mnt/wsl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hT | awk <span class="string">&#x27;($NF==&quot;/&quot;)&#123;print $(NF - 1)&#125;&#x27;</span></span><br><span class="line"><span class="comment"># $(NF - 1) 倒数第二列</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><p>6%</p><h2 id="awk-多个条件判断"><a href="#awk-多个条件判断" class="headerlink" title="awk 多个条件判断"></a>awk 多个条件判断</h2><p>原始输出:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@qz_k8s_m1 data]<span class="comment"># kubectl get pod -n dev</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">test-7b47f8cccb-cwdfw                          1/1     Running   0          3h28m</span><br><span class="line">test-6c5bbd4f49-ns74j                          0/1     Running   92         6h55m</span><br><span class="line">test-7c78fbdf68-cg28l                          1/1     Running   0          8d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出其中未就绪且重启次数大于10次的pod</span></span><br><span class="line">[root@qz_k8s_m1 data]<span class="comment"># kubectl get pod -n dev | awk &#x27;($2==&quot;0/1&quot; &amp;&amp; $4&gt;10)&#x27;</span></span><br><span class="line">test-6c5bbd4f49-ns74j                          0/1     Running   93         6h57m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以只打印pod名字</span></span><br><span class="line">[root@qz_k8s_m1 data]<span class="comment"># kubectl get pod -n dev | awk &#x27;($2==&quot;0/1&quot; &amp;&amp; $4&gt;20) &#123;print $1&#125;&#x27;</span></span><br><span class="line">test-6c5bbd4f49-ns74j</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不打印第一行</span></span><br><span class="line">kubectl get deployment | awk <span class="string">&#x27;NR&gt;1 &#123;print $1&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL常用操作记录</title>
      <link href="/posts/eee9a081/"/>
      <url>/posts/eee9a081/</url>
      
        <content type="html"><![CDATA[<h2 id="防火墙规则"><a href="#防火墙规则" class="headerlink" title="防火墙规则"></a>防火墙规则</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;WSL&quot;</span> <span class="literal">-Direction</span> Inbound  <span class="literal">-InterfaceAlias</span> <span class="string">&quot;vEthernet (WSL)&quot;</span>  <span class="literal">-Action</span> Allow</span><br></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --export centos7 centos7.tar</span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import centos7 C:\centos7 centos7.tar</span><br></pre></td></tr></table></figure><h3 id="启动指定发行版"><a href="#启动指定发行版" class="headerlink" title="启动指定发行版"></a>启动指定发行版</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d centos7</span><br></pre></td></tr></table></figure><h3 id="指定用户启动"><a href="#指定用户启动" class="headerlink" title="指定用户启动"></a>指定用户启动</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d ubuntu -u root</span><br></pre></td></tr></table></figure><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">WSL1</button><button type="button" class="tab">WSL2和Windows11</button></div><div class="tab-contents"><div class="tab-item-content active"><p>win+r 输入 <code>shell:startup</code> 写一个 <code>wsl_start.bat</code> 内容如下</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d Ubuntu -u root /etc/init.d/ssh <span class="built_in">start</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>sudo vim &#x2F;etc&#x2F;wsl.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[boot]</span><br><span class="line"><span class="built_in">command</span> = service docker start</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="修改默认用户为-root"><a href="#修改默认用户为-root" class="headerlink" title="修改默认用户为 root"></a>修改默认用户为 root</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">WSL1</button><button type="button" class="tab">WSL2和Windows11</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">%localappdata%</span>\Microsoft\WindowsApps\ubuntu.exe config --default-user root</span><br></pre></td></tr></table></figure><blockquote><p>根据你的发行版决定</p></blockquote></div><div class="tab-item-content"><p>sudo vim &#x2F;etc&#x2F;wsl.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[user]</span><br><span class="line">default = root</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="安装想要的发行版"><a href="#安装想要的发行版" class="headerlink" title="安装想要的发行版"></a>安装想要的发行版</h2><blockquote><p>这里以 centos 为例</p></blockquote><p>首先需要 docker 环境，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name centos7 centos:centos7</span><br></pre></td></tr></table></figure><p>然后将容器导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> centos7 &gt; centos7.tar</span><br></pre></td></tr></table></figure><p>然后在 windows 上导入</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import centos7 C:\centos7 centos7.tar</span><br></pre></td></tr></table></figure><p>启动发行版</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d centos7</span><br></pre></td></tr></table></figure><p>卸载发行版</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister centos7</span><br></pre></td></tr></table></figure><h2 id="互相访问"><a href="#互相访问" class="headerlink" title="互相访问"></a>互相访问</h2><h3 id="wsl-里运行-windows-程序"><a href="#wsl-里运行-windows-程序" class="headerlink" title="wsl 里运行 windows 程序"></a>wsl 里运行 windows 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行windows里的python</span></span><br><span class="line">py.exe update_gitee_pages.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开资源管理器</span></span><br><span class="line">explorer.exe .</span><br></pre></td></tr></table></figure><h3 id="windows-里运行-wsl-程序"><a href="#windows-里运行-wsl-程序" class="headerlink" title="windows 里运行 wsl 程序"></a>windows 里运行 wsl 程序</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d ubuntu sudo bash -c &quot;apt update&quot;</span><br></pre></td></tr></table></figure><h3 id="wsl-里访问-windows-路径"><a href="#wsl-里访问-windows-路径" class="headerlink" title="wsl 里访问 windows 路径"></a>wsl 里访问 windows 路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt/c/Users/iuxt/Desktop</span><br></pre></td></tr></table></figure><h3 id="windows-里访问-wsl-文件"><a href="#windows-里访问-wsl-文件" class="headerlink" title="windows 里访问 wsl 文件"></a>windows 里访问 wsl 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\wsl$\Ubuntu\home\iuxt</span><br></pre></td></tr></table></figure><h3 id="快速在当前路径下打开-wsl-命令行"><a href="#快速在当前路径下打开-wsl-命令行" class="headerlink" title="快速在当前路径下打开 wsl 命令行"></a>快速在当前路径下打开 wsl 命令行</h3><p>在资源管理器的地址栏直接输入 wsl 即可（输入 cmd 类似，是进入 cmd 命令行）</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202305041640284.png" alt="快速打开wsl命令行|572"></p><h3 id="bat-脚本里调用-wsl-命令"><a href="#bat-脚本里调用-wsl-命令" class="headerlink" title="bat 脚本里调用 wsl 命令"></a>bat 脚本里调用 wsl 命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shell-<span class="built_in">type</span> login --<span class="built_in">cd</span> ~/code/zahuifan -- code .</span><br></pre></td></tr></table></figure><h3 id="文件路径转换"><a href="#文件路径转换" class="headerlink" title="文件路径转换"></a>文件路径转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wsl路径转换为windows路径</span></span><br><span class="line">❯ wslpath -w <span class="string">&quot;/mnt/c/Program Files (x86)/Steam/steamapps&quot;</span></span><br><span class="line">C:\Program Files (x86)\Steam\steamapps</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows路径转换为wsl路径</span></span><br><span class="line">❯ wslpath <span class="string">&quot;C:\Program Files (x86)\Steam\steamapps&quot;</span></span><br><span class="line">/mnt/c/Program Files (x86)/Steam/steamapps</span><br></pre></td></tr></table></figure><h2 id="wsl-conf"><a href="#wsl-conf" class="headerlink" title="wsl.conf"></a>wsl.conf</h2><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config">https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows右键菜单添加md5、sha1校验</title>
      <link href="/posts/19e40a49/"/>
      <url>/posts/19e40a49/</url>
      
        <content type="html"><![CDATA[<blockquote><p>此方法依赖 powershell, win10 没问题，win7 没测试</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5</span>.<span class="number">00</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;校验文件 Hash&quot;</span><br><span class="line">&quot;SubCommands&quot;=&quot;&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;PowerShell.exe&quot;</span><br><span class="line"></span><br><span class="line">; SHA1</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">01</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;SHA1&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">01</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA1 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; SHA256</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">02</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;SHA256&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">02</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA256 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; SHA384</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">03</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;SHA384&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">03</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA384 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; SHA512</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">04</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;SHA512&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">04</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA512 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; MACTripleDES</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">05</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;MACTripleDES&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">05</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm MACTripleDES | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; MD5</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">06</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;MD5&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">06</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm MD5 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; RIPEMD160</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">07</span>menu]</span><br><span class="line">&quot;MUIVerb&quot;=&quot;RIPEMD160&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">07</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm RIPEMD160 | <span class="built_in">format</span>-list&quot;</span><br><span class="line"></span><br><span class="line">; Allget-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm RIPEMD160 | <span class="built_in">format</span>-list</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">08</span>menu]</span><br><span class="line">&quot;CommandFlags&quot;=dword:<span class="number">00000020</span></span><br><span class="line">&quot;MUIVerb&quot;=&quot;校验全部&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\hash\shell\<span class="number">08</span>menu\command]</span><br><span class="line">@=&quot;powershell -noexit get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA1 | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA256 | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA384 | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm SHA512 | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm MACTripleDES | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm MD5 | <span class="built_in">format</span>-list;get-filehash -literalpath &#x27;%<span class="number">1</span>&#x27; -algorithm RIPEMD160 | <span class="built_in">format</span>-list&quot;</span><br></pre></td></tr></table></figure><blockquote><p>不过要注意的是，自己复制代码保存时，编码必须选择“<strong>UTF-16 LE</strong>”格式，否则右键菜单的中文会乱码。</p></blockquote><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5</span>.<span class="number">00</span></span><br><span class="line"></span><br><span class="line">[-HKEY_CLASSES_ROOT\*\shell\hash]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统自动连接openvpn</title>
      <link href="/posts/a6a8f287/"/>
      <url>/posts/a6a8f287/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在公司想连接线上服务器步骤：打开 openvpn 软件，输入静态密码，掏出手机，解锁，打开 totp 软件，输入 totp 软件的开启密码，记下 6 位数动态密码，输入到电脑里，完成连接，锁定手机。非常麻烦<br>而且因为时间同步问题，可能还有 10 秒就刷新动态密码了，还需要等待刷新后再输入新的密码，更麻烦的是 openvpn 会修改系统的路由，导致有些公司内部网站上不了，就会出现连接 vpn— 做 A 事情，断开 vpn 做 B 事情。</p></blockquote><p>这里提供一个脚本，一键连接 openvpn，适用于 windows</p><h2 id="1-安装-openvpn-软件"><a href="#1-安装-openvpn-软件" class="headerlink" title="1. 安装 openvpn 软件"></a>1. 安装 openvpn 软件</h2><p>软件安装到默认位置，需要安装 tap driver<br>打开一次软件（为了生成配置文件目录），以后就可以不用启动</p><h2 id="脚本内容"><a href="#脚本内容" class="headerlink" title="脚本内容"></a>脚本内容</h2><p>start.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">totp = pyotp.TOTP(<span class="string">&#x27;&lt;TOTP seed&gt;&#x27;</span>)  <span class="comment"># 这里要填写的totp的seed，一般解析一下二维码就能获得</span></span><br><span class="line">password = <span class="string">&quot;&lt;你的固定密码&gt;&quot;</span> + totp.now()         <span class="comment"># 固定密码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\iuxt\OpenVPN\config\password.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:   <span class="comment"># 这里是password.txt文件位置</span></span><br><span class="line">    f.write(<span class="string">&quot;&lt;这里写你的用户名&gt;\n%s&quot;</span> % password)</span><br><span class="line">    </span><br><span class="line">subprocess.run([<span class="string">r&quot;C:\Program Files\OpenVPN\bin\openvpn.exe&quot;</span>, <span class="string">r&quot;C:\Users\iuxt\OpenVPN\config\win.ovpn&quot;</span>])  <span class="comment"># vpn可执行位置和vpn配置文件位置</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>start.bat</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"><span class="comment">rem 上面这段是获取管理员权限👆</span></span><br><span class="line"></span><br><span class="line">python <span class="built_in">start</span>.py</span><br></pre></td></tr></table></figure><h2 id="2-脚本拷贝到配置文件目录"><a href="#2-脚本拷贝到配置文件目录" class="headerlink" title="2. 脚本拷贝到配置文件目录"></a>2. 脚本拷贝到配置文件目录</h2><p>将 <code>start.py</code> <code>start.bat</code> <code>win.ovpn</code> 拷贝到配置文件目录 <code>C:\Users\iuxt\OpenVPN\config</code></p><p><code>start.py</code> 需要修改一下注释位置</p><p><code>win.ovpn</code> 需要修改 <code>auth-user-pass C:\\Users\\iuxt\\OpenVPN\\config\\password.txt</code> 需要和 <code>start.py</code> 里面路径保持一致</p><h2 id="3-启动和关闭"><a href="#3-启动和关闭" class="headerlink" title="3. 启动和关闭"></a>3. 启动和关闭</h2><p>双击 <code>start.bat</code> 即可自动连接</p><p>ctrl + c 即可关闭</p><p>如果有隐藏 cmd 窗口的需求，可以看看这篇 <a href="/3b6d9935/">隐藏cmd窗口</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows常用命令记录</title>
      <link href="/posts/801c62c9/"/>
      <url>/posts/801c62c9/</url>
      
        <content type="html"><![CDATA[<h2 id="smb-操作"><a href="#smb-操作" class="headerlink" title="smb 操作"></a>smb 操作</h2><h3 id="挂载-smb"><a href="#挂载-smb" class="headerlink" title="挂载 smb"></a>挂载 smb</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> use z: \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.<span class="number">163</span>\share /user:&quot;&lt;计算机名\用户名&gt;&quot; &quot;&lt;密码&gt;&quot;</span><br></pre></td></tr></table></figure><h3 id="卸载-smb"><a href="#卸载-smb" class="headerlink" title="卸载 smb"></a>卸载 smb</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> use z: /<span class="built_in">del</span> /y</span><br></pre></td></tr></table></figure><h2 id="写入剪切板"><a href="#写入剪切板" class="headerlink" title="写入剪切板"></a>写入剪切板</h2><p>从文件写入</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; C:\Users\iuxt\.ssh\id_rsa.pub</span><br></pre></td></tr></table></figure><p>直接写入</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">222</span> | clip</span><br></pre></td></tr></table></figure><h2 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h2><h3 id="启用-Administrator"><a href="#启用-Administrator" class="headerlink" title="启用 Administrator"></a>启用 Administrator</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user administrator Office@<span class="number">2015</span> /active:yes</span><br></pre></td></tr></table></figure><h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><p>新建用户 IT,密码为 123456,密码 * 为手动输入,不能改密码,密码永不过期</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user IT <span class="number">123456</span> /add /passwordchg:no /expires:never</span><br></pre></td></tr></table></figure><h3 id="将用户加入组"><a href="#将用户加入组" class="headerlink" title="将用户加入组"></a>将用户加入组</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> localgroup Administrators IT /add</span><br></pre></td></tr></table></figure><h3 id="新建用户组"><a href="#新建用户组" class="headerlink" title="新建用户组"></a>新建用户组</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> localgroup 组名 /add</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>&#x2F;active:no</td><td>启用或禁用用户</td></tr><tr><td>&#x2F;comment:”Text”</td><td>用户描述</td></tr></tbody></table><h2 id="内置用户"><a href="#内置用户" class="headerlink" title="内置用户"></a>内置用户</h2><h3 id="system-用户"><a href="#system-用户" class="headerlink" title="system 用户"></a>system 用户</h3><p>服务默认的执行用户，如果一个程序在 windows 上直接运行和通过服务来运行效果不一样，可以考虑下服务执行的用户是不是当前用户，比如我用 syncthing ，直接运行配置好了一会，使用 always up 来运行配置丢失了，原因是配置文件被写入当前用户，而用 always up 默认使用的是 system 用户，其中 system 用户的用户文件夹在：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">System32</span>\<span class="title">config</span>\<span class="title">systemprofile</span>\</span></span><br></pre></td></tr></table></figure><h1 id="win-R-速查"><a href="#win-R-速查" class="headerlink" title="win + R 速查"></a>win + R 速查</h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>certmgr.msc</td><td>证书管理</td></tr><tr><td>compmgmt.msc</td><td>计算机管理</td></tr><tr><td>control</td><td>控制面板</td></tr><tr><td>control userpasswords</td><td>用户账户</td></tr><tr><td>devmgmt.msc</td><td>设备管理器</td></tr><tr><td>diskmgmt.msc</td><td>磁盘管理</td></tr><tr><td>eventvwr</td><td>事件查看器</td></tr><tr><td>explorer</td><td>资源管理器</td></tr><tr><td>gpedit.msc</td><td>组策略编辑器</td></tr><tr><td>fsmgmt.msc</td><td>共享文件夹</td></tr><tr><td>iexplore</td><td>IE 浏览器</td></tr><tr><td>lusrmgr.msc</td><td>本地用户和组</td></tr><tr><td>msconfig</td><td>系统配置</td></tr><tr><td>mspaint</td><td>画图</td></tr><tr><td>mstsc</td><td>远程桌面连接</td></tr><tr><td>osk</td><td>屏幕键盘</td></tr><tr><td>perfmon.msc</td><td>性能监视器</td></tr><tr><td>netplwiz</td><td>打开账户管理窗口 2</td></tr><tr><td>control userpasswords2</td><td>打开账户管理窗口 2</td></tr><tr><td>rundll32 netplwiz.dll,UsersRunDll</td><td>打开账户管理窗口 2</td></tr><tr><td>gpmc.msc</td><td>域控组策略</td></tr><tr><td>taskschd.msc</td><td>任务计划程序</td></tr><tr><td>ncpa.cpl</td><td>控制面板 - 网络管理</td></tr><tr><td>systempropertiesprotection</td><td>系统保护设置页面</td></tr><tr><td>sysdm.cpl</td><td>系统属性页面</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统文件目录</title>
      <link href="/posts/deff9f9f/"/>
      <url>/posts/deff9f9f/</url>
      
        <content type="html"><![CDATA[<h2 id="常用系统目录"><a href="#常用系统目录" class="headerlink" title="常用系统目录"></a>常用系统目录</h2><p>如果卸载软件，需要注意这些目录有没有残留。</p><table><thead><tr><th>目录</th><th>变量或短路径</th><th>说明</th></tr></thead><tbody><tr><td>C:\Windows\System32\config\systemprofile\AppData</td><td></td><td>SYSTEM 用户目录（首次访问需要授权）</td></tr><tr><td>C:\Program Files</td><td></td><td>64 位程序安装目录（需要管理员权限）</td></tr><tr><td>C:\Program Files (x86)</td><td></td><td>32 位程序安装目录（需要管理员权限）</td></tr><tr><td>C:\Users\用户名</td><td><code>%userprofile%</code></td><td>用户的 Home 目录</td></tr><tr><td>C:\Users\用户名\AppData\Roaming</td><td><code>%appdata%</code></td><td></td></tr><tr><td>C:\Users\用户名\AppData\Local</td><td><code>%localappdata%</code></td><td>数据目录，以及一些软件安装目录（不需要管理员权限）</td></tr><tr><td>C:\Users\iuxt\AppData\Local\Temp</td><td><code>%tmp%</code></td><td>临时目录，一般不需管理</td></tr><tr><td>C:\ProgramData</td><td><code>%programdata%</code></td><td>应用数据（这个目录是个隐藏目录）</td></tr></tbody></table><h2 id="开始菜单"><a href="#开始菜单" class="headerlink" title="开始菜单"></a>开始菜单</h2><p>全局位置：<code>C:\ProgramData\Microsoft\Windows\Start Menu</code><br>个人位置：<code>%appdata%\Microsoft\Windows\Start Menu</code></p><h2 id="windows-update-更新缓存"><a href="#windows-update-更新缓存" class="headerlink" title="windows update 更新缓存"></a>windows update 更新缓存</h2><p><code>C:\Windows\SoftwareDistribution\Download</code></p><h2 id="服务目录"><a href="#服务目录" class="headerlink" title="服务目录"></a>服务目录</h2><p>windows 的服务存储的文件, 如果没有指定用户, 就会使用系统用户 (SYSTEM) 来运行, home 目录为:</p><p><code>C:\Windows\System32\config\systemprofile\</code></p><p>比如我的 syncthing 数据就被保存到了 <code>C:\Windows\System32\config\systemprofile\AppData\Local\Syncthing</code> , 指定了当前用户的话是在 <code>%localappdata%\Syncthing</code></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows恢复环境Windows RE</title>
      <link href="/posts/c0eb591c/"/>
      <url>/posts/c0eb591c/</url>
      
        <content type="html"><![CDATA[<h2 id="reagentc-命令"><a href="#reagentc-命令" class="headerlink" title="reagentc 命令"></a>reagentc 命令</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reagentc /disable       禁用windowsRE</span><br><span class="line">reagentc /enable        启用windowsRE</span><br><span class="line">reagentc /info          查看windowsRE状态</span><br><span class="line">reagentc /boottore      将系统配置为在下次系统启动时启动 Windows RE</span><br></pre></td></tr></table></figure><h2 id="重新启用-windowsRE"><a href="#重新启用-windowsRE" class="headerlink" title="重新启用 windowsRE"></a>重新启用 windowsRE</h2><blockquote><p>因为各种原因，比如手动删除了 winre 分区， 使用 <code>reagentc /info</code> 查看发现 RE 已经没有了，可以手动创建 RE</p></blockquote><h3 id="找到-winre-wim-镜像"><a href="#找到-winre-wim-镜像" class="headerlink" title="找到 winre.wim 镜像"></a>找到 winre.wim 镜像</h3><p>找到和你系统同版本的安装镜像， 提取其中的 <code>source\install.wim</code> 文件, 用解压缩软件打开 install.wim 文件, 解压其中的 <code>windows/system32/recovery/winre.wim</code>， 我们需要的就是一个 <code>winre.wim</code> 文件。</p><h3 id="创建-winre-分区"><a href="#创建-winre-分区" class="headerlink" title="创建 winre 分区"></a>创建 winre 分区</h3><p>管理员权限运行 diskpart 命令</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create partition primary size=<span class="number">1024</span></span><br><span class="line"><span class="built_in">format</span> quick <span class="built_in">fs</span>=ntfs <span class="built_in">label</span>=&quot;Recovery&quot;</span><br><span class="line">assign letter=&quot;R&quot;</span><br></pre></td></tr></table></figure><h3 id="创建-WinRE-目录"><a href="#创建-WinRE-目录" class="headerlink" title="创建 WinRE 目录"></a>创建 WinRE 目录</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> R:\Recovery\WindowsRE</span><br></pre></td></tr></table></figure><p>此时将文件放入 <code>R:\Recovery\WindowsRE</code> 中</p><p>然后执行：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reagentc /setreimage /<span class="built_in">path</span> R:\Recovery\WindowsRE</span><br></pre></td></tr></table></figure><h3 id="设置磁盘属性"><a href="#设置磁盘属性" class="headerlink" title="设置磁盘属性"></a>设置磁盘属性</h3><p>管理员权限运行 diskpart 命令</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list disk             # 查看磁盘id</span><br><span class="line">select disk <span class="number">0</span>         # 选择你的系统磁盘</span><br><span class="line">list partition        # 查看分区id</span><br><span class="line">select partition <span class="number">5</span>    # 选择恢复分区的id</span><br><span class="line"><span class="built_in">set</span> id=&quot;de94bba4-<span class="number">06</span>d1-<span class="number">4</span>d40-a16a-bfd50179d6ac&quot;</span><br><span class="line">gpt attributes=<span class="number">0</span>x8000000000000001</span><br></pre></td></tr></table></figure><h3 id="启用-winre"><a href="#启用-winre" class="headerlink" title="启用 winre"></a>启用 winre</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reagentc /enable</span><br><span class="line">reagentc /info</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows镜像编辑工具（dism和imagex）</title>
      <link href="/posts/a3a12a0e/"/>
      <url>/posts/a3a12a0e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>imagex 和 dism 都是 windows 官方处理 windows 安装镜像 wim 文件的工具，其中 dism 是自带的，imagex 是单文件，依赖简单</p></blockquote><h2 id="imagex"><a href="#imagex" class="headerlink" title="imagex"></a>imagex</h2><blockquote><p>以下以将 windows32 位安装镜像和 64 位安装镜像整合为例</p></blockquote><h3 id="镜像导出合并"><a href="#镜像导出合并" class="headerlink" title="镜像导出合并"></a>镜像导出合并</h3><blockquote><p>将 64 位镜像导出写入到 32 位镜像里</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">imagex /export install64.wim <span class="number">1</span> install32.wim &quot;Win7 homebasic x64&quot;</span><br><span class="line">imagex /export install64.wim <span class="number">2</span> install32.wim &quot;win7 homepremium x64&quot;</span><br><span class="line">imagex /export install64.wim <span class="number">3</span> install32.wim &quot;win7 professional x64&quot;</span><br><span class="line">imagex /export install64.wim <span class="number">4</span> install32.wim &quot;win7 ultimate x64&quot;</span><br></pre></td></tr></table></figure><h3 id="修改镜像描述信息"><a href="#修改镜像描述信息" class="headerlink" title="修改镜像描述信息"></a>修改镜像描述信息</h3><blockquote><p>修改前可以使用 <code>imagex /info C:\xxxxx.wim</code> 查看镜像信息</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">imagex /info install32.wim <span class="number">1</span> &quot;Windows <span class="number">7</span> STARTER X86&quot; &quot;Windows <span class="number">7</span> 简易版&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">2</span> &quot;Windows <span class="number">7</span> HOMEBASIC X86&quot; &quot;Windows <span class="number">7</span> 家庭普通版 <span class="number">32</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">3</span> &quot;Windows <span class="number">7</span> HOMEPREMIUM X86&quot; &quot;Windows <span class="number">7</span> 家庭高级版 <span class="number">32</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">4</span> &quot;Windows <span class="number">7</span> PROFESSIONAL X86&quot; &quot;Windows <span class="number">7</span> 专业版 <span class="number">32</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">5</span> &quot;Windows <span class="number">7</span> ULTIMATE X86&quot; &quot;Windows <span class="number">7</span> 旗舰版 <span class="number">32</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">6</span> &quot;Windows <span class="number">7</span> HOMEBASIC X64&quot; &quot;Windows <span class="number">7</span> 家庭普通版 <span class="number">64</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">7</span> &quot;Windows <span class="number">7</span> HOMEPREMIUM X64&quot; &quot;Windows <span class="number">7</span> 家庭高级版 <span class="number">64</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">8</span> &quot;Windows <span class="number">7</span> PROFESSIONAL X64&quot; &quot;Windows <span class="number">7</span> 专业版 <span class="number">64</span>位&quot;</span><br><span class="line">imagex /info install32.wim <span class="number">9</span> &quot;Windows <span class="number">7</span> ULTIMATE X64&quot; &quot;Windows <span class="number">7</span> 旗舰版 <span class="number">64</span>位&quot;</span><br></pre></td></tr></table></figure><h2 id="dism"><a href="#dism" class="headerlink" title="dism"></a>dism</h2><h3 id="按大小拆分-wim-镜像"><a href="#按大小拆分-wim-镜像" class="headerlink" title="按大小拆分 wim 镜像"></a>按大小拆分 wim 镜像</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism /<span class="built_in">Split-Image</span> /ImageFile:F:\sources\install.wim /SWMFile:D:\install.swm /FileSize:<span class="number">4096</span></span><br></pre></td></tr></table></figure><h3 id="镜像挂载卸载"><a href="#镜像挂载卸载" class="headerlink" title="镜像挂载卸载"></a>镜像挂载卸载</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看分卷信息</span></span><br><span class="line">DISM /<span class="built_in">Get-WimInfo</span> /WimFile:<span class="string">&quot;C:\path\to\install.wim&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载镜像</span></span><br><span class="line">DISM /<span class="built_in">Mount-Image</span> /ImageFile:<span class="string">&quot;C:\install.wim&quot;</span> /Index:<span class="number">1</span> /MountDir:<span class="string">&quot;C:\Mount&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载镜像，并保存更改</span></span><br><span class="line">DISM /Un<span class="built_in">mount-Image</span> /MountDir:<span class="string">&quot;C:\Mount&quot;</span> /Commit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载镜像，不保存更改</span></span><br><span class="line">DISM /Un<span class="built_in">mount-Image</span> /MountDir:<span class="string">&quot;C:\Mount&quot;</span> /discard</span><br></pre></td></tr></table></figure><h3 id="检查-windows-健康度"><a href="#检查-windows-健康度" class="headerlink" title="检查 windows 健康度"></a>检查 windows 健康度</h3><p>For a quick check of an online image, you may be able to use the command: to scan and repair files. <code>sfc /scannow</code><br>For a more extensive check that can repair issues with the store, use <code>DISM /Cleanup-Image</code></p><p>Dism 操作如下:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:: 检查镜像是否可被修复</span><br><span class="line">Dism /Online /Cleanup-Image /ScanHealth</span><br><span class="line">Dism /Online /Cleanup-Image /CheckHealth</span><br><span class="line"></span><br><span class="line">:: 在线修复</span><br><span class="line">DISM /Online /Cleanup-Image /RestoreHealth</span><br><span class="line"></span><br><span class="line">:: 离线修复, 需要指定安装源</span><br><span class="line">Dism /Image:C:\offline /Cleanup-Image /RestoreHealth /Source:c:\test\mount\windows</span><br><span class="line"></span><br><span class="line">:: 在线修复挂载的其他系统(被挂载到本机硬盘, 比如是wim挂载的)</span><br><span class="line">Dism /Online /Cleanup-Image /RestoreHealth /Source:c:\test\mount\windows /LimitAccess</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows硬件特征</title>
      <link href="/posts/ltfd14pe/"/>
      <url>/posts/ltfd14pe/</url>
      
        <content type="html"><![CDATA[<p>查看序列号</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic bios get serialnumber</span><br></pre></td></tr></table></figure><p>查看硬盘序列号</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic diskdrive get serialnumber</span><br></pre></td></tr></table></figure><p>主板序列号</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic baseboard get serialnumber</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>打造一个赏心悦目的终端</title>
      <link href="/posts/57e7c794/"/>
      <url>/posts/57e7c794/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文基于 Windows 平台，系统用的是 WSL(ubuntu 20.04)，shell 用的是 zsh，linux 系统应该类似</p></blockquote><p>先看效果：<br>Windows Terminal:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/oh-my-zsh_windows_terminal.jpg" alt="Windows Terminal"></p><p>VsCode:<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/oh-my-zsh_vscode.png" alt="vscode"></p><h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h2><blockquote><p>官方页面：<a href="https://ohmyz.sh/">https://ohmyz.sh/</a><br>github 地址：<a href="https://github.com/ohmyzsh/ohmyzsh">https://github.com/ohmyzsh/ohmyzsh</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>我使用的是<a href="https://github.com/romkatv/powerlevel10k">https://github.com/romkatv/powerlevel10k</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure><p>常用命令：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>p10k configure</td><td>重新配置 powerlevel10k</td></tr><tr><td>p10k help</td><td>查看帮助</td></tr></tbody></table><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><p>插件地址：<a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins">https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><p>修改配置 <code>vim ~/.zshrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">    git</span><br><span class="line">    zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>建议使用带 emoji 的 poweline 字体， 推荐 <a href="https://www.nerdfonts.com/">Nert Fonts</a>, 我用的是 jetbrains</p><h3 id="关于等宽字体"><a href="#关于等宽字体" class="headerlink" title="关于等宽字体"></a>关于等宽字体</h3><blockquote><p>顾名思义，等宽字体就是宽度相等的字体，举个例子：普通字体中 M 看体型就比 i 要宽，但是等宽字体中他俩是一样宽的，在编辑器中就可以对齐了</p></blockquote><p>等宽字体一般文件名中带 <code>Mono</code>，如 <code>JetBrains Mono</code>，但是大部分等宽字体只对英文生效，中文字体和中文符号是不对齐的<br>想要中文也对齐的小伙伴可以使用这个字体：<a href="https://github.com/powerline/fonts/tree/master/UbuntuMono">Ubuntu Mono derivative Powerline</a>，此字体一个汉字和两个英文一样宽。再也不怕终端符号对不齐啦。</p><h2 id="windows-terminal-配置"><a href="#windows-terminal-配置" class="headerlink" title="windows terminal 配置"></a>windows terminal 配置</h2><h3 id="改字体"><a href="#改字体" class="headerlink" title="改字体"></a>改字体</h3><p><del>“fontFace”: “JetBrainsMono NF”,</del></p><blockquote><p>新版本的 Windows Terminal 可以有图形界面配置了</p></blockquote><h3 id="改配色"><a href="#改配色" class="headerlink" title="改配色"></a>改配色</h3><p>ayu 配色: <a href="https://github.com/ayu-theme/ayu-colors">https://github.com/ayu-theme/ayu-colors</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#0A0E14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#01060E&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#53BDFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#686868&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#59C2FF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#95E6CB&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C2D94C&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFEE99&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F07178&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFB454&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cursorColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#90E1C6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#B3B1AD&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#91B362&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ayu Dark&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FAE994&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EA6C73&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectionBackground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C7C7C7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F9AF4F&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FAFAFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#3199E1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#686868&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#399EE6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#4CBF99&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#86B300&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#A37ACC&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F07171&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#D1D1D1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F2AE49&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cursorColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#46BA94&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#6C7680&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#99BF4D&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ayu Light&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#9E75C7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EA6C6D&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectionBackground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C7C7C7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ECA944&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1F2430&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#191E2A&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#6DCBFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#686868&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#73D0FF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#95E6CB&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#BAE67E&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#D4BFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F28779&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFD580&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cursorColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#90E1C6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#CBCCC6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#A6CC70&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ayu Mirage&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#CFBAFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ED8274&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectionBackground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C7C7C7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FAD07B&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h3 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h3><p>首先来个背景图：<br><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/background.png" alt="背景图"></p><p>设置背景图像路径<br>背景图像的不透明度：70<br>启用 acrylic<br>acrylic 不透明度：1</p><h2 id="vscode-配置"><a href="#vscode-配置" class="headerlink" title="vscode 配置"></a>vscode 配置</h2><p>设置➡️控制字体系列 (editor.fontFamily)➡️<strong>在最前面</strong>添加 <code>&#39;MeslolGS NF&#39;,</code></p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/oh-my-zsh_vscode_settings.png" alt="vscode配置"></p><h2 id="ubuntu-自带-terminal-配置"><a href="#ubuntu-自带-terminal-配置" class="headerlink" title="ubuntu 自带 terminal 配置"></a>ubuntu 自带 terminal 配置</h2><p>系统目录和用户目录二选一</p><ul><li><p>安装字体 (系统目录)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /usr/share/fonts/custom</span><br><span class="line">sudo <span class="built_in">mv</span> *.ttf /usr/share/fonts/custom</span><br><span class="line"></span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo fc-cache -fv</span><br></pre></td></tr></table></figure></li><li><p>安装字体（用户目录）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> *.ttf ~/.local/share/fonts</span><br></pre></td></tr></table></figure></li></ul><h3 id="terminal-设置"><a href="#terminal-设置" class="headerlink" title="terminal 设置"></a>terminal 设置</h3><p>自定义字体勾选，然后选择字体即可</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓终端工具termux常用操作记录</title>
      <link href="/posts/fd0c5290/"/>
      <url>/posts/fd0c5290/</url>
      
        <content type="html"><![CDATA[<blockquote><p>termux 是安卓平台模拟 linux 环境的工具，可以运行常用的 linux 工具</p></blockquote><h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改软件源</span></span><br><span class="line">termux-change-repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># home目录添加storage, 可以访问手机里的文件</span></span><br><span class="line">termux-setup-storage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修复shebang</span></span><br><span class="line">termux-fix-shebang</span><br></pre></td></tr></table></figure><h3 id="修改用户环境变量"><a href="#修改用户环境变量" class="headerlink" title="修改用户环境变量"></a>修改用户环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; ~/.profile &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -al&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">&#x27;ls -l&#x27;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="虚拟根目录"><a href="#虚拟根目录" class="headerlink" title="虚拟根目录"></a>虚拟根目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$PREFIX</span></span><br></pre></td></tr></table></figure><h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><blockquote><p>暂时有 bug, 导致 nodejs 程序运行提示 找不到 env, 可以执行 <code>termux-fix-shebang</code> 临时解决</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="登录提示语"><a href="#登录提示语" class="headerlink" title="登录提示语"></a>登录提示语</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="variable">$PREFIX</span>/etc/motd</span><br></pre></td></tr></table></figure><blockquote><p>可以配合 screenfetch 食用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install screenfetch</span><br></pre></td></tr></table></figure><h3 id="定制屏幕上的按键"><a href="#定制屏幕上的按键" class="headerlink" title="定制屏幕上的按键"></a>定制屏幕上的按键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ -d ~/.termux/ ] || <span class="built_in">mkdir</span> ~/.termux/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; ~/.termux/termux.properties &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">extra-keys = [ \</span><br><span class="line">[<span class="string">&#x27;ESC&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;HOME&#x27;</span>,<span class="string">&#x27;UP&#x27;</span>,<span class="string">&#x27;END&#x27;</span>,<span class="string">&#x27;$&#x27;</span>], \</span><br><span class="line">[<span class="string">&#x27;TAB&#x27;</span>,<span class="string">&#x27;CTRL&#x27;</span>,<span class="string">&#x27;~&#x27;</span>,<span class="string">&#x27;LEFT&#x27;</span>,<span class="string">&#x27;DOWN&#x27;</span>,<span class="string">&#x27;RIGHT&#x27;</span>,<span class="string">&#x27;ENTER&#x27;</span>] \</span><br><span class="line">]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="pkg"><a href="#pkg" class="headerlink" title="pkg"></a>pkg</h3><blockquote><p>Termux 除了支持 apt 命令外,还在此基础上封装了 pkg 命令,pkg 命令向下兼容 apt 命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pkg search &lt;query&gt;              搜索包</span><br><span class="line">pkg install &lt;package&gt;           安装包</span><br><span class="line">pkg uninstall &lt;package&gt;         卸载包</span><br><span class="line">pkg reinstall &lt;package&gt;         重新安装包</span><br><span class="line">pkg update                      更新源</span><br><span class="line">pkg upgrade                     升级软件包</span><br><span class="line">pkg list-all                    列出可供安装的所有包</span><br><span class="line">pkg list-installed              列出已经安装的包</span><br><span class="line">pkg shoe &lt;package&gt;              显示某个包的详细信息</span><br><span class="line">pkg files &lt;package&gt;             显示某个包的相关文件夹路径</span><br></pre></td></tr></table></figure><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p>参考 ubuntu 的 apt</p><h3 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg update &amp;&amp; pkg install -y git vim openssh curl wget python tar</span><br></pre></td></tr></table></figure><h2 id="安装-vscode"><a href="#安装-vscode" class="headerlink" title="安装 vscode"></a>安装 vscode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install python nodejs yarn</span><br><span class="line">yarn global add code-server</span><br></pre></td></tr></table></figure><h2 id="安装完整版-Linux"><a href="#安装完整版-Linux" class="headerlink" title="安装完整版 Linux"></a>安装完整版 Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot-distro</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可以安装的发行版</span></span><br><span class="line">proot-distro list</span><br><span class="line">proot-distro install ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入ubuntu</span></span><br><span class="line">proot-distro login ubuntu</span><br></pre></td></tr></table></figure><blockquote><p>将 <code>proot-distro login ubuntu</code> 写入到 <code>~/.profile</code> 可以打开软件自动进入 ubuntu 系统</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows磁盘管理工具diskpart</title>
      <link href="/posts/24b2eef7/"/>
      <url>/posts/24b2eef7/</url>
      
        <content type="html"><![CDATA[<h2 id="创建-EFI-分区"><a href="#创建-EFI-分区" class="headerlink" title="创建 EFI 分区"></a>创建 EFI 分区</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">select disk x</span><br><span class="line">create partition efi size=<span class="number">100</span></span><br><span class="line">assign letter=&quot;b&quot;</span><br><span class="line"><span class="built_in">format</span> quick <span class="built_in">fs</span>=FAT32</span><br></pre></td></tr></table></figure><h2 id="创建-msr-分区"><a href="#创建-msr-分区" class="headerlink" title="创建 msr 分区"></a>创建 msr 分区</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create partition msr size=<span class="number">16</span></span><br></pre></td></tr></table></figure><h2 id="创建-Recovery-分区-WindowsRE"><a href="#创建-Recovery-分区-WindowsRE" class="headerlink" title="创建 Recovery 分区 (WindowsRE)"></a>创建 Recovery 分区 (WindowsRE)</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create partition primary size=<span class="number">1024</span></span><br><span class="line"><span class="built_in">format</span> quick <span class="built_in">fs</span>=ntfs <span class="built_in">label</span>=&quot;Recovery&quot;</span><br><span class="line">assign letter=&quot;R&quot;</span><br><span class="line"><span class="built_in">set</span> id=&quot;de94bba4-<span class="number">06</span>d1-<span class="number">4</span>d40-a16a-bfd50179d6ac&quot;</span><br><span class="line">gpt attributes=<span class="number">0</span>x8000000000000001</span><br></pre></td></tr></table></figure><h2 id="删除-winre-分区"><a href="#删除-winre-分区" class="headerlink" title="删除 winre 分区"></a>删除 winre 分区</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select partition <span class="number">5</span></span><br><span class="line">delete partition override</span><br></pre></td></tr></table></figure><h2 id="使用-bat-脚本自动化创建分区"><a href="#使用-bat-脚本自动化创建分区" class="headerlink" title="使用 bat 脚本自动化创建分区"></a>使用 bat 脚本自动化创建分区</h2><p>diskpart_config.txt</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">rem 选择磁盘,并清空所有分区</span></span><br><span class="line">list disk</span><br><span class="line">select disk <span class="number">0</span></span><br><span class="line">clean</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 转换成gpt</span></span><br><span class="line"><span class="built_in">convert</span> gpt</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 创建efi分区</span></span><br><span class="line">create partition efi size=<span class="number">100</span></span><br><span class="line"><span class="built_in">format</span> quick <span class="built_in">fs</span>=FAT32</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 创建msr分区</span></span><br><span class="line">create partition msr size=<span class="number">16</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 创建Recovery分区</span></span><br><span class="line">create partition primary size=<span class="number">1024</span></span><br><span class="line"><span class="built_in">format</span> quick <span class="built_in">fs</span>=ntfs <span class="built_in">label</span>=&quot;Recovery&quot;</span><br><span class="line"><span class="built_in">set</span> id=&quot;de94bba4-<span class="number">06</span>d1-<span class="number">4</span>d40-a16a-bfd50179d6ac&quot;</span><br><span class="line">gpt attributes=<span class="number">0</span>x8000000000000001</span><br></pre></td></tr></table></figure><p>diskpart.bat</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskpart /s diskpart_config.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用bat脚本</title>
      <link href="/posts/54c97110/"/>
      <url>/posts/54c97110/</url>
      
        <content type="html"><![CDATA[<p>这篇文章说的都是经常用到的 bat 脚本编写小技巧，比如获取管理员权限、注册表操作、进程操作、服务操作等</p><h2 id="自动输入-y"><a href="#自动输入-y" class="headerlink" title="自动输入 y"></a>自动输入 y</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> y|reg delete &quot;HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify&quot; /v IconStreams</span><br></pre></td></tr></table></figure><h2 id="bat-脚本获取管理员权限"><a href="#bat-脚本获取管理员权限" class="headerlink" title="bat 脚本获取管理员权限"></a>bat 脚本获取管理员权限</h2><p>在 bat 脚本最上面添加一行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;<span class="built_in">cmd</span>.exe&quot;,&quot;/c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br></pre></td></tr></table></figure><h2 id="输出控制台不换行"><a href="#输出控制台不换行" class="headerlink" title="输出控制台不换行"></a>输出控制台不换行</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>|<span class="built_in">set</span> /p=&quot;Test&quot;</span><br></pre></td></tr></table></figure><h2 id="服务操作"><a href="#服务操作" class="headerlink" title="服务操作"></a>服务操作</h2><blockquote><p>windows 服务操作命令有 sc 和 net 两个命令;</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 使用sc操作服务</span><br><span class="line">sc stop serviceName</span><br><span class="line">sc <span class="built_in">start</span> serviceName</span><br><span class="line"></span><br><span class="line"># 使用<span class="built_in">net</span>操作服务</span><br><span class="line"><span class="built_in">net</span> stop serviceName</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> serviceName</span><br><span class="line"></span><br><span class="line"># sc 修改服务</span><br><span class="line">sc config AcronisActiveProtectionService <span class="built_in">start</span>= disabled</span><br><span class="line">sc description npc &quot;内网穿透服务。&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># sc 创建服务</span><br><span class="line">sc create npc <span class="built_in">start</span>= auto binPath= &quot;C:\<span class="number">1</span>\npc\npc.exe -server=note.iuxt.top:<span class="number">10000</span> -vkey=ibtbrp5e3uc9lonq -<span class="built_in">type</span>=tcp&quot; DisplayName= &quot;npc内网穿透服务&quot;</span><br></pre></td></tr></table></figure><blockquote><p>虽然 2 个都能达到停止服务和启动服务的效果，但是在重启服务时，就是使用批处理先 stop 后 start 来实现重启时，如果服务处于启动状态使用 sc 的 stop 后 start，结果服务不能启动，因为 sc 命令在执行 stop 后不会等待，而是继续执行批处理下面的语句，这时服务正在处于停止操作状态，所以 start 命令不能启动。net 命令在 stop 时会停止等待，在服务完全停止后再继续执行批处理后面的语句，所以 net 的重启命令就会正常。</p></blockquote><h2 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /im Xshell*</span><br></pre></td></tr></table></figure><h2 id="删除注册表"><a href="#删除注册表" class="headerlink" title="删除注册表"></a>删除注册表</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKCU\Software\Microsoft\NetLicense&quot; /f</span><br><span class="line"></span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Classes\.xdts&quot; /f /ve /d &quot;Xmanager.session&quot; &gt;<span class="built_in">NUL</span> <span class="number">2</span>&gt;<span class="built_in">NUL</span></span><br></pre></td></tr></table></figure><h2 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rd</span>/s/q &quot;<span class="variable">%ProgramData%</span>\FLEXnet&quot; <span class="number">2</span>&gt;<span class="built_in">NUL</span></span><br><span class="line"><span class="built_in">rmdir</span>/s/q &quot;<span class="variable">%CommonProgramFiles%</span>\Macrovision Shared&quot;<span class="number">2</span>&gt;<span class="built_in">NUL</span></span><br></pre></td></tr></table></figure><blockquote><p>rd 就是 rmdir</p></blockquote><h2 id="判断有没有目录"><a href="#判断有没有目录" class="headerlink" title="判断有没有目录"></a>判断有没有目录</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exist</span> &quot;<span class="variable">%ProgramData%</span>\NetSarang Computer&quot; <span class="built_in">md</span> &quot;<span class="variable">%ProgramData%</span>\NetSarang Computer&quot;</span><br></pre></td></tr></table></figure><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> f|<span class="built_in">xcopy</span> /e/i/c/y &quot;Data\NetSarang Computer&quot; &quot;<span class="variable">%ProgramData%</span>\NetSarang Computer&quot;</span><br></pre></td></tr></table></figure><h2 id="带空格路径的处理"><a href="#带空格路径的处理" class="headerlink" title="带空格路径的处理"></a>带空格路径的处理</h2><blockquote><p>用 “” 引起来，不方便用 “” 的可以用下面的短名称，或者用变量的形式表示</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> C:\Progra~<span class="number">1</span>\Notepad++\notepad++.exe C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><h2 id="将字符串复制到剪切板"><a href="#将字符串复制到剪切板" class="headerlink" title="将字符串复制到剪切板"></a>将字符串复制到剪切板</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>|<span class="built_in">set</span> /p=&quot;Test&quot; | clip</span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:: /M 增加系统环境变量</span><br><span class="line">setx /M MySQL_HOME &quot;C:\mysql&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
            <tag> Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建环境记录</title>
      <link href="/posts/5e168f7e/"/>
      <url>/posts/5e168f7e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>快速搭建一套环境的记录，节省折腾的时间，可以配合 <a href="https://github.com/iuxt/quickstart">quickstart</a> 食用</p></blockquote><h2 id="Python-环境"><a href="#Python-环境" class="headerlink" title="Python 环境"></a>Python 环境</h2><p>可以直接使用 pipenv 这种工具. 也可以自己编译安装</p><h3 id="安装编译需要的环境"><a href="#安装编译需要的环境" class="headerlink" title="安装编译需要的环境"></a>安装编译需要的环境</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Ubuntu和Debian安装</button><button type="button" class="tab">CentOS和Fedora安装</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y gcc make libffi-devel openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel zlib-devel</span><br><span class="line"><span class="comment"># 新版本的RHEL可能没有gdbm-devel这个包了</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="下载源码并编译"><a href="#下载源码并编译" class="headerlink" title="下载源码并编译"></a>下载源码并编译</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">安装到用户目录(推荐)</button><button type="button" class="tab">安装到系统目录</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$&#123;HOME&#125;</span>/opt/</span><br><span class="line">wget https://www.python.org/ftp/python/3.8.20/Python-3.8.20.tgz</span><br><span class="line">tar xf Python-3.8.20.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.8.20</span><br><span class="line">./configure --prefix=<span class="variable">$&#123;HOME&#125;</span>/opt/Python-3.8.20</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>添加到 PATH 环境变量 (可选)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> -a <span class="variable">$&#123;HOME&#125;</span>/.bashrc &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Python 环境</span></span><br><span class="line"><span class="string">export PATH=\$PATH:$&#123;HOME&#125;/opt/Python-3.8.20/bin</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$&#123;HOME&#125;</span>/.bashrc</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line">wget https://www.python.org/ftp/python/3.8.20/Python-3.8.20.tgz</span><br><span class="line">tar xf Python-3.8.20.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.8.20</span><br><span class="line">./configure --prefix=/opt/Python-3.8.20</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>添加到 PATH 环境变量 (可选)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> -a /etc/profile &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 环境</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/Python-3.8.20/bin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>增加 <code>--enable-optimizations</code> 参数速度编译速度会非常慢， 但是会优化 python 运行的性能。</p></blockquote><h3 id="配置国内源"><a href="#配置国内源" class="headerlink" title="配置国内源"></a>配置国内源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url https://mirrors.ustc.edu.cn/pypi/web/simple</span><br></pre></td></tr></table></figure><h2 id="java-环境"><a href="#java-环境" class="headerlink" title="java 环境"></a>java 环境</h2><p>官方网站：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载解压,创建软连接</span></span><br><span class="line">wget https://file.babudiu.com/f/x2ux/jdk-8u351-linux-x64.tar.gz</span><br><span class="line">tar xf jdk-8u351-linux-x64.tar.gz -C /usr/local/</span><br><span class="line"><span class="built_in">ln</span> -sf /usr/local/jdk1.8.0_351/ /usr/local/java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment"># JAVA环境变量</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib:.</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="golang-环境"><a href="#golang-环境" class="headerlink" title="golang 环境"></a>golang 环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.23.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf ~/opt/go &amp;&amp; <span class="built_in">mkdir</span> -p ~/opt/</span><br><span class="line">tar -C ~/opt/ -xzf go1.23.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">tee</span> -a ~/.profile &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># golang 环境</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/opt/go/bin</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="docker-io"><a href="#docker-io" class="headerlink" title="docker.io"></a>docker.io</h3><p>如果你不介意版本问题，可以使用发行版源里的 <code>docker.io</code> ，安装很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">sudo apt install docker.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">sudo yum install docker.io</span><br></pre></td></tr></table></figure><h3 id="Docker-CE"><a href="#Docker-CE" class="headerlink" title="Docker-CE"></a>Docker-CE</h3><p>Docker-CE 是官方社区版，一般更新比较及时 <a href="https://docs.docker.com/engine/install/centos/">官方安装文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一些配置</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker &amp;&amp; sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span>,</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://go38p9zi.mirror.aliyuncs.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前用户执行docker命令，需要注销用户</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><p>我个人更建议把 nodejs 安装在 Home 目录下, 原因如下:</p><ol><li>环境隔离, Linux 如果有多个用户, 不会影响到其他用户的环境</li><li>安装包不需要使用 root 权限, 也不会有一些奇奇怪怪的权限问题</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置安装的版本</span></span><br><span class="line"><span class="built_in">export</span> NODE_VERSION=<span class="string">&quot;v20.17.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget <span class="string">&quot;https://npmmirror.com/mirrors/node/<span class="variable">$&#123;NODE_VERSION&#125;</span>/node-<span class="variable">$&#123;NODE_VERSION&#125;</span>-linux-x64.tar.xz&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> ~/opt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xf <span class="string">&quot;node-<span class="variable">$&#123;NODE_VERSION&#125;</span>-linux-x64.tar.xz&quot;</span> -C ~/opt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加到PATH环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export PATH=\$PATH:/home/iuxt/opt/node-<span class="variable">$&#123;NODE_VERSION&#125;</span>-linux-x64/bin&quot;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure><h3 id="常用命令速查"><a href="#常用命令速查" class="headerlink" title="常用命令速查"></a>常用命令速查</h3><table><thead><tr><th>作用</th><th>命令</th></tr></thead><tbody><tr><td>查看可执行文件的位置</td><td><code>npm bin</code></td></tr><tr><td>查看全局包的位置</td><td><code>npm bin --location=global</code></td></tr><tr><td>安装指定包到.&#x2F;node_modules</td><td><code>npm i xxx</code></td></tr><tr><td>安装指定包到.&#x2F;node_modules 并记录在 package.json 文件中</td><td><code>npm i xxx --save</code></td></tr><tr><td>全局安装包</td><td><code>npm i xxx -g</code> 或者 <code>npm i xxx --location=global</code> (新版 nodejs)</td></tr><tr><td>安装 package.json 中定义的包</td><td><code>npm i</code></td></tr><tr><td>更换源</td><td><code>npm config set registry https://registry.npmmirror.com</code></td></tr><tr><td>查看源</td><td><code>npm get registry</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>selenium--web自动化工具</title>
      <link href="/posts/7a4b3586/"/>
      <url>/posts/7a4b3586/</url>
      
        <content type="html"><![CDATA[<blockquote><p>selenium 是一个 web 自动化工具，它可以控制 chrome 浏览器实现我们想要的功能，跟爬虫不同的是：它是模拟人类的操作。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载对应版本的-chromedriver"><a href="#下载对应版本的-chromedriver" class="headerlink" title="下载对应版本的 chromedriver"></a>下载对应版本的 chromedriver</h3><p><a href="https://chromedriver.chromium.org/downloads">https://chromedriver.chromium.org/downloads</a>放到 PATH 环境变量里， 如果是 mac，可以直接执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install chromedriver</span><br></pre></td></tr></table></figure><h3 id="安装-python-包"><a href="#安装-python-包" class="headerlink" title="安装 python 包"></a>安装 python 包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h2 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h2><h3 id="获取-xpath"><a href="#获取-xpath" class="headerlink" title="获取 xpath"></a>获取 xpath</h3><p>获取 xpath 可以按下 <code>ctrl + shift + c</code> 点击按钮， 高亮的地方右键复制 full xpath</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202211251607799.png" alt="获取XPATH属性"></p><h3 id="获取-id"><a href="#获取-id" class="headerlink" title="获取 id"></a>获取 id</h3><p>Charome 浏览器界面按下 <code>ctrl + shift + c</code> 点击页面, 右边属性记录一下 html 的 id 属性</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202211251604573.png" alt="获取id属性"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟浏览器打开到gitee登录界面</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&#x27;https://gitee.com/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将窗口最大化</span></span><br><span class="line">driver.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过html的id属性定位输入位置, 然后输入文本</span></span><br><span class="line">driver.find_element(By.ID, <span class="string">r&#x27;user_login&#x27;</span>).send_keys(<span class="string">&quot;这里写你的用户名&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过xpath查找位置, 然后点击鼠标</span></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">r&#x27;/html/body/div[2]/div[1]/div[2]/div/div/div[1]/div[2]/div/div/div[2]/div/div/div/form/div[5]/button&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="浏览器-options-参数"><a href="#浏览器-options-参数" class="headerlink" title="浏览器 options 参数"></a>浏览器 options 参数</h3><p>新版本 <code>webdriver.Chrome</code> 已经没有 <code>chromeoptions</code> 这个参数了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器不自动退出。</span></span><br><span class="line">options.add_experimental_option(<span class="string">&quot;detach&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 隐藏浏览器界面</span></span><br><span class="line">options.add_argument(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">options.add_argument(<span class="string">&#x27;--disable-gpu&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 防止检测, 同时浏览器不会有受到自动化测试软件控制的提示</span></span><br><span class="line">options.add_experimental_option(<span class="string">&#x27;excludeSwitches&#x27;</span>, [<span class="string">&#x27;enable-automation&#x27;</span>])</span><br><span class="line">options.add_argument(<span class="string">&#x27;--disable-blink-features=AutomationControlled&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 防止阿里云监测</span></span><br><span class="line">driver.execute_cdp_cmd(<span class="string">&quot;Page.addScriptToEvaluateOnNewDocument&quot;</span>, &#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Object.defineProperty(navigator, &#x27;webdriver&#x27;, &#123;</span></span><br><span class="line"><span class="string">      get: () =&gt; undefined</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&#x27;https://signin.aliyun.com/login.htm#/main&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get_screenshot_as_file(<span class="string">&quot;test.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ChromeOptions</span><br><span class="line"></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置代理地址</span></span><br><span class="line">options.add_argument(<span class="string">&#x27;--proxy-server=http://localhost:80&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不提示证书错误</span></span><br><span class="line">options.add_argument(<span class="string">&quot;--ignore-certificate-errors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让浏览器不会自动退出</span></span><br><span class="line">options.add_experimental_option(<span class="string">&quot;detach&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automatic </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令之sed</title>
      <link href="/posts/83cbdb25/"/>
      <url>/posts/83cbdb25/</url>
      
        <content type="html"><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><blockquote><p>-e &lt; script &gt;或 –expression&#x3D;&lt; script &gt; 以选项中指定的 script 来处理输入的文本文件。<br>-f &lt;script 文件&gt;或 –file&#x3D;&lt;script 文件&gt; 以选项中指定的 script 文件来处理输入的文本文件。<br>-h 或 –help 显示帮助。<br>-n 或 –quiet 或 –silent 仅显示 script 处理后的结果。<br>-V 或 –version 显示版本信息。<br>-i 直接修改文件内容</p></blockquote><h2 id="动作说明"><a href="#动作说明" class="headerlink" title="动作说明"></a>动作说明</h2><blockquote><p>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现 (目前的下一行)～<br>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！<br>d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；<br>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现 (目前的上一行)；<br>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～<br>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s&#x2F;old&#x2F;new&#x2F;g 就是啦！</p></blockquote><h2 id="一些例子"><a href="#一些例子" class="headerlink" title="一些例子"></a>一些例子</h2><h3 id="打印两个字符之间的所有行"><a href="#打印两个字符之间的所有行" class="headerlink" title="打印两个字符之间的所有行"></a>打印两个字符之间的所有行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/-----BEGIN RSA PRIVATE KEY-----/,/-----END RSA PRIVATE KEY-----/p&#x27;</span> ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h3 id="在指定位置插入行"><a href="#在指定位置插入行" class="headerlink" title="在指定位置插入行"></a>在指定位置插入行</h3><table><thead><tr><th>说明</th><th>命令</th></tr></thead><tbody><tr><td>在第二行后面插入，也就是 xxxx 在第三行</td><td>sed ‘2a xxxx’ a.txt</td></tr><tr><td>在第二行前面插入，也就是 xxxx 在第二行</td><td>sed ‘2i xxxx’ a.txt</td></tr><tr><td>在第二和第四行后面插入，也就是 xxxx 在第 3 和第 5 行</td><td>sed ‘2,4a xxxx’ a.txt</td></tr><tr><td>跟上面有所不同，xxxx 在第 3 行和第 6 行</td><td>sed -e ‘2a xxxx’ -e ‘4a xxxx’ a.txt</td></tr><tr><td>行首添加一行，xxxx 在第一行</td><td>sed ‘1i xxxx’ a.txt</td></tr><tr><td>行尾添加一行，xxxx 在最后一行</td><td>sed ‘$a xxxx’ a.txt</td></tr><tr><td>在奇数行后添加一行</td><td>sed ‘1~2a xxxx’ a.txt</td></tr><tr><td>在偶数行后添加一行</td><td>sed ‘2~2a xxxx’ a.txt</td></tr><tr><td>在匹配到的行后添加一行</td><td>sed ‘&#x2F;^hello&#x2F;a xxxx’ a.txt</td></tr></tbody></table><h3 id="查看-400-500-行的内容"><a href="#查看-400-500-行的内容" class="headerlink" title="查看 400-500 行的内容"></a>查看 400-500 行的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed  -n  <span class="string">&#x27;400,500p&#x27;</span>  file文件名</span><br></pre></td></tr></table></figure><blockquote><p>^表示行首<br>  $ 表示行尾<br>  &amp;表示一整行</p></blockquote><h3 id="删除一个文件中行号为奇数的行"><a href="#删除一个文件中行号为奇数的行" class="headerlink" title="删除一个文件中行号为奇数的行"></a>删除一个文件中行号为奇数的行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;1~2&#x27;</span>d  file</span><br></pre></td></tr></table></figure><h3 id="删除一个文件中指定行"><a href="#删除一个文件中指定行" class="headerlink" title="删除一个文件中指定行"></a>删除一个文件中指定行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除第一行</span></span><br><span class="line">sed -i <span class="string">&#x27;1d&#x27;</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除300和400行</span></span><br><span class="line">sed -i <span class="string">&#x27;300,400&#x27;</span>d file</span><br></pre></td></tr></table></figure><h3 id="在-testfile-文件的第四行后添加一行，并将结果输出到标准输出"><a href="#在-testfile-文件的第四行后添加一行，并将结果输出到标准输出" class="headerlink" title="在 testfile 文件的第四行后添加一行，并将结果输出到标准输出"></a>在 testfile 文件的第四行后添加一行，并将结果输出到标准输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e 4a\newLine testfile</span><br></pre></td></tr></table></figure><h3 id="删除空行"><a href="#删除空行" class="headerlink" title="删除空行"></a>删除空行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除指定的字符"><a href="#删除指定的字符" class="headerlink" title="删除指定的字符"></a>删除指定的字符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&#123;abc&#125;:\&quot;&quot;</span> | sed <span class="string">&#x27;s/[&#123;&#125;&quot;:]//g&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="sed-替换-字符串"><a href="#sed-替换-字符串" class="headerlink" title="sed 替换 字符串"></a>sed 替换 字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git_url=$(<span class="built_in">echo</span> <span class="variable">$4</span> | sed <span class="string">&#x27;s/http/https/&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="将某一行加注释"><a href="#将某一行加注释" class="headerlink" title="将某一行加注释"></a>将某一行加注释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/^nameserver/#&amp;/&#x27;</span> /etc/resolv.conf</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/aaa=.*/aaa=123456/g&quot;</span> config.ini</span><br></pre></td></tr></table></figure><h3 id="删除空格"><a href="#删除空格" class="headerlink" title="删除空格"></a>删除空格</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;   12 345   &#x27;</span> | sed <span class="string">&#x27;s/ //g&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="替换文件里面的内容"><a href="#替换文件里面的内容" class="headerlink" title="替换文件里面的内容"></a>替换文件里面的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/archive.ubuntu.com/mirrors.aliyun.com/g&quot;</span> /etc/apt/sources.list</span><br><span class="line"><span class="comment"># 如果要替换的文本里含有/可以换成#、@</span></span><br><span class="line">sed -i <span class="string">&quot;s#security.ubuntu.com#mirrors.aliyun.com#g&quot;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h2 id="多次替换文本"><a href="#多次替换文本" class="headerlink" title="多次替换文本"></a>多次替换文本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i xxx.txt \</span><br><span class="line">    -e <span class="string">&#x27;s/111/222/g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s/333/444/g&#x27;</span></span><br></pre></td></tr></table></figure><p>将 111 替换成 222，333 替换成 444</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用shell组合命令</title>
      <link href="/posts/90ca4905/"/>
      <url>/posts/90ca4905/</url>
      
        <content type="html"><![CDATA[<h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><h3 id="1-3-这种格式"><a href="#1-3-这种格式" class="headerlink" title="{1..3} 这种格式"></a>{1..3} 这种格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># i 取值为1 2 3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..3&#125;; <span class="keyword">do</span> <span class="built_in">echo</span> 192.168.1.1<span class="variable">$i</span> ; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># i 取值为 1 3 5 7 9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9..2&#125; ; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span> ; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除文件，相当于排列组合</span></span><br><span class="line"><span class="built_in">rm</span> -rf redis-&#123;1..6&#125;/&#123;appendonly.aof,nodes.conf,nohup.out&#125;</span><br></pre></td></tr></table></figure><h3 id="seq"><a href="#seq" class="headerlink" title="seq"></a>seq</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># i 的取值是 1 3 5 7 9, 1开始9结束，2是步进</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 2 9) ; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span> ; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 死循环</span></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>: <span class="subst">$(date)</span>&quot;</span></span><br><span class="line">  i=$((i+<span class="number">1</span>))</span><br><span class="line">  <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">list=(</span><br><span class="line">10.66.99.204</span><br><span class="line">10.66.230.25</span><br><span class="line">10.66.219.220</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;list[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">if</span> [ $(iptables -L|grep -v grep|grep <span class="variable">$i</span>|<span class="built_in">wc</span> -l) -eq 0 ];<span class="keyword">then</span></span><br><span class="line">      iptables -I OUTPUT -d <span class="variable">$i</span> -j DROP</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>这个 list 也可以写成 <code>list=(a b c)</code> 这种形式</p></blockquote><h3 id="遍历换行字符串"><a href="#遍历换行字符串" class="headerlink" title="遍历换行字符串"></a>遍历换行字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">images=<span class="string">&quot;</span></span><br><span class="line"><span class="string">nginx:latest</span></span><br><span class="line"><span class="string">mysql:5.7</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> <span class="variable">$images</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;image= <span class="variable">$&#123;image&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><p><a href="/posts/le2ugemu/">shell条件判断</a></p><h2 id="脚本里的交互命令"><a href="#脚本里的交互命令" class="headerlink" title="脚本里的交互命令"></a>脚本里的交互命令</h2><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">passwd ubuntu&lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">ubuntu</span><br><span class="line">ubuntu</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="自动执行-fdisk"><a href="#自动执行-fdisk" class="headerlink" title="自动执行 fdisk"></a>自动执行 fdisk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;n</span></span><br><span class="line"><span class="string">p</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">w</span></span><br><span class="line"><span class="string">&quot;</span> | fdisk /dev/vdb &amp;&amp; mkfs.ext4 /dev/vdb1</span><br></pre></td></tr></table></figure><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><h3 id="只保留最近-20-个-jar-版本"><a href="#只保留最近-20-个-jar-版本" class="headerlink" title="只保留最近 20 个 jar 版本"></a>只保留最近 20 个 jar 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -t *.jar | awk <span class="string">&#x27;NR&gt;20&#x27;</span> | xargs <span class="built_in">rm</span> -f</span><br></pre></td></tr></table></figure><h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><h3 id="不处理变量"><a href="#不处理变量" class="headerlink" title="不处理变量"></a>不处理变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里的EOF加上了单引号，不对变量进行处理</span></span><br><span class="line"><span class="built_in">cat</span> &gt; filename.txt &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="这样的可以处理变量"><a href="#这样的可以处理变量" class="headerlink" title="这样的可以处理变量"></a>这样的可以处理变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里的EOF没加引号，或者加双引号都会正常处理变量</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; filename.txt &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">$hello</span></span><br><span class="line"><span class="string">world</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="使用-sudo-写入"><a href="#使用-sudo-写入" class="headerlink" title="使用 sudo 写入"></a>使用 sudo 写入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo -E <span class="built_in">cat</span> &gt; /etc/cni/net.d/10-mynet.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;cniVersion&quot;: &quot;0.2.0&quot;,</span></span><br><span class="line"><span class="string">  &quot;name&quot;: &quot;mynet&quot;,</span></span><br><span class="line"><span class="string">  &quot;type&quot;: &quot;bridge&quot;,</span></span><br><span class="line"><span class="string">  &quot;bridge&quot;: &quot;cni0&quot;,</span></span><br><span class="line"><span class="string">  &quot;isGateway&quot;: true,</span></span><br><span class="line"><span class="string">  &quot;ipMasq&quot;: true,</span></span><br><span class="line"><span class="string">  &quot;ipam&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;type&quot;: &quot;host-local&quot;,</span></span><br><span class="line"><span class="string">    &quot;subnet&quot;: &quot;172.19.0.0/24&quot;,</span></span><br><span class="line"><span class="string">    &quot;routes&quot;: [</span></span><br><span class="line"><span class="string">      &#123; &quot;dst&quot;: &quot;0.0.0.0/0&quot; &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="写入内容控制台看得见"><a href="#写入内容控制台看得见" class="headerlink" title="写入内容控制台看得见"></a>写入内容控制台看得见</h3><blockquote><p>tee -a 为追加, tee 前面可以加 sudo</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">xxx</span></span><br><span class="line"><span class="string">yyy</span></span><br><span class="line"><span class="string">&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h2 id="运行-5s-自动退出"><a href="#运行-5s-自动退出" class="headerlink" title="运行 5s 自动退出"></a>运行 5s 自动退出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">sleep</span> 5 &amp;&amp; <span class="built_in">kill</span> $$ &amp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$RANDOM</span> ; <span class="built_in">sleep</span> 1;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="脚本里获取目录或名字"><a href="#脚本里获取目录或名字" class="headerlink" title="脚本里获取目录或名字"></a>脚本里获取目录或名字</h2><h3 id="脚本里获取路径"><a href="#脚本里获取路径" class="headerlink" title="脚本里获取路径"></a>脚本里获取路径</h3><p>这种方法可能是绝对路径，也可能是相对路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> `<span class="built_in">dirname</span> <span class="variable">$0</span>`</span><br></pre></td></tr></table></figure><p>绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(<span class="built_in">cd</span> <span class="string">&quot;<span class="subst">$( dirname <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&amp; <span class="built_in">pwd</span> )</span><br></pre></td></tr></table></figure><h3 id="脚本里获取脚本文件名"><a href="#脚本里获取脚本文件名" class="headerlink" title="脚本里获取脚本文件名"></a>脚本里获取脚本文件名</h3><blockquote><p>$0 在 bash 里表示执行脚本的命令，如 <code>./xx.sh</code> 或 <code>/opt/xxx.sh</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> `<span class="built_in">basename</span> <span class="variable">$0</span>`</span><br></pre></td></tr></table></figure><h2 id="批量启动服务"><a href="#批量启动服务" class="headerlink" title="批量启动服务"></a>批量启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">ls</span> /data/wwwroot/`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">cd</span> /data/wwwroot/<span class="variable">$i</span> &amp;&amp; ./restart.sh</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="判断里面有变量，用双中括号"><a href="#判断里面有变量，用双中括号" class="headerlink" title="判断里面有变量，用双中括号"></a>判断里面有变量，用双中括号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$&#123;refs&#125;</span>&quot;</span> == refs/tags/shp-* ]];<span class="keyword">then</span></span><br></pre></td></tr></table></figure><h2 id="sudo-执行命令"><a href="#sudo-执行命令" class="headerlink" title="sudo 执行命令"></a>sudo 执行命令</h2><p>举个例子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">]$ <span class="built_in">echo</span> 1 &gt; /root/1</span><br><span class="line">-bash: /root/1: Permission denied</span><br><span class="line"></span><br><span class="line">]$ sudo <span class="built_in">echo</span> 1 &gt; /root/1</span><br><span class="line">-bash: /root/1: Permission denied</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo sh -c <span class="string">&#x27;echo 1 &gt; /root/1&#x27;</span>     <span class="comment"># 这样环境变量用的是root的</span></span><br><span class="line">sudo -E sh -c <span class="string">&#x27;echo $SHELL&#x27;</span>       <span class="comment"># 保留了当前用户的环境变量，比如~/.bashrc里面的配置</span></span><br></pre></td></tr></table></figure><h2 id="截取文件名或路径名"><a href="#截取文件名或路径名" class="headerlink" title="截取文件名或路径名"></a>截取文件名或路径名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">basename</span> /var/log/alternatives.log</span><br><span class="line">alternatives.log</span><br><span class="line"></span><br><span class="line">&gt; <span class="built_in">dirname</span> /var/log/alternatives.log</span><br><span class="line">/var/log</span><br></pre></td></tr></table></figure><h2 id="去除字符串中间的空格"><a href="#去除字符串中间的空格" class="headerlink" title="去除字符串中间的空格"></a>去除字符串中间的空格</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去除文本中的空格，相当于python里面的strip()</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   lo l  &quot;</span> | xargs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以用sed，不过感觉不优雅，会把所有空格都去掉</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   lo l  &quot;</span> | sed <span class="string">&#x27;s/ //g&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="输入-yes-或-no-执行不同的选项"><a href="#输入-yes-或-no-执行不同的选项" class="headerlink" title="输入 yes 或 no 执行不同的选项"></a>输入 yes 或 no 执行不同的选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -r -p <span class="string">&quot;Are You Sure? [Y/n] &quot;</span> input</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$input</span> <span class="keyword">in</span></span><br><span class="line">  [yY][eE][sS]|[yY])</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Yes&quot;</span></span><br><span class="line">  ;;</span><br><span class="line"></span><br><span class="line">  [nN][oO]|[nN])</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;No&quot;</span></span><br><span class="line">  ;;</span><br><span class="line"></span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Invalid input...&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="获取网卡-IP"><a href="#获取网卡-IP" class="headerlink" title="获取网卡 IP"></a>获取网卡 IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr | grep inet | egrep -v <span class="string">&#x27;(127.0.0.1|inet6|docker)&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> -d <span class="string">&quot;addr:&quot;</span> | <span class="built_in">head</span> -n 1 | <span class="built_in">cut</span> -d / -f1</span><br></pre></td></tr></table></figure><h2 id="获取网卡设备名"><a href="#获取网卡设备名" class="headerlink" title="获取网卡设备名"></a>获取网卡设备名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/net/dev | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | grep <span class="string">&quot;:&quot;</span> | grep -Ev <span class="string">&quot;lo|docker|vnet|br&quot;</span> | sed <span class="string">&#x27;s/://&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="获取当前目录下的所有目录"><a href="#获取当前目录下的所有目录" class="headerlink" title="获取当前目录下的所有目录"></a>获取当前目录下的所有目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">ls</span> -d */); <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$i</span></span><br><span class="line">  git pull</span><br><span class="line">  <span class="built_in">cd</span> ..</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="使用-shell-生成随机-MAC-地址"><a href="#使用-shell-生成随机-MAC-地址" class="headerlink" title="使用 shell 生成随机 MAC 地址"></a>使用 shell 生成随机 MAC 地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n A0-62-2F; <span class="built_in">dd</span> bs=1 count=3 <span class="keyword">if</span>=/dev/random 2&gt;/dev/null |hexdump -v -e <span class="string">&#x27;/1 &quot;-%02X&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="以禁止登录的用户执行命令"><a href="#以禁止登录的用户执行命令" class="headerlink" title="以禁止登录的用户执行命令"></a>以禁止登录的用户执行命令</h2><p>用户 shell 配置成了 <code>/sbin/nologin</code> 或者 <code>/bin/false</code> 都可以拒绝用户登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/bash www</span><br><span class="line">sudo -u www <span class="built_in">touch</span> xxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Script </tag>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker常用配置</title>
      <link href="/posts/4bc23141/"/>
      <url>/posts/4bc23141/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h2><h3 id="官方安装脚本"><a href="#官方安装脚本" class="headerlink" title="官方安装脚本"></a>官方安装脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | bash</span><br></pre></td></tr></table></figure><h3 id="阿里云安装（centos）"><a href="#阿里云安装（centos）" class="headerlink" title="阿里云安装（centos）"></a>阿里云安装（centos）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2: 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3: 更新并安装Docker-CE</span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 4: 开启Docker服务</span></span><br><span class="line">sudo systemctl start docker.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="docker-compose-安装"><a href="#docker-compose-安装" class="headerlink" title="docker-compose 安装"></a>docker-compose 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.25.4/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/bin/docker-compose &amp;&amp; sudo <span class="built_in">chmod</span> +x /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="免-root-执行-docker-命令"><a href="#免-root-执行-docker-命令" class="headerlink" title="免 root 执行 docker 命令"></a>免 root 执行 docker 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><blockquote><p>顺便确定一下 sock 文件有没有权限（默认是有的）, 退出账户重新登录一下即可生效</p></blockquote><h2 id="阿里云-Docker-加速"><a href="#阿里云-Docker-加速" class="headerlink" title="阿里云 Docker 加速"></a>阿里云 Docker 加速</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker &amp;&amp; <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="一次性删除所有的容器"><a href="#一次性删除所有的容器" class="headerlink" title="一次性删除所有的容器"></a>一次性删除所有的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f `docker ps -aq`</span><br></pre></td></tr></table></figure><h3 id="一次性删除所有的镜像"><a href="#一次性删除所有的镜像" class="headerlink" title="一次性删除所有的镜像"></a>一次性删除所有的镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker image <span class="built_in">ls</span> | awk <span class="string">&#x27;NR!=1 &#123;print $1 &quot;:&quot; $2&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="一次性删除未打标签的镜像"><a href="#一次性删除未打标签的镜像" class="headerlink" title="一次性删除未打标签的镜像"></a>一次性删除未打标签的镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image <span class="built_in">ls</span> | grep none | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> | xargs docker rmi</span><br></pre></td></tr></table></figure><h3 id="一次性删除所有-volume"><a href="#一次性删除所有-volume" class="headerlink" title="一次性删除所有 volume"></a>一次性删除所有 volume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume <span class="built_in">rm</span> `docker volume <span class="built_in">ls</span> -q`</span><br></pre></td></tr></table></figure><h3 id="Docker-进入容器"><a href="#Docker-进入容器" class="headerlink" title="Docker 进入容器"></a>Docker 进入容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name test_ubuntu -it ubuntu /bin/bash</span><br><span class="line">启动一个容器并打开shell</span><br></pre></td></tr></table></figure><h3 id="查看容器详情"><a href="#查看容器详情" class="headerlink" title="查看容器详情"></a>查看容器详情</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重看容器详情</span></span><br><span class="line">docker inspect 容器<span class="built_in">id</span>或名字</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重看docker详情</span></span><br><span class="line">docker info</span><br></pre></td></tr></table></figure><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it 镜像名字 /bin/sh</span><br></pre></td></tr></table></figure><h3 id="进入一个运行中的容器"><a href="#进入一个运行中的容器" class="headerlink" title="进入一个运行中的容器"></a>进入一个运行中的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器<span class="built_in">id</span> /bin/sh</span><br></pre></td></tr></table></figure><h3 id="打-tag"><a href="#打-tag" class="headerlink" title="打 tag"></a>打 tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag 镜像<span class="built_in">id</span> oldboy1103/alpine:latest</span><br></pre></td></tr></table></figure><h3 id="查看容器占用磁盘空间"><a href="#查看容器占用磁盘空间" class="headerlink" title="查看容器占用磁盘空间"></a>查看容器占用磁盘空间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a --format <span class="string">&quot;table &#123;&#123;.Size&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span> | <span class="built_in">sort</span> -hr</span><br></pre></td></tr></table></figure><h3 id="查看容器-id"><a href="#查看容器-id" class="headerlink" title="查看容器 id"></a>查看容器 id</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect nginx --format <span class="string">&quot;&#123;&#123;.ID&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="查看日志文件"><a href="#查看日志文件" class="headerlink" title="查看日志文件"></a>查看日志文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看nginx容器的日志位置</span></span><br><span class="line">docker inspect nginx --format <span class="string">&quot;&#123;&#123;.LogPath&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器的日志位置</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;.LogPath&#125;&#125;&#x27;</span> `docker ps -a -q`</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取镜像，ID，端口号，状态</span></span><br><span class="line">docker ps -a --format <span class="string">&quot;table &#123;&#123;.Image&#125;&#125;\t&#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;&quot;</span> | <span class="built_in">sort</span> -hr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据状态列出容器</span></span><br><span class="line">docker ps -a -f  <span class="string">&quot;status=running&quot;</span></span><br><span class="line">docker ps -a -f  <span class="string">&quot;status=exited&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器的IP</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> $(docker ps -q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器的mac地址</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.MacAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> $(docker ps -a -q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器name</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span> $(docker ps -aq)</span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;.Name&#125;&#125;&#x27;</span> $(docker ps -aq)|<span class="built_in">cut</span> -d<span class="string">&quot;/&quot;</span> -f2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器的Hostname</span></span><br><span class="line">docker inspect --format <span class="string">&#x27;&#123;&#123; .Config.Hostname &#125;&#125;&#x27;</span> $(docker ps -q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取hostname,ip</span></span><br><span class="line">docker inspect --format <span class="string">&#x27;Hostname:&#123;&#123; .Config.Hostname &#125;&#125;  Name:&#123;&#123;.Name&#125;&#125; IP:&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> $(docker ps -q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取容器的镜像</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;.Config.Image&#125;&#125;&#x27;</span> `docker ps -a -q`</span><br></pre></td></tr></table></figure><h2 id="容器备份还原"><a href="#容器备份还原" class="headerlink" title="容器备份还原"></a>容器备份还原</h2><h3 id="镜像的备份还原"><a href="#镜像的备份还原" class="headerlink" title="镜像的备份还原"></a>镜像的备份还原</h3><ol><li><p>commit 将容器保存成镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]</span><br></pre></td></tr></table></figure></li><li><p>将镜像导出成 tar (镜像是分层的,可以回滚,)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o ./backup.tar gitlab/gitlab-ce</span><br></pre></td></tr></table></figure></li><li><p>从 tar 导入镜像（镜像备份下来的 tar）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i ./backup.tar</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：以上会备份镜像的多层。</p></blockquote><h3 id="容器的备份还原"><a href="#容器的备份还原" class="headerlink" title="容器的备份还原"></a>容器的备份还原</h3><ol><li><p>备份容器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> php &gt; phprongqi.tar</span><br></pre></td></tr></table></figure></li><li><p>还原成镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import ./phprongqi.tar php</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：备份的只是一层镜像</p></blockquote><h2 id="容器的日志"><a href="#容器的日志" class="headerlink" title="容器的日志"></a>容器的日志</h2><h3 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h3><p>docker 日志建议输出控制台，控制台日志存储在主机上</p><p>先查看 <code>Logging Driver</code> 类型，默认应该是 <code>json</code> 格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info | grep <span class="string">&quot;Logging Driver&quot;</span></span><br></pre></td></tr></table></figure><p>json 格式的日志在 <code>/var/lib/docker/containers/&lt;containerID&gt;/&lt;containerID&gt;-json.log</code><br>local 格式的日志在 <code>/var/lib/docker/containers/&lt;containerID&gt;/local-logs/container.log</code></p><h3 id="控制日志大小"><a href="#控制日志大小" class="headerlink" title="控制日志大小"></a>控制日志大小</h3><p>vi &#x2F;etc&#x2F;docker&#x2F;daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> </span><br><span class="line">    <span class="attr">&quot;log-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json-file&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;log-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;max-size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10m&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;max-file&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Docker </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu常用配置</title>
      <link href="/posts/27a660e/"/>
      <url>/posts/27a660e/</url>
      
        <content type="html"><![CDATA[<h2 id="修改国内源"><a href="#修改国内源" class="headerlink" title="修改国内源"></a>修改国内源</h2><h3 id="什么是-DEB822-sources-文件格式？"><a href="#什么是-DEB822-sources-文件格式？" class="headerlink" title="什么是 DEB822 (.sources) 文件格式？"></a>什么是 DEB822 (.sources) 文件格式？</h3><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>自新版本的 Debian 与 Ubuntu 起，例如：</p><ul><li>Debian 12 的容器镜像</li><li>Ubuntu 24.04</li></ul><p>默认预装的系统中 APT 的系统源配置文件不再是传统的 <code>/etc/apt/sources.list</code>。传统格式（又被称为 One-Line-Style 格式）类似如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/debian/ bookworm main contrib</span><br></pre></td></tr></table></figure><p>新的 DEB822 格式自 APT 1.1（2015 年发布）起支持，后缀为 .sources，存储在 <code>/etc/apt/sources.list.d/</code> 目录下，格式类似如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Types: deb</span><br><span class="line">URIs: https://mirrors.ustc.edu.cn/debian</span><br><span class="line">Suites: bookworm</span><br><span class="line">Components: main contrib</span><br><span class="line">Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>在切换软件源时，需要根据实际情况选择对应的格式进行修改。</p><p>关于 DEB822 格式的设计考虑，可以参考 <a href="https://repolib.readthedocs.io/en/latest/deb822-format.html">官方文档</a>。</p></div><ul><li><p>传统格式（&#x2F;etc&#x2F;apt&#x2F;sources.list）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&#x27;s@//.*ubuntu.com@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li><li><p>DEB822 格式（&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ubuntu.sources）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&#x27;s@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g&#x27;</span> /etc/apt/sources.list.d/ubuntu.sources</span><br></pre></td></tr></table></figure></li></ul><h2 id="编译环境安装"><a href="#编译环境安装" class="headerlink" title="编译环境安装"></a>编译环境安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y build-essential tcl gcc make zlib1g-dev libssl-dev libncursesw5-dev libgdbm-dev libc6-dev libffi-dev openssl libxml2-dev libpcre3 libpcre3-dev libncurses5-dev libicu-dev libmcrypt-dev curl libcurl4-gnutls-dev libjpeg-dev libpng-dev libxslt1-dev</span><br></pre></td></tr></table></figure><h2 id="切换语言环境"><a href="#切换语言环境" class="headerlink" title="切换语言环境"></a>切换语言环境</h2><p><code>dpkg-reconfigure locales</code></p><h2 id="Ubuntu-网卡配置文件"><a href="#Ubuntu-网卡配置文件" class="headerlink" title="Ubuntu 网卡配置文件"></a>Ubuntu 网卡配置文件</h2><h3 id="查看网卡硬件信息"><a href="#查看网卡硬件信息" class="headerlink" title="查看网卡硬件信息"></a>查看网卡硬件信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lshw -short | grep network</span><br><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure><h3 id="网卡配置文件-16-版本及以下-etc-network-interfaces-文件内容如下"><a href="#网卡配置文件-16-版本及以下-etc-network-interfaces-文件内容如下" class="headerlink" title="网卡配置文件 (16 版本及以下):&#x2F;etc&#x2F;network&#x2F;interfaces 文件内容如下"></a>网卡配置文件 (16 版本及以下):&#x2F;etc&#x2F;network&#x2F;interfaces 文件内容如下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.111.14</span><br><span class="line">gateway 192.168.111.2</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">dns-nameservers 192.168.111.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#network 192.168.111.0</span></span><br><span class="line"><span class="comment">#broadcast 192.168.111.255</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：如果 Ubuntu 系统采用的是 desktop 版，由于 desktop 版安装了 NetworkManager，修改完 interfaces 文档中的内容后，不会生效。需要先修改&#x2F;etc&#x2F;NetworkManager&#x2F;NetworkManager.conf 文档中的 managed 参数，使之为 true ，并重启系统， 然后在修改&#x2F;etc&#x2F;network&#x2F;interfaces 文件，设置静态 IP。</p></blockquote><h3 id="重启网卡使配置生效"><a href="#重启网卡使配置生效" class="headerlink" title="重启网卡使配置生效"></a>重启网卡使配置生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p>如果上面命令无法令 ubuntu 重启网络，则使用下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo ifdown eth0 &amp;&amp; sudo ifup eth0</span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">service networking restart</span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">ifconfig eth0 down &amp;&amp; ifconfig eth0 up</span><br></pre></td></tr></table></figure><h3 id="网卡配置文件-17-10-etc-netplan-01-netcfg-yaml"><a href="#网卡配置文件-17-10-etc-netplan-01-netcfg-yaml" class="headerlink" title="网卡配置文件 (17.10+):&#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml"></a>网卡配置文件 (17.10+):&#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml</h3><blockquote><p>ubuntu 从 17.10 开始，已放弃在&#x2F;etc&#x2F;network&#x2F;interfaces 里固定 IP 的配置，而是改成 netplan 方式，配置写在&#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml 或者类似名称的 yaml 文件里</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span></span><br><span class="line">      <span class="attr">addresses:</span> [ <span class="number">10.0</span><span class="number">.0</span><span class="number">.51</span><span class="string">/24</span> ]</span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">          <span class="attr">addresses:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">&quot;10.0.0.2&quot;</span></span><br></pre></td></tr></table></figure><p>dhcp 配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens32:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>然后执行 <code>netplan apply</code> 使配置生效,不用重启网卡.</p><h3 id="临时修改网卡-DNS-地址"><a href="#临时修改网卡-DNS-地址" class="headerlink" title="临时修改网卡 DNS 地址"></a>临时修改网卡 DNS 地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf(不建议直接修改)</span><br><span class="line">nameserver 223.5.5.5 <span class="comment">#修改成你的主DNS</span></span><br><span class="line">nameserver 223.6.6.6 <span class="comment">#修改成你的备用DNS</span></span><br><span class="line">search localhost <span class="comment">#你的域名</span></span><br><span class="line">修改后:wq退出，配置会实时生效，但是重启系统后会丢失配置。</span><br></pre></td></tr></table></figure><h3 id="永久修改网卡-DNS"><a href="#永久修改网卡-DNS" class="headerlink" title="永久修改网卡 DNS"></a>永久修改网卡 DNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolvconf/resolv.conf.d/base</span><br><span class="line">添加如下内容</span><br><span class="line"></span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br><span class="line"></span><br><span class="line">刷新DNS使生效</span><br><span class="line"></span><br><span class="line">resolvconf -u</span><br></pre></td></tr></table></figure><blockquote><p>resolv.conf 文件就是根据&#x2F;etc&#x2F;resolvconf&#x2F;resolv.conf.d 目录中的这几个文件生成的。</p></blockquote><h3 id="查看现在正在使用的-DNS"><a href="#查看现在正在使用的-DNS" class="headerlink" title="查看现在正在使用的 DNS"></a>查看现在正在使用的 DNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemd-resolve --status</span><br></pre></td></tr></table></figure><h3 id="启动速度慢"><a href="#启动速度慢" class="headerlink" title="启动速度慢"></a>启动速度慢</h3><p>等在 <code>a start job is running for wait for network to be configured</code> 很久， 可以直接关闭 <code>systemd-networkd-wait-online</code> 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl mask systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><h3 id="检查设备加载情况"><a href="#检查设备加载情况" class="headerlink" title="检查设备加载情况"></a>检查设备加载情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep eth</span><br></pre></td></tr></table></figure><h3 id="修改默认编辑器"><a href="#修改默认编辑器" class="headerlink" title="修改默认编辑器"></a>修改默认编辑器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config editor   <span class="comment"># 用于 visudo 等</span></span><br><span class="line">sudo select-editor                         <span class="comment"># 用于 crontab -e 等</span></span><br></pre></td></tr></table></figure><h3 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h3><p>系统字体位置 <code>/usr/share/fonts/</code>, 将字体复制到 <code>/usr/share/fonts/</code> 目录<br>用户字体位置 <code>~/.local/share/fonts</code>, 将字体复制到 <code>~/.local/share/fonts</code> 目录</p><p><del>然后刷新字体缓存， 经测试不刷新也可以生效</del></p><p><del>fc-cache -vf</del></p><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="安装本地包，不处理依赖"><a href="#安装本地包，不处理依赖" class="headerlink" title="安装本地包，不处理依赖"></a>安装本地包，不处理依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i ./xxx.deb</span><br></pre></td></tr></table></figure><h3 id="安装本地包，并自动处理依赖"><a href="#安装本地包，并自动处理依赖" class="headerlink" title="安装本地包，并自动处理依赖"></a>安装本地包，并自动处理依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install ./xxx.deb</span><br></pre></td></tr></table></figure><h3 id="查看一个包有哪些文件组成"><a href="#查看一个包有哪些文件组成" class="headerlink" title="查看一个包有哪些文件组成"></a>查看一个包有哪些文件组成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -L vim</span><br></pre></td></tr></table></figure><h3 id="锁定版本-不更新"><a href="#锁定版本-不更新" class="headerlink" title="锁定版本, 不更新"></a>锁定版本, 不更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="查询文件属于哪个包"><a href="#查询文件属于哪个包" class="headerlink" title="查询文件属于哪个包"></a>查询文件属于哪个包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install -y apt-file</span><br><span class="line">apt-file update</span><br><span class="line">apt-file search libssl.so.1.1</span><br></pre></td></tr></table></figure><h3 id="下载离线包"><a href="#下载离线包" class="headerlink" title="下载离线包"></a>下载离线包</h3><p>只下载，不安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -f /var/cache/apt/archives/*.deb</span><br><span class="line">sudo apt install -d fio</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载的deb文件在</span></span><br><span class="line">/var/cache/apt/archives</span><br></pre></td></tr></table></figure><h3 id="安装指定版本的包"><a href="#安装指定版本的包" class="headerlink" title="安装指定版本的包"></a>安装指定版本的包</h3><p>查询源内可用的包版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache madison docker-ce</span><br></pre></td></tr></table></figure><p>安装指定版本的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce=&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure><h3 id="非交互式"><a href="#非交互式" class="headerlink" title="非交互式"></a>非交互式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&#x27;DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl &gt;/dev/null&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="不安装推荐的软件包"><a href="#不安装推荐的软件包" class="headerlink" title="不安装推荐的软件包"></a>不安装推荐的软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get --no-install-recommends </span><br></pre></td></tr></table></figure><h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><h3 id="桌面图标配置文件"><a href="#桌面图标配置文件" class="headerlink" title="桌面图标配置文件"></a>桌面图标配置文件</h3><p>用户配置文件位置 <code>~/.local/share/applications</code><br>系统配置文件位置: <code>/usr/share/applications</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Desktop Entry]</span></span><br><span class="line"><span class="attr">Name</span>=Visual Studio Code</span><br><span class="line"><span class="attr">Comment</span>=Code Editing. Redefined.</span><br><span class="line"><span class="attr">GenericName</span>=Text Editor</span><br><span class="line"><span class="attr">Exec</span>=/usr/share/code/code --<span class="literal">no</span>-sandbox --unity-launch %F</span><br><span class="line"><span class="attr">Icon</span>=com.visualstudio.code</span><br><span class="line"><span class="attr">Type</span>=Application</span><br><span class="line"><span class="attr">StartupNotify</span>=<span class="literal">false</span></span><br><span class="line"><span class="attr">StartupWMClass</span>=Code</span><br><span class="line"><span class="attr">Categories</span>=Utility<span class="comment">;TextEditor;Development;IDE;</span></span><br><span class="line"><span class="attr">MimeType</span>=text/plain<span class="comment">;inode/directory;application/x-code-workspace;</span></span><br><span class="line"><span class="attr">Actions</span>=new-empty-window<span class="comment">;</span></span><br><span class="line"><span class="attr">Keywords</span>=vscode<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">X-Desktop-File-Install-Version</span>=<span class="number">0.24</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Desktop Action new-empty-window]</span></span><br><span class="line"><span class="attr">Name</span>=New Empty Window</span><br><span class="line"><span class="attr">Exec</span>=/usr/share/code/code --<span class="literal">no</span>-sandbox --new-window %F</span><br><span class="line"><span class="attr">Icon</span>=com.visualstudio.code</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Crontab </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos常用配置</title>
      <link href="/posts/6cc59126/"/>
      <url>/posts/6cc59126/</url>
      
        <content type="html"><![CDATA[<p>centos 系统升级请看<br><a href="/posts/6d586ed1">Centos7 升级 RHEL8</a></p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens**</span><br></pre></td></tr></table></figure><h3 id="固定-ip-配置"><a href="#固定-ip-配置" class="headerlink" title="固定 ip 配置"></a>固定 ip 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=10.0.0.7</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=10.0.0.2</span><br><span class="line">DNS1=10.0.0.2</span><br><span class="line">DNS2=223.5.5.5</span><br><span class="line">DOMAIN=10.0.0.2</span><br></pre></td></tr></table></figure><h3 id="DHCP-配置"><a href="#DHCP-配置" class="headerlink" title="DHCP 配置"></a>DHCP 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">PERSISTENT_DHCLIENT=yes</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><h3 id="临时修改-IP（重启失效）"><a href="#临时修改-IP（重启失效）" class="headerlink" title="临时修改 IP（重启失效）"></a>临时修改 IP（重启失效）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 192.168.120.56</span><br><span class="line">ifconfig eth0 192.168.120.56 netmask 255.255.255.0</span><br><span class="line">ifconfig eth0 192.168.120.56 netmask 255.255.255.0 broadcast 192.168.120.255</span><br></pre></td></tr></table></figure><h3 id="临时增加-vip"><a href="#临时增加-vip" class="headerlink" title="临时增加 vip"></a>临时增加 vip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 192.168.20.20/24 brd + dev eth0</span><br></pre></td></tr></table></figure><h3 id="网卡配置-VLAN"><a href="#网卡配置-VLAN" class="headerlink" title="网卡配置 VLAN"></a>网卡配置 VLAN</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Vlan</span><br><span class="line">VLAN=yes</span><br><span class="line">VLAN_ID=180</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">NAME=enp3s0f0</span><br><span class="line">DEVICE=enp3s0f0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.20.230</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.20.1</span><br><span class="line">DNS1=114.114.114.114</span><br></pre></td></tr></table></figure><h3 id="修改网卡名"><a href="#修改网卡名" class="headerlink" title="修改网卡名"></a>修改网卡名</h3><blockquote><p>centos7 默认是以接口名称被自动基于固件，拓扑结构和位置信息来确定。如 ens33,如果想要以 eth0 来命名</p></blockquote><ul><li>安装时配置</li></ul><p>光标选择“Install CentOS 7”<br>点击 Tab，打开 kernel 启动选项后，增加 <code>net.ifnames=0 biosdevname=0</code></p><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><h3 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27;</span> /etc/sysconfig/selinux &amp;&amp; setenforce 0</span><br></pre></td></tr></table></figure><h3 id="timedatectl-命令"><a href="#timedatectl-命令" class="headerlink" title="timedatectl 命令"></a>timedatectl 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones                    <span class="comment"># 列出所有时区</span></span><br><span class="line">timedatectl set-local-rtc 1                   <span class="comment"># 将硬件时钟调整为与本地时钟一致, 0 为设置为 UTC 时间</span></span><br><span class="line">timedatectl set-timezone Asia/Shanghai        <span class="comment"># 设置系统时区为上海</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">timedatectl status                            <span class="comment"># 查看状态</span></span><br><span class="line"></span><br><span class="line">timedatectl set-ntp 0                         <span class="comment"># 禁用ntp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只设置时间的话可以使用set-time开关以及HH：MM：SS（小时，分，秒）的时间格式。</span></span><br><span class="line">timedatectl set-time 15:58:30</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只设置日期的话可以使用set-time开关以及YY：MM：DD（年，月，日）的日期格式。</span></span><br><span class="line">timedatectl set-time 20151120</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置日期和时间：</span></span><br><span class="line">timedatectl set-time <span class="string">&#x27;16:10:40 2015-11-20&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="ntp-时间同步"><a href="#ntp-时间同步" class="headerlink" title="ntp 时间同步"></a>ntp 时间同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp ntpdate -y </span><br><span class="line"></span><br><span class="line">systemctl start ntpdate</span><br><span class="line"></span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure><blockquote><p>ntp 只会同步系统时间而不会同步硬件时间，若服务器重启则系统时间会失效，依旧从硬件时间开始计时，所以使用 ntp 同步系统时间后需要将系统时间同步到硬件时间 hwclock -w</p></blockquote><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><h3 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h3><p>重启, 在 <code>grub2</code> 界面 先按 <code>↑</code> 停在这个界面,然后按 <code>e</code> 进入编辑模式<br>找到 <code>linux16</code> 那一行, 在最后面添加 <code>init=/bin/sh</code><br>按 <code>ctrl + x</code> 继续启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /</span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> /.autorelabel     <span class="comment"># 使selinux生效，否则可能无法正常启动</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/init         <span class="comment"># 正常启动系统</span></span><br></pre></td></tr></table></figure><h3 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 修改默认语言</span></span><br><span class="line">sed -i <span class="string">&#x27;s@LANG=.*$@LANG=&quot;en_US.UTF-8&quot;@g&#x27;</span> /etc/locale.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过环境变量设置时区</span></span><br><span class="line"><span class="built_in">export</span> TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改时区(修改环境变量后就没必要这样修改了)</span></span><br><span class="line"><span class="built_in">rm</span> -rf /etc/localtime</span><br><span class="line"><span class="built_in">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="安装相应字体"><a href="#安装相应字体" class="headerlink" title="安装相应字体"></a>安装相应字体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install dejavu-lgc-sans-fonts</span><br></pre></td></tr></table></figure><h3 id="全局代理"><a href="#全局代理" class="headerlink" title="全局代理"></a>全局代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://10.0.0.1:21882&quot;</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units                    <span class="comment">##列出当前系统服务的状态</span></span><br><span class="line">systemctl list-unit-files               <span class="comment">##列出服务的开机状态</span></span><br><span class="line">systemctl status sshd                   <span class="comment">##查看指定服务的状态</span></span><br><span class="line">systemctl stop sshd                     <span class="comment">##关闭指定服务</span></span><br><span class="line">systemctl start sshd                    <span class="comment">##开启指定服务</span></span><br><span class="line">systemctl restart sshd                  <span class="comment">##从新启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> sshd                   <span class="comment">##设定指定服务开机开启</span></span><br><span class="line">systemctl <span class="built_in">disable</span> sshd                  <span class="comment">##设定指定服务开机关闭</span></span><br><span class="line">systemctl reload sshd                   <span class="comment">##使指定服务从新加载配置</span></span><br><span class="line">systemctl list-dependencies sshd        <span class="comment">##查看指定服务的倚赖关系</span></span><br><span class="line">systemctl mask  sshd                    <span class="comment">##冻结指定服务</span></span><br><span class="line">systemctl unmask sshd                   <span class="comment">##启用服务</span></span><br><span class="line">systemctl set-default multi-user.target <span class="comment">##开机不开启图形</span></span><br><span class="line">systemctl set-default graphical.target  <span class="comment">##开机启动图形</span></span><br><span class="line">setterm                                 <span class="comment">##文本界面设定color</span></span><br></pre></td></tr></table></figure><h3 id="查看所有的-service"><a href="#查看所有的-service" class="headerlink" title="查看所有的 service"></a>查看所有的 service</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /usr/lib/systemd/system/</span><br></pre></td></tr></table></figure><h3 id="查看开机自启的-service"><a href="#查看开机自启的-service" class="headerlink" title="查看开机自启的 service"></a>查看开机自启的 service</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files | grep enabled</span><br><span class="line">ll /etc/systemd/system/multi-user.target.wants/</span><br></pre></td></tr></table></figure><h3 id="hostnamectl-命令"><a href="#hostnamectl-命令" class="headerlink" title="hostnamectl 命令"></a>hostnamectl 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname centos1</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h2 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h2><h3 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span></span><br></pre></td></tr></table></figure><h2 id="yum-和-rpm"><a href="#yum-和-rpm" class="headerlink" title="yum 和 rpm"></a>yum 和 rpm</h2><blockquote><p>yum 是用 python 写的</p></blockquote><h3 id="查看一个包有哪些文件组成"><a href="#查看一个包有哪些文件组成" class="headerlink" title="查看一个包有哪些文件组成"></a>查看一个包有哪些文件组成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql yum</span><br></pre></td></tr></table></figure><h3 id="查看所有包列表"><a href="#查看所有包列表" class="headerlink" title="查看所有包列表"></a>查看所有包列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa</span><br></pre></td></tr></table></figure><h3 id="本地安装包-会自动处理依赖"><a href="#本地安装包-会自动处理依赖" class="headerlink" title="本地安装包,会自动处理依赖"></a>本地安装包,会自动处理依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall ./xxx.rpm</span><br></pre></td></tr></table></figure><h3 id="本地安装包，不处理依赖"><a href="#本地安装包，不处理依赖" class="headerlink" title="本地安装包，不处理依赖"></a>本地安装包，不处理依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh ./xxx.rpm</span><br></pre></td></tr></table></figure><h3 id="阿里云源"><a href="#阿里云源" class="headerlink" title="阿里云源"></a>阿里云源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="comment"># 非阿里云ECS用户</span></span><br><span class="line">sed -i -e <span class="string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># epel(RHEL 7)</span></span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure><h3 id="Remi-源-各种版本的-php"><a href="#Remi-源-各种版本的-php" class="headerlink" title="Remi 源 (各种版本的 php)"></a>Remi 源 (各种版本的 php)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install https://mirrors.aliyun.com/remi/enterprise/remi-release-7.rpm</span><br><span class="line"></span><br><span class="line">yum install php74-php-fpm</span><br></pre></td></tr></table></figure><h3 id="查询一个文件属于哪个包"><a href="#查询一个文件属于哪个包" class="headerlink" title="查询一个文件属于哪个包"></a>查询一个文件属于哪个包</h3><ul><li>本机已经有这个文件，想知道在哪个包里面</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf  /file/path</span><br></pre></td></tr></table></figure><ul><li>缺少文件, 想知道在哪个包里面，方便安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides libm.so.6</span><br></pre></td></tr></table></figure><h3 id="只下载不安装"><a href="#只下载不安装" class="headerlink" title="只下载不安装"></a>只下载不安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install --downloadonly --downloaddir=/tmp/ vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用</span></span><br><span class="line">yumdownloader --resolve --destdir=./aa/ lrzsz</span><br></pre></td></tr></table></figure><h3 id="安装指定版本的包"><a href="#安装指定版本的包" class="headerlink" title="安装指定版本的包"></a>安装指定版本的包</h3><p>查询包有那些可用的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list kubelet kubeadm kubectl  --showduplicates | <span class="built_in">sort</span> -r</span><br></pre></td></tr></table></figure><p>安装指定版本的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install kubelet-1.16.9-0 kubeadm-1.16.9-0 kubectl-1.16.9-0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Systemd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态博客生成工具hexo</title>
      <link href="/posts/ab21860c/"/>
      <url>/posts/ab21860c/</url>
      
        <content type="html"><![CDATA[<p>hugo 文档请看 <a href="/tags/hugo">hugo</a></p><h2 id="安装-nodejs-yarn-hexo"><a href="#安装-nodejs-yarn-hexo" class="headerlink" title="安装 nodejs yarn hexo"></a>安装 nodejs yarn hexo</h2><blockquote><p>推荐使用 yarn 来代替 npm<br>首先安装 nodejs，和 npm, 然后再安装 yarn</p></blockquote><h3 id="安装-yarn"><a href="#安装-yarn" class="headerlink" title="安装 yarn"></a>安装 yarn</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><h3 id="设置淘宝源"><a href="#设置淘宝源" class="headerlink" title="设置淘宝源"></a>设置淘宝源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org -g</span><br></pre></td></tr></table></figure><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli</span><br></pre></td></tr></table></figure><h3 id="创建新项目"><a href="#创建新项目" class="headerlink" title="创建新项目"></a>创建新项目</h3><blockquote><p>如果找不到 hexo,请把 <code>yarn global bin</code> 添加到环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="修改语言为中文"><a href="#修改语言为中文" class="headerlink" title="修改语言为中文"></a>修改语言为中文</h3><p>vim myblog&#x2F;_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">张理坤的博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;飞机师的风衣&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">张理坤</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="安装-next-主题"><a href="#安装-next-主题" class="headerlink" title="安装 next 主题"></a>安装 next 主题</h3><p>github 地址：<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改 theme 配置文件 <code>vim next/_config.yml</code><br><code>scheme: Pisces</code></p><h3 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-searchdb</span><br></pre></td></tr></table></figure><p>然后主题配置文件 <code>next/_config.yml</code><br><code>local_search:</code> 标签，配置参数 <code>enable: true</code></p><h3 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h3><blockquote><p>git 地址： <a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-helper-live2d</span><br><span class="line">yarn add live2d-widget-model-epsilon2_1</span><br></pre></td></tr></table></figure><p>在 <code>_config.yml</code> 添加下面配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-epsilon2_1</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure><blockquote><p>module.use 里面的和你安装的要一样</p></blockquote><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><ul><li>将图片放入 博客目录&#x2F;themes&#x2F;next&#x2F;source&#x2F;images，并重命名为 avatar.[格式]</li><li>编辑主题配置文件 _config.yml<br><code>vim 博客目录/themes/next/_config.yml</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.png</span></span><br></pre></td></tr></table></figure><h3 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><code>hexo new page categories</code><br>成功后会提示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/categories/index.md</span><br></pre></td></tr></table></figure><p>添加 <code>type: &quot;categories&quot;</code> 到 index.md 中:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>给文章添加“categories”属性<br>打开需要添加分类的文章，为其添加 categories 属性。<br>注意：hexo 一篇文章只能属于一个分类，如果写两个分类，则是给分类嵌套</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo</span><br><span class="line">abbrlink: ab21860c</span><br><span class="line"><span class="section">date: 2021-02-02 17:28:26</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>生成“标签”页并添加 tpye 属性<br>打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>成功后会提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/tags/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到 index.md 这个文件, 添加 <code>type: &quot;tags&quot;</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>文章添加 <code>tags</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo</span><br><span class="line">abbrlink: ab21860c</span><br><span class="line"><span class="section">date: 2021-02-02 17:28:26</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add https://github.com/iuxt/hexo-asset-image.git</span><br></pre></td></tr></table></figure><p><code>vim myblog/_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>创建新文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>使用</p><p>将图片放在同名文件夹, 在 md 里面引用</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">pilot</span>](<span class="link">pilot.jpg</span>)</span><br></pre></td></tr></table></figure><h3 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h3><ol><li><p>在 <code>source</code> 目录添加 <code>CNAME</code> 文件，文件内容是你的域名</p></li><li><p>添加解析 CNAME 到 github 的域名</p></li></ol><h2 id="开始写文章"><a href="#开始写文章" class="headerlink" title="开始写文章"></a>开始写文章</h2><h3 id="新创建文章"><a href="#新创建文章" class="headerlink" title="新创建文章"></a>新创建文章</h3><p><code>hexo new &lt;标题&gt;</code></p><p>然后编辑 <code>vim source/_posts/&lt;标题&gt;.md</code></p><h3 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h3><p><code>hexo s</code></p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>安装 git 插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure><p>修改 hexo 配置文件 vim hexo&#x2F;_config.yml，配置 git 地址</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> [<span class="string">&#x27;git@gitee.com:iuxt/iuxt.git&#x27;</span>, <span class="string">&#x27;git@github.com:iuxt/iuxt.github.io.git&#x27;</span>]</span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">&#x27;hexo update&#x27;</span></span><br></pre></td></tr></table></figure><p>发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="url-格式优化"><a href="#url-格式优化" class="headerlink" title="url 格式优化"></a>url 格式优化</h3><blockquote><p>有人给我评论了, 但是后面我更新了一下目录结构, 发现评论丢失了, 究其原因是因为文章的 url 变了，所以想将文章的 url 固定下来，也便于 seo<br>默认的生成规则是：<code>:year/:month/:day/:title</code>，是按照年、月、日、标题来生成的。比如：<code>https://iuxt.gitee.io/2021/05/08/%E5%B7%A5%E5%85%B7/adb%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</code></p></blockquote><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-abbrlink</span><br></pre></td></tr></table></figure><p>vim config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:abbrlink/</span></span><br><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><h2 id="seo"><a href="#seo" class="headerlink" title="seo"></a>seo</h2><h3 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h3><p>在 <code>source</code> 目录下创建 <code>robots.txt</code> 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># welcome to : iuxt.<span class="property">github</span>.<span class="property">io</span></span><br><span class="line"><span class="title class_">User</span>-<span class="attr">agent</span>: *</span><br><span class="line"><span class="title class_">Allow</span>: /</span><br><span class="line"><span class="title class_">Allow</span>: <span class="regexp">/archives/</span></span><br><span class="line"><span class="title class_">Allow</span>: <span class="regexp">/categories/</span></span><br><span class="line"><span class="title class_">Allow</span>: <span class="regexp">/about/</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Disallow</span>: <span class="regexp">/js/</span></span><br><span class="line"><span class="title class_">Disallow</span>: <span class="regexp">/css/</span></span><br><span class="line"><span class="title class_">Disallow</span>: <span class="regexp">/fonts/</span></span><br><span class="line"><span class="title class_">Disallow</span>: <span class="regexp">/vendors/</span></span><br><span class="line"><span class="title class_">Disallow</span>: <span class="regexp">/lib/</span></span><br><span class="line"><span class="title class_">Sitemap</span>: <span class="attr">https</span>:<span class="comment">//iuxt.github.io/sitemap.xml</span></span><br></pre></td></tr></table></figure><h3 id="sitemap-xml"><a href="#sitemap-xml" class="headerlink" title="sitemap.xml"></a>sitemap.xml</h3><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-sitemap</span><br><span class="line">yarn add hexo-generator-baidu-sitemap</span><br></pre></td></tr></table></figure><p><code>themes/next/_config.yml</code> 添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure><p>然后 <code>hexo g</code>, 看下 <code>public</code> 目录下有没有生成 <code>sitemap.xml</code> 和 <code>baidusitemap.xml</code> 文件</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令之lsof</title>
      <link href="/posts/ls0614ms/"/>
      <url>/posts/ls0614ms/</url>
      
        <content type="html"><![CDATA[<p>lsof（list open files）是一个列出当前系统打开文件的工具。在 linux 环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。</p><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-p</td><td>根据 pid 查找</td></tr><tr><td>直接加文件路径</td><td>查看这个文件被哪个进程打开了</td></tr><tr><td>-c</td><td>显示 COMMAND 列中包含指定字符的进程所有打开的文件</td></tr><tr><td>lsof -u username</td><td>显示所属 user 进程打开的文件</td></tr><tr><td>-i</td><td>用以显示符合条件的进程情况</td></tr><tr><td>lsof -g gid</td><td>显示归属 gid 的进程情况</td></tr><tr><td>lsof +d &#x2F;DIR&#x2F;</td><td>显示目录下被进程打开的文件</td></tr><tr><td>lsof +D &#x2F;DIR&#x2F;</td><td>同上，但是会搜索目录下的所有目录，时间相对较长</td></tr><tr><td>lsof -d FD</td><td>显示指定文件描述符的进程</td></tr><tr><td>lsof -n</td><td>不将 IP 转换为 hostname，缺省是不加上 -n 参数</td></tr><tr><td>lsof -i</td><td>用以显示符合条件的进程情况</td></tr></tbody></table><h2 id="一些例子"><a href="#一些例子" class="headerlink" title="一些例子"></a>一些例子</h2><h3 id="查看-java-程序打开的文件"><a href="#查看-java-程序打开的文件" class="headerlink" title="查看 java 程序打开的文件"></a>查看 java 程序打开的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -c java</span><br></pre></td></tr></table></figure><p>当然你也可以到 <code>/proc/&lt;进程pid&gt;/fd</code> 里面看到这个进程被打开的文件</p><h3 id="查看一个文件被哪个程序打开"><a href="#查看一个文件被哪个程序打开" class="headerlink" title="查看一个文件被哪个程序打开"></a>查看一个文件被哪个程序打开</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof /tmp/a.log</span><br></pre></td></tr></table></figure><h3 id="查看一个端口对应程序打开的文件"><a href="#查看一个端口对应程序打开的文件" class="headerlink" title="查看一个端口对应程序打开的文件"></a>查看一个端口对应程序打开的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :22</span><br></pre></td></tr></table></figure><h3 id="查看-root-用户打开的-txt-文件"><a href="#查看-root-用户打开的-txt-文件" class="headerlink" title="查看 root 用户打开的 txt 文件"></a>查看 root 用户打开的 txt 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -a -u root -d txt</span><br></pre></td></tr></table></figure><h3 id="意外删除文件恢复"><a href="#意外删除文件恢复" class="headerlink" title="意外删除文件恢复"></a>意外删除文件恢复</h3><p>当系统中的某个文件被意外地删除了，只要这个时候系统中还有进程正在访问该文件，那么我们就可以通过 lsof 从&#x2F;proc 目录下恢复该文件的内容。假如由于误操作将&#x2F;var&#x2F;log&#x2F;messages 文件删除掉了，那么这时要将&#x2F;var&#x2F;log&#x2F;messages 文件恢复的方法如下：</p><p>首先使用 lsof 来查看当前是否有进程打开&#x2F;var&#x2F;logmessages 文件，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof |grep /var/log/messages</span><br><span class="line">syslogd 1283 root 2w REG 3,3 5381017 1773647 /var/log/messages (deleted)</span><br></pre></td></tr></table></figure><p>从上面的信息可以看到 PID 1283（syslogd）打开文件的文件描述符为 2。同时还可以看到&#x2F;var&#x2F;log&#x2F;messages 已经标记被删除了。因此我们可以在 &#x2F;proc&#x2F;1283&#x2F;fd&#x2F;2 （fd 下的每个以数字命名的文件表示进程对应的文件描述符）得到所要恢复的数据。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> 命令行工具 </tag>
            
            <tag> cli </tag>
            
            <tag> Linux </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 yum update 卡住不动</title>
      <link href="/posts/si7e5o/"/>
      <url>/posts/si7e5o/</url>
      
        <content type="html"><![CDATA[<p>如果是低内存机器，有可能是内存不够了，增加一些 swap 试试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制结束yum进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 &lt;pid&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除rpm数据文件</span></span><br><span class="line"><span class="built_in">rm</span> -f /var/lib/rpm/__db.00*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建rpm数据文件</span></span><br><span class="line">rpm -vv --rebuilddb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空缓存后再重新缓存</span></span><br><span class="line">yum clean all </span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 配置 fail2ban</title>
      <link href="/posts/shxj0z/"/>
      <url>/posts/shxj0z/</url>
      
        <content type="html"><![CDATA[<h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">sed -i <span class="string">&#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27;</span> /etc/sysconfig/selinux &amp;&amp; setenforce 0</span><br><span class="line"></span><br><span class="line">yum install fail2ban -y</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f /etc/fail2ban/jail.d/00-firewalld.conf</span><br></pre></td></tr></table></figure><h2 id="开启-ssh-封禁规则"><a href="#开启-ssh-封禁规则" class="headerlink" title="开启 ssh 封禁规则"></a>开启 ssh 封禁规则</h2><p>vim &#x2F;etc&#x2F;fail2ban&#x2F;jail.d&#x2F;ssh.conf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="comment"># 封禁时间多久，单位是秒，也可以写 10m 表示 10 分钟。1h 表示 1 小时</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">3600</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override /etc/fail2ban/jail.d/00-firewalld.conf:</span></span><br><span class="line"><span class="attr">banaction</span> = iptables-multiport</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计周期时间，默认单位是秒</span></span><br><span class="line"><span class="attr">findtime</span>  = <span class="number">10</span>m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在一个周期内允许失败几次</span></span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="section">[sshd]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">mode</span> = aggressive</span><br></pre></td></tr></table></figure><p><code>mode = aggressive</code> 配置是 为了将那些 使用错误 key 登录失败的一起禁用了。</p>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS终端工具iTerm2配置lrzsz上传下载</title>
      <link href="/posts/sgpjuj/"/>
      <url>/posts/sgpjuj/</url>
      
        <content type="html"><![CDATA[<p>lrzsz 是个很古老的软件了， 上次更新是 1998 年， 距今已经 20 多年历史了，那为啥还要用这么古老的软件呢，lrzsz 利用终端来传输文件，相比于 scp、sftp 等来说方便倒是其次，想象一下 <code>我的电脑 --&gt; 跳板机A --&gt; 跳板机B --&gt; 目标机器</code> 并且很多跳板机都有各种限制，不一定支持上传文件，这个时候通过终端来传文件就是唯一的选择了。</p><p>官方介绍：<a href="https://www.ohse.de/uwe/software/lrzsz.html">https://www.ohse.de/uwe/software/lrzsz.html</a></p><p>类似与 lrzsz 还有个软件叫 trzsz， 相比 lrzsz 更快，更方便。</p><h2 id="lrzsz-原理"><a href="#lrzsz-原理" class="headerlink" title="lrzsz 原理"></a>lrzsz 原理</h2><ul><li><p>下载文件<br>  在服务器上执行 sz（Send by ZMODEM），先在终端上输出 **B00000000000000，然后客户端在终端发送指令，表示拒绝，还是接收（接收的话，就在客户端运行 rz 指令与服务端交互）</p></li><li><p>上传文件<br>  在服务器上执行 rz（Receive by ZMODEM），先在终端上输出 rz waiting to receive.**B0100000023be50，然后客户端发送指令，表示取消，还是上传（上传的话，在客户端运行 sz 命令与服务端交互）。</p></li></ul><p>可以看到在上述流程中，对 Terminal 的要求就是，遇到特殊指令，触发对应的操作（执行本地命令）</p><p>由于 macOS 自带的 Terminal.app 不支持这个，所以网上大部分教程都是使用 iTerm2</p><p>参考链接：<a href="https://www.jianshu.com/p/d5bbb6009b05">https://www.jianshu.com/p/d5bbb6009b05</a></p><h2 id="安装-lrzsz"><a href="#安装-lrzsz" class="headerlink" title="安装 lrzsz"></a>安装 lrzsz</h2><p>要使用 lrzsz，自己的电脑和服务器上都需要安装 lrzsz 包，在 macOS 上可以使用 brew 来安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install lrzsz</span><br></pre></td></tr></table></figure><h2 id="创建脚本"><a href="#创建脚本" class="headerlink" title="创建脚本"></a>创建脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; iterm2-recv-zmodem.sh &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required</span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to version&#x27;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">&quot;iTerm&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">FILE=$(osascript -e <span class="string">&#x27;tell application &quot;iTerm&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm&quot; to set thefile to choose folder with prompt &quot;Choose a folder to place received files in&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">FILE=$(osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to set thefile to choose folder with prompt &quot;Choose a folder to place received files in&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> Cancelled.</span><br><span class="line"><span class="comment"># Send ZModem cancel</span></span><br><span class="line"><span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span></span><br><span class="line">/usr/local/bin/rz --rename --escape --binary --bufsize 4096</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; iterm2-send-zmodem.sh &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required</span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to version&#x27;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">&quot;iTerm&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">FILE=$(osascript -e <span class="string">&#x27;tell application &quot;iTerm&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm&quot; to set thefile to choose file with prompt &quot;Choose a file to send&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">FILE=$(osascript -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to activate&#x27;</span> -e <span class="string">&#x27;tell application &quot;iTerm2&quot; to set thefile to choose file with prompt &quot;Choose a file to send&quot;&#x27;</span> -e <span class="string">&quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> Cancelled.</span><br><span class="line"><span class="comment"># Send ZModem cancel</span></span><br><span class="line"><span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">/usr/local/bin/sz <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span> --escape --binary --bufsize 4096</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> \<span class="comment"># Received &quot;$FILE&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置-iTerm2"><a href="#配置-iTerm2" class="headerlink" title="配置 iTerm2"></a>配置 iTerm2</h2><p><code>Profiles</code> –&gt; <code>Advanced</code> –&gt; <code>Triggers</code> –&gt; <code>Edit</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.第一条</span><br><span class="line">        Regular expression: rz waiting to receive.\*\*B0100</span><br><span class="line">        Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /Users/iuxt/icloud/macOS/iterm2/iterm2-send-zmodem.sh</span><br><span class="line">        Instant: checked</span><br><span class="line"></span><br><span class="line">2.第二条</span><br><span class="line">        Regular expression: \*\*B00000000000000</span><br><span class="line">        Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /Users/iuxt/icloud/macOS/iterm2/iterm2-recv-zmodem.sh</span><br><span class="line">        Instant: checked</span><br></pre></td></tr></table></figure><h2 id="另一种方式，使用-tssh"><a href="#另一种方式，使用-tssh" class="headerlink" title="另一种方式，使用 tssh"></a>另一种方式，使用 tssh</h2><p>tssh 新版支持了 lrzsz 了，可以用 tssh 来替代 ssh， 可以同时支持 lrzsz 和 trzsz。配合 iTerm2 也不错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install trzsz-ssh</span><br></pre></td></tr></table></figure><p>然后用 <code>tssh --zmodem</code> 来替代 <code>ssh</code> ，比如配置 alias</p><p>使用 tssh 就不用配置 iTerm2 的 Triggers 了，并且上传下载的时候可以显示速度和传输的大小。</p><p><img src= "https://static.zahui.fan/public/nes.gif" data-lazy-src="https://static.zahui.fan/images/202407261625730.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenSSH </tag>
            
            <tag> lrzsz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最小化安装的Linux安装图形界面</title>
      <link href="/posts/spi6z2/"/>
      <url>/posts/spi6z2/</url>
      
        <content type="html"><![CDATA[<p>针对于 CentOS 系列的发行版。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="built_in">groups</span> list </span><br><span class="line"></span><br><span class="line">yum groupinstall <span class="string">&quot;Server with GUI&quot;</span></span><br><span class="line"></span><br><span class="line">systemctl get-default</span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启即可生效</p><p>如果不想重启，可以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> startx &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置记录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
